#include <iostream>
#include <cmath>
#include "parameters.h"

void T_others_f(double* state_var, double* T_others)
{
double theta=state_var[0];
double phi=state_var[1];
double psi=state_var[2];
double X=state_var[3];
double Y=state_var[4];
double Z=state_var[5];
double p10_b=state_var[6];
double p9_b=state_var[7];
double p8_b=state_var[8];
double p7_b=state_var[9];
double p6_b=state_var[10];
double p5_b=state_var[11];
double p4_b=state_var[12];
double p3_b=state_var[13];
double p2_b=state_var[14];
double p1_b=state_var[15];
double q1_b=state_var[16];
double q2_b=state_var[17];
double q3_b=state_var[18];
double q4_b=state_var[19];
double q5_b=state_var[20];
double q6_b=state_var[21];
double q7_b=state_var[22];
double q8_b=state_var[23];
double q9_b=state_var[24];
double q10_b=state_var[25];
double p10_b_dot=state_var[26];
double p9_b_dot=state_var[27];
double p8_b_dot=state_var[28];
double p7_b_dot=state_var[29];
double p6_b_dot=state_var[30];
double p5_b_dot=state_var[31];
double p4_b_dot=state_var[32];
double p3_b_dot=state_var[33];
double p2_b_dot=state_var[34];
double p1_b_dot=state_var[35];
double q1_b_dot=state_var[36];
double q2_b_dot=state_var[37];
double q3_b_dot=state_var[38];
double q4_b_dot=state_var[39];
double q5_b_dot=state_var[40];
double q6_b_dot=state_var[41];
double q7_b_dot=state_var[42];
double q8_b_dot=state_var[43];
double q9_b_dot=state_var[44];
double q10_b_dot=state_var[45];
double p10_t=state_var[46];
double p9_t=state_var[47];
double p8_t=state_var[48];
double p7_t=state_var[49];
double p6_t=state_var[50];
double p5_t=state_var[51];
double p4_t=state_var[52];
double p3_t=state_var[53];
double p2_t=state_var[54];
double p1_t=state_var[55];
double q1_t=state_var[56];
double q2_t=state_var[57];
double q3_t=state_var[58];
double q4_t=state_var[59];
double q5_t=state_var[60];
double q6_t=state_var[61];
double q7_t=state_var[62];
double q8_t=state_var[63];
double q9_t=state_var[64];
double q10_t=state_var[65];
double p10_i=state_var[66];
double p9_i=state_var[67];
double p8_i=state_var[68];
double p7_i=state_var[69];
double p6_i=state_var[70];
double p5_i=state_var[71];
double p4_i=state_var[72];
double p3_i=state_var[73];
double p2_i=state_var[74];
double p1_i=state_var[75];
double q1_i=state_var[76];
double q2_i=state_var[77];
double q3_i=state_var[78];
double q4_i=state_var[79];
double q5_i=state_var[80];
double q6_i=state_var[81];
double q7_i=state_var[82];
double q8_i=state_var[83];
double q9_i=state_var[84];
double q10_i=state_var[85];
double p10_i_dot=state_var[86];
double p9_i_dot=state_var[87];
double p8_i_dot=state_var[88];
double p7_i_dot=state_var[89];
double p6_i_dot=state_var[90];
double p5_i_dot=state_var[91];
double p4_i_dot=state_var[92];
double p3_i_dot=state_var[93];
double p2_i_dot=state_var[94];
double p1_i_dot=state_var[95];
double q1_i_dot=state_var[96];
double q2_i_dot=state_var[97];
double q3_i_dot=state_var[98];
double q4_i_dot=state_var[99];
double q5_i_dot=state_var[100];
double q6_i_dot=state_var[101];
double q7_i_dot=state_var[102];
double q8_i_dot=state_var[103];
double q9_i_dot=state_var[104];
double q10_i_dot=state_var[105];
double theta_dt=state_var[106];
double phi_dt=state_var[107];
double psi_dt=state_var[108];
double X_dt=state_var[109];
double Y_dt=state_var[110];
double Z_dt=state_var[111];
double p10_b_dt=state_var[112];
double p9_b_dt=state_var[113];
double p8_b_dt=state_var[114];
double p7_b_dt=state_var[115];
double p6_b_dt=state_var[116];
double p5_b_dt=state_var[117];
double p4_b_dt=state_var[118];
double p3_b_dt=state_var[119];
double p2_b_dt=state_var[120];
double p1_b_dt=state_var[121];
double q1_b_dt=state_var[122];
double q2_b_dt=state_var[123];
double q3_b_dt=state_var[124];
double q4_b_dt=state_var[125];
double q5_b_dt=state_var[126];
double q6_b_dt=state_var[127];
double q7_b_dt=state_var[128];
double q8_b_dt=state_var[129];
double q9_b_dt=state_var[130];
double q10_b_dt=state_var[131];
double p10_b_dot_dt=state_var[132];
double p9_b_dot_dt=state_var[133];
double p8_b_dot_dt=state_var[134];
double p7_b_dot_dt=state_var[135];
double p6_b_dot_dt=state_var[136];
double p5_b_dot_dt=state_var[137];
double p4_b_dot_dt=state_var[138];
double p3_b_dot_dt=state_var[139];
double p2_b_dot_dt=state_var[140];
double p1_b_dot_dt=state_var[141];
double q1_b_dot_dt=state_var[142];
double q2_b_dot_dt=state_var[143];
double q3_b_dot_dt=state_var[144];
double q4_b_dot_dt=state_var[145];
double q5_b_dot_dt=state_var[146];
double q6_b_dot_dt=state_var[147];
double q7_b_dot_dt=state_var[148];
double q8_b_dot_dt=state_var[149];
double q9_b_dot_dt=state_var[150];
double q10_b_dot_dt=state_var[151];
double p10_t_dt=state_var[152];
double p9_t_dt=state_var[153];
double p8_t_dt=state_var[154];
double p7_t_dt=state_var[155];
double p6_t_dt=state_var[156];
double p5_t_dt=state_var[157];
double p4_t_dt=state_var[158];
double p3_t_dt=state_var[159];
double p2_t_dt=state_var[160];
double p1_t_dt=state_var[161];
double q1_t_dt=state_var[162];
double q2_t_dt=state_var[163];
double q3_t_dt=state_var[164];
double q4_t_dt=state_var[165];
double q5_t_dt=state_var[166];
double q6_t_dt=state_var[167];
double q7_t_dt=state_var[168];
double q8_t_dt=state_var[169];
double q9_t_dt=state_var[170];
double q10_t_dt=state_var[171];
double p10_i_dt=state_var[172];
double p9_i_dt=state_var[173];
double p8_i_dt=state_var[174];
double p7_i_dt=state_var[175];
double p6_i_dt=state_var[176];
double p5_i_dt=state_var[177];
double p4_i_dt=state_var[178];
double p3_i_dt=state_var[179];
double p2_i_dt=state_var[180];
double p1_i_dt=state_var[181];
double q1_i_dt=state_var[182];
double q2_i_dt=state_var[183];
double q3_i_dt=state_var[184];
double q4_i_dt=state_var[185];
double q5_i_dt=state_var[186];
double q6_i_dt=state_var[187];
double q7_i_dt=state_var[188];
double q8_i_dt=state_var[189];
double q9_i_dt=state_var[190];
double q10_i_dt=state_var[191];
double p10_i_dot_dt=state_var[192];
double p9_i_dot_dt=state_var[193];
double p8_i_dot_dt=state_var[194];
double p7_i_dot_dt=state_var[195];
double p6_i_dot_dt=state_var[196];
double p5_i_dot_dt=state_var[197];
double p4_i_dot_dt=state_var[198];
double p3_i_dot_dt=state_var[199];
double p2_i_dot_dt=state_var[200];
double p1_i_dot_dt=state_var[201];
double q1_i_dot_dt=state_var[202];
double q2_i_dot_dt=state_var[203];
double q3_i_dot_dt=state_var[204];
double q4_i_dot_dt=state_var[205];
double q5_i_dot_dt=state_var[206];
double q6_i_dot_dt=state_var[207];
double q7_i_dot_dt=state_var[208];
double q8_i_dot_dt=state_var[209];
double q9_i_dot_dt=state_var[210];
double q10_i_dot_dt=state_var[211];
double x0 = sin(phi);
double x1 = 2*theta_dt;
double x2 = x0*x1;
double x3 = 2*psi_dt;
double x4 = cos(phi);
double x5 = cos(theta);
double x6 = x4*x5;
double x7 = x3*x6;
double x8 = phi_dt*x4;
double x9 = x1*x4;
double x10 = x0*x5;
double x11 = x10*x3;
double x12 = x11 + x9;
double x13 = phi_dt*x0;
double x14 = 2*phi_dt;
double x15 = theta_dt*x14;
double x16 = x15*x4;
double x17 = psi_dt*x14;
double x18 = x10*x17;
double x19 = sin(theta);
double x20 = psi_dt*x19;
double x21 = x20*x9;
double x22 = x0*x15;
double x23 = x17*x6;
double x24 = x2*x20;
double x25 = -x22 + x23 - x24;
double x26 = (1.0/2.0)*MOI;
double x27 = pow(c, 2);
double x28 = x27*x4;
double x29 = q1_i_dt*x28;
double x30 = q1_t_dt*x29;
double x31 = 2*x30;
double x32 = q1_i*x0;
double x33 = q1_t_dt*x27;
double x34 = x14*x33;
double x35 = x32*x34;
double x36 = 4*x_f;
double x37 = c*q1_i_dt;
double x38 = x37*x4;
double x39 = q1_t_dt*x38;
double x40 = x36*x39;
double x41 = c*x13;
double x42 = q1_i*x41;
double x43 = q1_t_dt*x42;
double x44 = x36*x43;
double x45 = L*x28;
double x46 = q1_i_dot_dt*x45;
double x47 = q1_t_dt*x46;
double x48 = x13*x33;
double x49 = L*q1_i_dot;
double x50 = x48*x49;
double x51 = c*q1_i_dot_dt;
double x52 = x4*x51;
double x53 = 2*x_f;
double x54 = L*x53;
double x55 = x52*x54;
double x56 = q1_t_dt*x55;
double x57 = c*x14;
double x58 = q1_t_dt*x_f;
double x59 = x57*x58;
double x60 = x0*x49;
double x61 = x59*x60;
double x62 = x47 - x50 - x56 + x61;
double x63 = (1.0/5.0)*L;
double x64 = q1_i*x13;
double x65 = x33*x64;
double x66 = 6*x_f;
double x67 = -3*x30 + x39*x66 - x43*x66 + 3*x65;
double x68 = (1.0/4.0)*L;
double x69 = (1.0/2.0)*m;
double x70 = pow(L, 2);
double x71 = X_dt*c;
double x72 = x71*x8;
double x73 = x4*x71;
double x74 = 2*q1_b_dt;
double x75 = x73*x74;
double x76 = Y_dt*x0;
double x77 = 2*x37;
double x78 = x76*x77;
double x79 = Z_dt*x4;
double x80 = x77*x79;
double x81 = Z_dt*x57;
double x82 = x32*x81;
double x83 = x0*x14;
double x84 = q1_b*x71;
double x85 = x83*x84;
double x86 = Y_dt*c;
double x87 = x14*x4;
double x88 = x86*x87;
double x89 = q1_i*x88;
double x90 = q1_b_dot_dt*x73;
double x91 = L*x90;
double x92 = x51*x76;
double x93 = L*x92;
double x94 = x51*x79;
double x95 = L*x94;
double x96 = Z_dt*x41;
double x97 = q1_i_dot*x96;
double x98 = L*x97;
double x99 = x13*x71;
double x100 = q1_b_dot*x99;
double x101 = L*x100;
double x102 = L*x86;
double x103 = x102*x8;
double x104 = q1_i_dot*x103;
double x105 = -x101 - x104 + x91 - x93 - x95 + x98;
double x106 = (1.0/2.0)*L;
double x107 = 6*x73;
double x108 = q1_b_dt*x107;
double x109 = 6*x37;
double x110 = x109*x76;
double x111 = x109*x79;
double x112 = 6*x99;
double x113 = q1_b*x112;
double x114 = 6*x86;
double x115 = x114*x8;
double x116 = q1_i*x115;
double x117 = 6*x96;
double x118 = q1_i*x117;
double x119 = x71*x83;
double x120 = L*q1_b_dot;
double x121 = x102*x87;
double x122 = x0*x81;
double x123 = (1.0/3.0)*L;
double x124 = q1_b_dt*x41;
double x125 = q1_i*x124;
double x126 = 18*x125;
double x127 = q1_b_dot_dt*q1_i;
double x128 = x127*x41;
double x129 = 6*L;
double x130 = x128*x129;
double x131 = q1_b_dt*q1_i_dot;
double x132 = x131*x41;
double x133 = x129*x132;
double x134 = x52*x70;
double x135 = q1_b_dot_dt*x134;
double x136 = 2*x135;
double x137 = q1_b_dot_dt*x57;
double x138 = q1_i_dot*x70;
double x139 = x0*x138;
double x140 = x137*x139;
double x141 = x136 - x140;
double x142 = q1_b_dt*x38;
double x143 = 18*x142;
double x144 = q1_b_dot_dt*x38;
double x145 = q1_b_dt*x52;
double x146 = -x129*x144 - x129*x145 + x143;
double x147 = -x136;
double x148 = x140 + x147;
double x149 = 12*x142;
double x150 = -x149;
double x151 = 12*q1_i;
double x152 = x124*x151;
double x153 = x150 + x152;
double x154 = 5*L;
double x155 = x144*x154 + x145*x154;
double x156 = -x128*x154 - x132*x154;
double x157 = 8*x142;
double x158 = 4*L;
double x159 = x144*x158;
double x160 = x145*x158;
double x161 = x159 + x160;
double x162 = -x157 + x161;
double x163 = 8*x125;
double x164 = x128*x158;
double x165 = x132*x158;
double x166 = -x164 - x165;
double x167 = x163 + x166;
double x168 = (1.0/7.0)*L;
double x169 = x37*x8;
double x170 = L*x8;
double x171 = x170*x51;
double x172 = -3*x169 + x171;
double x173 = (1.0/2.0)*x70;
double x174 = q1_b_dot*x70;
double x175 = x51*x83;
double x176 = x174*x175;
double x177 = x147 + x176;
double x178 = q1_b*x13;
double x179 = x178*x37;
double x180 = 12*x179;
double x181 = x150 + x180;
double x182 = x178*x51;
double x183 = q1_b_dot*x37;
double x184 = x13*x183;
double x185 = -x154*x182 - x154*x184;
double x186 = 8*x179;
double x187 = x158*x182;
double x188 = x158*x184;
double x189 = -x187 - x188;
double x190 = x186 + x189;
double x191 = 18*x179;
double x192 = L*x169;
double x193 = 4*x192;
double x194 = -x193;
double x195 = x134*x14;
double x196 = x129*x182;
double x197 = L*x13;
double x198 = x109*x197;
double x199 = q1_b_dot*x198;
double x200 = x136 - x176;
double x201 = p1_b_dot_dt*x73;
double x202 = c*p1_i_dot_dt;
double x203 = x202*x76;
double x204 = x202*x79;
double x205 = p1_i_dot*x96;
double x206 = p1_b_dot*x99;
double x207 = x8*x86;
double x208 = L*x14;
double x209 = x208*x73;
double x210 = c*p1_i_dt;
double x211 = 2*x210;
double x212 = x211*x76;
double x213 = x211*x79;
double x214 = 2*x73;
double x215 = p1_b_dt*x214;
double x216 = p1_b*x119;
double x217 = p1_i*x88;
double x218 = p1_i*x122;
double x219 = -x212 - x213 + x215 - x216 - x217 + x218;
double x220 = L*x201;
double x221 = L*x203;
double x222 = L*x204;
double x223 = p1_i_dot*x103;
double x224 = L*x205 - L*x206 + x220 - x221 - x222 - x223;
double x225 = p1_b_dt*x107;
double x226 = 6*x210;
double x227 = x226*x76;
double x228 = x226*x79;
double x229 = p1_b*x112;
double x230 = p1_i*x115;
double x231 = p1_i*x117;
double x232 = x4*x_f;
double x233 = p1_t_dt*x232;
double x234 = x211*x233;
double x235 = p1_t_dt*x28;
double x236 = p1_i_dt*x235;
double x237 = x13*x27;
double x238 = p1_t_dt*x237;
double x239 = p1_i*x238;
double x240 = p1_i*x0;
double x241 = x57*x_f;
double x242 = p1_t_dt*x241;
double x243 = x240*x242;
double x244 = x202*x4;
double x245 = p1_t_dt*x244;
double x246 = x245*x54;
double x247 = L*x235;
double x248 = p1_i_dot_dt*x247;
double x249 = L*p1_i_dot;
double x250 = x238*x249;
double x251 = x0*x249;
double x252 = x242*x251;
double x253 = 2*x236;
double x254 = x36*x4;
double x255 = x210*x254;
double x256 = p1_t_dt*x255;
double x257 = p1_t_dt*x27;
double x258 = p1_i*x83;
double x259 = x257*x258;
double x260 = p1_i*x41;
double x261 = p1_t_dt*x260;
double x262 = x261*x36;
double x263 = -x246 + x248 - x250 + x252;
double x264 = 10*x210;
double x265 = L*x66;
double x266 = x245*x265;
double x267 = 10*x_f;
double x268 = 3*x248;
double x269 = x249*x41;
double x270 = p1_t_dt*x66;
double x271 = x269*x270;
double x272 = 3*x250;
double x273 = x226*x233 - 3*x236 + 3*x239 - x261*x66;
double x274 = p1_b_dt*x4;
double x275 = x211*x274;
double x276 = p1_b_dt*x57;
double x277 = x240*x276;
double x278 = p1_b_dot_dt*x4;
double x279 = x210*x278;
double x280 = p1_b_dt*x244;
double x281 = p1_b_dot_dt*p1_i;
double x282 = x281*x41;
double x283 = p1_b_dt*p1_i_dot;
double x284 = x283*x41;
double x285 = x282 + x284;
double x286 = 7*L;
double x287 = x282*x286;
double x288 = x284*x286;
double x289 = x41*x70;
double x290 = 4*x289;
double x291 = p1_b_dot_dt*p1_i_dot;
double x292 = x290*x291;
double x293 = x278*x70;
double x294 = x202*x293;
double x295 = 4*x294;
double x296 = x279*x286 + x280*x286 + x295;
double x297 = x210*x274;
double x298 = 12*x297;
double x299 = 12*p1_b_dt;
double x300 = x260*x299;
double x301 = -x300;
double x302 = x298 + x301;
double x303 = p1_b_dt*x260;
double x304 = 8*x303;
double x305 = 8*x297;
double x306 = x158*x279 + x158*x280;
double x307 = x305 + x306;
double x308 = x158*x282;
double x309 = x158*x284;
double x310 = -x308 - x309;
double x311 = 2*x294;
double x312 = p1_b_dot_dt*x57;
double x313 = x0*x70;
double x314 = p1_i_dot*x313;
double x315 = x312*x314;
double x316 = x311 - x315;
double x317 = -x311;
double x318 = x306 + x317;
double x319 = x310 + x315;
double x320 = x318 + x319;
double x321 = 2*L;
double x322 = -x279*x321 - x280*x321 - x295 + 4*x297;
double x323 = L*x0;
double x324 = x323*x57;
double x325 = x251*x276 + x281*x324 + x292 - 4*x303;
double x326 = 18*x297;
double x327 = 16*L;
double x328 = -x279*x327 - x280*x327 - 12*x294 - x326;
double x329 = 18*x303;
double x330 = 12*x289;
double x331 = x282*x327 + x284*x327 + x291*x330 + x329;
double x332 = L*x210;
double x333 = x332*x87;
double x334 = p1_b*x83;
double x335 = x210*x334;
double x336 = x210*x8;
double x337 = x170*x202;
double x338 = p1_b*x13;
double x339 = x202*x338;
double x340 = p1_b_dot*x210;
double x341 = x13*x340;
double x342 = x286*x339;
double x343 = x286*x341;
double x344 = p1_b_dot*x13;
double x345 = x202*x70;
double x346 = x344*x345;
double x347 = 4*x346;
double x348 = x210*x338;
double x349 = 12*x348;
double x350 = -x349;
double x351 = x298 + x350;
double x352 = 8*x348;
double x353 = p1_b_dot*x83;
double x354 = x345*x353;
double x355 = x311 - x354;
double x356 = x158*x339;
double x357 = x158*x341;
double x358 = -x356 - x357;
double x359 = x354 + x358;
double x360 = x318 + x359;
double x361 = x129*x336;
double x362 = x70*x8;
double x363 = x202*x362;
double x364 = -x361 - 6*x363;
double x365 = x154*x336;
double x366 = 3*x363;
double x367 = -x366;
double x368 = L*x202;
double x369 = L*x83;
double x370 = x334*x368 + x340*x369 + x347 - 4*x348 - x365 + x367;
double x371 = x158*x336;
double x372 = -x371;
double x373 = x244*x70;
double x374 = x14*x373;
double x375 = 18*x348;
double x376 = -x374 + x375;
double x377 = x327*x339 + x327*x341 + 12*x346 + x372 + x376;
double x378 = p10_b_dot_dt*x73;
double x379 = c*p10_i_dot_dt;
double x380 = x379*x76;
double x381 = x379*x79;
double x382 = p10_i_dot*x96;
double x383 = p10_b_dot*x99;
double x384 = L*x72;
double x385 = c*p10_i_dt;
double x386 = 2*x385;
double x387 = p10_i*x0;
double x388 = -p10_b*x119 + p10_b_dt*x214 - p10_i*x88 - x386*x76 - x386*x79 + x387*x81;
double x389 = p9_b_dt*x214;
double x390 = c*p9_i_dt;
double x391 = 2*x390;
double x392 = x391*x76;
double x393 = x391*x79;
double x394 = L*x378;
double x395 = L*x380;
double x396 = L*x381;
double x397 = p9_i*x122;
double x398 = p9_b*x119;
double x399 = p9_i*x88;
double x400 = p10_i_dot*x103;
double x401 = p9_b_dot_dt*x73;
double x402 = L*x401;
double x403 = c*p9_i_dot_dt;
double x404 = x403*x76;
double x405 = L*x404;
double x406 = x403*x79;
double x407 = L*x406;
double x408 = p9_i_dot*x96;
double x409 = p9_b_dot*x99;
double x410 = p9_i_dot*x103;
double x411 = L*x408 - L*x409 + x402 - x405 - x407 - x410;
double x412 = p9_b_dt*x107;
double x413 = 6*x385;
double x414 = 6*x390;
double x415 = x414*x76;
double x416 = x414*x79;
double x417 = p9_b*x112;
double x418 = p9_i*x115;
double x419 = p9_i*x117;
double x420 = L*p9_b_dot;
double x421 = L*p9_i_dot;
double x422 = p2_b_dot_dt*x73;
double x423 = c*p2_i_dot_dt;
double x424 = x423*x76;
double x425 = x423*x79;
double x426 = p2_i_dot*x96;
double x427 = p2_b_dot*x99;
double x428 = x158*x72;
double x429 = c*p2_i_dt;
double x430 = 2*x429;
double x431 = x430*x76;
double x432 = x430*x79;
double x433 = p2_b_dt*x214;
double x434 = p2_b*x119;
double x435 = p2_i*x88;
double x436 = p2_i*x122;
double x437 = -x431 - x432 + x433 - x434 - x435 + x436;
double x438 = L*x422;
double x439 = L*x424;
double x440 = L*x425;
double x441 = p2_i_dot*x103;
double x442 = L*x426 - L*x427 + x438 - x439 - x440 - x441;
double x443 = p2_b_dt*x107;
double x444 = 6*x429;
double x445 = x444*x76;
double x446 = x444*x79;
double x447 = p2_b*x112;
double x448 = p2_i*x115;
double x449 = p2_i*x117;
double x450 = L*p1_b_dot;
double x451 = p3_b_dot_dt*x73;
double x452 = c*p3_i_dot_dt;
double x453 = x452*x76;
double x454 = x452*x79;
double x455 = p3_i_dot*x96;
double x456 = p3_b_dot*x99;
double x457 = x129*x72;
double x458 = c*p3_i_dt;
double x459 = 2*x458;
double x460 = x459*x76;
double x461 = x459*x79;
double x462 = p3_b_dt*x214;
double x463 = p3_b*x119;
double x464 = p3_i*x88;
double x465 = p3_i*x122;
double x466 = -x460 - x461 + x462 - x463 - x464 + x465;
double x467 = L*x451;
double x468 = L*x453;
double x469 = L*x454;
double x470 = p3_i_dot*x103;
double x471 = L*x455 - L*x456 + x467 - x468 - x469 - x470;
double x472 = p3_b_dt*x107;
double x473 = 6*x458;
double x474 = x473*x76;
double x475 = x473*x79;
double x476 = p3_b*x112;
double x477 = p3_i*x115;
double x478 = p3_i*x117;
double x479 = L*p2_b_dot;
double x480 = L*p2_i_dot;
double x481 = p4_b_dot_dt*x73;
double x482 = c*p4_i_dot_dt;
double x483 = x482*x76;
double x484 = x482*x79;
double x485 = p4_i_dot*x96;
double x486 = p4_b_dot*x99;
double x487 = 8*x384;
double x488 = c*p4_i_dt;
double x489 = 2*x488;
double x490 = x489*x76;
double x491 = x489*x79;
double x492 = p4_b_dt*x214;
double x493 = p4_b*x119;
double x494 = p4_i*x88;
double x495 = p4_i*x122;
double x496 = -x490 - x491 + x492 - x493 - x494 + x495;
double x497 = L*x481;
double x498 = L*x483;
double x499 = L*x484;
double x500 = p4_i_dot*x103;
double x501 = L*x485 - L*x486 + x497 - x498 - x499 - x500;
double x502 = p4_b_dt*x107;
double x503 = 6*x488;
double x504 = x503*x76;
double x505 = x503*x79;
double x506 = p4_b*x112;
double x507 = p4_i*x115;
double x508 = p4_i*x117;
double x509 = L*p3_b_dot;
double x510 = L*p3_i_dot;
double x511 = p5_b_dot_dt*x73;
double x512 = c*p5_i_dot_dt;
double x513 = x512*x76;
double x514 = x512*x79;
double x515 = p5_i_dot*x96;
double x516 = p5_b_dot*x99;
double x517 = 10*x384;
double x518 = c*p5_i_dt;
double x519 = 2*x518;
double x520 = x519*x76;
double x521 = x519*x79;
double x522 = p5_b_dt*x214;
double x523 = p5_b*x119;
double x524 = p5_i*x88;
double x525 = p5_i*x122;
double x526 = -x520 - x521 + x522 - x523 - x524 + x525;
double x527 = L*x511;
double x528 = L*x513;
double x529 = L*x514;
double x530 = p5_i_dot*x103;
double x531 = L*x515 - L*x516 + x527 - x528 - x529 - x530;
double x532 = p5_b_dt*x107;
double x533 = 6*x518;
double x534 = x533*x76;
double x535 = x533*x79;
double x536 = p5_b*x112;
double x537 = p5_i*x115;
double x538 = p5_i*x117;
double x539 = L*p4_b_dot;
double x540 = L*p4_i_dot;
double x541 = p6_b_dot_dt*x73;
double x542 = c*p6_i_dot_dt;
double x543 = x542*x76;
double x544 = x542*x79;
double x545 = p6_i_dot*x96;
double x546 = p6_b_dot*x99;
double x547 = 12*x384;
double x548 = c*p6_i_dt;
double x549 = 2*x548;
double x550 = x549*x76;
double x551 = x549*x79;
double x552 = p6_b_dt*x214;
double x553 = p6_b*x119;
double x554 = p6_i*x88;
double x555 = p6_i*x122;
double x556 = -x550 - x551 + x552 - x553 - x554 + x555;
double x557 = L*x541;
double x558 = L*x543;
double x559 = L*x544;
double x560 = p6_i_dot*x103;
double x561 = L*x545 - L*x546 + x557 - x558 - x559 - x560;
double x562 = p6_b_dt*x107;
double x563 = 6*x548;
double x564 = x563*x76;
double x565 = x563*x79;
double x566 = p6_b*x112;
double x567 = p6_i*x115;
double x568 = p6_i*x117;
double x569 = L*p5_b_dot;
double x570 = L*p5_i_dot;
double x571 = p7_b_dot_dt*x73;
double x572 = c*p7_i_dot_dt;
double x573 = x572*x76;
double x574 = x572*x79;
double x575 = p7_i_dot*x96;
double x576 = p7_b_dot*x99;
double x577 = 14*x384;
double x578 = c*p7_i_dt;
double x579 = 2*x578;
double x580 = x579*x76;
double x581 = x579*x79;
double x582 = p7_b_dt*x214;
double x583 = p7_b*x119;
double x584 = p7_i*x88;
double x585 = p7_i*x122;
double x586 = -x580 - x581 + x582 - x583 - x584 + x585;
double x587 = L*x571;
double x588 = L*x573;
double x589 = L*x574;
double x590 = p7_i_dot*x103;
double x591 = L*x575 - L*x576 + x587 - x588 - x589 - x590;
double x592 = p7_b_dt*x107;
double x593 = 6*x578;
double x594 = x593*x76;
double x595 = x593*x79;
double x596 = p7_b*x112;
double x597 = p7_i*x115;
double x598 = p7_i*x117;
double x599 = L*p6_b_dot;
double x600 = L*p6_i_dot;
double x601 = p8_b_dot_dt*x73;
double x602 = c*p8_i_dot_dt;
double x603 = x602*x76;
double x604 = x602*x79;
double x605 = p8_i_dot*x96;
double x606 = p8_b_dot*x99;
double x607 = 16*x384;
double x608 = c*p8_i_dt;
double x609 = 2*x608;
double x610 = x609*x76;
double x611 = x609*x79;
double x612 = p8_b_dt*x214;
double x613 = p8_b*x119;
double x614 = p8_i*x88;
double x615 = p8_i*x122;
double x616 = -x610 - x611 + x612 - x613 - x614 + x615;
double x617 = L*x601;
double x618 = L*x603;
double x619 = L*x604;
double x620 = p8_i_dot*x103;
double x621 = L*x605 - L*x606 + x617 - x618 - x619 - x620;
double x622 = p8_b_dt*x107;
double x623 = 6*x608;
double x624 = x623*x76;
double x625 = x623*x79;
double x626 = p8_b*x112;
double x627 = p8_i*x115;
double x628 = p8_i*x117;
double x629 = L*p7_b_dot;
double x630 = L*p7_i_dot;
double x631 = 18*x384;
double x632 = x389 - x392 - x393 + x397 - x398 - x399;
double x633 = L*p8_b_dot;
double x634 = L*p8_i_dot;
double x635 = x75 - x78 - x80 + x82 - x85 - x89;
double x636 = q2_b_dt*x214;
double x637 = c*q2_i_dt;
double x638 = 2*x637;
double x639 = x638*x76;
double x640 = x638*x79;
double x641 = q2_i*x122;
double x642 = q2_b*x119;
double x643 = q2_i*x88;
double x644 = q2_b_dot_dt*x73;
double x645 = L*x644;
double x646 = c*q2_i_dot_dt;
double x647 = x646*x76;
double x648 = L*x647;
double x649 = x646*x79;
double x650 = L*x649;
double x651 = q2_i_dot*x96;
double x652 = q2_b_dot*x99;
double x653 = q2_i_dot*x103;
double x654 = L*x651 - L*x652 + x645 - x648 - x650 - x653;
double x655 = q2_b_dt*x107;
double x656 = 6*x637;
double x657 = x656*x76;
double x658 = x656*x79;
double x659 = q2_b*x112;
double x660 = q2_i*x115;
double x661 = q2_i*x117;
double x662 = L*q2_b_dot;
double x663 = L*q2_i_dot;
double x664 = x636 - x639 - x640 + x641 - x642 - x643;
double x665 = q3_b_dt*x214;
double x666 = c*q3_i_dt;
double x667 = 2*x666;
double x668 = x667*x76;
double x669 = x667*x79;
double x670 = q3_i*x122;
double x671 = q3_b*x119;
double x672 = q3_i*x88;
double x673 = q3_b_dot_dt*x73;
double x674 = L*x673;
double x675 = c*q3_i_dot_dt;
double x676 = x675*x76;
double x677 = L*x676;
double x678 = x675*x79;
double x679 = L*x678;
double x680 = q3_i_dot*x96;
double x681 = q3_b_dot*x99;
double x682 = q3_i_dot*x103;
double x683 = L*x680 - L*x681 + x674 - x677 - x679 - x682;
double x684 = q3_b_dt*x107;
double x685 = 6*x666;
double x686 = x685*x76;
double x687 = x685*x79;
double x688 = q3_b*x112;
double x689 = q3_i*x115;
double x690 = q3_i*x117;
double x691 = L*q3_b_dot;
double x692 = L*q3_i_dot;
double x693 = x665 - x668 - x669 + x670 - x671 - x672;
double x694 = q4_b_dt*x214;
double x695 = c*q4_i_dt;
double x696 = 2*x695;
double x697 = x696*x76;
double x698 = x696*x79;
double x699 = q4_i*x122;
double x700 = q4_b*x119;
double x701 = q4_i*x88;
double x702 = q4_b_dot_dt*x73;
double x703 = L*x702;
double x704 = c*q4_i_dot_dt;
double x705 = x704*x76;
double x706 = L*x705;
double x707 = x704*x79;
double x708 = L*x707;
double x709 = q4_i_dot*x96;
double x710 = q4_b_dot*x99;
double x711 = q4_i_dot*x103;
double x712 = L*x709 - L*x710 + x703 - x706 - x708 - x711;
double x713 = q4_b_dt*x107;
double x714 = 6*x695;
double x715 = x714*x76;
double x716 = x714*x79;
double x717 = q4_b*x112;
double x718 = q4_i*x115;
double x719 = q4_i*x117;
double x720 = L*q4_b_dot;
double x721 = L*q4_i_dot;
double x722 = x694 - x697 - x698 + x699 - x700 - x701;
double x723 = q5_b_dt*x214;
double x724 = c*q5_i_dt;
double x725 = 2*x724;
double x726 = x725*x76;
double x727 = x725*x79;
double x728 = q5_i*x122;
double x729 = q5_b*x119;
double x730 = q5_i*x88;
double x731 = q5_b_dot_dt*x73;
double x732 = L*x731;
double x733 = c*q5_i_dot_dt;
double x734 = x733*x76;
double x735 = L*x734;
double x736 = x733*x79;
double x737 = L*x736;
double x738 = q5_i_dot*x96;
double x739 = q5_b_dot*x99;
double x740 = q5_i_dot*x103;
double x741 = L*x738 - L*x739 + x732 - x735 - x737 - x740;
double x742 = q5_b_dt*x107;
double x743 = 6*x724;
double x744 = x743*x76;
double x745 = x743*x79;
double x746 = q5_b*x112;
double x747 = q5_i*x115;
double x748 = q5_i*x117;
double x749 = L*q5_b_dot;
double x750 = L*q5_i_dot;
double x751 = x723 - x726 - x727 + x728 - x729 - x730;
double x752 = q6_b_dt*x214;
double x753 = c*q6_i_dt;
double x754 = 2*x753;
double x755 = x754*x76;
double x756 = x754*x79;
double x757 = q6_i*x122;
double x758 = q6_b*x119;
double x759 = q6_i*x88;
double x760 = q6_b_dot_dt*x73;
double x761 = L*x760;
double x762 = c*q6_i_dot_dt;
double x763 = x76*x762;
double x764 = L*x763;
double x765 = x762*x79;
double x766 = L*x765;
double x767 = q6_i_dot*x96;
double x768 = q6_b_dot*x99;
double x769 = q6_i_dot*x103;
double x770 = L*x767 - L*x768 + x761 - x764 - x766 - x769;
double x771 = q6_b_dt*x107;
double x772 = 6*x753;
double x773 = x76*x772;
double x774 = x772*x79;
double x775 = q6_b*x112;
double x776 = q6_i*x115;
double x777 = q6_i*x117;
double x778 = L*q6_b_dot;
double x779 = L*q6_i_dot;
double x780 = x752 - x755 - x756 + x757 - x758 - x759;
double x781 = q7_b_dt*x214;
double x782 = c*q7_i_dt;
double x783 = 2*x782;
double x784 = x76*x783;
double x785 = x783*x79;
double x786 = q7_i*x122;
double x787 = q7_b*x119;
double x788 = q7_i*x88;
double x789 = q7_b_dot_dt*x73;
double x790 = L*x789;
double x791 = c*q7_i_dot_dt;
double x792 = x76*x791;
double x793 = L*x792;
double x794 = x79*x791;
double x795 = L*x794;
double x796 = q7_i_dot*x96;
double x797 = q7_b_dot*x99;
double x798 = q7_i_dot*x103;
double x799 = L*x796 - L*x797 + x790 - x793 - x795 - x798;
double x800 = q7_b_dt*x107;
double x801 = 6*x782;
double x802 = x76*x801;
double x803 = x79*x801;
double x804 = q7_b*x112;
double x805 = q7_i*x115;
double x806 = q7_i*x117;
double x807 = L*q7_b_dot;
double x808 = L*q7_i_dot;
double x809 = x781 - x784 - x785 + x786 - x787 - x788;
double x810 = q8_b_dt*x214;
double x811 = c*q8_i_dt;
double x812 = 2*x811;
double x813 = x76*x812;
double x814 = x79*x812;
double x815 = q8_i*x122;
double x816 = q8_b*x119;
double x817 = q8_i*x88;
double x818 = q8_b_dot_dt*x73;
double x819 = L*x818;
double x820 = c*q8_i_dot_dt;
double x821 = x76*x820;
double x822 = L*x821;
double x823 = x79*x820;
double x824 = L*x823;
double x825 = q8_i_dot*x96;
double x826 = q8_b_dot*x99;
double x827 = q8_i_dot*x103;
double x828 = L*x825 - L*x826 + x819 - x822 - x824 - x827;
double x829 = q8_b_dt*x107;
double x830 = 6*x811;
double x831 = x76*x830;
double x832 = x79*x830;
double x833 = q8_b*x112;
double x834 = q8_i*x115;
double x835 = q8_i*x117;
double x836 = L*q8_b_dot;
double x837 = L*q8_i_dot;
double x838 = x810 - x813 - x814 + x815 - x816 - x817;
double x839 = q9_b_dt*x214;
double x840 = c*q9_i_dt;
double x841 = 2*x840;
double x842 = x76*x841;
double x843 = x79*x841;
double x844 = q9_i*x122;
double x845 = q9_b*x119;
double x846 = q9_i*x88;
double x847 = q9_b_dot_dt*x73;
double x848 = L*x847;
double x849 = c*q9_i_dot_dt;
double x850 = x76*x849;
double x851 = L*x850;
double x852 = x79*x849;
double x853 = L*x852;
double x854 = q9_i_dot*x96;
double x855 = q9_b_dot*x99;
double x856 = q9_i_dot*x103;
double x857 = L*x854 - L*x855 + x848 - x851 - x853 - x856;
double x858 = q9_b_dt*x107;
double x859 = 6*x840;
double x860 = x76*x859;
double x861 = x79*x859;
double x862 = q9_b*x112;
double x863 = q9_i*x115;
double x864 = q9_i*x117;
double x865 = L*q9_b_dot;
double x866 = L*q9_i_dot;
double x867 = x839 - x842 - x843 + x844 - x845 - x846;
double x868 = c*x76;
double x869 = 2*q10_i_dt;
double x870 = c*x79;
double x871 = L*q10_b_dot_dt;
double x872 = L*q10_i_dot_dt;
double x873 = x868*x872;
double x874 = x870*x872;
double x875 = L*q10_i_dot;
double x876 = L*q10_b_dot;
double x877 = 6*q10_i_dt;
double x878 = p10_i_dt*p10_t_dt;
double x879 = c*x4;
double x880 = x878*x879;
double x881 = x53*x880;
double x882 = x28*x878;
double x883 = p10_i*p10_t_dt;
double x884 = x237*x883;
double x885 = x241*x387;
double x886 = p10_t_dt*x885;
double x887 = p9_t_dt*x232;
double x888 = p9_t_dt*x28;
double x889 = p10_i_dt*x888;
double x890 = p9_t_dt*x237;
double x891 = p10_i*x890;
double x892 = x379*x4;
double x893 = x54*x892;
double x894 = p10_t_dt*x893;
double x895 = p10_t_dt*x45;
double x896 = p10_i_dot_dt*x895;
double x897 = p10_t_dt*x237;
double x898 = L*p10_i_dot;
double x899 = x897*x898;
double x900 = x0*x898;
double x901 = p10_t_dt*x241;
double x902 = x900*x901;
double x903 = p10_t_dt*x232;
double x904 = 3*x28;
double x905 = p10_t_dt*p9_i_dt;
double x906 = L*x888;
double x907 = p10_i_dot_dt*x906;
double x908 = p10_t_dt*x66;
double x909 = L*x892;
double x910 = x908*x909;
double x911 = p9_t_dt*x893;
double x912 = x4*x403;
double x913 = L*x912;
double x914 = p10_t_dt*x913;
double x915 = x53*x914;
double x916 = x41*x883;
double x917 = p9_i*x41;
double x918 = 3*x896;
double x919 = p9_i_dot_dt*x895;
double x920 = p9_i*x897;
double x921 = x421*x897;
double x922 = x41*x898;
double x923 = x908*x922;
double x924 = p9_t_dt*x241;
double x925 = x900*x924;
double x926 = x0*x421;
double x927 = x901*x926;
double x928 = 3*x899;
double x929 = x890*x898;
double x930 = x28*x905;
double x931 = p9_i_dt*x888;
double x932 = 2*x931;
double x933 = 4*x390;
double x934 = x887*x933;
double x935 = p10_t_dt*x27;
double x936 = x14*x387;
double x937 = p9_t_dt*x27;
double x938 = p9_i*x83;
double x939 = x937*x938;
double x940 = p9_t_dt*x254;
double x941 = p10_i*x41;
double x942 = p9_t_dt*x36;
double x943 = p10_t_dt*x917;
double x944 = x917*x942;
double x945 = p9_i_dot_dt*x906;
double x946 = x421*x890;
double x947 = x53*x913;
double x948 = p9_t_dt*x947;
double x949 = x924*x926;
double x950 = -x945 + x946 + x948 - x949;
double x951 = 10*x390;
double x952 = p9_t_dt*x66;
double x953 = x421*x83;
double x954 = x83*x937;
double x955 = x41*x421;
double x956 = p10_t_dt*x36;
double x957 = p9_i*x890;
double x958 = -x414*x887 + x917*x952 + 3*x931 - 3*x957;
double x959 = p2_t_dt*x232;
double x960 = p2_t_dt*x28;
double x961 = p2_i_dt*x960;
double x962 = p2_t_dt*x237;
double x963 = p2_i*x962;
double x964 = p2_i*x0;
double x965 = p2_t_dt*x241;
double x966 = x430*x959 - x961 + x963 - x964*x965;
double x967 = p2_i_dt*x235;
double x968 = p2_i*x238;
double x969 = L*x960;
double x970 = p2_i_dot_dt*x969;
double x971 = x480*x962;
double x972 = x4*x423;
double x973 = L*x972;
double x974 = x53*x973;
double x975 = p2_t_dt*x974;
double x976 = x0*x480;
double x977 = x965*x976;
double x978 = x970 - x971 - x975 + x977;
double x979 = x444*x959;
double x980 = p1_i_dt*x960;
double x981 = 3*x961;
double x982 = p1_i_dot_dt*x969;
double x983 = p2_t_dt*x54;
double x984 = x244*x983;
double x985 = p1_t_dt*x974;
double x986 = p2_t_dt*x66;
double x987 = x973*x986;
double x988 = p2_i*x41;
double x989 = x986*x988;
double x990 = p2_i_dot_dt*x247;
double x991 = 3*x970;
double x992 = p1_i*x962;
double x993 = 3*x963;
double x994 = x238*x480;
double x995 = x251*x965;
double x996 = x242*x976;
double x997 = x41*x480;
double x998 = x986*x997;
double x999 = x249*x962;
double x1000 = 3*x971;
double x1001 = x254*x429;
double x1002 = p2_t_dt*x27;
double x1003 = p2_i*x83;
double x1004 = p2_t_dt*x36;
double x1005 = p1_t_dt*x36;
double x1006 = p2_t_dt*x1001 + x1002*x1003 - x1004*x988 - 2*x961;
double x1007 = 10*x429;
double x1008 = p2_t_dt*x267;
double x1009 = x480*x83;
double x1010 = x1002*x83;
double x1011 = L*x1004;
double x1012 = x66*x988;
double x1013 = p3_t_dt*x232;
double x1014 = p3_t_dt*x28;
double x1015 = p3_i_dt*x1014;
double x1016 = p3_t_dt*x237;
double x1017 = p3_i*x1016;
double x1018 = p3_i*x0;
double x1019 = p3_t_dt*x241;
double x1020 = x1013*x459 - x1015 + x1017 - x1018*x1019;
double x1021 = p3_i_dt*x960;
double x1022 = p3_i*x962;
double x1023 = L*x1014;
double x1024 = p3_i_dot_dt*x1023;
double x1025 = x1016*x510;
double x1026 = x4*x452;
double x1027 = p3_t_dt*x1026;
double x1028 = x1027*x54;
double x1029 = x0*x510;
double x1030 = x1019*x1029;
double x1031 = x1024 - x1025 - x1028 + x1030;
double x1032 = x1013*x473;
double x1033 = p2_i_dt*x1014;
double x1034 = 3*x1015;
double x1035 = p2_i_dot_dt*x1023;
double x1036 = p3_t_dt*x974;
double x1037 = x1026*x983;
double x1038 = x1027*x265;
double x1039 = p3_i*x41;
double x1040 = p3_t_dt*x1039;
double x1041 = x1040*x66;
double x1042 = p3_i_dot_dt*x969;
double x1043 = 3*x1024;
double x1044 = p2_i*x1016;
double x1045 = 3*x1017;
double x1046 = x510*x962;
double x1047 = x1019*x976;
double x1048 = x1029*x965;
double x1049 = x41*x510;
double x1050 = p3_t_dt*x66;
double x1051 = x1049*x1050;
double x1052 = x1016*x480;
double x1053 = 3*x1025;
double x1054 = x254*x458;
double x1055 = p3_t_dt*x27;
double x1056 = p3_i*x83;
double x1057 = p3_t_dt*x36;
double x1058 = p3_t_dt*x1054 - 2*x1015 - x1039*x1057 + x1055*x1056;
double x1059 = 10*x458;
double x1060 = p3_t_dt*x267;
double x1061 = p4_t_dt*x232;
double x1062 = p4_t_dt*x28;
double x1063 = p4_i_dt*x1062;
double x1064 = p4_t_dt*x237;
double x1065 = p4_i*x1064;
double x1066 = p4_i*x0;
double x1067 = p4_t_dt*x241;
double x1068 = x1061*x489 - x1063 + x1065 - x1066*x1067;
double x1069 = p4_i_dt*x1014;
double x1070 = p4_i*x1016;
double x1071 = L*x1062;
double x1072 = p4_i_dot_dt*x1071;
double x1073 = x1064*x540;
double x1074 = x4*x482;
double x1075 = L*x1074;
double x1076 = x1075*x53;
double x1077 = p4_t_dt*x1076;
double x1078 = x0*x540;
double x1079 = x1067*x1078;
double x1080 = x1072 - x1073 - x1077 + x1079;
double x1081 = x1061*x503;
double x1082 = p3_i_dt*x1062;
double x1083 = 3*x1063;
double x1084 = p3_i_dot_dt*x1071;
double x1085 = p4_t_dt*x54;
double x1086 = x1026*x1085;
double x1087 = p3_t_dt*x1076;
double x1088 = p4_t_dt*x66;
double x1089 = x1075*x1088;
double x1090 = p4_i*x41;
double x1091 = x1088*x1090;
double x1092 = p4_i_dot_dt*x1023;
double x1093 = 3*x1072;
double x1094 = p3_i*x1064;
double x1095 = 3*x1065;
double x1096 = x1016*x540;
double x1097 = x1029*x1067;
double x1098 = x1019*x1078;
double x1099 = x41*x540;
double x1100 = x1088*x1099;
double x1101 = x1064*x510;
double x1102 = 3*x1073;
double x1103 = x254*x488;
double x1104 = p4_t_dt*x27;
double x1105 = p4_i*x83;
double x1106 = p4_t_dt*x36;
double x1107 = p4_t_dt*x1103 - 2*x1063 - x1090*x1106 + x1104*x1105;
double x1108 = 10*x488;
double x1109 = p4_t_dt*x267;
double x1110 = x540*x83;
double x1111 = x1104*x83;
double x1112 = L*x1106;
double x1113 = x1090*x66;
double x1114 = p5_t_dt*x232;
double x1115 = p5_t_dt*x28;
double x1116 = p5_i_dt*x1115;
double x1117 = p5_t_dt*x237;
double x1118 = p5_i*x1117;
double x1119 = p5_i*x0;
double x1120 = p5_t_dt*x241;
double x1121 = x1114*x519 - x1116 + x1118 - x1119*x1120;
double x1122 = p5_i_dt*x1062;
double x1123 = p5_i*x1064;
double x1124 = L*x1115;
double x1125 = p5_i_dot_dt*x1124;
double x1126 = x1117*x570;
double x1127 = x4*x512;
double x1128 = p5_t_dt*x1127;
double x1129 = x1128*x54;
double x1130 = x0*x570;
double x1131 = x1120*x1130;
double x1132 = x1125 - x1126 - x1129 + x1131;
double x1133 = x1114*x533;
double x1134 = p4_i_dt*x1115;
double x1135 = 3*x1116;
double x1136 = p4_i_dot_dt*x1124;
double x1137 = p5_t_dt*x1076;
double x1138 = x1085*x1127;
double x1139 = x1128*x265;
double x1140 = p5_i*x41;
double x1141 = p5_t_dt*x1140;
double x1142 = x1141*x66;
double x1143 = p5_i_dot_dt*x1071;
double x1144 = 3*x1125;
double x1145 = p4_i*x1117;
double x1146 = 3*x1118;
double x1147 = x1064*x570;
double x1148 = x1078*x1120;
double x1149 = x1067*x1130;
double x1150 = x41*x570;
double x1151 = p5_t_dt*x66;
double x1152 = x1150*x1151;
double x1153 = x1117*x540;
double x1154 = 3*x1126;
double x1155 = x254*x518;
double x1156 = p5_t_dt*x27;
double x1157 = p5_i*x83;
double x1158 = p5_t_dt*x36;
double x1159 = p5_t_dt*x1155 - 2*x1116 - x1140*x1158 + x1156*x1157;
double x1160 = 10*x518;
double x1161 = p5_t_dt*x267;
double x1162 = p6_t_dt*x232;
double x1163 = p6_t_dt*x28;
double x1164 = p6_i_dt*x1163;
double x1165 = p6_t_dt*x237;
double x1166 = p6_i*x1165;
double x1167 = p6_i*x0;
double x1168 = p6_t_dt*x241;
double x1169 = x1162*x549 - x1164 + x1166 - x1167*x1168;
double x1170 = p6_i_dt*x1115;
double x1171 = p6_i*x1117;
double x1172 = L*x1163;
double x1173 = p6_i_dot_dt*x1172;
double x1174 = x1165*x600;
double x1175 = x4*x542;
double x1176 = L*x1175;
double x1177 = x1176*x53;
double x1178 = p6_t_dt*x1177;
double x1179 = x0*x600;
double x1180 = x1168*x1179;
double x1181 = x1173 - x1174 - x1178 + x1180;
double x1182 = x1162*x563;
double x1183 = p5_i_dt*x1163;
double x1184 = 3*x1164;
double x1185 = p5_i_dot_dt*x1172;
double x1186 = p6_t_dt*x54;
double x1187 = x1127*x1186;
double x1188 = p5_t_dt*x1177;
double x1189 = p6_t_dt*x66;
double x1190 = x1176*x1189;
double x1191 = p6_i*x41;
double x1192 = x1189*x1191;
double x1193 = p6_i_dot_dt*x1124;
double x1194 = 3*x1173;
double x1195 = p5_i*x1165;
double x1196 = 3*x1166;
double x1197 = x1117*x600;
double x1198 = x1130*x1168;
double x1199 = x1120*x1179;
double x1200 = x41*x600;
double x1201 = x1189*x1200;
double x1202 = x1165*x570;
double x1203 = 3*x1174;
double x1204 = x254*x548;
double x1205 = p6_t_dt*x27;
double x1206 = p6_i*x83;
double x1207 = p6_t_dt*x36;
double x1208 = p6_t_dt*x1204 - 2*x1164 - x1191*x1207 + x1205*x1206;
double x1209 = 10*x548;
double x1210 = p6_t_dt*x267;
double x1211 = x600*x83;
double x1212 = x1205*x83;
double x1213 = L*x1207;
double x1214 = x1191*x66;
double x1215 = p7_t_dt*x232;
double x1216 = p7_t_dt*x28;
double x1217 = p7_i_dt*x1216;
double x1218 = p7_t_dt*x237;
double x1219 = p7_i*x1218;
double x1220 = p7_i*x0;
double x1221 = p7_t_dt*x241;
double x1222 = x1215*x579 - x1217 + x1219 - x1220*x1221;
double x1223 = p7_i_dt*x1163;
double x1224 = p7_i*x1165;
double x1225 = L*x1216;
double x1226 = p7_i_dot_dt*x1225;
double x1227 = x1218*x630;
double x1228 = x4*x572;
double x1229 = p7_t_dt*x1228;
double x1230 = x1229*x54;
double x1231 = x0*x630;
double x1232 = x1221*x1231;
double x1233 = x1226 - x1227 - x1230 + x1232;
double x1234 = x1215*x593;
double x1235 = p6_i_dt*x1216;
double x1236 = 3*x1217;
double x1237 = p6_i_dot_dt*x1225;
double x1238 = p7_t_dt*x1177;
double x1239 = x1186*x1228;
double x1240 = x1229*x265;
double x1241 = p7_i*x41;
double x1242 = p7_t_dt*x1241;
double x1243 = x1242*x66;
double x1244 = p7_i_dot_dt*x1172;
double x1245 = 3*x1226;
double x1246 = p6_i*x1218;
double x1247 = 3*x1219;
double x1248 = x1165*x630;
double x1249 = x1179*x1221;
double x1250 = x1168*x1231;
double x1251 = p7_t_dt*x66;
double x1252 = x41*x630;
double x1253 = x1251*x1252;
double x1254 = x1218*x600;
double x1255 = 3*x1227;
double x1256 = x254*x578;
double x1257 = p7_t_dt*x27;
double x1258 = p7_i*x83;
double x1259 = p7_t_dt*x36;
double x1260 = p7_t_dt*x1256 - 2*x1217 - x1241*x1259 + x1257*x1258;
double x1261 = 10*x578;
double x1262 = p7_t_dt*x267;
double x1263 = p8_t_dt*x232;
double x1264 = p8_t_dt*x28;
double x1265 = p8_i_dt*x1264;
double x1266 = p8_t_dt*x237;
double x1267 = p8_i*x1266;
double x1268 = p8_i*x0;
double x1269 = p8_t_dt*x241;
double x1270 = x1263*x609 - x1265 + x1267 - x1268*x1269;
double x1271 = p8_i_dt*x1216;
double x1272 = p8_i*x1218;
double x1273 = L*x1264;
double x1274 = p8_i_dot_dt*x1273;
double x1275 = x1266*x634;
double x1276 = x4*x602;
double x1277 = x1276*x54;
double x1278 = p8_t_dt*x1277;
double x1279 = x0*x634;
double x1280 = x1269*x1279;
double x1281 = x1274 - x1275 - x1278 + x1280;
double x1282 = x1263*x623;
double x1283 = p7_i_dt*x1264;
double x1284 = 3*x1265;
double x1285 = p7_i_dot_dt*x1273;
double x1286 = p8_t_dt*x1228*x54;
double x1287 = p7_t_dt*x1277;
double x1288 = p8_t_dt*x1276*x265;
double x1289 = p8_t_dt*x66;
double x1290 = p8_i*x41;
double x1291 = x1289*x1290;
double x1292 = p8_i_dot_dt*x1225;
double x1293 = 3*x1274;
double x1294 = p7_i*x1266;
double x1295 = 3*x1267;
double x1296 = x1218*x634;
double x1297 = x1231*x1269;
double x1298 = x1221*x1279;
double x1299 = x41*x634;
double x1300 = x1289*x1299;
double x1301 = x1266*x630;
double x1302 = 3*x1275;
double x1303 = x254*x608;
double x1304 = p8_t_dt*x27;
double x1305 = p8_i*x83;
double x1306 = p8_t_dt*x36;
double x1307 = p8_t_dt*x1303 - 2*x1265 - x1290*x1306 + x1304*x1305;
double x1308 = 10*x608;
double x1309 = p8_t_dt*x267;
double x1310 = L*x1276;
double x1311 = x1257*x634;
double x1312 = x1304*x630;
double x1313 = p9_i*x0;
double x1314 = -x1313*x924 + x391*x887 - x931 + x957;
double x1315 = p9_i_dt*x1264;
double x1316 = p9_i*x1266;
double x1317 = p8_i_dt*x888;
double x1318 = p8_i_dot_dt*x906;
double x1319 = p9_i_dot_dt*x1273;
double x1320 = 3*x945;
double x1321 = p8_i*x890;
double x1322 = x1266*x421;
double x1323 = x634*x890;
double x1324 = x913*x952;
double x1325 = 3*x946;
double x1326 = p9_t_dt*x1277;
double x1327 = p8_t_dt*x947;
double x1328 = x1269*x926;
double x1329 = x1279*x924;
double x1330 = x952*x955;
double x1331 = p9_t_dt*x267;
double x1332 = x39*x53;
double x1333 = x32*x59;
double x1334 = q2_t_dt*x38;
double x1335 = q2_t_dt*x29;
double x1336 = q2_t_dt*x237;
double x1337 = q1_i*x1336;
double x1338 = q2_t_dt*x241;
double x1339 = q2_i_dt*x28;
double x1340 = q1_t_dt*x1339;
double x1341 = q2_t_dt*x46;
double x1342 = q2_i_dot_dt*x45;
double x1343 = q1_t_dt*x1342;
double x1344 = x4*x637;
double x1345 = x1344*x66;
double x1346 = 3*x47;
double x1347 = q2_i*x48;
double x1348 = x48*x663;
double x1349 = x1336*x49;
double x1350 = q2_t_dt*x55;
double x1351 = x4*x646;
double x1352 = L*x1351;
double x1353 = q1_t_dt*x1352;
double x1354 = x1353*x53;
double x1355 = 3*x50;
double x1356 = q1_t_dt*x265*x52;
double x1357 = q2_i*x41;
double x1358 = q1_t_dt*x1357;
double x1359 = x41*x49;
double x1360 = q1_t_dt*x66;
double x1361 = x1359*x1360;
double x1362 = x0*x663;
double x1363 = x1362*x59;
double x1364 = x1338*x60;
double x1365 = q2_t_dt*x27;
double x1366 = x1365*x14;
double x1367 = q2_i*x0;
double x1368 = q1_t_dt*x1344;
double x1369 = q2_t_dt*x36;
double x1370 = q2_t_dt*x1342;
double x1371 = x1336*x663;
double x1372 = x1352*x53;
double x1373 = q2_t_dt*x1372;
double x1374 = x1338*x1362;
double x1375 = -x1370 + x1371 + x1373 - x1374;
double x1376 = q2_t_dt*x1339;
double x1377 = q2_t_dt*x1344;
double x1378 = q2_i*x83;
double x1379 = x1357*x1369 - x1365*x1378 + 2*x1376 - x1377*x36;
double x1380 = 3*x1376;
double x1381 = q2_t_dt*x1345;
double x1382 = q2_i*x1336;
double x1383 = 3*x1382;
double x1384 = q2_t_dt*x66;
double x1385 = x1365*x83;
double x1386 = L*x1369;
double x1387 = x1357*x1384;
double x1388 = x41*x663;
double x1389 = q1_t_dt*x36;
double x1390 = -x1338*x1367 - x1376 + x1377*x53 + x1382;
double x1391 = q3_t_dt*x1339;
double x1392 = q3_t_dt*x237;
double x1393 = q2_i*x1392;
double x1394 = q3_t_dt*x1344;
double x1395 = q3_t_dt*x241;
double x1396 = x1370 - x1371 - x1373 + x1374;
double x1397 = x4*x666;
double x1398 = x1397*x66;
double x1399 = q3_i_dt*x28;
double x1400 = q2_t_dt*x1399;
double x1401 = q3_t_dt*x1342;
double x1402 = x1352*x1384;
double x1403 = q3_t_dt*x1372;
double x1404 = x4*x675;
double x1405 = x1404*x54;
double x1406 = q2_t_dt*x1405;
double x1407 = q3_i*x41;
double x1408 = 3*x1370;
double x1409 = q3_i_dot_dt*x45;
double x1410 = q2_t_dt*x1409;
double x1411 = q3_i*x1336;
double x1412 = x1336*x692;
double x1413 = x1384*x1388;
double x1414 = x1362*x1395;
double x1415 = x0*x692;
double x1416 = x1338*x1415;
double x1417 = 3*x1371;
double x1418 = x1392*x663;
double x1419 = q3_t_dt*x27;
double x1420 = q3_i*x83;
double x1421 = q2_t_dt*x1397;
double x1422 = q3_t_dt*x36;
double x1423 = q3_t_dt*x1409;
double x1424 = x1392*x692;
double x1425 = q3_t_dt*x1405;
double x1426 = x1395*x1415;
double x1427 = -x1423 + x1424 + x1425 - x1426;
double x1428 = q3_t_dt*x1399;
double x1429 = q3_t_dt*x1397;
double x1430 = x1407*x1422 - x1419*x1420 + 2*x1428 - x1429*x36;
double x1431 = 3*x1428;
double x1432 = q3_t_dt*x1398;
double x1433 = q3_i*x1392;
double x1434 = 3*x1433;
double x1435 = q2_t_dt*x267;
double x1436 = q3_t_dt*x66;
double x1437 = x1419*x83;
double x1438 = x1407*x1436;
double x1439 = x41*x692;
double x1440 = q3_i*x0;
double x1441 = -x1395*x1440 - x1428 + x1429*x53 + x1433;
double x1442 = q4_t_dt*x1399;
double x1443 = q4_t_dt*x237;
double x1444 = q3_i*x1443;
double x1445 = q4_t_dt*x1397;
double x1446 = q4_t_dt*x241;
double x1447 = x1423 - x1424 - x1425 + x1426;
double x1448 = x4*x695;
double x1449 = x1448*x66;
double x1450 = q4_i_dt*x28;
double x1451 = q3_t_dt*x1450;
double x1452 = q4_t_dt*x1409;
double x1453 = q3_t_dt*x265;
double x1454 = x1404*x1453;
double x1455 = q4_t_dt*x1405;
double x1456 = x4*x704;
double x1457 = L*x1456;
double x1458 = x1457*x53;
double x1459 = q3_t_dt*x1458;
double x1460 = q4_i*x41;
double x1461 = 3*x1423;
double x1462 = q4_i_dot_dt*x45;
double x1463 = q3_t_dt*x1462;
double x1464 = q4_i*x1392;
double x1465 = x1392*x721;
double x1466 = x1436*x1439;
double x1467 = x1415*x1446;
double x1468 = x0*x721;
double x1469 = x1395*x1468;
double x1470 = 3*x1424;
double x1471 = x1443*x692;
double x1472 = q4_t_dt*x27;
double x1473 = q4_i*x83;
double x1474 = q3_t_dt*x1448;
double x1475 = q4_t_dt*x36;
double x1476 = q4_t_dt*x1462;
double x1477 = x1443*x721;
double x1478 = q4_t_dt*x1458;
double x1479 = x1446*x1468;
double x1480 = -x1476 + x1477 + x1478 - x1479;
double x1481 = q4_t_dt*x1450;
double x1482 = q4_t_dt*x1448;
double x1483 = x1460*x1475 - x1472*x1473 + 2*x1481 - x1482*x36;
double x1484 = 3*x1481;
double x1485 = q4_t_dt*x1449;
double x1486 = q4_i*x1443;
double x1487 = 3*x1486;
double x1488 = q3_t_dt*x267;
double x1489 = q4_t_dt*x66;
double x1490 = x1472*x83;
double x1491 = L*x1475;
double x1492 = x1460*x1489;
double x1493 = x41*x721;
double x1494 = q4_i*x0;
double x1495 = -x1446*x1494 - x1481 + x1482*x53 + x1486;
double x1496 = q5_t_dt*x1450;
double x1497 = q5_t_dt*x237;
double x1498 = q4_i*x1497;
double x1499 = q5_t_dt*x1448;
double x1500 = q5_t_dt*x241;
double x1501 = x1476 - x1477 - x1478 + x1479;
double x1502 = x4*x724;
double x1503 = x1502*x66;
double x1504 = q5_i_dt*x28;
double x1505 = q4_t_dt*x1504;
double x1506 = q5_t_dt*x1462;
double x1507 = x1457*x1489;
double x1508 = q5_t_dt*x1458;
double x1509 = x4*x733;
double x1510 = x1509*x54;
double x1511 = q4_t_dt*x1510;
double x1512 = q5_i*x41;
double x1513 = 3*x1476;
double x1514 = q5_i_dot_dt*x45;
double x1515 = q4_t_dt*x1514;
double x1516 = q5_i*x1443;
double x1517 = x1443*x750;
double x1518 = x1489*x1493;
double x1519 = x1468*x1500;
double x1520 = x0*x750;
double x1521 = x1446*x1520;
double x1522 = 3*x1477;
double x1523 = x1497*x721;
double x1524 = q5_t_dt*x27;
double x1525 = q5_i*x83;
double x1526 = q4_t_dt*x1502;
double x1527 = q5_t_dt*x36;
double x1528 = q5_t_dt*x1514;
double x1529 = x1497*x750;
double x1530 = q5_t_dt*x1510;
double x1531 = x1500*x1520;
double x1532 = -x1528 + x1529 + x1530 - x1531;
double x1533 = q5_t_dt*x1504;
double x1534 = q5_t_dt*x1502;
double x1535 = x1512*x1527 - x1524*x1525 + 2*x1533 - x1534*x36;
double x1536 = 3*x1533;
double x1537 = q5_t_dt*x1503;
double x1538 = q5_i*x1497;
double x1539 = 3*x1538;
double x1540 = q4_t_dt*x267;
double x1541 = q5_t_dt*x66;
double x1542 = x1524*x83;
double x1543 = x1512*x1541;
double x1544 = x41*x750;
double x1545 = q5_i*x0;
double x1546 = -x1500*x1545 - x1533 + x1534*x53 + x1538;
double x1547 = q6_t_dt*x1504;
double x1548 = q6_t_dt*x237;
double x1549 = q5_i*x1548;
double x1550 = q6_t_dt*x1502;
double x1551 = q6_t_dt*x241;
double x1552 = x1528 - x1529 - x1530 + x1531;
double x1553 = x4*x753;
double x1554 = x1553*x66;
double x1555 = q6_i_dt*x28;
double x1556 = q5_t_dt*x1555;
double x1557 = q6_t_dt*x1514;
double x1558 = q5_t_dt*x1509*x265;
double x1559 = q6_t_dt*x1510;
double x1560 = x4*x762;
double x1561 = L*x1560;
double x1562 = x1561*x53;
double x1563 = q5_t_dt*x1562;
double x1564 = q6_i*x41;
double x1565 = 3*x1528;
double x1566 = q6_i_dot_dt*x45;
double x1567 = q5_t_dt*x1566;
double x1568 = q6_i*x1497;
double x1569 = x1497*x779;
double x1570 = x1541*x1544;
double x1571 = x1520*x1551;
double x1572 = x0*x779;
double x1573 = x1500*x1572;
double x1574 = 3*x1529;
double x1575 = x1548*x750;
double x1576 = q6_t_dt*x27;
double x1577 = q6_i*x83;
double x1578 = q5_t_dt*x1553;
double x1579 = q6_t_dt*x36;
double x1580 = q6_t_dt*x1566;
double x1581 = x1548*x779;
double x1582 = q6_t_dt*x1562;
double x1583 = x1551*x1572;
double x1584 = -x1580 + x1581 + x1582 - x1583;
double x1585 = q6_t_dt*x1555;
double x1586 = q6_t_dt*x1553;
double x1587 = x1564*x1579 - x1576*x1577 + 2*x1585 - x1586*x36;
double x1588 = 3*x1585;
double x1589 = q6_t_dt*x1554;
double x1590 = q6_i*x1548;
double x1591 = 3*x1590;
double x1592 = q5_t_dt*x267;
double x1593 = q6_t_dt*x66;
double x1594 = x1576*x83;
double x1595 = L*x1579;
double x1596 = x1564*x1593;
double x1597 = x41*x779;
double x1598 = q6_i*x0;
double x1599 = -x1551*x1598 - x1585 + x1586*x53 + x1590;
double x1600 = q7_t_dt*x1555;
double x1601 = q7_t_dt*x237;
double x1602 = q6_i*x1601;
double x1603 = q7_t_dt*x1553;
double x1604 = q7_t_dt*x241;
double x1605 = x1580 - x1581 - x1582 + x1583;
double x1606 = x4*x782;
double x1607 = x1606*x66;
double x1608 = q7_i_dt*x28;
double x1609 = q6_t_dt*x1608;
double x1610 = q7_t_dt*x1566;
double x1611 = x1561*x1593;
double x1612 = q7_t_dt*x1562;
double x1613 = x4*x791;
double x1614 = x1613*x54;
double x1615 = q6_t_dt*x1614;
double x1616 = q7_i*x41;
double x1617 = 3*x1580;
double x1618 = q7_i_dot_dt*x45;
double x1619 = q6_t_dt*x1618;
double x1620 = q7_i*x1548;
double x1621 = x1548*x808;
double x1622 = x1593*x1597;
double x1623 = x1572*x1604;
double x1624 = x0*x808;
double x1625 = x1551*x1624;
double x1626 = 3*x1581;
double x1627 = x1601*x779;
double x1628 = q7_t_dt*x27;
double x1629 = q7_i*x83;
double x1630 = q6_t_dt*x1606;
double x1631 = q7_t_dt*x36;
double x1632 = q7_t_dt*x1618;
double x1633 = x1601*x808;
double x1634 = q7_t_dt*x1614;
double x1635 = x1604*x1624;
double x1636 = -x1632 + x1633 + x1634 - x1635;
double x1637 = q7_t_dt*x1608;
double x1638 = q7_t_dt*x1606;
double x1639 = x1616*x1631 - x1628*x1629 + 2*x1637 - x1638*x36;
double x1640 = 3*x1637;
double x1641 = q7_t_dt*x1607;
double x1642 = q7_i*x1601;
double x1643 = 3*x1642;
double x1644 = q6_t_dt*x267;
double x1645 = q7_t_dt*x66;
double x1646 = x1628*x83;
double x1647 = x1616*x1645;
double x1648 = x41*x808;
double x1649 = q7_i*x0;
double x1650 = -x1604*x1649 - x1637 + x1638*x53 + x1642;
double x1651 = q8_t_dt*x1608;
double x1652 = q8_t_dt*x237;
double x1653 = q7_i*x1652;
double x1654 = q8_t_dt*x1606;
double x1655 = q8_t_dt*x241;
double x1656 = x1632 - x1633 - x1634 + x1635;
double x1657 = x4*x811;
double x1658 = x1657*x66;
double x1659 = q8_i_dt*x28;
double x1660 = q7_t_dt*x1659;
double x1661 = q8_t_dt*x1618;
double x1662 = q7_t_dt*x1613*x265;
double x1663 = q8_t_dt*x1614;
double x1664 = x4*x820;
double x1665 = L*x1664;
double x1666 = x1665*x53;
double x1667 = q7_t_dt*x1666;
double x1668 = q8_i*x41;
double x1669 = 3*x1632;
double x1670 = q8_i_dot_dt*x45;
double x1671 = q7_t_dt*x1670;
double x1672 = q8_i*x1601;
double x1673 = x1601*x837;
double x1674 = x1645*x1648;
double x1675 = x1624*x1655;
double x1676 = x0*x837;
double x1677 = x1604*x1676;
double x1678 = 3*x1633;
double x1679 = x1652*x808;
double x1680 = q8_t_dt*x27;
double x1681 = q8_i*x83;
double x1682 = q7_t_dt*x1657;
double x1683 = q8_t_dt*x36;
double x1684 = q8_t_dt*x1670;
double x1685 = x1652*x837;
double x1686 = q8_t_dt*x1666;
double x1687 = x1655*x1676;
double x1688 = -x1684 + x1685 + x1686 - x1687;
double x1689 = q8_t_dt*x1659;
double x1690 = q8_t_dt*x1657;
double x1691 = x1668*x1683 - x1680*x1681 + 2*x1689 - x1690*x36;
double x1692 = 3*x1689;
double x1693 = q8_t_dt*x1658;
double x1694 = q8_i*x1652;
double x1695 = 3*x1694;
double x1696 = q7_t_dt*x267;
double x1697 = q8_t_dt*x66;
double x1698 = x1680*x83;
double x1699 = L*x1683;
double x1700 = x1668*x1697;
double x1701 = x41*x837;
double x1702 = q8_i*x0;
double x1703 = -x1655*x1702 - x1689 + x1690*x53 + x1694;
double x1704 = q9_t_dt*x1659;
double x1705 = q9_t_dt*x237;
double x1706 = q8_i*x1705;
double x1707 = q9_t_dt*x1657;
double x1708 = q9_t_dt*x241;
double x1709 = x1684 - x1685 - x1686 + x1687;
double x1710 = x4*x840;
double x1711 = x1710*x66;
double x1712 = q9_i_dt*x28;
double x1713 = q8_t_dt*x1712;
double x1714 = q9_t_dt*x1670;
double x1715 = x1665*x1697;
double x1716 = q9_t_dt*x1666;
double x1717 = x4*x849;
double x1718 = x1717*x54;
double x1719 = q8_t_dt*x1718;
double x1720 = q9_i*x41;
double x1721 = 3*x1684;
double x1722 = q9_i_dot_dt*x45;
double x1723 = q8_t_dt*x1722;
double x1724 = q9_i*x1652;
double x1725 = x1652*x866;
double x1726 = x1697*x1701;
double x1727 = x1676*x1708;
double x1728 = x0*x866;
double x1729 = x1655*x1728;
double x1730 = 3*x1685;
double x1731 = x1705*x837;
double x1732 = q9_t_dt*x1712;
double x1733 = 2*x1732;
double x1734 = q9_t_dt*x1710;
double x1735 = x1734*x36;
double x1736 = q9_t_dt*x27;
double x1737 = q9_i*x83;
double x1738 = x1736*x1737;
double x1739 = q8_t_dt*x1710;
double x1740 = q9_t_dt*x36;
double x1741 = x1720*x1740;
double x1742 = q9_t_dt*x1722;
double x1743 = x1705*x866;
double x1744 = q9_t_dt*x1718 - x1708*x1728 - x1742 + x1743;
double x1745 = q8_t_dt*x267;
double x1746 = q9_t_dt*x66;
double x1747 = x1736*x83;
double x1748 = x41*x866;
double x1749 = q9_i*x1705;
double x1750 = -q9_t_dt*x1711 + x1720*x1746 + 3*x1732 - 3*x1749;
double x1751 = x1734*x53;
double x1752 = q9_i*x0;
double x1753 = x1708*x1752;
double x1754 = q10_t_dt*x1712;
double x1755 = q9_i*x237;
double x1756 = q10_t_dt*x1755;
double x1757 = q10_t_dt*x1710;
double x1758 = q10_t_dt*x241;
double x1759 = q10_i_dt*x904;
double x1760 = q10_i_dot_dt*x45;
double x1761 = q9_t_dt*x1760;
double x1762 = q10_t_dt*x1722;
double x1763 = 3*x1742;
double x1764 = q10_i*x1705;
double x1765 = q9_t_dt*x879;
double x1766 = x877*x_f;
double x1767 = q10_t_dt*x237;
double x1768 = x1767*x866;
double x1769 = x1705*x875;
double x1770 = q9_t_dt*x1717*x265;
double x1771 = q10_i*x41;
double x1772 = 3*x1743;
double x1773 = x53*x872;
double x1774 = x1765*x1773;
double x1775 = q10_t_dt*x1718;
double x1776 = x1728*x1758;
double x1777 = x0*x875;
double x1778 = x1708*x1777;
double x1779 = x1746*x1748;
double x1780 = x28*x869;
double x1781 = q10_i_dt*x36;
double x1782 = q10_i*x83;
double x1783 = q10_t_dt*x27;
double x1784 = q10_t_dt*x879;
double x1785 = q10_t_dt*x36;
double x1786 = q10_t_dt*x1760 + x1758*x1777 - x1767*x875 - x1773*x1784;
double x1787 = 5*q10_i_dt;
double x1788 = q9_t_dt*x1787;
double x1789 = q10_i_dt*x267;
double x1790 = 3*q10_i;
double x1791 = q9_t_dt*x267;
double x1792 = q10_t_dt*x66;
double x1793 = x1783*x866;
double x1794 = x1740*x875;
double x1795 = p10_b_dt*x4;
double x1796 = x1795*x386;
double x1797 = p10_b_dt*x57;
double x1798 = x1797*x387;
double x1799 = p10_b_dot_dt*x4;
double x1800 = x1799*x385;
double x1801 = p10_b_dt*x892;
double x1802 = c*p10_b_dot_dt;
double x1803 = p10_i*x13;
double x1804 = x1802*x1803;
double x1805 = p10_b_dt*p10_i_dot;
double x1806 = x1805*x41;
double x1807 = x1804 + x1806;
double x1808 = x1795*x385;
double x1809 = 12*x1808;
double x1810 = p10_b_dt*x41;
double x1811 = 12*x1810;
double x1812 = p10_i*x1811;
double x1813 = -x1812;
double x1814 = x1809 + x1813;
double x1815 = x158*x1804;
double x1816 = -x1815;
double x1817 = x158*x1806;
double x1818 = -x1817;
double x1819 = x158*x1800 + x158*x1801;
double x1820 = x1816 + x1818 + x1819;
double x1821 = p9_b_dt*x4;
double x1822 = x379*x70;
double x1823 = x1799*x1822;
double x1824 = 2*x1823;
double x1825 = p10_b_dt*x913;
double x1826 = p9_b_dot_dt*x4;
double x1827 = L*x1826;
double x1828 = -x1795*x414 - x1821*x413 - x1824 + 2*x1825 + x1827*x386;
double x1829 = p9_i*x1810;
double x1830 = p9_b_dt*x941;
double x1831 = x0*x1797;
double x1832 = p9_b_dot_dt*x57;
double x1833 = L*x1832;
double x1834 = p10_b_dot_dt*x57;
double x1835 = p10_i_dot*x313;
double x1836 = x1834*x1835;
double x1837 = 6*x1829 + 6*x1830 - x1831*x421 - x1833*x387 + x1836;
double x1838 = L*x385;
double x1839 = x1826*x1838;
double x1840 = x403*x70;
double x1841 = x1799*x1840;
double x1842 = p9_b_dot_dt*x70;
double x1843 = x1842*x892;
double x1844 = 4*x1823;
double x1845 = L*x390;
double x1846 = x1799*x1845;
double x1847 = L*p9_b_dt;
double x1848 = x1847*x892;
double x1849 = -x1795*x391 - x1800*x321 - x1801*x321 + 4*x1808 - x1821*x386 + x1825 + x1839 - x1841 - x1843 - x1844 + 3*x1846 + 3*x1848;
double x1850 = 4*p10_i;
double x1851 = p9_b_dt*x57;
double x1852 = x13*x70;
double x1853 = p9_i_dot*x1802;
double x1854 = x1852*x1853;
double x1855 = x1842*x41;
double x1856 = p10_i_dot*x1855;
double x1857 = L*p9_b_dot_dt;
double x1858 = 3*L;
double x1859 = x13*x1858;
double x1860 = p9_i*x1802;
double x1861 = x1847*x41;
double x1862 = 3*p10_i_dot;
double x1863 = L*x387;
double x1864 = 4*x1852;
double x1865 = p10_i_dot*x1802;
double x1866 = x1864*x1865;
double x1867 = x1313*x1797 - x1810*x1850 - x1810*x421 + x1831*x898 + x1834*x1863 + x1851*x387 + x1854 + x1856 - x1857*x941 - x1859*x1860 - x1861*x1862 + x1866;
double x1868 = 12*p9_b_dt;
double x1869 = x1868*x917;
double x1870 = -x1869;
double x1871 = p9_i*x1811;
double x1872 = x1868*x941;
double x1873 = x1804*x286;
double x1874 = x1806*x286;
double x1875 = p9_i_dot*x1810;
double x1876 = x154*x1875;
double x1877 = p9_b_dot_dt*x941;
double x1878 = x154*x1877;
double x1879 = 3*x1854;
double x1880 = 3*x1856;
double x1881 = p9_b_dot_dt*p9_i;
double x1882 = x1881*x41;
double x1883 = x154*x1882;
double x1884 = p9_i_dot*x1861;
double x1885 = 5*x1884;
double x1886 = x13*x1860;
double x1887 = x1886*x286;
double x1888 = p10_i_dot*x1861;
double x1889 = 7*x1888;
double x1890 = x1826*x1840;
double x1891 = 2*x1890;
double x1892 = x1842*x57;
double x1893 = x0*x1892;
double x1894 = p9_i_dot*x1893;
double x1895 = x1891 - x1894;
double x1896 = 12*x390;
double x1897 = x1821*x385;
double x1898 = x1821*x1896;
double x1899 = x1826*x390;
double x1900 = p9_b_dt*x912;
double x1901 = -x154*x1899 - x154*x1900 - x1795*x1896 + x1800*x286 + x1801*x286 + 5*x1825 + 5*x1839 + 3*x1841 + 3*x1843 + x1844 - 7*x1846 - 7*x1848 - 12*x1897 + x1898;
double x1902 = p10_i*x1810;
double x1903 = 8*x1902;
double x1904 = p9_b_dt*x917;
double x1905 = 8*x1904;
double x1906 = 8*x1829;
double x1907 = 8*x1830;
double x1908 = x158*x1875;
double x1909 = x158*x1877;
double x1910 = p9_i_dot*x313;
double x1911 = x1834*x1910;
double x1912 = p10_i_dot*x1893;
double x1913 = x158*x1886;
double x1914 = 4*x1888;
double x1915 = -x158*x1899 - x158*x1900;
double x1916 = x158*x1882;
double x1917 = 4*x1884;
double x1918 = x1916 + x1917;
double x1919 = x1915 + x1918;
double x1920 = x1895 + x1919;
double x1921 = 8*x390;
double x1922 = x1821*x1921;
double x1923 = L*x933;
double x1924 = -x1795*x1921 - x1799*x1923 + 8*x1808 + x1824 + 4*x1825 + 4*x1839 + 2*x1841 + 2*x1843 - 4*x1848 - 8*x1897 + x1922;
double x1925 = -x1891;
double x1926 = x1894 + x1925;
double x1927 = 18*x390;
double x1928 = x1821*x1927;
double x1929 = x129*x1899 + x129*x1900 + x1795*x1927 - x1800*x327 - x1801*x327 - 18*x1808 - 12*x1823 - 6*x1825 - x1827*x413 - 6*x1841 - 6*x1843 + 16*x1846 + 16*x1848 + 18*x1897 - x1928;
double x1930 = 18*x1904;
double x1931 = 12*x1852;
double x1932 = x129*x1875 + x129*x1877 - x129*x1882 + x1804*x327 + x1806*x327 - 18*x1829 - 18*x1830 + 6*x1854 + 6*x1856 + x1865*x1931 - 6*x1884 - x1886*x327 - 16*x1888 + 18*x1902 + x1930;
double x1933 = p2_b_dt*x4;
double x1934 = x1933*x430;
double x1935 = p2_b_dt*x57;
double x1936 = x1935*x964;
double x1937 = p2_b_dot_dt*x4;
double x1938 = x1937*x429;
double x1939 = p2_b_dt*x972;
double x1940 = p2_b_dot_dt*p2_i;
double x1941 = x1940*x41;
double x1942 = p2_b_dt*p2_i_dot;
double x1943 = x1941 + x1942*x41;
double x1944 = p1_b_dt*x988;
double x1945 = 6*x1944;
double x1946 = p2_b_dt*x260;
double x1947 = 6*x1946;
double x1948 = L*x312;
double x1949 = x1948*x964;
double x1950 = x0*x1935;
double x1951 = x1950*x249;
double x1952 = x1933*x429;
double x1953 = -12*x1952;
double x1954 = 12*p2_b_dt;
double x1955 = x1954*x988;
double x1956 = x1953 + x1955;
double x1957 = x1937*x70;
double x1958 = x1957*x423;
double x1959 = 2*x1958;
double x1960 = p2_b_dot_dt*x57;
double x1961 = p2_i_dot*x313;
double x1962 = x1960*x1961;
double x1963 = x1959 - x1962;
double x1964 = x158*x1938;
double x1965 = x158*x1939;
double x1966 = -x1964 - x1965;
double x1967 = x158*x1941;
double x1968 = L*p2_b_dt;
double x1969 = x1968*x41;
double x1970 = p2_i_dot*x1969;
double x1971 = 4*x1970;
double x1972 = x1967 + x1971;
double x1973 = x1966 + x1972;
double x1974 = L*x278;
double x1975 = x1968*x244;
double x1976 = x1933*x226 - x1974*x430 - 2*x1975 + x274*x444;
double x1977 = x276*x964;
double x1978 = x1935*x240;
double x1979 = p2_b_dt*x988;
double x1980 = 4*x1979;
double x1981 = L*p1_b_dot_dt;
double x1982 = x1981*x988;
double x1983 = p1_i_dot*x1968;
double x1984 = x1983*x41;
double x1985 = p1_b_dot_dt*p2_i_dot;
double x1986 = x1985*x289;
double x1987 = p2_b_dot_dt*x289;
double x1988 = p1_i_dot*x1987;
double x1989 = p2_i_dot*x1987;
double x1990 = 4*x1989;
double x1991 = x1940*x324;
double x1992 = x1950*x480;
double x1993 = p1_b_dt*x41;
double x1994 = 3*x480;
double x1995 = x1993*x1994;
double x1996 = p2_b_dot_dt*x260;
double x1997 = x1858*x1996;
double x1998 = x293*x423;
double x1999 = p2_b_dot_dt*x373;
double x2000 = L*x429;
double x2001 = x2000*x278;
double x2002 = p1_b_dt*x973;
double x2003 = L*x1937;
double x2004 = x2003*x210;
double x2005 = 4*x423;
double x2006 = x1957*x2005;
double x2007 = x1933*x211 + x1938*x321 + x1939*x321 - 4*x1952 - x1975 + x1998 + x1999 - x2001 - 3*x2002 - 3*x2004 + x2006 + x274*x430;
double x2008 = 18*x1944;
double x2009 = 18*x1946;
double x2010 = x1941*x327;
double x2011 = 16*x1970;
double x2012 = 12*x1989;
double x2013 = 6*x1982;
double x2014 = 6*x1984;
double x2015 = 6*x1986;
double x2016 = 6*x1988;
double x2017 = x129*x282;
double x2018 = x129*x284;
double x2019 = x1993*x480;
double x2020 = 16*x2019;
double x2021 = x1996*x327;
double x2022 = 18*x1952;
double x2023 = 18*x1979;
double x2024 = x2022 - x2023;
double x2025 = x274*x429;
double x2026 = x1933*x210;
double x2027 = -x129*x279 - x129*x280 + x1938*x327 + x1939*x327 + 12*x1958 + x1974*x444 + 6*x1975 + 6*x1998 + 6*x1999 - 16*x2002 - 16*x2004 - 18*x2025 - 18*x2026 + x326;
double x2028 = -4*x1975 - 2*x1998 - 2*x1999 - 4*x2001 + 4*x2002 + 4*x2004 + 8*x2025 + 8*x2026 - x305;
double x2029 = -8*x1952;
double x2030 = 8*x1979;
double x2031 = -x1959;
double x2032 = x1962 + x2031;
double x2033 = x2029 + x2030 + x2032;
double x2034 = p2_i_dot*x158;
double x2035 = -x158*x1996 - 8*x1944 - 8*x1946 + x1960*x314 + x1961*x312 + 4*x1982 + 4*x1984 - x1993*x2034 + x304;
double x2036 = x154*x279 + x154*x280 - x1938*x286 - x1939*x286 - 5*x1975 - 3*x1998 - 3*x1999 - 5*x2001 + 7*x2002 + 7*x2004 - x2006 + 12*x2025 + 12*x2026 - x298 + x317;
double x2037 = -x154*x282 - x154*x284 + x1941*x286 - x1954*x260 + 7*x1970 + 5*x1982 + 5*x1984 + 3*x1986 + 3*x1988 + x1990 - x1996*x286 - 7*x2019 - x299*x988 + x300 + x315;
double x2038 = p3_b_dt*x4;
double x2039 = x2038*x459;
double x2040 = p3_b_dt*x57;
double x2041 = x1018*x2040;
double x2042 = p3_b_dot_dt*x4;
double x2043 = x2042*x458;
double x2044 = p3_b_dt*x1026;
double x2045 = p3_b_dot_dt*p3_i;
double x2046 = x2045*x41;
double x2047 = p3_b_dt*p3_i_dot;
double x2048 = x2047*x41;
double x2049 = x2046 + x2048;
double x2050 = p2_b_dt*x1039;
double x2051 = 6*x2050;
double x2052 = p3_b_dt*x41;
double x2053 = p2_i*x2052;
double x2054 = 6*x2053;
double x2055 = L*x1960;
double x2056 = x1018*x2055;
double x2057 = x0*x2040;
double x2058 = x2057*x480;
double x2059 = x2038*x458;
double x2060 = -12*x2059;
double x2061 = 12*p3_b_dt;
double x2062 = x1039*x2061;
double x2063 = x2060 + x2062;
double x2064 = x2042*x70;
double x2065 = x2064*x452;
double x2066 = 2*x2065;
double x2067 = p3_b_dot_dt*x57;
double x2068 = p3_i_dot*x313;
double x2069 = x2067*x2068;
double x2070 = x2066 - x2069;
double x2071 = x158*x2043;
double x2072 = x158*x2044;
double x2073 = -x2071 - x2072;
double x2074 = x158*x2046;
double x2075 = x158*x2048;
double x2076 = x2074 + x2075;
double x2077 = x2073 + x2076;
double x2078 = p3_b_dt*x973;
double x2079 = x1933*x473 - x2003*x459 + x2038*x444 - 2*x2078;
double x2080 = x1018*x1935;
double x2081 = x2040*x964;
double x2082 = p3_b_dt*x1039;
double x2083 = 4*x2082;
double x2084 = L*p2_b_dot_dt;
double x2085 = x1039*x2084;
double x2086 = x2052*x480;
double x2087 = p3_i_dot*x1987;
double x2088 = p3_b_dot_dt*x289;
double x2089 = p2_i_dot*x2088;
double x2090 = p3_i_dot*x2088;
double x2091 = 4*x2090;
double x2092 = x2045*x324;
double x2093 = x2057*x510;
double x2094 = 3*p3_i_dot;
double x2095 = x1969*x2094;
double x2096 = p3_b_dot_dt*x1858;
double x2097 = x2096*x988;
double x2098 = x1957*x452;
double x2099 = x70*x972;
double x2100 = p3_b_dot_dt*x2099;
double x2101 = x2003*x458;
double x2102 = x1026*x1968;
double x2103 = x2000*x2042;
double x2104 = 4*x2065;
double x2105 = x1933*x459 + x2038*x430 + x2043*x321 + x2044*x321 - 4*x2059 - x2078 + x2098 + x2100 - x2101 - 3*x2102 - 3*x2103 + x2104;
double x2106 = 18*x2050;
double x2107 = 18*x2053;
double x2108 = x2046*x327;
double x2109 = x2048*x327;
double x2110 = 12*x2090;
double x2111 = p2_b_dot_dt*x1039;
double x2112 = x129*x2111;
double x2113 = p2_i_dot*x2052;
double x2114 = x129*x2113;
double x2115 = 6*x2087;
double x2116 = 6*x2089;
double x2117 = x129*x1941;
double x2118 = 6*x1970;
double x2119 = p3_i_dot*x1969;
double x2120 = 16*x2119;
double x2121 = p3_b_dot_dt*x988;
double x2122 = x2121*x327;
double x2123 = 18*x2059;
double x2124 = 18*x2082;
double x2125 = x2123 - x2124;
double x2126 = x1933*x458;
double x2127 = x2038*x429;
double x2128 = -x129*x1938 - x129*x1939 + x2003*x473 + x2043*x327 + x2044*x327 + 12*x2065 + 6*x2078 + 6*x2098 + 6*x2100 - 16*x2102 - 16*x2103 - 18*x2126 - 18*x2127;
double x2129 = x1964 + x1965 - 4*x2078 - 2*x2098 - 2*x2100 - 4*x2101 + 4*x2102 + 4*x2103 + 8*x2126 + 8*x2127;
double x2130 = -8*x2059;
double x2131 = 8*x2082;
double x2132 = -x2066;
double x2133 = x2069 + x2132;
double x2134 = x2130 + x2131 + x2133;
double x2135 = x158*x2052;
double x2136 = -x1967 - x1971;
double x2137 = p2_i_dot*x2135 + x158*x2111 - x158*x2121 + x1960*x2068 + x1961*x2067 - 8*x2050 - 8*x2053 - 4*x2119 + x2136;
double x2138 = x154*x1938 + x154*x1939 - x2043*x286 - x2044*x286 - 5*x2078 - 3*x2098 - 3*x2100 - 5*x2101 + 7*x2102 + 7*x2103 - x2104 + 12*x2126 + 12*x2127;
double x2139 = -x1039*x1954 - x154*x1941 + x154*x2111 + x154*x2113 - 5*x1970 + x2046*x286 + x2048*x286 - x2061*x988 + 3*x2087 + 3*x2089 + x2091 - 7*x2119 - x2121*x286;
double x2140 = p4_b_dt*x4;
double x2141 = x2140*x489;
double x2142 = p4_b_dt*x57;
double x2143 = x1066*x2142;
double x2144 = p4_b_dot_dt*x4;
double x2145 = x2144*x488;
double x2146 = p4_b_dt*x1074;
double x2147 = p4_b_dot_dt*p4_i;
double x2148 = x2147*x41;
double x2149 = p4_b_dt*p4_i_dot;
double x2150 = x2148 + x2149*x41;
double x2151 = p3_b_dt*x1090;
double x2152 = 6*x2151;
double x2153 = p4_b_dt*x1039;
double x2154 = 6*x2153;
double x2155 = L*x2067;
double x2156 = x1066*x2155;
double x2157 = x0*x2142;
double x2158 = x2157*x510;
double x2159 = x2140*x488;
double x2160 = -12*x2159;
double x2161 = 12*p4_b_dt;
double x2162 = x1090*x2161;
double x2163 = x2160 + x2162;
double x2164 = x2144*x70;
double x2165 = x2164*x482;
double x2166 = 2*x2165;
double x2167 = p4_b_dot_dt*x57;
double x2168 = p4_i_dot*x313;
double x2169 = x2167*x2168;
double x2170 = x2166 - x2169;
double x2171 = x158*x2145;
double x2172 = x158*x2146;
double x2173 = -x2171 - x2172;
double x2174 = x158*x2148;
double x2175 = L*p4_b_dt;
double x2176 = x2175*x41;
double x2177 = p4_i_dot*x2176;
double x2178 = 4*x2177;
double x2179 = x2174 + x2178;
double x2180 = x2173 + x2179;
double x2181 = L*x2042;
double x2182 = x1026*x2175;
double x2183 = x2038*x503 + x2140*x473 - x2181*x489 - 2*x2182;
double x2184 = x1066*x2040;
double x2185 = x1018*x2142;
double x2186 = p4_b_dt*x1090;
double x2187 = 4*x2186;
double x2188 = L*p3_b_dot_dt;
double x2189 = x1090*x2188;
double x2190 = p3_i_dot*x2175;
double x2191 = x2190*x41;
double x2192 = p4_i_dot*x2088;
double x2193 = p4_b_dot_dt*x289;
double x2194 = p3_i_dot*x2193;
double x2195 = p4_i_dot*x2193;
double x2196 = 4*x2195;
double x2197 = x2147*x324;
double x2198 = x2157*x540;
double x2199 = x2052*x540;
double x2200 = 3*x2199;
double x2201 = p4_b_dot_dt*x1039;
double x2202 = x1858*x2201;
double x2203 = x2064*x482;
double x2204 = x1026*x70;
double x2205 = p4_b_dot_dt*x2204;
double x2206 = L*x488;
double x2207 = x2042*x2206;
double x2208 = p3_b_dt*x1075;
double x2209 = L*x2144;
double x2210 = x2209*x458;
double x2211 = 4*x482;
double x2212 = x2164*x2211;
double x2213 = x2038*x489 + x2140*x459 + x2145*x321 + x2146*x321 - 4*x2159 - x2182 + x2203 + x2205 - x2207 - 3*x2208 - 3*x2210 + x2212;
double x2214 = 18*x2151;
double x2215 = 18*x2153;
double x2216 = x2148*x327;
double x2217 = 16*x2177;
double x2218 = 12*x2195;
double x2219 = p3_b_dot_dt*x1090;
double x2220 = x129*x2219;
double x2221 = 6*x2191;
double x2222 = 6*x2192;
double x2223 = 6*x2194;
double x2224 = x129*x2046;
double x2225 = x129*x2048;
double x2226 = 16*x2199;
double x2227 = x2201*x327;
double x2228 = 18*x2159;
double x2229 = 18*x2186;
double x2230 = x2228 - x2229;
double x2231 = x2038*x488;
double x2232 = x2140*x458;
double x2233 = -x129*x2043 - x129*x2044 + x2145*x327 + x2146*x327 + 12*x2165 + x2181*x503 + 6*x2182 + 6*x2203 + 6*x2205 - 16*x2208 - 16*x2210 - 18*x2231 - 18*x2232;
double x2234 = x2071 + x2072 - 4*x2182 - 2*x2203 - 2*x2205 - 4*x2207 + 4*x2208 + 4*x2210 + 8*x2231 + 8*x2232;
double x2235 = -8*x2159;
double x2236 = 8*x2186;
double x2237 = -x2166;
double x2238 = x2169 + x2237;
double x2239 = x2235 + x2236 + x2238;
double x2240 = p4_b_dot_dt*x158;
double x2241 = -x2074 - x2075;
double x2242 = -p4_i_dot*x2135 - x1039*x2240 + x158*x2219 + x2067*x2168 + x2068*x2167 - 8*x2151 - 8*x2153 + 4*x2191 + x2241;
double x2243 = x154*x2043 + x154*x2044 - x2145*x286 - x2146*x286 - 5*x2182 - 3*x2203 - 3*x2205 - 5*x2207 + 7*x2208 + 7*x2210 - x2212 + 12*x2231 + 12*x2232;
double x2244 = -x1039*x2161 - x1090*x2061 - x154*x2046 - x154*x2048 + x154*x2219 + x2148*x286 + 7*x2177 + 5*x2191 + 3*x2192 + 3*x2194 + x2196 - 7*x2199 - x2201*x286;
double x2245 = p5_b_dt*x4;
double x2246 = x2245*x519;
double x2247 = p5_b_dt*x57;
double x2248 = x1119*x2247;
double x2249 = p5_b_dot_dt*x4;
double x2250 = x2249*x518;
double x2251 = p5_b_dt*x1127;
double x2252 = p5_b_dot_dt*p5_i;
double x2253 = x2252*x41;
double x2254 = p5_b_dt*p5_i_dot;
double x2255 = x2254*x41;
double x2256 = x2253 + x2255;
double x2257 = p4_b_dt*x1140;
double x2258 = 6*x2257;
double x2259 = p5_b_dt*x41;
double x2260 = p4_i*x2259;
double x2261 = 6*x2260;
double x2262 = L*x2167;
double x2263 = x1119*x2262;
double x2264 = x0*x2247;
double x2265 = x2264*x540;
double x2266 = x2245*x518;
double x2267 = -12*x2266;
double x2268 = 12*p5_b_dt;
double x2269 = x1140*x2268;
double x2270 = x2267 + x2269;
double x2271 = x2249*x70;
double x2272 = x2271*x512;
double x2273 = 2*x2272;
double x2274 = p5_b_dot_dt*x57;
double x2275 = p5_i_dot*x313;
double x2276 = x2274*x2275;
double x2277 = x2273 - x2276;
double x2278 = x158*x2250;
double x2279 = x158*x2251;
double x2280 = -x2278 - x2279;
double x2281 = x158*x2253;
double x2282 = x158*x2255;
double x2283 = x2281 + x2282;
double x2284 = x2280 + x2283;
double x2285 = p5_b_dt*x1075;
double x2286 = x2140*x533 - x2209*x519 + x2245*x503 - 2*x2285;
double x2287 = x1119*x2142;
double x2288 = x1066*x2247;
double x2289 = p5_b_dt*x1140;
double x2290 = 4*x2289;
double x2291 = L*p4_b_dot_dt;
double x2292 = x1140*x2291;
double x2293 = x2259*x540;
double x2294 = p5_i_dot*x2193;
double x2295 = p5_b_dot_dt*x289;
double x2296 = p4_i_dot*x2295;
double x2297 = p5_i_dot*x2295;
double x2298 = 4*x2297;
double x2299 = x2252*x324;
double x2300 = x2264*x570;
double x2301 = 3*p5_i_dot;
double x2302 = x2176*x2301;
double x2303 = p5_b_dot_dt*x1090;
double x2304 = x1858*x2303;
double x2305 = x2164*x512;
double x2306 = x1074*x70;
double x2307 = p5_b_dot_dt*x2306;
double x2308 = x2209*x518;
double x2309 = x1127*x2175;
double x2310 = x2206*x2249;
double x2311 = 4*x2272;
double x2312 = x2140*x519 + x2245*x489 + x2250*x321 + x2251*x321 - 4*x2266 - x2285 + x2305 + x2307 - x2308 - 3*x2309 - 3*x2310 + x2311;
double x2313 = 18*x2257;
double x2314 = 18*x2260;
double x2315 = x2253*x327;
double x2316 = x2255*x327;
double x2317 = 12*x2297;
double x2318 = p4_b_dot_dt*x1140;
double x2319 = x129*x2318;
double x2320 = p4_i_dot*x2259;
double x2321 = x129*x2320;
double x2322 = 6*x2294;
double x2323 = 6*x2296;
double x2324 = x129*x2148;
double x2325 = 6*x2177;
double x2326 = p5_i_dot*x2176;
double x2327 = 16*x2326;
double x2328 = x2303*x327;
double x2329 = 18*x2266;
double x2330 = 18*x2289;
double x2331 = x2329 - x2330;
double x2332 = x2140*x518;
double x2333 = x2245*x488;
double x2334 = -x129*x2145 - x129*x2146 + x2209*x533 + x2250*x327 + x2251*x327 + 12*x2272 + 6*x2285 + 6*x2305 + 6*x2307 - 16*x2309 - 16*x2310 - 18*x2332 - 18*x2333;
double x2335 = x2171 + x2172 - 4*x2285 - 2*x2305 - 2*x2307 - 4*x2308 + 4*x2309 + 4*x2310 + 8*x2332 + 8*x2333;
double x2336 = -8*x2266;
double x2337 = 8*x2289;
double x2338 = -x2273;
double x2339 = x2276 + x2338;
double x2340 = x2336 + x2337 + x2339;
double x2341 = x158*x2259;
double x2342 = -x2174 - x2178;
double x2343 = p4_i_dot*x2341 + x1140*x2240 - x158*x2303 + x2167*x2275 + x2168*x2274 - 8*x2257 - 8*x2260 - 4*x2326 + x2342;
double x2344 = x154*x2145 + x154*x2146 - x2250*x286 - x2251*x286 - 5*x2285 - 3*x2305 - 3*x2307 - 5*x2308 + 7*x2309 + 7*x2310 - x2311 + 12*x2332 + 12*x2333;
double x2345 = -x1090*x2268 - x1140*x2161 - x154*x2148 + x154*x2318 + x154*x2320 - 5*x2177 + x2253*x286 + x2255*x286 + 3*x2294 + 3*x2296 + x2298 - x2303*x286 - 7*x2326;
double x2346 = p6_b_dt*x4;
double x2347 = x2346*x549;
double x2348 = p6_b_dt*x57;
double x2349 = x1167*x2348;
double x2350 = p6_b_dot_dt*x4;
double x2351 = x2350*x548;
double x2352 = p6_b_dt*x1175;
double x2353 = p6_b_dot_dt*p6_i;
double x2354 = x2353*x41;
double x2355 = p6_b_dt*p6_i_dot;
double x2356 = x2354 + x2355*x41;
double x2357 = p5_b_dt*x1191;
double x2358 = 6*x2357;
double x2359 = p6_b_dt*x1140;
double x2360 = 6*x2359;
double x2361 = L*x2274;
double x2362 = x1167*x2361;
double x2363 = x0*x2348;
double x2364 = x2363*x570;
double x2365 = x2346*x548;
double x2366 = -12*x2365;
double x2367 = 12*p6_b_dt;
double x2368 = x1191*x2367;
double x2369 = x2366 + x2368;
double x2370 = x2350*x70;
double x2371 = x2370*x542;
double x2372 = 2*x2371;
double x2373 = p6_b_dot_dt*x57;
double x2374 = p6_i_dot*x313;
double x2375 = x2373*x2374;
double x2376 = x2372 - x2375;
double x2377 = x158*x2351;
double x2378 = x158*x2352;
double x2379 = -x2377 - x2378;
double x2380 = x158*x2354;
double x2381 = L*p6_b_dt;
double x2382 = x2381*x41;
double x2383 = p6_i_dot*x2382;
double x2384 = 4*x2383;
double x2385 = x2380 + x2384;
double x2386 = x2379 + x2385;
double x2387 = L*x2249;
double x2388 = x1127*x2381;
double x2389 = x2245*x563 + x2346*x533 - x2387*x549 - 2*x2388;
double x2390 = x1167*x2247;
double x2391 = x1119*x2348;
double x2392 = p6_b_dt*x1191;
double x2393 = 4*x2392;
double x2394 = L*p5_b_dot_dt;
double x2395 = x1191*x2394;
double x2396 = p5_i_dot*x2381;
double x2397 = x2396*x41;
double x2398 = p6_i_dot*x2295;
double x2399 = p6_b_dot_dt*x289;
double x2400 = p5_i_dot*x2399;
double x2401 = p6_i_dot*x2399;
double x2402 = 4*x2401;
double x2403 = x2353*x324;
double x2404 = x2363*x600;
double x2405 = x2259*x600;
double x2406 = 3*x2405;
double x2407 = p6_b_dot_dt*x1140;
double x2408 = x1858*x2407;
double x2409 = x2271*x542;
double x2410 = x1127*x70;
double x2411 = p6_b_dot_dt*x2410;
double x2412 = L*x548;
double x2413 = x2249*x2412;
double x2414 = p5_b_dt*x1176;
double x2415 = L*x2350;
double x2416 = x2415*x518;
double x2417 = 4*x2371;
double x2418 = x2245*x549 + x2346*x519 + x2351*x321 + x2352*x321 - 4*x2365 - x2388 + x2409 + x2411 - x2413 - 3*x2414 - 3*x2416 + x2417;
double x2419 = 18*x2357;
double x2420 = 18*x2359;
double x2421 = x2354*x327;
double x2422 = 16*x2383;
double x2423 = 12*x2401;
double x2424 = p5_b_dot_dt*x1191;
double x2425 = x129*x2424;
double x2426 = 6*x2397;
double x2427 = 6*x2398;
double x2428 = 6*x2400;
double x2429 = x129*x2253;
double x2430 = x129*x2255;
double x2431 = 16*x2405;
double x2432 = x2407*x327;
double x2433 = 18*x2365;
double x2434 = 18*x2392;
double x2435 = x2433 - x2434;
double x2436 = x2245*x548;
double x2437 = x2346*x518;
double x2438 = -x129*x2250 - x129*x2251 + x2351*x327 + x2352*x327 + 12*x2371 + x2387*x563 + 6*x2388 + 6*x2409 + 6*x2411 - 16*x2414 - 16*x2416 - 18*x2436 - 18*x2437;
double x2439 = x2278 + x2279 - 4*x2388 - 2*x2409 - 2*x2411 - 4*x2413 + 4*x2414 + 4*x2416 + 8*x2436 + 8*x2437;
double x2440 = -8*x2365;
double x2441 = 8*x2392;
double x2442 = -x2372;
double x2443 = x2375 + x2442;
double x2444 = x2440 + x2441 + x2443;
double x2445 = -x2281 - x2282;
double x2446 = -p6_i_dot*x2341 - x158*x2407 + x158*x2424 + x2274*x2374 + x2275*x2373 - 8*x2357 - 8*x2359 + 4*x2397 + x2445;
double x2447 = x154*x2250 + x154*x2251 - x2351*x286 - x2352*x286 - 5*x2388 - 3*x2409 - 3*x2411 - 5*x2413 + 7*x2414 + 7*x2416 - x2417 + 12*x2436 + 12*x2437;
double x2448 = -x1140*x2367 - x1191*x2268 - x154*x2253 - x154*x2255 + x154*x2424 + x2354*x286 + 7*x2383 + 5*x2397 + 3*x2398 + 3*x2400 + x2402 - 7*x2405 - x2407*x286;
double x2449 = p7_b_dt*x4;
double x2450 = x2449*x579;
double x2451 = p7_b_dt*x57;
double x2452 = x1220*x2451;
double x2453 = p7_b_dot_dt*x4;
double x2454 = x2453*x578;
double x2455 = p7_b_dt*x1228;
double x2456 = p7_b_dot_dt*p7_i;
double x2457 = x2456*x41;
double x2458 = p7_b_dt*p7_i_dot;
double x2459 = x2458*x41;
double x2460 = x2457 + x2459;
double x2461 = p6_b_dt*x1241;
double x2462 = 6*x2461;
double x2463 = p7_b_dt*x41;
double x2464 = p6_i*x2463;
double x2465 = 6*x2464;
double x2466 = L*x2373;
double x2467 = x1220*x2466;
double x2468 = x0*x2451;
double x2469 = x2468*x600;
double x2470 = x2449*x578;
double x2471 = -12*x2470;
double x2472 = 12*p7_b_dt;
double x2473 = x1241*x2472;
double x2474 = x2471 + x2473;
double x2475 = x2453*x70;
double x2476 = x2475*x572;
double x2477 = 2*x2476;
double x2478 = p7_b_dot_dt*x57;
double x2479 = p7_i_dot*x313;
double x2480 = x2478*x2479;
double x2481 = x2477 - x2480;
double x2482 = x158*x2454;
double x2483 = x158*x2455;
double x2484 = -x2482 - x2483;
double x2485 = x158*x2457;
double x2486 = x158*x2459;
double x2487 = x2485 + x2486;
double x2488 = x2484 + x2487;
double x2489 = p7_b_dt*x1176;
double x2490 = x2346*x593 - x2415*x579 + x2449*x563 - 2*x2489;
double x2491 = x1220*x2348;
double x2492 = x1167*x2451;
double x2493 = p7_b_dt*x1241;
double x2494 = 4*x2493;
double x2495 = L*p6_b_dot_dt;
double x2496 = x1241*x2495;
double x2497 = x2463*x600;
double x2498 = p7_i_dot*x2399;
double x2499 = p7_b_dot_dt*x289;
double x2500 = p6_i_dot*x2499;
double x2501 = p7_i_dot*x2499;
double x2502 = 4*x2501;
double x2503 = x2456*x324;
double x2504 = x2468*x630;
double x2505 = 3*p7_i_dot;
double x2506 = x2382*x2505;
double x2507 = p7_b_dot_dt*x1191;
double x2508 = x1858*x2507;
double x2509 = x2370*x572;
double x2510 = x1175*x70;
double x2511 = p7_b_dot_dt*x2510;
double x2512 = x2415*x578;
double x2513 = x1228*x2381;
double x2514 = x2412*x2453;
double x2515 = 4*x2476;
double x2516 = x2346*x579 + x2449*x549 + x2454*x321 + x2455*x321 - 4*x2470 - x2489 + x2509 + x2511 - x2512 - 3*x2513 - 3*x2514 + x2515;
double x2517 = 18*x2461;
double x2518 = 18*x2464;
double x2519 = x2457*x327;
double x2520 = x2459*x327;
double x2521 = 12*x2501;
double x2522 = p6_b_dot_dt*x1241;
double x2523 = x129*x2522;
double x2524 = p6_i_dot*x2463;
double x2525 = x129*x2524;
double x2526 = 6*x2498;
double x2527 = 6*x2500;
double x2528 = x129*x2354;
double x2529 = 6*x2383;
double x2530 = p7_i_dot*x2382;
double x2531 = 16*x2530;
double x2532 = x2507*x327;
double x2533 = 18*x2470;
double x2534 = 18*x2493;
double x2535 = x2533 - x2534;
double x2536 = x2346*x578;
double x2537 = x2449*x548;
double x2538 = -x129*x2351 - x129*x2352 + x2415*x593 + x2454*x327 + x2455*x327 + 12*x2476 + 6*x2489 + 6*x2509 + 6*x2511 - 16*x2513 - 16*x2514 - 18*x2536 - 18*x2537;
double x2539 = x2377 + x2378 - 4*x2489 - 2*x2509 - 2*x2511 - 4*x2512 + 4*x2513 + 4*x2514 + 8*x2536 + 8*x2537;
double x2540 = -8*x2470;
double x2541 = 8*x2493;
double x2542 = -x2477;
double x2543 = x2480 + x2542;
double x2544 = x2540 + x2541 + x2543;
double x2545 = x158*x2463;
double x2546 = -x2380 - x2384;
double x2547 = p6_i_dot*x2545 - x158*x2507 + x158*x2522 + x2373*x2479 + x2374*x2478 - 8*x2461 - 8*x2464 - 4*x2530 + x2546;
double x2548 = x154*x2351 + x154*x2352 - x2454*x286 - x2455*x286 - 5*x2489 - 3*x2509 - 3*x2511 - 5*x2512 + 7*x2513 + 7*x2514 - x2515 + 12*x2536 + 12*x2537;
double x2549 = p7_b_dot_dt*x286;
double x2550 = -x1191*x2472 - x1191*x2549 - x1241*x2367 - x154*x2354 + x154*x2522 + x154*x2524 - 5*x2383 + x2457*x286 + x2459*x286 + 3*x2498 + 3*x2500 + x2502 - 7*x2530;
double x2551 = p8_b_dt*x4;
double x2552 = x2551*x609;
double x2553 = p8_b_dt*x57;
double x2554 = x1268*x2553;
double x2555 = p8_b_dot_dt*x4;
double x2556 = x2555*x608;
double x2557 = p8_b_dt*x1276;
double x2558 = p8_b_dot_dt*p8_i;
double x2559 = x2558*x41;
double x2560 = p8_b_dt*p8_i_dot;
double x2561 = x2559 + x2560*x41;
double x2562 = p7_b_dt*x1290;
double x2563 = 6*x2562;
double x2564 = p8_b_dt*x1241;
double x2565 = 6*x2564;
double x2566 = L*x2478;
double x2567 = x1268*x2566;
double x2568 = x0*x2553;
double x2569 = x2568*x630;
double x2570 = x2551*x608;
double x2571 = -12*x2570;
double x2572 = 12*p8_b_dt;
double x2573 = x1290*x2572;
double x2574 = x2571 + x2573;
double x2575 = x602*x70;
double x2576 = x2555*x2575;
double x2577 = 2*x2576;
double x2578 = p8_b_dot_dt*x57;
double x2579 = p8_i_dot*x313;
double x2580 = x2578*x2579;
double x2581 = x2577 - x2580;
double x2582 = x158*x2556;
double x2583 = x158*x2557;
double x2584 = -x2582 - x2583;
double x2585 = x158*x2559;
double x2586 = L*p8_b_dt;
double x2587 = x2586*x41;
double x2588 = p8_i_dot*x2587;
double x2589 = 4*x2588;
double x2590 = x2585 + x2589;
double x2591 = x2584 + x2590;
double x2592 = L*x2453;
double x2593 = x1228*x2586;
double x2594 = x2449*x623 + x2551*x593 - x2592*x609 - 2*x2593;
double x2595 = x1268*x2451;
double x2596 = x1220*x2553;
double x2597 = p8_b_dt*x1290;
double x2598 = 4*x2597;
double x2599 = L*p7_b_dot_dt;
double x2600 = x1290*x2599;
double x2601 = p7_i_dot*x2586;
double x2602 = x2601*x41;
double x2603 = p8_i_dot*x2499;
double x2604 = p8_b_dot_dt*x289;
double x2605 = p7_i_dot*x2604;
double x2606 = p8_i_dot*x2604;
double x2607 = 4*x2606;
double x2608 = x2558*x324;
double x2609 = x2568*x634;
double x2610 = x2463*x634;
double x2611 = 3*x2610;
double x2612 = p8_b_dot_dt*x1241;
double x2613 = x1858*x2612;
double x2614 = x2475*x602;
double x2615 = x1228*x70;
double x2616 = p8_b_dot_dt*x2615;
double x2617 = L*x608;
double x2618 = x2453*x2617;
double x2619 = p7_b_dt*x1276;
double x2620 = L*x578;
double x2621 = 3*x2620;
double x2622 = 4*x2576;
double x2623 = -x1858*x2619 + x2449*x609 + x2551*x579 - x2555*x2621 + x2556*x321 + x2557*x321 - 4*x2570 - x2593 + x2614 + x2616 - x2618 + x2622;
double x2624 = 18*x2562;
double x2625 = 18*x2564;
double x2626 = x2559*x327;
double x2627 = 16*x2588;
double x2628 = 12*x2606;
double x2629 = p7_b_dot_dt*x1290;
double x2630 = x129*x2629;
double x2631 = 6*x2602;
double x2632 = 6*x2603;
double x2633 = 6*x2605;
double x2634 = x129*x2457;
double x2635 = x129*x2459;
double x2636 = 16*x2610;
double x2637 = x2612*x327;
double x2638 = 18*x2570;
double x2639 = 18*x2597;
double x2640 = x2638 - x2639;
double x2641 = x2449*x608;
double x2642 = x2551*x578;
double x2643 = x2555*x578;
double x2644 = -x129*x2454 - x129*x2455 + x2556*x327 + x2557*x327 + 12*x2576 + x2592*x623 + 6*x2593 + 6*x2614 + 6*x2616 - x2619*x327 - 18*x2641 - 18*x2642 - x2643*x327;
double x2645 = x158*x2619 + x158*x2643 + x2482 + x2483 - 4*x2593 - 2*x2614 - 2*x2616 - 4*x2618 + 8*x2641 + 8*x2642;
double x2646 = -8*x2570;
double x2647 = 8*x2597;
double x2648 = -x2577;
double x2649 = x2580 + x2648;
double x2650 = x2646 + x2647 + x2649;
double x2651 = -x2485 - x2486;
double x2652 = -p8_i_dot*x2545 - x158*x2612 + x158*x2629 + x2478*x2579 + x2479*x2578 - 8*x2562 - 8*x2564 + 4*x2602 + x2651;
double x2653 = x154*x2454 + x154*x2455 - x2556*x286 - x2557*x286 - 5*x2593 - 3*x2614 - 3*x2616 - 5*x2618 + x2619*x286 - x2622 + 12*x2641 + 12*x2642 + x2643*x286;
double x2654 = -x1241*x2572 - x1290*x2472 - x154*x2457 - x154*x2459 + x154*x2629 + x2559*x286 + 7*x2588 + 5*x2602 + 3*x2603 + 3*x2605 + x2607 - 7*x2610 - x2612*x286;
double x2655 = x1821*x391;
double x2656 = x1313*x1851;
double x2657 = p9_b_dt*p9_i_dot;
double x2658 = x1882 + x2657*x41;
double x2659 = p8_b_dt*x917;
double x2660 = 6*x2659;
double x2661 = p9_b_dt*x1290;
double x2662 = 6*x2661;
double x2663 = L*x2578;
double x2664 = x1313*x2663;
double x2665 = x0*x1851;
double x2666 = x2665*x634;
double x2667 = -x1898;
double x2668 = x1869 + x2667;
double x2669 = L*x2555;
double x2670 = x1276*x1847;
double x2671 = x1821*x623 + x2551*x414 - x2669*x391 - 2*x2670;
double x2672 = x1313*x2553;
double x2673 = x1268*x1851;
double x2674 = 4*x1904;
double x2675 = L*p8_b_dot_dt;
double x2676 = x2675*x917;
double x2677 = p8_i_dot*x1847;
double x2678 = x2677*x41;
double x2679 = p9_i_dot*x2604;
double x2680 = p8_i_dot*x1855;
double x2681 = p9_i_dot*x1855;
double x2682 = 4*x2681;
double x2683 = x1881*x324;
double x2684 = x2665*x421;
double x2685 = 3*p9_i_dot;
double x2686 = x2587*x2685;
double x2687 = p9_b_dot_dt*x1290;
double x2688 = x1858*x2687;
double x2689 = x1840*x2555;
double x2690 = x1276*x1842;
double x2691 = x1845*x2555;
double x2692 = p8_b_dt*x913;
double x2693 = x1826*x2617;
double x2694 = 4*x1890;
double x2695 = x1821*x609 - x1821*x933 + x1899*x321 + x1900*x321 + x2551*x391 - x2670 + x2689 + x2690 - x2691 - 3*x2692 - 3*x2693 + x2694;
double x2696 = 18*x2659;
double x2697 = 18*x2661;
double x2698 = x1882*x327;
double x2699 = 16*x1884;
double x2700 = 12*x2681;
double x2701 = p8_b_dot_dt*x917;
double x2702 = x129*x2701;
double x2703 = 6*x2678;
double x2704 = 6*x2679;
double x2705 = 6*x2680;
double x2706 = x129*x2559;
double x2707 = 6*x2588;
double x2708 = p9_i_dot*x2587;
double x2709 = 16*x2708;
double x2710 = x2687*x327;
double x2711 = x1821*x608;
double x2712 = -x129*x2556 - x129*x2557 + 12*x1890 + x1899*x327 + x1900*x327 - x1927*x2551 + x1928 + x2669*x414 + 6*x2670 + 6*x2689 + 6*x2690 - 16*x2692 - 16*x2693 - 18*x2711;
double x2713 = x1921*x2551 - x1922 - x1923*x2555 + x2582 + x2583 - 4*x2670 - 2*x2689 - 2*x2690 + 4*x2692 + 4*x2693 + 8*x2711;
double x2714 = -x2585 - x2589;
double x2715 = p8_i_dot*x1893 - x158*x2687 + x158*x2701 + x1905 + x1910*x2578 - 8*x2659 - 8*x2661 + 4*x2678 - 4*x2708 + x2714;
double x2716 = x154*x2556 + x154*x2557 + x1896*x2551 - x1899*x286 - x1900*x286 - 5*x2670 - 3*x2689 - 3*x2690 - 5*x2691 + 7*x2692 + 7*x2693 - x2694 + 12*x2711;
double x2717 = -x1290*x1868 - x154*x2559 + x154*x2701 + x1882*x286 + 7*x1884 - x2572*x917 - 5*x2588 + 5*x2678 + 3*x2679 + 3*x2680 + x2682 - x2687*x286 - 7*x2708;
double x2718 = x38*x74;
double x2719 = q1_b_dt*x57;
double x2720 = x2719*x32;
double x2721 = x128 + x132;
double x2722 = q2_i*x124;
double x2723 = 6*x2722;
double x2724 = q2_b_dt*x42;
double x2725 = 6*x2724;
double x2726 = x1362*x2719;
double x2727 = L*q2_b_dot_dt;
double x2728 = x2727*x57;
double x2729 = x2728*x32;
double x2730 = x164 + x165;
double x2731 = q1_b_dt*x1344;
double x2732 = q2_b_dt*x38;
double x2733 = x2727*x38;
double x2734 = -x1352*x74 - x159 - x160 + 6*x2731 + 6*x2732 - 2*x2733;
double x2735 = q1_b_dt*x1352;
double x2736 = x1351*x70;
double x2737 = q1_b_dot_dt*x2736;
double x2738 = q2_b_dot_dt*x70;
double x2739 = x2738*x52;
double x2740 = 4*x135;
double x2741 = L*q1_b_dot_dt;
double x2742 = x1344*x2741;
double x2743 = L*q2_b_dt;
double x2744 = x2743*x52;
double x2745 = -x1344*x74 + 4*x142 - x144*x321 - x145*x321 - 2*x2732 + x2733 + x2735 - x2737 - x2739 - x2740 + 3*x2742 + 3*x2744;
double x2746 = q2_b_dt*x57;
double x2747 = q1_b_dot_dt*q2_i_dot;
double x2748 = x2747*x289;
double x2749 = q1_i_dot*x2738;
double x2750 = x2749*x41;
double x2751 = x2727*x42;
double x2752 = x1357*x2741;
double x2753 = q1_i_dot*x41;
double x2754 = 3*x2743;
double x2755 = q1_b_dot_dt*q1_i_dot;
double x2756 = x2755*x290;
double x2757 = -x124*x663 - 4*x125 + x127*x324 + x1367*x2719 + x2719*x60 + x2746*x32 + x2748 + x2750 - x2751 - 3*x2752 - x2753*x2754 + x2756;
double x2758 = -x152;
double x2759 = 12*x2722;
double x2760 = q2_b_dt*x151;
double x2761 = x2760*x41;
double x2762 = x128*x286;
double x2763 = x132*x286;
double x2764 = q2_i_dot*x154;
double x2765 = x124*x2764;
double x2766 = 5*x2751;
double x2767 = 3*x2748;
double x2768 = 3*x2750;
double x2769 = x1357*x2727;
double x2770 = 5*x2769;
double x2771 = q2_i_dot*x41;
double x2772 = x2743*x2771;
double x2773 = 5*x2772;
double x2774 = 7*x2752;
double x2775 = 7*x2743;
double x2776 = x2753*x2775;
double x2777 = q2_b_dot_dt*x2736;
double x2778 = 2*x2777;
double x2779 = x2738*x57;
double x2780 = x0*x2779;
double x2781 = q2_i_dot*x2780;
double x2782 = x2778 - x2781;
double x2783 = 12*x1344;
double x2784 = q2_b_dot_dt*x1344;
double x2785 = q2_b_dt*x1351;
double x2786 = -q1_b_dt*x2783 + x144*x286 + x145*x286 + x149 - x154*x2784 - x154*x2785 - 12*x2732 + 5*x2733 + 5*x2735 + 3*x2737 + 3*x2739 + x2740 - 7*x2742 - 7*x2744;
double x2787 = q2_b_dt*x2783;
double x2788 = 12*q2_b_dt;
double x2789 = x1357*x2788;
double x2790 = -x2789;
double x2791 = x2787 + x2790;
double x2792 = 8*x2722;
double x2793 = 8*x2724;
double x2794 = q2_i_dot*x158;
double x2795 = x124*x2794;
double x2796 = 4*x2751;
double x2797 = q2_i_dot*x70;
double x2798 = x0*x2797;
double x2799 = x137*x2798;
double x2800 = x0*x57;
double x2801 = x2749*x2800;
double x2802 = q1_b_dot_dt*x158;
double x2803 = x1357*x2802;
double x2804 = x2743*x2753;
double x2805 = 4*x2804;
double x2806 = 4*x2769;
double x2807 = 4*q2_i_dot;
double x2808 = x2807*x41;
double x2809 = x2743*x2808;
double x2810 = x2806 + x2809;
double x2811 = x158*x2784;
double x2812 = x158*x2785;
double x2813 = -x2811 - x2812;
double x2814 = x2782 + x2810 + x2813;
double x2815 = -x1344*x2802 + x157 + x161 - 8*x2731 - 8*x2732 + 4*x2733 + 4*x2735 + 2*x2737 + 2*x2739 - 4*x2744;
double x2816 = q2_b_dt*x1344;
double x2817 = 8*x2816;
double x2818 = q2_b_dt*x1357;
double x2819 = 8*x2818;
double x2820 = x2817 - x2819;
double x2821 = 18*x1344;
double x2822 = -q2_b_dt*x2821;
double x2823 = 18*x2818;
double x2824 = x2822 + x2823;
double x2825 = q1_b_dt*x2821 + x129*x2784 + x129*x2785 - 12*x135 - x143 - x144*x327 - x145*x327 + 18*x2732 - 6*x2733 - 6*x2735 - 6*x2737 - 6*x2739 + 16*x2742 + 16*x2744 - x2778;
double x2826 = q2_i_dot*x129;
double x2827 = x124*x2826 + x126 + x128*x327 + x132*x327 - 18*x2722 - 18*x2724 + 6*x2748 + 6*x2750 + 6*x2751 - 16*x2752 + x2755*x330 - 6*x2769 - 6*x2772 + x2781 - 16*x2804;
double x2828 = 2*x2816;
double x2829 = x1367*x2746;
double x2830 = q2_b_dot_dt*q2_i;
double x2831 = q2_b_dt*q2_i_dot;
double x2832 = x2830*x41 + x2831*x41;
double x2833 = q2_b_dt*x1407;
double x2834 = 6*x2833;
double x2835 = q3_b_dt*x41;
double x2836 = q2_i*x2835;
double x2837 = 6*x2836;
double x2838 = x1415*x2746;
double x2839 = L*q3_b_dot_dt;
double x2840 = x2839*x57;
double x2841 = x1367*x2840;
double x2842 = q2_b_dt*x1397;
double x2843 = q3_b_dt*x1344;
double x2844 = x1404*x2743;
double x2845 = x1344*x2839;
double x2846 = -x2787 + 6*x2842 + 6*x2843 - 2*x2844 - 2*x2845;
double x2847 = x1440*x2746;
double x2848 = q3_b_dt*x57;
double x2849 = x1367*x2848;
double x2850 = 4*q2_b_dt;
double x2851 = x1357*x2850;
double x2852 = q3_i_dot*x41;
double x2853 = x2743*x2852;
double x2854 = x1357*x2839;
double x2855 = x2738*x2852;
double x2856 = q3_b_dot_dt*x70;
double x2857 = x2856*x41;
double x2858 = q2_i_dot*x2857;
double x2859 = x1367*x2728;
double x2860 = x1362*x2746;
double x2861 = x1407*x2727;
double x2862 = 3*x2861;
double x2863 = 3*x663;
double x2864 = x2835*x2863;
double x2865 = 4*x2777;
double x2866 = x2738*x2808;
double x2867 = x2865 - x2866;
double x2868 = x1404*x2738;
double x2869 = q3_b_dot_dt*x2736;
double x2870 = x1397*x2727;
double x2871 = q3_b_dt*x1352;
double x2872 = x2784*x321 + x2785*x321 - 4*x2816 + 2*x2842 + 2*x2843 - x2844 - x2845 + x2868 + x2869 - 3*x2870 - 3*x2871;
double x2873 = x1407*x2788;
double x2874 = 12*x2836;
double x2875 = 7*x2769;
double x2876 = x2771*x2775;
double x2877 = 5*x2853;
double x2878 = 5*x2854;
double x2879 = 3*x2855;
double x2880 = 3*x2858;
double x2881 = x1407*x2839;
double x2882 = 5*x2881;
double x2883 = q3_b_dt*q3_i_dot;
double x2884 = x2883*x41;
double x2885 = x154*x2884;
double x2886 = 7*x2861;
double x2887 = 7*x663;
double x2888 = x2835*x2887;
double x2889 = x1404*x2856;
double x2890 = 2*x2889;
double x2891 = x2856*x57;
double x2892 = x0*x2891;
double x2893 = q3_i_dot*x2892;
double x2894 = x2890 - x2893;
double x2895 = q3_b_dot_dt*x1397;
double x2896 = q3_b_dt*x1404;
double x2897 = -q3_b_dt*x2783 - x154*x2895 - x154*x2896 + x2784*x286 + x2785*x286 - 12*x2842 + 5*x2844 + 5*x2845 + 3*x2868 + 3*x2869 - 7*x2870 - 7*x2871;
double x2898 = q3_b_dt*x1397;
double x2899 = 12*x2898;
double x2900 = q3_i*x2835;
double x2901 = 12*x2900;
double x2902 = -x2901;
double x2903 = x2899 + x2902;
double x2904 = 8*x2833;
double x2905 = 8*x2836;
double x2906 = 4*x2853;
double x2907 = 4*x2854;
double x2908 = q3_i_dot*x2780;
double x2909 = q2_i_dot*x2892;
double x2910 = 4*q3_i;
double x2911 = x2910*x41;
double x2912 = x2727*x2911;
double x2913 = x2794*x2835;
double x2914 = x2839*x2911;
double x2915 = x158*x2884;
double x2916 = x2914 + x2915;
double x2917 = x158*x2895;
double x2918 = x158*x2896;
double x2919 = -x2917 - x2918;
double x2920 = x2894 + x2916 + x2919;
double x2921 = x2811 + x2812 - 8*x2842 - 8*x2843 + 4*x2844 + 4*x2845 + 2*x2868 + 2*x2869 - 4*x2870 - 4*x2871;
double x2922 = 8*x2898;
double x2923 = 8*x2900;
double x2924 = x2922 - x2923;
double x2925 = -x2806 - x2809;
double x2926 = -18*x2898;
double x2927 = 18*x2900;
double x2928 = x2926 + x2927;
double x2929 = q3_b_dt*x2821 + x129*x2895 + x129*x2896 - 12*x2777 - x2784*x327 - x2785*x327 + 18*x2842 - 6*x2844 - 6*x2845 - 6*x2868 - 6*x2869 + 16*x2870 + 16*x2871 - x2890;
double x2930 = 16*x663;
double x2931 = 12*x2738;
double x2932 = -x129*x2884 + 16*x2769 + x2771*x2931 + 16*x2772 - 18*x2833 - x2835*x2930 - 18*x2836 + 6*x2853 + 6*x2854 + 6*x2855 + 6*x2858 - 16*x2861 - 6*x2881 + x2893;
double x2933 = 2*x2898;
double x2934 = x1440*x2848;
double x2935 = q3_b_dot_dt*q3_i;
double x2936 = x2884 + x2935*x41;
double x2937 = q3_b_dt*x1460;
double x2938 = 6*x2937;
double x2939 = q4_b_dt*x1407;
double x2940 = 6*x2939;
double x2941 = x0*x2848;
double x2942 = x2941*x721;
double x2943 = L*q4_b_dot_dt;
double x2944 = x2943*x57;
double x2945 = x1440*x2944;
double x2946 = q3_b_dt*x1448;
double x2947 = q4_b_dt*x1397;
double x2948 = q3_b_dt*x1457;
double x2949 = x1397*x2943;
double x2950 = -x2899 + 6*x2946 + 6*x2947 - 2*x2948 - 2*x2949;
double x2951 = x1494*x2848;
double x2952 = q4_b_dt*x57;
double x2953 = x1440*x2952;
double x2954 = x2835*x2910;
double x2955 = x2835*x721;
double x2956 = x1407*x2943;
double x2957 = q4_i_dot*x2857;
double x2958 = q4_b_dot_dt*x70;
double x2959 = x2852*x2958;
double x2960 = x1440*x2840;
double x2961 = x2941*x692;
double x2962 = 3*x2839;
double x2963 = x1460*x2962;
double x2964 = L*q4_b_dt;
double x2965 = 3*x2964;
double x2966 = x2852*x2965;
double x2967 = 4*x2889;
double x2968 = 4*q3_i_dot;
double x2969 = x2857*x2968;
double x2970 = x2967 - x2969;
double x2971 = x1456*x70;
double x2972 = q3_b_dot_dt*x2971;
double x2973 = x1404*x2958;
double x2974 = x1448*x2839;
double x2975 = x1404*x2964;
double x2976 = x2895*x321 + x2896*x321 - 4*x2898 + 2*x2946 + 2*x2947 - x2948 - x2949 + x2972 + x2973 - 3*x2974 - 3*x2975;
double x2977 = 12*x2937;
double x2978 = 12*q4_b_dt;
double x2979 = x1407*x2978;
double x2980 = 7*x2839;
double x2981 = x1407*x2980;
double x2982 = x286*x2884;
double x2983 = q4_i_dot*x154;
double x2984 = x2835*x2983;
double x2985 = 5*x2956;
double x2986 = 3*x2957;
double x2987 = 3*x2959;
double x2988 = x1460*x2943;
double x2989 = 5*x2988;
double x2990 = 5*x2964;
double x2991 = q4_i_dot*x41;
double x2992 = x2990*x2991;
double x2993 = x1460*x2980;
double x2994 = 7*x2964;
double x2995 = x2852*x2994;
double x2996 = q4_b_dot_dt*x2971;
double x2997 = 2*x2996;
double x2998 = x2958*x57;
double x2999 = x0*x2998;
double x3000 = q4_i_dot*x2999;
double x3001 = x2997 - x3000;
double x3002 = q4_b_dot_dt*x1448;
double x3003 = q4_b_dt*x1456;
double x3004 = -x154*x3002 - x154*x3003 + x286*x2895 + x286*x2896 - 12*x2946 - 12*x2947 + 5*x2948 + 5*x2949 + 3*x2972 + 3*x2973 - 7*x2974 - 7*x2975;
double x3005 = q4_b_dt*x1448;
double x3006 = 12*x3005;
double x3007 = x1460*x2978;
double x3008 = -x3007;
double x3009 = x3006 + x3008;
double x3010 = 8*x2937;
double x3011 = 8*x2939;
double x3012 = q4_i_dot*x158;
double x3013 = x2835*x3012;
double x3014 = x2911*x2943;
double x3015 = q4_i_dot*x2892;
double x3016 = q3_i_dot*x2999;
double x3017 = 4*x2839;
double x3018 = x1460*x3017;
double x3019 = 4*x2964;
double x3020 = x2852*x3019;
double x3021 = 4*x2943;
double x3022 = x1460*x3021;
double x3023 = 4*q4_i_dot;
double x3024 = x3023*x41;
double x3025 = x2964*x3024;
double x3026 = x3022 + x3025;
double x3027 = x158*x3002;
double x3028 = x158*x3003;
double x3029 = -x3027 - x3028;
double x3030 = x3001 + x3026 + x3029;
double x3031 = x2917 + x2918 - 8*x2946 - 8*x2947 + 4*x2948 + 4*x2949 + 2*x2972 + 2*x2973 - 4*x2974 - 4*x2975;
double x3032 = 8*x3005;
double x3033 = q4_b_dt*x1460;
double x3034 = 8*x3033;
double x3035 = x3032 - x3034;
double x3036 = -x2914 - x2915;
double x3037 = -18*x3005;
double x3038 = 18*x3033;
double x3039 = x3037 + x3038;
double x3040 = x129*x3002 + x129*x3003 - 12*x2889 - x2895*x327 - x2896*x327 + 18*x2946 + 18*x2947 - 6*x2948 - 6*x2949 - 6*x2972 - 6*x2973 + 16*x2974 + 16*x2975 - x2997;
double x3041 = 16*x2839;
double x3042 = 16*x2964;
double x3043 = 6*x2964;
double x3044 = q4_i_dot*x129;
double x3045 = 12*q3_i_dot;
double x3046 = x1407*x3041 - x1460*x3041 + x2835*x3044 - x2852*x3042 + x2857*x3045 + x2884*x327 - 18*x2937 - 18*x2939 + 6*x2956 + 6*x2957 + 6*x2959 - 6*x2988 - x2991*x3043 + x3000;
double x3047 = 2*x3005;
double x3048 = x1494*x2952;
double x3049 = q4_b_dot_dt*q4_i;
double x3050 = q4_b_dt*q4_i_dot;
double x3051 = x3049*x41 + x3050*x41;
double x3052 = q4_b_dt*x1512;
double x3053 = 6*x3052;
double x3054 = q5_b_dt*x41;
double x3055 = q4_i*x3054;
double x3056 = 6*x3055;
double x3057 = x0*x2952;
double x3058 = x3057*x750;
double x3059 = L*q5_b_dot_dt;
double x3060 = x3059*x57;
double x3061 = x1494*x3060;
double x3062 = q4_b_dt*x1502;
double x3063 = q5_b_dt*x1448;
double x3064 = x1509*x2964;
double x3065 = x1448*x3059;
double x3066 = -x3006 + 6*x3062 + 6*x3063 - 2*x3064 - 2*x3065;
double x3067 = x1545*x2952;
double x3068 = q5_b_dt*x57;
double x3069 = x1494*x3068;
double x3070 = 4*q4_b_dt;
double x3071 = x1460*x3070;
double x3072 = q5_i_dot*x41;
double x3073 = x2964*x3072;
double x3074 = x1460*x3059;
double x3075 = x2958*x3072;
double x3076 = q5_b_dot_dt*x289;
double x3077 = q4_i_dot*x3076;
double x3078 = x1494*x2944;
double x3079 = x3057*x721;
double x3080 = x1512*x2943;
double x3081 = 3*x3080;
double x3082 = 3*x721;
double x3083 = x3054*x3082;
double x3084 = 4*x2996;
double x3085 = x2958*x3024;
double x3086 = x3084 - x3085;
double x3087 = x1509*x2958;
double x3088 = q5_b_dot_dt*x2971;
double x3089 = x1502*x2943;
double x3090 = q5_b_dt*x1457;
double x3091 = x3002*x321 + x3003*x321 - 4*x3005 + 2*x3062 + 2*x3063 - x3064 - x3065 + x3087 + x3088 - 3*x3089 - 3*x3090;
double x3092 = x1512*x2978;
double x3093 = 12*x3055;
double x3094 = 7*x2988;
double x3095 = x2991*x2994;
double x3096 = 5*x3073;
double x3097 = 5*x3074;
double x3098 = 3*x3075;
double x3099 = 3*x3077;
double x3100 = 5*x3059;
double x3101 = x1512*x3100;
double x3102 = q5_b_dt*q5_i_dot;
double x3103 = x3102*x41;
double x3104 = x154*x3103;
double x3105 = 7*x3080;
double x3106 = 7*x721;
double x3107 = x3054*x3106;
double x3108 = 2*x70;
double x3109 = q5_b_dot_dt*x1509;
double x3110 = x3108*x3109;
double x3111 = q5_b_dot_dt*x57;
double x3112 = q5_i_dot*x313;
double x3113 = x3111*x3112;
double x3114 = x3110 - x3113;
double x3115 = q5_b_dot_dt*x1502;
double x3116 = q5_b_dt*x1509;
double x3117 = -x154*x3115 - x154*x3116 + x286*x3002 + x286*x3003 - 12*x3062 - 12*x3063 + 5*x3064 + 5*x3065 + 3*x3087 + 3*x3088 - 7*x3089 - 7*x3090;
double x3118 = q5_b_dt*x1502;
double x3119 = 12*x3118;
double x3120 = q5_i*x3054;
double x3121 = 12*x3120;
double x3122 = -x3121;
double x3123 = x3119 + x3122;
double x3124 = 8*x3052;
double x3125 = 8*x3055;
double x3126 = 4*x3073;
double x3127 = 4*x3074;
double x3128 = q5_i_dot*x2999;
double x3129 = q4_i_dot*x313;
double x3130 = x3111*x3129;
double x3131 = 4*q5_i;
double x3132 = x3131*x41;
double x3133 = x2943*x3132;
double x3134 = x3012*x3054;
double x3135 = x3059*x3132;
double x3136 = x158*x3103;
double x3137 = x3135 + x3136;
double x3138 = x158*x3115;
double x3139 = x158*x3116;
double x3140 = -x3138 - x3139;
double x3141 = x3114 + x3137 + x3140;
double x3142 = x3027 + x3028 - 8*x3062 - 8*x3063 + 4*x3064 + 4*x3065 + 2*x3087 + 2*x3088 - 4*x3089 - 4*x3090;
double x3143 = 8*x3118;
double x3144 = 8*x3120;
double x3145 = x3143 - x3144;
double x3146 = -x3022 - x3025;
double x3147 = -18*x3118;
double x3148 = 18*x3120;
double x3149 = x3147 + x3148;
double x3150 = x129*x3115 + x129*x3116 - 12*x2996 - x3002*x327 - x3003*x327 + 18*x3062 + 18*x3063 - 6*x3064 - 6*x3065 - 6*x3087 - 6*x3088 + 16*x3089 + 16*x3090 - x3110;
double x3151 = 16*x721;
double x3152 = x1512*x3059;
double x3153 = 12*x2958;
double x3154 = -x129*x3103 + 16*x2988 + x2991*x3042 + x2991*x3153 - 18*x3052 - x3054*x3151 - 18*x3055 + 6*x3073 + 6*x3074 + 6*x3075 + 6*x3077 - 16*x3080 + x3113 - 6*x3152;
double x3155 = 2*x3118;
double x3156 = x1545*x3068;
double x3157 = q5_b_dot_dt*q5_i;
double x3158 = x3103 + x3157*x41;
double x3159 = q5_b_dt*x1564;
double x3160 = 6*x3159;
double x3161 = q6_b_dt*x1512;
double x3162 = 6*x3161;
double x3163 = x0*x3068;
double x3164 = x3163*x779;
double x3165 = L*q6_b_dot_dt;
double x3166 = x3165*x57;
double x3167 = x1545*x3166;
double x3168 = q5_b_dt*x1553;
double x3169 = q6_b_dt*x1502;
double x3170 = q5_b_dt*x1561;
double x3171 = x1502*x3165;
double x3172 = -x3119 + 6*x3168 + 6*x3169 - 2*x3170 - 2*x3171;
double x3173 = x1598*x3068;
double x3174 = q6_b_dt*x57;
double x3175 = x1545*x3174;
double x3176 = x3054*x3131;
double x3177 = x3054*x779;
double x3178 = x1512*x3165;
double x3179 = q6_i_dot*x3076;
double x3180 = q6_b_dot_dt*x70;
double x3181 = x3072*x3180;
double x3182 = x1545*x3060;
double x3183 = x3163*x750;
double x3184 = x1564*x3059;
double x3185 = 3*x3184;
double x3186 = L*q6_b_dt;
double x3187 = x3072*x3186;
double x3188 = 3*x3187;
double x3189 = x3109*x70;
double x3190 = 4*x3189;
double x3191 = 4*q5_i_dot;
double x3192 = x3076*x3191;
double x3193 = x3190 - x3192;
double x3194 = x1560*x70;
double x3195 = q5_b_dot_dt*x3194;
double x3196 = x1509*x3180;
double x3197 = x1553*x3059;
double x3198 = x1509*x3186;
double x3199 = x3115*x321 + x3116*x321 - 4*x3118 + 2*x3168 + 2*x3169 - x3170 - x3171 + x3195 + x3196 - 3*x3197 - 3*x3198;
double x3200 = 12*x3159;
double x3201 = 12*q6_b_dt;
double x3202 = x1512*x3201;
double x3203 = 7*x3152;
double x3204 = x286*x3103;
double x3205 = q6_i_dot*x154;
double x3206 = x3054*x3205;
double x3207 = 5*x3178;
double x3208 = 3*x3179;
double x3209 = 3*x3181;
double x3210 = x1564*x3165;
double x3211 = 5*x3210;
double x3212 = q6_i_dot*x41;
double x3213 = x3186*x3212;
double x3214 = 5*x3213;
double x3215 = 7*x3184;
double x3216 = 7*x3186;
double x3217 = x3072*x3216;
double x3218 = q6_b_dot_dt*x3194;
double x3219 = 2*x3218;
double x3220 = x3180*x57;
double x3221 = x0*x3220;
double x3222 = q6_i_dot*x3221;
double x3223 = x3219 - x3222;
double x3224 = q6_b_dot_dt*x1553;
double x3225 = q6_b_dt*x1560;
double x3226 = -x154*x3224 - x154*x3225 + x286*x3115 + x286*x3116 - 12*x3168 - 12*x3169 + 5*x3170 + 5*x3171 + 3*x3195 + 3*x3196 - 7*x3197 - 7*x3198;
double x3227 = q6_b_dt*x1553;
double x3228 = 12*x3227;
double x3229 = x1564*x3201;
double x3230 = -x3229;
double x3231 = x3228 + x3230;
double x3232 = 8*x3159;
double x3233 = 8*x3161;
double x3234 = q6_i_dot*x158;
double x3235 = x3054*x3234;
double x3236 = x3132*x3165;
double x3237 = q6_i_dot*x313;
double x3238 = x3111*x3237;
double x3239 = q5_i_dot*x3221;
double x3240 = 4*x3184;
double x3241 = 4*x3186;
double x3242 = x3072*x3241;
double x3243 = 4*x3210;
double x3244 = 4*x3213;
double x3245 = x3243 + x3244;
double x3246 = x158*x3224;
double x3247 = x158*x3225;
double x3248 = -x3246 - x3247;
double x3249 = x3223 + x3245 + x3248;
double x3250 = x3138 + x3139 - 8*x3168 - 8*x3169 + 4*x3170 + 4*x3171 + 2*x3195 + 2*x3196 - 4*x3197 - 4*x3198;
double x3251 = 8*x3227;
double x3252 = q6_b_dt*x1564;
double x3253 = 8*x3252;
double x3254 = x3251 - x3253;
double x3255 = -x3135 - x3136;
double x3256 = -18*x3227;
double x3257 = 18*x3252;
double x3258 = x3256 + x3257;
double x3259 = x129*x3224 + x129*x3225 - x3115*x327 - x3116*x327 + 18*x3168 + 18*x3169 - 6*x3170 - 6*x3171 - 12*x3189 - 6*x3195 - 6*x3196 + 16*x3197 + 16*x3198 - x3219;
double x3260 = 6*x3165;
double x3261 = q6_i_dot*x129;
double x3262 = 12*q5_i_dot;
double x3263 = -x1564*x3260 + x3054*x3261 + x3076*x3262 + x3103*x327 + 16*x3152 - 18*x3159 - 18*x3161 + 6*x3178 + 6*x3179 + 6*x3181 - 16*x3184 - 16*x3187 - 6*x3213 + x3222;
double x3264 = 2*x3227;
double x3265 = x1598*x3174;
double x3266 = q6_b_dot_dt*q6_i;
double x3267 = q6_b_dt*q6_i_dot;
double x3268 = x3266*x41 + x3267*x41;
double x3269 = q6_b_dt*x1616;
double x3270 = 6*x3269;
double x3271 = q7_b_dt*x41;
double x3272 = q6_i*x3271;
double x3273 = 6*x3272;
double x3274 = x0*x3174;
double x3275 = x3274*x808;
double x3276 = L*q7_b_dot_dt;
double x3277 = x3276*x57;
double x3278 = x1598*x3277;
double x3279 = q6_b_dt*x1606;
double x3280 = q7_b_dt*x1553;
double x3281 = x1613*x3186;
double x3282 = x1553*x3276;
double x3283 = -x3228 + 6*x3279 + 6*x3280 - 2*x3281 - 2*x3282;
double x3284 = x1649*x3174;
double x3285 = q7_b_dt*x57;
double x3286 = x1598*x3285;
double x3287 = 4*q6_b_dt;
double x3288 = x1564*x3287;
double x3289 = q7_i_dot*x41;
double x3290 = x3186*x3289;
double x3291 = x1564*x3276;
double x3292 = x3180*x3289;
double x3293 = q7_b_dot_dt*x289;
double x3294 = q6_i_dot*x3293;
double x3295 = x1598*x3166;
double x3296 = x3274*x779;
double x3297 = x1616*x3165;
double x3298 = 3*x3297;
double x3299 = 3*x779;
double x3300 = x3271*x3299;
double x3301 = 4*x3218;
double x3302 = 4*x3180;
double x3303 = x3212*x3302;
double x3304 = x3301 - x3303;
double x3305 = x1613*x3180;
double x3306 = q7_b_dot_dt*x3194;
double x3307 = x1606*x3165;
double x3308 = q7_b_dt*x1561;
double x3309 = x321*x3224 + x321*x3225 - 4*x3227 + 2*x3279 + 2*x3280 - x3281 - x3282 + x3305 + x3306 - 3*x3307 - 3*x3308;
double x3310 = x1616*x3201;
double x3311 = 12*x3272;
double x3312 = 7*x3210;
double x3313 = 7*x3213;
double x3314 = 5*x3290;
double x3315 = 5*x3291;
double x3316 = 3*x3292;
double x3317 = 3*x3294;
double x3318 = x1616*x3276;
double x3319 = 5*x3318;
double x3320 = q7_b_dt*q7_i_dot;
double x3321 = x3320*x41;
double x3322 = x154*x3321;
double x3323 = 7*x3297;
double x3324 = 7*x779;
double x3325 = x3271*x3324;
double x3326 = q7_b_dot_dt*x1613;
double x3327 = x3108*x3326;
double x3328 = q7_b_dot_dt*x57;
double x3329 = q7_i_dot*x313;
double x3330 = x3328*x3329;
double x3331 = x3327 - x3330;
double x3332 = q7_b_dot_dt*x1606;
double x3333 = q7_b_dt*x1613;
double x3334 = -x154*x3332 - x154*x3333 + x286*x3224 + x286*x3225 - 12*x3279 - 12*x3280 + 5*x3281 + 5*x3282 + 3*x3305 + 3*x3306 - 7*x3307 - 7*x3308;
double x3335 = q7_b_dt*x1606;
double x3336 = 12*x3335;
double x3337 = q7_i*x3271;
double x3338 = 12*x3337;
double x3339 = -x3338;
double x3340 = x3336 + x3339;
double x3341 = 8*x3269;
double x3342 = 8*x3272;
double x3343 = 4*x3290;
double x3344 = 4*x3291;
double x3345 = q7_i_dot*x3221;
double x3346 = x3237*x3328;
double x3347 = 4*q7_i;
double x3348 = x3347*x41;
double x3349 = x3165*x3348;
double x3350 = x3234*x3271;
double x3351 = x3276*x3348;
double x3352 = x158*x3321;
double x3353 = x3351 + x3352;
double x3354 = x158*x3332;
double x3355 = x158*x3333;
double x3356 = -x3354 - x3355;
double x3357 = x3331 + x3353 + x3356;
double x3358 = x3246 + x3247 - 8*x3279 - 8*x3280 + 4*x3281 + 4*x3282 + 2*x3305 + 2*x3306 - 4*x3307 - 4*x3308;
double x3359 = 8*x3335;
double x3360 = 8*x3337;
double x3361 = x3359 - x3360;
double x3362 = -x3243 - x3244;
double x3363 = -18*x3335;
double x3364 = 18*x3337;
double x3365 = x3363 + x3364;
double x3366 = x129*x3332 + x129*x3333 - 12*x3218 - x3224*x327 - x3225*x327 + 18*x3279 + 18*x3280 - 6*x3281 - 6*x3282 - 6*x3305 - 6*x3306 + 16*x3307 + 16*x3308 - x3327;
double x3367 = 16*x779;
double x3368 = 12*x3180;
double x3369 = -x129*x3321 + 16*x3210 + x3212*x3368 + 16*x3213 - 18*x3269 - x3271*x3367 - 18*x3272 + 6*x3290 + 6*x3291 + 6*x3292 + 6*x3294 - 16*x3297 - 6*x3318 + x3330;
double x3370 = 2*x3335;
double x3371 = x1649*x3285;
double x3372 = q7_b_dot_dt*q7_i;
double x3373 = x3321 + x3372*x41;
double x3374 = q7_b_dt*x1668;
double x3375 = 6*x3374;
double x3376 = q8_b_dt*x1616;
double x3377 = 6*x3376;
double x3378 = x0*x3285;
double x3379 = x3378*x837;
double x3380 = L*q8_b_dot_dt;
double x3381 = x3380*x57;
double x3382 = x1649*x3381;
double x3383 = q7_b_dt*x1657;
double x3384 = q8_b_dt*x1606;
double x3385 = q7_b_dt*x1665;
double x3386 = x1606*x3380;
double x3387 = -x3336 + 6*x3383 + 6*x3384 - 2*x3385 - 2*x3386;
double x3388 = x1702*x3285;
double x3389 = q8_b_dt*x57;
double x3390 = x1649*x3389;
double x3391 = x3271*x3347;
double x3392 = x3271*x837;
double x3393 = x1616*x3380;
double x3394 = q8_i_dot*x3293;
double x3395 = q8_b_dot_dt*x70;
double x3396 = x3289*x3395;
double x3397 = x1649*x3277;
double x3398 = x3378*x808;
double x3399 = x1668*x3276;
double x3400 = 3*x3399;
double x3401 = L*q8_b_dt;
double x3402 = 3*x3401;
double x3403 = x3289*x3402;
double x3404 = x3326*x70;
double x3405 = 4*x3404;
double x3406 = 4*q7_i_dot;
double x3407 = x3293*x3406;
double x3408 = x3405 - x3407;
double x3409 = x1664*x70;
double x3410 = q7_b_dot_dt*x3409;
double x3411 = x1613*x3395;
double x3412 = x1657*x3276;
double x3413 = x1613*x3401;
double x3414 = x321*x3332 + x321*x3333 - 4*x3335 + 2*x3383 + 2*x3384 - x3385 - x3386 + x3410 + x3411 - 3*x3412 - 3*x3413;
double x3415 = 12*x3374;
double x3416 = 12*q8_b_dt;
double x3417 = x1616*x3416;
double x3418 = 7*x3276;
double x3419 = x1616*x3418;
double x3420 = x286*x3321;
double x3421 = q8_i_dot*x154;
double x3422 = x3271*x3421;
double x3423 = 5*x3393;
double x3424 = 3*x3394;
double x3425 = 3*x3396;
double x3426 = x1668*x3380;
double x3427 = 5*x3426;
double x3428 = q8_i_dot*x41;
double x3429 = x3401*x3428;
double x3430 = 5*x3429;
double x3431 = x1668*x3418;
double x3432 = 7*x3401;
double x3433 = x3289*x3432;
double x3434 = q8_b_dot_dt*x3409;
double x3435 = 2*x3434;
double x3436 = x3395*x57;
double x3437 = x0*x3436;
double x3438 = q8_i_dot*x3437;
double x3439 = x3435 - x3438;
double x3440 = q8_b_dot_dt*x1657;
double x3441 = q8_b_dt*x1664;
double x3442 = -x154*x3440 - x154*x3441 + x286*x3332 + x286*x3333 - 12*x3383 - 12*x3384 + 5*x3385 + 5*x3386 + 3*x3410 + 3*x3411 - 7*x3412 - 7*x3413;
double x3443 = q8_b_dt*x1657;
double x3444 = 12*x3443;
double x3445 = x1668*x3416;
double x3446 = -x3445;
double x3447 = x3444 + x3446;
double x3448 = 8*x3374;
double x3449 = 8*x3376;
double x3450 = q8_i_dot*x158;
double x3451 = x3271*x3450;
double x3452 = x3348*x3380;
double x3453 = q8_i_dot*x313;
double x3454 = x3328*x3453;
double x3455 = q7_i_dot*x3437;
double x3456 = 4*x3399;
double x3457 = 4*x3401;
double x3458 = x3289*x3457;
double x3459 = 4*x3426;
double x3460 = 4*q8_i_dot;
double x3461 = x3460*x41;
double x3462 = x3401*x3461;
double x3463 = x3459 + x3462;
double x3464 = x158*x3440;
double x3465 = x158*x3441;
double x3466 = -x3464 - x3465;
double x3467 = x3439 + x3463 + x3466;
double x3468 = x3354 + x3355 - 8*x3383 - 8*x3384 + 4*x3385 + 4*x3386 + 2*x3410 + 2*x3411 - 4*x3412 - 4*x3413;
double x3469 = 8*x3443;
double x3470 = q8_b_dt*x1668;
double x3471 = 8*x3470;
double x3472 = x3469 - x3471;
double x3473 = -x3351 - x3352;
double x3474 = -18*x3443;
double x3475 = 18*x3470;
double x3476 = x3474 + x3475;
double x3477 = x129*x3440 + x129*x3441 - x327*x3332 - x327*x3333 + 18*x3383 + 18*x3384 - 6*x3385 - 6*x3386 - 12*x3404 - 6*x3410 - 6*x3411 + 16*x3412 + 16*x3413 - x3435;
double x3478 = 16*x3401;
double x3479 = q8_i_dot*x129;
double x3480 = 12*q7_i_dot;
double x3481 = x327*x3321 + x3271*x3479 - x3289*x3478 + x3293*x3480 + 16*x3318 - 18*x3374 - 18*x3376 + 6*x3393 + 6*x3394 + 6*x3396 - 16*x3399 - 6*x3426 - 6*x3429 + x3438;
double x3482 = 2*x3443;
double x3483 = x1702*x3389;
double x3484 = q8_b_dot_dt*q8_i;
double x3485 = q8_b_dt*q8_i_dot;
double x3486 = x3484*x41 + x3485*x41;
double x3487 = q8_b_dt*x1720;
double x3488 = 6*x3487;
double x3489 = q9_b_dt*x41;
double x3490 = q8_i*x3489;
double x3491 = 6*x3490;
double x3492 = x0*x3389;
double x3493 = x3492*x866;
double x3494 = L*q9_b_dot_dt;
double x3495 = x3494*x57;
double x3496 = x1702*x3495;
double x3497 = q8_b_dt*x1710;
double x3498 = q9_b_dt*x1657;
double x3499 = x1717*x3401;
double x3500 = x1657*x3494;
double x3501 = -x3444 + 6*x3497 + 6*x3498 - 2*x3499 - 2*x3500;
double x3502 = x1752*x3389;
double x3503 = q9_b_dt*x57;
double x3504 = x0*x3503;
double x3505 = q8_i*x3504;
double x3506 = 4*q8_b_dt;
double x3507 = x1668*x3506;
double x3508 = q9_i_dot*x41;
double x3509 = x3401*x3508;
double x3510 = x1668*x3494;
double x3511 = x3395*x3508;
double x3512 = q9_b_dot_dt*x289;
double x3513 = q8_i_dot*x3512;
double x3514 = x1702*x3381;
double x3515 = x3492*x837;
double x3516 = x1720*x3380;
double x3517 = 3*x3516;
double x3518 = 3*x837;
double x3519 = x3489*x3518;
double x3520 = 4*x3434;
double x3521 = x3395*x3461;
double x3522 = x3520 - x3521;
double x3523 = x1717*x3395;
double x3524 = q9_b_dot_dt*x3409;
double x3525 = x1710*x3380;
double x3526 = q9_b_dt*x1665;
double x3527 = x321*x3440 + x321*x3441 - 4*x3443 + 2*x3497 + 2*x3498 - x3499 - x3500 + x3523 + x3524 - 3*x3525 - 3*x3526;
double x3528 = x1720*x3416;
double x3529 = 12*x3490;
double x3530 = 7*x3426;
double x3531 = x3428*x3432;
double x3532 = 5*x3509;
double x3533 = 5*x3510;
double x3534 = 3*x3511;
double x3535 = 3*x3513;
double x3536 = x1720*x3494;
double x3537 = 5*x3536;
double x3538 = q9_b_dt*q9_i_dot;
double x3539 = x3538*x41;
double x3540 = x154*x3539;
double x3541 = 7*x3516;
double x3542 = 7*x837;
double x3543 = x3489*x3542;
double x3544 = q9_b_dt*x1710;
double x3545 = 12*x3544;
double x3546 = q9_b_dt*x1720;
double x3547 = 12*x3546;
double x3548 = -x3547;
double x3549 = x3545 + x3548;
double x3550 = q9_b_dot_dt*x1710;
double x3551 = q9_b_dt*x1717;
double x3552 = -x154*x3550 - x154*x3551 + x286*x3440 + x286*x3441 - 12*x3497 - 12*x3498 + 5*x3499 + 5*x3500 + 3*x3523 + 3*x3524 - 7*x3525 - 7*x3526;
double x3553 = q9_b_dot_dt*x1717;
double x3554 = x3108*x3553;
double x3555 = q9_b_dot_dt*x57;
double x3556 = q9_i_dot*x313;
double x3557 = x3555*x3556;
double x3558 = x3554 - x3557;
double x3559 = 8*x3546;
double x3560 = 8*x3487;
double x3561 = 8*x3490;
double x3562 = 4*x3509;
double x3563 = 4*x3510;
double x3564 = q9_i_dot*x3437;
double x3565 = x3453*x3555;
double x3566 = 4*x3516;
double x3567 = x3450*x3489;
double x3568 = 8*x3544;
double x3569 = x3464 + x3465 - 8*x3497 - 8*x3498 + 4*x3499 + 4*x3500 + 2*x3523 + 2*x3524 - 4*x3525 - 4*x3526 + x3568;
double x3570 = -x3459 - x3462;
double x3571 = x158*x3550;
double x3572 = x158*x3551;
double x3573 = -x3571 - x3572;
double x3574 = 4*x3536;
double x3575 = x158*x3539;
double x3576 = x3574 + x3575;
double x3577 = x3573 + x3576;
double x3578 = -x3554;
double x3579 = x3557 + x3578;
double x3580 = 18*x3544;
double x3581 = x129*x3550 + x129*x3551 - x327*x3440 - x327*x3441 - 12*x3434 + 18*x3497 + 18*x3498 - 6*x3499 - 6*x3500 - 6*x3523 - 6*x3524 + 16*x3525 + 16*x3526 - x3580;
double x3582 = 18*x3546;
double x3583 = 16*x837;
double x3584 = 12*x3395;
double x3585 = -x129*x3539 + 16*x3426 + x3428*x3478 + x3428*x3584 - 18*x3487 - x3489*x3583 - 18*x3490 + 6*x3509 + 6*x3510 + 6*x3511 + 6*x3513 - 16*x3516 - 6*x3536 + x3582;
double x3586 = 2*x3544;
double x3587 = x1752*x3503;
double x3588 = q9_b_dot_dt*q9_i;
double x3589 = x3539 + x3588*x41;
double x3590 = q10_b_dt*x1710;
double x3591 = q9_b_dt*x879;
double x3592 = x1710*x871;
double x3593 = x3591*x872;
double x3594 = x3571 + x3572 - 6*x3590 - x3591*x877 + 2*x3592 + 2*x3593;
double x3595 = 6*q10_b_dt;
double x3596 = q10_i*x3489;
double x3597 = x57*x871;
double x3598 = -x3574 - x3575;
double x3599 = x1720*x3595 - x1752*x3597 - x3504*x875 + 6*x3596 + x3598;
double x3600 = x3553*x70;
double x3601 = -4*x3600;
double x3602 = 4*q9_i_dot;
double x3603 = x3512*x3602;
double x3604 = x3601 + x3603;
double x3605 = q10_b_dot_dt*x70;
double x3606 = x1717*x3605;
double x3607 = q10_i_dot_dt*x70;
double x3608 = q9_b_dot_dt*x3607;
double x3609 = x3608*x879;
double x3610 = q10_b_dt*x1717;
double x3611 = 3*q10_i_dt;
double x3612 = x3494*x879;
double x3613 = x1858*x3610 - x321*x3550 - x321*x3551 + 4*x3544 - 2*x3590 - x3591*x869 + x3592 + x3593 - x3606 - x3609 + x3611*x3612;
double x3614 = 4*q9_b_dt;
double x3615 = q10_b_dt*x57;
double x3616 = x3508*x3605;
double x3617 = q10_i_dot*x3512;
double x3618 = x1720*x871;
double x3619 = 3*x866;
double x3620 = q10_b_dt*x41;
double x3621 = x1790*x3494;
double x3622 = q10_i*x3504 - x1720*x3614 + x1752*x3495 + x1752*x3615 - x3489*x875 + x3504*x866 + x3616 + x3617 - x3618 - x3619*x3620 - x3621*x41;
double x3623 = 18*q10_b_dt;
double x3624 = x1771*x3623;
double x3625 = x1720*x3623;
double x3626 = 18*x3596;
double x3627 = 16*x3536;
double x3628 = x327*x3539;
double x3629 = 12*q9_i_dot;
double x3630 = x3512*x3629;
double x3631 = 6*x3618;
double x3632 = q10_i_dot*x129;
double x3633 = x3489*x3632;
double x3634 = 6*x3616;
double x3635 = 6*x3617;
double x3636 = q10_i_dot*x3605;
double x3637 = x2800*x3636;
double x3638 = x1771*x871;
double x3639 = 6*x3638;
double x3640 = x3595*x875;
double x3641 = x3640*x41;
double x3642 = 16*x866;
double x3643 = x3620*x3642;
double x3644 = x1771*x3494;
double x3645 = 16*x3644;
double x3646 = 18*q10_i_dt;
double x3647 = q10_b_dt*x879;
double x3648 = q10_i_dt*x3612;
double x3649 = x871*x879;
double x3650 = x3647*x872;
double x3651 = 2*x3605;
double x3652 = q10_i_dot_dt*x3651;
double x3653 = x3652*x879;
double x3654 = x327*x3550 + x327*x3551 - x327*x3610 + x3580 - 18*x3590 - x3591*x3646 + 6*x3592 + 6*x3593 + 12*x3600 + 6*x3606 + 6*x3609 + x3646*x3647 - 16*x3648 - x3649*x877 - 6*x3650 + x3653;
double x3655 = 8*q10_i_dt;
double x3656 = 4*q10_i_dt;
double x3657 = x158*x3610 - x3568 + 8*x3590 + x3591*x3655 - 4*x3592 - 4*x3593 - 2*x3606 - 2*x3609 + x3612*x3656 - x3647*x3655 + x3649*x3656 + 4*x3650;
double x3658 = -x3653;
double x3659 = x3637 + x3658;
double x3660 = 8*q10_b_dt;
double x3661 = q10_i_dot*x158;
double x3662 = q10_b_dt*x158;
double x3663 = q9_i_dot*x3605;
double x3664 = q10_i_dot*x70;
double x3665 = x0*x3664;
double x3666 = -x1720*x3660 + x1771*x3660 + x2800*x3663 + x3489*x3661 - x3508*x3662 + x3555*x3665 + x3559 - 8*x3596 + 4*x3618 - x3620*x3661 - 4*x3638 - 4*x3644;
double x3667 = 12*q10_i_dt;
double x3668 = x1787*x3649 - x286*x3550 - x286*x3551 + x286*x3610 - x3545 + 12*x3590 + x3591*x3667 - 5*x3592 - 5*x3593 - 3*x3606 - 3*x3609 - x3647*x3667 + 7*x3648 + 5*x3650;
double x3669 = 12*q10_b_dt;
double x3670 = 12*q10_i;
double x3671 = 7*x866;
double x3672 = 7*x3494;
double x3673 = q10_i_dot*x154;
double x3674 = -x1720*x3669 + x1720*x3672 + x1771*x3669 - x1771*x3672 + x286*x3539 - x3489*x3670 + x3489*x3673 + x3547 + 3*x3616 + 3*x3617 + 5*x3618 - x3620*x3671 - x3620*x3673 - 5*x3638;
double x3675 = x208*x38;
double x3676 = q1_b*x83;
double x3677 = x3676*x37;
double x3678 = 6*x192;
double x3679 = x178*x656;
double x3680 = q2_b*x13;
double x3681 = x109*x3680;
double x3682 = x637*x8;
double x3683 = L*x3682;
double x3684 = 6*x3683;
double x3685 = L*x646;
double x3686 = x3676*x3685;
double x3687 = q2_b_dot*x37;
double x3688 = x3687*x369;
double x3689 = -x195;
double x3690 = x14*x2736;
double x3691 = -x3690;
double x3692 = x3689 + x3691;
double x3693 = x187 + x188;
double x3694 = q2_b*x83;
double x3695 = q1_b_dot*x646;
double x3696 = x1852*x3695;
double x3697 = q2_b_dot*x1852;
double x3698 = x3697*x51;
double x3699 = q1_b_dot*x637;
double x3700 = x3680*x51;
double x3701 = L*x51;
double x3702 = q1_b_dot*x51;
double x3703 = x1864*x3702;
double x3704 = -x178*x3685 - 4*x179 + x183*x369 - x1858*x3700 - x1859*x3699 - x192 - x197*x3687 - x362*x51 + x3676*x3701 + x3676*x637 + x3683 + x3694*x37 + x3696 + x3698 + x3703;
double x3705 = -x180;
double x3706 = 12*x637;
double x3707 = x178*x3706;
double x3708 = x3680*x37;
double x3709 = 12*x3708;
double x3710 = x182*x286;
double x3711 = x184*x286;
double x3712 = x178*x646;
double x3713 = x154*x3712;
double x3714 = x13*x3687;
double x3715 = x154*x3714;
double x3716 = 3*x3696;
double x3717 = 3*x3698;
double x3718 = x3680*x646;
double x3719 = x154*x3718;
double x3720 = q2_b_dot*x637;
double x3721 = x13*x3720;
double x3722 = x154*x3721;
double x3723 = x13*x3699;
double x3724 = x286*x3723;
double x3725 = x286*x3700;
double x3726 = q2_b_dot*x70;
double x3727 = x3726*x83;
double x3728 = x3727*x646;
double x3729 = x2778 - x3728;
double x3730 = x3680*x3706;
double x3731 = -x3730;
double x3732 = x2787 + x3731;
double x3733 = 8*x637;
double x3734 = x178*x3733;
double x3735 = 8*x3708;
double x3736 = x158*x3712;
double x3737 = x158*x3714;
double x3738 = x70*x83;
double x3739 = x3695*x3738;
double x3740 = x175*x3726;
double x3741 = x158*x3723;
double x3742 = x158*x3700;
double x3743 = x158*x3718;
double x3744 = x158*x3721;
double x3745 = x3743 + x3744;
double x3746 = x2813 + x3729 + x3745;
double x3747 = x3680*x3733;
double x3748 = x2817 - x3747;
double x3749 = 18*x637;
double x3750 = x3680*x3749;
double x3751 = x2822 + x3750;
double x3752 = 4*x3683;
double x3753 = x197*x656;
double x3754 = q2_b_dot*x198 - q2_b_dot*x3753 + x129*x3712 - x129*x3718 - x178*x3749 + x182*x327 + x184*x327 + x191 + x1931*x3702 + x194 - x327*x3700 - x327*x3723 + x3692 + 6*x3696 + 6*x3698 - 18*x3708 + x3728 + x3752;
double x3755 = x3694*x637;
double x3756 = x1352*x14;
double x3757 = 12*x3683;
double x3758 = x3680*x685;
double x3759 = 6*x362;
double x3760 = x3759*x646;
double x3761 = q3_b*x13;
double x3762 = x3761*x656;
double x3763 = x362*x675;
double x3764 = 4*x3763;
double x3765 = x666*x8;
double x3766 = L*x3765;
double x3767 = 12*x3766;
double x3768 = L*x675;
double x3769 = x3694*x3768;
double x3770 = q3_b_dot*x637;
double x3771 = x369*x3770;
double x3772 = -x3763;
double x3773 = x3694*x666;
double x3774 = q3_b*x83;
double x3775 = x3774*x637;
double x3776 = 4*x637;
double x3777 = x3680*x3776;
double x3778 = x3680*x3768;
double x3779 = x197*x3770;
double x3780 = x3697*x675;
double x3781 = q3_b_dot*x1852;
double x3782 = x3781*x646;
double x3783 = x3685*x3694;
double x3784 = x369*x3720;
double x3785 = q2_b_dot*x666;
double x3786 = x1859*x3785;
double x3787 = x3761*x646;
double x3788 = x1858*x3787;
double x3789 = x3697*x646;
double x3790 = 4*x3789;
double x3791 = x2865 - x3790;
double x3792 = 12*x666;
double x3793 = x3680*x3792;
double x3794 = x3706*x3761;
double x3795 = x286*x3718;
double x3796 = x286*x3721;
double x3797 = x3680*x675;
double x3798 = x154*x3797;
double x3799 = x13*x3770;
double x3800 = x154*x3799;
double x3801 = 3*x3780;
double x3802 = 3*x3782;
double x3803 = x3761*x675;
double x3804 = x154*x3803;
double x3805 = q3_b_dot*x666;
double x3806 = x13*x3805;
double x3807 = x154*x3806;
double x3808 = x13*x3785;
double x3809 = x286*x3808;
double x3810 = x286*x3787;
double x3811 = q3_b_dot*x70;
double x3812 = x3811*x83;
double x3813 = x3812*x675;
double x3814 = x2890 - x3813;
double x3815 = x3761*x3792;
double x3816 = -x3815;
double x3817 = x2899 + x3816;
double x3818 = 8*x666;
double x3819 = x3680*x3818;
double x3820 = x3733*x3761;
double x3821 = x158*x3797;
double x3822 = x158*x3799;
double x3823 = x3727*x675;
double x3824 = x3812*x646;
double x3825 = x158*x3808;
double x3826 = x158*x3787;
double x3827 = x158*x3803;
double x3828 = x158*x3806;
double x3829 = x3827 + x3828;
double x3830 = x2919 + x3814 + x3829;
double x3831 = x3761*x3818;
double x3832 = x2922 - x3831;
double x3833 = -x3743 - x3744;
double x3834 = -x3752;
double x3835 = x14*x70;
double x3836 = 18*x666;
double x3837 = -x1404*x3835 + x3761*x3836;
double x3838 = x2926 + x3837;
double x3839 = 4*x3766;
double x3840 = x197*x685;
double x3841 = q3_b_dot*x3753 - q3_b_dot*x3840 + x129*x3797 - x129*x3803 + x327*x3718 + x327*x3721 - x327*x3787 - x327*x3808 - x3680*x3836 + x3691 - x3749*x3761 + 6*x3780 + 6*x3782 + 12*x3789 + x3813 + x3839;
double x3842 = x385*x8;
double x3843 = L*x3842;
double x3844 = 20*x3843;
double x3845 = p10_b*x83;
double x3846 = x3845*x385;
double x3847 = 10*x379;
double x3848 = x170*x3847;
double x3849 = p10_b*x13;
double x3850 = x379*x3849;
double x3851 = p10_b_dot*x385;
double x3852 = x13*x3851;
double x3853 = x3849*x385;
double x3854 = 12*x3853;
double x3855 = -x3854;
double x3856 = x1809 + x3855;
double x3857 = x158*x3850;
double x3858 = -x3857;
double x3859 = x158*x3852;
double x3860 = -x3859;
double x3861 = x1819 + x3858 + x3860;
double x3862 = x362*x379;
double x3863 = x1840*x8;
double x3864 = p9_b*x13;
double x3865 = x390*x8;
double x3866 = L*x3865;
double x3867 = L*x403;
double x3868 = p9_b_dot*x1838;
double x3869 = p10_b_dot*x83;
double x3870 = x1822*x3869;
double x3871 = -60*x3843 - x3845*x3867 + x3849*x414 - 42*x3862 - 20*x3863 + x3864*x413 + 60*x3866 - x3868*x83 + x3870;
double x3872 = 11*x3863;
double x3873 = -x3872;
double x3874 = p9_b*x83;
double x3875 = x13*x1840;
double x3876 = p10_b_dot*x3875;
double x3877 = p9_b_dot*x13;
double x3878 = x1822*x3877;
double x3879 = x1838*x3877;
double x3880 = p10_b_dot*x13;
double x3881 = 3*x1845;
double x3882 = x379*x3864;
double x3883 = L*x379;
double x3884 = x1822*x3880;
double x3885 = 4*x3884;
double x3886 = -x1858*x3882 + x369*x3851 - 23*x3843 + x3845*x3883 + x3845*x390 - x3849*x3867 + x385*x3874 - 4*x3853 - 12*x3862 + 23*x3866 + x3873 + x3876 + x3878 - x3879 - x3880*x3881 + x3885;
double x3887 = x1896*x3864;
double x3888 = -x3887;
double x3889 = x1896*x3849;
double x3890 = x385*x3864;
double x3891 = 12*x3890;
double x3892 = x286*x3850;
double x3893 = x286*x3852;
double x3894 = x3849*x403;
double x3895 = x154*x3894;
double x3896 = 5*x3879;
double x3897 = 3*x3876;
double x3898 = 3*x3878;
double x3899 = x3864*x403;
double x3900 = x154*x3899;
double x3901 = p9_b_dot*x390;
double x3902 = x13*x3901;
double x3903 = x154*x3902;
double x3904 = x1845*x3880;
double x3905 = 7*x3904;
double x3906 = x286*x3882;
double x3907 = p9_b_dot*x83;
double x3908 = x1840*x3907;
double x3909 = x1891 - x3908;
double x3910 = 8*x3853;
double x3911 = x1921*x3864;
double x3912 = x1921*x3849;
double x3913 = 8*x3890;
double x3914 = x158*x3894;
double x3915 = 4*x3879;
double x3916 = x1840*x3869;
double x3917 = x1822*x3907;
double x3918 = x1923*x3880;
double x3919 = x158*x3882;
double x3920 = x158*x3899;
double x3921 = x158*x3902;
double x3922 = x3920 + x3921;
double x3923 = x1915 + x3922;
double x3924 = x3909 + x3923;
double x3925 = x1925 + x3908;
double x3926 = x158*x3842;
double x3927 = x158*x3865;
double x3928 = L*x3877;
double x3929 = x3835*x912;
double x3930 = x1927*x3864;
double x3931 = -x3929 + x3930;
double x3932 = x129*x3894 - x129*x3899 - x1927*x3849 + x327*x3850 + x327*x3852 - x327*x3882 - x3835*x892 + 18*x3853 + 6*x3876 + 6*x3878 + 12*x3884 - 18*x3890 - 16*x3904 - x3926 + x3927 + x3928*x413 - x3928*x414 + x3931;
double x3933 = x429*x8;
double x3934 = x158*x3933;
double x3935 = -x3934;
double x3936 = p2_b*x83;
double x3937 = x3936*x429;
double x3938 = x14*x973;
double x3939 = p2_b*x13;
double x3940 = x3939*x423;
double x3941 = p2_b_dot*x429;
double x3942 = x13*x3941;
double x3943 = 12*L;
double x3944 = x336*x3943;
double x3945 = x338*x444;
double x3946 = x226*x3939;
double x3947 = 4*x363;
double x3948 = x362*x423;
double x3949 = 10*x3948;
double x3950 = x3933*x3943;
double x3951 = p1_b_dot*x2000;
double x3952 = x3951*x83;
double x3953 = x368*x3936;
double x3954 = x3939*x429;
double x3955 = 12*x3954;
double x3956 = x1953 + x3955;
double x3957 = x423*x70;
double x3958 = p2_b_dot*x83;
double x3959 = x3957*x3958;
double x3960 = x1959 - x3959;
double x3961 = x158*x3940;
double x3962 = x158*x3942;
double x3963 = x3961 + x3962;
double x3964 = x1966 + x3963;
double x3965 = x286*x336;
double x3966 = x334*x429;
double x3967 = x210*x3936;
double x3968 = 4*x3954;
double x3969 = x2005*x362;
double x3970 = x286*x3933;
double x3971 = x2000*x344;
double x3972 = x368*x3939;
double x3973 = x344*x3957;
double x3974 = p2_b_dot*x13;
double x3975 = x345*x3974;
double x3976 = x2005*x70;
double x3977 = x3974*x3976;
double x3978 = L*x423;
double x3979 = x3936*x3978;
double x3980 = x369*x3941;
double x3981 = 3*x3978;
double x3982 = x338*x3981;
double x3983 = 3*x332;
double x3984 = x3974*x3983;
double x3985 = 8*x3954;
double x3986 = x2031 + x3959;
double x3987 = x2029 + x3985 + x3986;
double x3988 = x338*x429;
double x3989 = x210*x3939;
double x3990 = x338*x423;
double x3991 = x210*x3974;
double x3992 = x202*x3939;
double x3993 = -x158*x3990 - x158*x3991 + x158*x3992 + x345*x3958 + x352 + x353*x3957 + 4*x3971 - 8*x3988 - 8*x3989;
double x3994 = -x154*x339 - x154*x341 + x154*x3992 + x286*x3940 + x286*x3942 - x286*x3990 - x286*x3991 + x349 + x354 + 5*x3971 + 3*x3973 + 3*x3975 + x3977 - 12*x3988 - 12*x3989;
double x3995 = 18*x3988;
double x3996 = 18*x3989;
double x3997 = x327*x3940;
double x3998 = x327*x3942;
double x3999 = 12*x3957;
double x4000 = x3974*x3999;
double x4001 = L*x344;
double x4002 = x4001*x444;
double x4003 = x129*x3992;
double x4004 = 6*x3973;
double x4005 = 6*x3975;
double x4006 = x129*x339;
double x4007 = x226*x4001;
double x4008 = x327*x3990;
double x4009 = x327*x3991;
double x4010 = 18*x3954;
double x4011 = x14*x2099;
double x4012 = x2022 - x4010 + x4011;
double x4013 = x458*x8;
double x4014 = x129*x4013;
double x4015 = p3_b*x83;
double x4016 = x4015*x458;
double x4017 = 3*x170;
double x4018 = x4017*x452;
double x4019 = p3_b*x13;
double x4020 = x4019*x452;
double x4021 = p3_b_dot*x458;
double x4022 = x13*x4021;
double x4023 = 18*L;
double x4024 = x3933*x4023;
double x4025 = x3939*x473;
double x4026 = x4019*x444;
double x4027 = 6*x3948;
double x4028 = x362*x452;
double x4029 = 14*x4028;
double x4030 = x4013*x4023;
double x4031 = L*x458;
double x4032 = p2_b_dot*x4031;
double x4033 = x4032*x83;
double x4034 = x3978*x4015;
double x4035 = x4019*x458;
double x4036 = 12*x4035;
double x4037 = x2060 + x4036;
double x4038 = x452*x70;
double x4039 = p3_b_dot*x83;
double x4040 = x4038*x4039;
double x4041 = x2066 - x4040;
double x4042 = x158*x4020;
double x4043 = x158*x4022;
double x4044 = x4042 + x4043;
double x4045 = x2073 + x4044;
double x4046 = 9*L;
double x4047 = x3933*x4046;
double x4048 = x3936*x458;
double x4049 = x4015*x429;
double x4050 = 4*x4035;
double x4051 = 5*x4028;
double x4052 = x4013*x4046;
double x4053 = x3974*x4031;
double x4054 = x3978*x4019;
double x4055 = x3974*x4038;
double x4056 = p3_b_dot*x13;
double x4057 = x3957*x4056;
double x4058 = 4*x4056;
double x4059 = x4038*x4058;
double x4060 = L*x452;
double x4061 = x4015*x4060;
double x4062 = x369*x4021;
double x4063 = 3*x4060;
double x4064 = x3939*x4063;
double x4065 = x2000*x4056;
double x4066 = 3*x4065;
double x4067 = 8*x4035;
double x4068 = x2132 + x4040;
double x4069 = x2130 + x4067 + x4068;
double x4070 = x3939*x458;
double x4071 = x4019*x429;
double x4072 = x3939*x452;
double x4073 = x3974*x458;
double x4074 = x4019*x423;
double x4075 = -x3961 - x3962;
double x4076 = -x158*x4072 + x158*x4073 + x158*x4074 - x2000*x4058 + x3957*x4039 + x3958*x4038 - 8*x4070 - 8*x4071 + x4075;
double x4077 = -x154*x3940 - x154*x3942 + x154*x4073 + x154*x4074 + x286*x4020 + x286*x4022 - x286*x4072 + 3*x4055 + 3*x4057 + x4059 - 7*x4065 - 12*x4070 - 12*x4071;
double x4078 = x158*x4013;
double x4079 = 18*x4070;
double x4080 = 18*x4071;
double x4081 = x327*x4020;
double x4082 = x327*x4022;
double x4083 = 12*x4038;
double x4084 = x4056*x4083;
double x4085 = L*x3974;
double x4086 = x4085*x473;
double x4087 = x129*x4074;
double x4088 = 6*x4055;
double x4089 = 6*x4057;
double x4090 = x129*x3940;
double x4091 = x4085*x444;
double x4092 = x327*x4072;
double x4093 = 16*x4065;
double x4094 = 18*x4035;
double x4095 = x14*x2204;
double x4096 = x2123 - x4094 + x4095;
double x4097 = x488*x8;
double x4098 = L*x4097;
double x4099 = 8*x4098;
double x4100 = p4_b*x83;
double x4101 = x4100*x488;
double x4102 = x170*x2211;
double x4103 = p4_b*x13;
double x4104 = x4103*x482;
double x4105 = p4_b_dot*x488;
double x4106 = x13*x4105;
double x4107 = L*x4013;
double x4108 = 24*x4107;
double x4109 = x4019*x503;
double x4110 = x4103*x473;
double x4111 = 8*x4028;
double x4112 = x362*x482;
double x4113 = 18*x4112;
double x4114 = 24*x4098;
double x4115 = p3_b_dot*x2206;
double x4116 = x4115*x83;
double x4117 = x4060*x4100;
double x4118 = x4103*x488;
double x4119 = 12*x4118;
double x4120 = x2160 + x4119;
double x4121 = x482*x70;
double x4122 = p4_b_dot*x83;
double x4123 = x4121*x4122;
double x4124 = x2166 - x4123;
double x4125 = x158*x4104;
double x4126 = x158*x4106;
double x4127 = x4125 + x4126;
double x4128 = x2173 + x4127;
double x4129 = 11*x4107;
double x4130 = x4015*x488;
double x4131 = x4100*x458;
double x4132 = 4*x4118;
double x4133 = 6*x4112;
double x4134 = 11*x4098;
double x4135 = x2206*x4056;
double x4136 = x4060*x4103;
double x4137 = x4056*x4121;
double x4138 = p4_b_dot*x13;
double x4139 = x4038*x4138;
double x4140 = x2211*x70;
double x4141 = x4138*x4140;
double x4142 = L*x482;
double x4143 = x4100*x4142;
double x4144 = x369*x4105;
double x4145 = 3*x4142;
double x4146 = x4019*x4145;
double x4147 = 3*x4031;
double x4148 = x4138*x4147;
double x4149 = 8*x4118;
double x4150 = x2237 + x4123;
double x4151 = x2235 + x4149 + x4150;
double x4152 = x4019*x488;
double x4153 = x4103*x458;
double x4154 = x4019*x482;
double x4155 = x4138*x458;
double x4156 = x4103*x452;
double x4157 = -x4042 - x4043;
double x4158 = -x158*x4154 - x158*x4155 + x158*x4156 + x4038*x4122 + x4039*x4121 + 4*x4135 - 8*x4152 - 8*x4153 + x4157;
double x4159 = -x154*x4020 - x154*x4022 + x154*x4156 + x286*x4104 + x286*x4106 - x286*x4154 - x286*x4155 + 5*x4135 + 3*x4137 + 3*x4139 + x4141 - 12*x4152 - 12*x4153;
double x4160 = -x4078;
double x4161 = x158*x4097;
double x4162 = 18*x4152;
double x4163 = 18*x4153;
double x4164 = x327*x4104;
double x4165 = x327*x4106;
double x4166 = 12*x4121;
double x4167 = x4138*x4166;
double x4168 = L*x4056;
double x4169 = x4168*x503;
double x4170 = x129*x4156;
double x4171 = 6*x4137;
double x4172 = 6*x4139;
double x4173 = x129*x4020;
double x4174 = x4168*x473;
double x4175 = x327*x4154;
double x4176 = x327*x4155;
double x4177 = 18*x4118;
double x4178 = x14*x2306;
double x4179 = x2228 - x4177 + x4178;
double x4180 = x518*x8;
double x4181 = L*x4180;
double x4182 = 10*x4181;
double x4183 = p5_b*x83;
double x4184 = x4183*x518;
double x4185 = 5*x170;
double x4186 = x4185*x512;
double x4187 = p5_b*x13;
double x4188 = x4187*x512;
double x4189 = p5_b_dot*x518;
double x4190 = x13*x4189;
double x4191 = 30*x4098;
double x4192 = x4103*x533;
double x4193 = x4187*x503;
double x4194 = 10*x4112;
double x4195 = x362*x512;
double x4196 = 22*x4195;
double x4197 = 30*x4181;
double x4198 = L*x518;
double x4199 = p4_b_dot*x4198;
double x4200 = x4199*x83;
double x4201 = x4142*x4183;
double x4202 = x4187*x518;
double x4203 = 12*x4202;
double x4204 = x2267 + x4203;
double x4205 = x512*x70;
double x4206 = p5_b_dot*x83;
double x4207 = x4205*x4206;
double x4208 = x2273 - x4207;
double x4209 = x158*x4188;
double x4210 = x158*x4190;
double x4211 = x4209 + x4210;
double x4212 = x2280 + x4211;
double x4213 = 13*x4098;
double x4214 = x4100*x518;
double x4215 = x4183*x488;
double x4216 = 4*x4202;
double x4217 = 7*x4195;
double x4218 = 13*x4181;
double x4219 = x4138*x4198;
double x4220 = x4142*x4187;
double x4221 = x4138*x4205;
double x4222 = p5_b_dot*x13;
double x4223 = x4121*x4222;
double x4224 = 4*x4222;
double x4225 = x4205*x4224;
double x4226 = L*x512;
double x4227 = x4183*x4226;
double x4228 = x369*x4189;
double x4229 = 3*x4226;
double x4230 = x4103*x4229;
double x4231 = x2206*x4222;
double x4232 = 3*x4231;
double x4233 = 8*x4202;
double x4234 = x2338 + x4207;
double x4235 = x2336 + x4233 + x4234;
double x4236 = x4103*x518;
double x4237 = x4187*x488;
double x4238 = x4103*x512;
double x4239 = x4138*x518;
double x4240 = x4187*x482;
double x4241 = -x4125 - x4126;
double x4242 = -x158*x4238 + x158*x4239 + x158*x4240 - x2206*x4224 + x4121*x4206 + x4122*x4205 - 8*x4236 - 8*x4237 + x4241;
double x4243 = -x154*x4104 - x154*x4106 + x154*x4239 + x154*x4240 + x286*x4188 + x286*x4190 - x286*x4238 + 3*x4221 + 3*x4223 + x4225 - 7*x4231 - 12*x4236 - 12*x4237;
double x4244 = -x4161;
double x4245 = x158*x4180;
double x4246 = 18*x4236;
double x4247 = 18*x4237;
double x4248 = x327*x4188;
double x4249 = x327*x4190;
double x4250 = 12*x4205;
double x4251 = x4222*x4250;
double x4252 = L*x4138;
double x4253 = x4252*x533;
double x4254 = x129*x4240;
double x4255 = 6*x4221;
double x4256 = 6*x4223;
double x4257 = x129*x4104;
double x4258 = x4252*x503;
double x4259 = x327*x4238;
double x4260 = 16*x4231;
double x4261 = 18*x4202;
double x4262 = x14*x2410;
double x4263 = x2329 - x4261 + x4262;
double x4264 = x548*x8;
double x4265 = x3943*x4264;
double x4266 = p6_b*x83;
double x4267 = x4266*x548;
double x4268 = 6*x170;
double x4269 = x4268*x542;
double x4270 = p6_b*x13;
double x4271 = x4270*x542;
double x4272 = p6_b_dot*x548;
double x4273 = x13*x4272;
double x4274 = 36*x4181;
double x4275 = x4187*x563;
double x4276 = x4270*x533;
double x4277 = 12*x4195;
double x4278 = x362*x542;
double x4279 = 26*x4278;
double x4280 = L*x4264;
double x4281 = 36*x4280;
double x4282 = p5_b_dot*x2412;
double x4283 = x4282*x83;
double x4284 = x4226*x4266;
double x4285 = x4270*x548;
double x4286 = 12*x4285;
double x4287 = x2366 + x4286;
double x4288 = x542*x70;
double x4289 = p6_b_dot*x83;
double x4290 = x4288*x4289;
double x4291 = x2372 - x4290;
double x4292 = x158*x4271;
double x4293 = x158*x4273;
double x4294 = x4292 + x4293;
double x4295 = x2379 + x4294;
double x4296 = 15*x4181;
double x4297 = x4183*x548;
double x4298 = x4266*x518;
double x4299 = 4*x4285;
double x4300 = 8*x4278;
double x4301 = 15*x4280;
double x4302 = x2412*x4222;
double x4303 = x4226*x4270;
double x4304 = x4222*x4288;
double x4305 = p6_b_dot*x13;
double x4306 = x4205*x4305;
double x4307 = x4288*x4305;
double x4308 = 4*x4307;
double x4309 = L*x542;
double x4310 = x4266*x4309;
double x4311 = x369*x4272;
double x4312 = 3*x4309;
double x4313 = x4187*x4312;
double x4314 = 3*x4198;
double x4315 = x4305*x4314;
double x4316 = 8*x4285;
double x4317 = x2442 + x4290;
double x4318 = x2440 + x4316 + x4317;
double x4319 = x4187*x548;
double x4320 = x4270*x518;
double x4321 = x4187*x542;
double x4322 = x4305*x518;
double x4323 = x4270*x512;
double x4324 = -x4209 - x4210;
double x4325 = -x158*x4321 - x158*x4322 + x158*x4323 + x4205*x4289 + x4206*x4288 + 4*x4302 - 8*x4319 - 8*x4320 + x4324;
double x4326 = -x154*x4188 - x154*x4190 + x154*x4323 + x286*x4271 + x286*x4273 - x286*x4321 - x286*x4322 + 5*x4302 + 3*x4304 + 3*x4306 + x4308 - 12*x4319 - 12*x4320;
double x4327 = -x4245;
double x4328 = x158*x4264;
double x4329 = 18*x4319;
double x4330 = 18*x4320;
double x4331 = x327*x4271;
double x4332 = x327*x4273;
double x4333 = 12*x4307;
double x4334 = L*x4222;
double x4335 = x4334*x563;
double x4336 = x129*x4323;
double x4337 = 6*x4304;
double x4338 = 6*x4306;
double x4339 = x129*x4188;
double x4340 = x4334*x533;
double x4341 = x327*x4321;
double x4342 = x327*x4322;
double x4343 = 18*x4285;
double x4344 = x14*x2510;
double x4345 = x2433 - x4343 + x4344;
double x4346 = x578*x8;
double x4347 = L*x4346;
double x4348 = 14*x4347;
double x4349 = p7_b*x83;
double x4350 = x4349*x578;
double x4351 = 7*x170;
double x4352 = x4351*x572;
double x4353 = p7_b*x13;
double x4354 = x4353*x572;
double x4355 = p7_b_dot*x578;
double x4356 = x13*x4355;
double x4357 = 42*x4280;
double x4358 = x4270*x593;
double x4359 = x4353*x563;
double x4360 = 14*x4278;
double x4361 = x362*x572;
double x4362 = 30*x4361;
double x4363 = 42*x4347;
double x4364 = p6_b_dot*x2620;
double x4365 = x4364*x83;
double x4366 = x4309*x4349;
double x4367 = x4353*x578;
double x4368 = 12*x4367;
double x4369 = x2471 + x4368;
double x4370 = x572*x70;
double x4371 = p7_b_dot*x83;
double x4372 = x4370*x4371;
double x4373 = x2477 - x4372;
double x4374 = x158*x4354;
double x4375 = x158*x4356;
double x4376 = x4374 + x4375;
double x4377 = x2484 + x4376;
double x4378 = 17*x4280;
double x4379 = x4266*x578;
double x4380 = x4349*x548;
double x4381 = 4*x4367;
double x4382 = 9*x4361;
double x4383 = 17*x4347;
double x4384 = x2620*x4305;
double x4385 = x4309*x4353;
double x4386 = x4305*x4370;
double x4387 = p7_b_dot*x13;
double x4388 = x4288*x4387;
double x4389 = 4*x4387;
double x4390 = x4370*x4389;
double x4391 = L*x572;
double x4392 = x4349*x4391;
double x4393 = x369*x4355;
double x4394 = x4270*x572;
double x4395 = x1858*x4394;
double x4396 = x2412*x4387;
double x4397 = 3*x4396;
double x4398 = 8*x4367;
double x4399 = x2542 + x4372;
double x4400 = x2540 + x4398 + x4399;
double x4401 = x4270*x578;
double x4402 = x4353*x548;
double x4403 = x4305*x578;
double x4404 = x4353*x542;
double x4405 = -x4292 - x4293;
double x4406 = -x158*x4394 + x158*x4403 + x158*x4404 - x2412*x4389 + x4288*x4371 + x4289*x4370 - 8*x4401 - 8*x4402 + x4405;
double x4407 = -x154*x4271 - x154*x4273 + x154*x4403 + x154*x4404 + x286*x4354 + x286*x4356 - x286*x4394 + 3*x4386 + 3*x4388 + x4390 - 7*x4396 - 12*x4401 - 12*x4402;
double x4408 = -x4328;
double x4409 = x158*x4346;
double x4410 = 18*x4401;
double x4411 = 18*x4402;
double x4412 = x327*x4354;
double x4413 = x327*x4356;
double x4414 = 12*x4370;
double x4415 = x4387*x4414;
double x4416 = L*x4305;
double x4417 = x4416*x593;
double x4418 = x129*x4404;
double x4419 = 6*x4386;
double x4420 = 6*x4388;
double x4421 = x129*x4271;
double x4422 = x4416*x563;
double x4423 = x327*x4394;
double x4424 = 16*x4396;
double x4425 = 18*x4367;
double x4426 = x14*x2615;
double x4427 = x2533 - x4425 + x4426;
double x4428 = x608*x8;
double x4429 = x327*x4428;
double x4430 = p8_b*x83;
double x4431 = x4430*x608;
double x4432 = 8*x170;
double x4433 = x4432*x602;
double x4434 = p8_b*x13;
double x4435 = x4434*x602;
double x4436 = p8_b_dot*x608;
double x4437 = x13*x4436;
double x4438 = 48*x4347;
double x4439 = x4353*x623;
double x4440 = x4434*x593;
double x4441 = 16*x4361;
double x4442 = x362*x602;
double x4443 = 34*x4442;
double x4444 = L*x4428;
double x4445 = 48*x4444;
double x4446 = p7_b_dot*x2617;
double x4447 = x4446*x83;
double x4448 = x4391*x4430;
double x4449 = x4434*x608;
double x4450 = 12*x4449;
double x4451 = x2571 + x4450;
double x4452 = p8_b_dot*x83;
double x4453 = x2575*x4452;
double x4454 = x2577 - x4453;
double x4455 = x158*x4435;
double x4456 = x158*x4437;
double x4457 = x4455 + x4456;
double x4458 = x2584 + x4457;
double x4459 = 19*x4347;
double x4460 = x4349*x608;
double x4461 = x4430*x578;
double x4462 = 4*x4449;
double x4463 = 10*x4442;
double x4464 = 19*x4444;
double x4465 = x2617*x4387;
double x4466 = x4391*x4434;
double x4467 = x2575*x4387;
double x4468 = p8_b_dot*x13;
double x4469 = x4370*x4468;
double x4470 = x2575*x4468;
double x4471 = 4*x4470;
double x4472 = L*x602;
double x4473 = x4430*x4472;
double x4474 = x369*x4436;
double x4475 = x4353*x602;
double x4476 = x1858*x4475;
double x4477 = x2621*x4468;
double x4478 = 8*x4449;
double x4479 = x2648 + x4453;
double x4480 = x2646 + x4478 + x4479;
double x4481 = x4353*x608;
double x4482 = x4434*x578;
double x4483 = x4468*x578;
double x4484 = x4434*x572;
double x4485 = -x4374 - x4375;
double x4486 = -x158*x4475 - x158*x4483 + x158*x4484 + x2575*x4371 + x4370*x4452 + 4*x4465 - 8*x4481 - 8*x4482 + x4485;
double x4487 = -x154*x4354 - x154*x4356 + x154*x4484 + x286*x4435 + x286*x4437 - x286*x4475 - x286*x4483 + 5*x4465 + 3*x4467 + 3*x4469 + x4471 - 12*x4481 - 12*x4482;
double x4488 = -x4409;
double x4489 = x158*x4428;
double x4490 = 18*x4481;
double x4491 = 18*x4482;
double x4492 = x327*x4435;
double x4493 = x327*x4437;
double x4494 = 12*x4470;
double x4495 = L*x4387;
double x4496 = x4495*x623;
double x4497 = x129*x4484;
double x4498 = 6*x4467;
double x4499 = 6*x4469;
double x4500 = x129*x4354;
double x4501 = x4495*x593;
double x4502 = x327*x4475;
double x4503 = x327*x4483;
double x4504 = 18*x4449;
double x4505 = x1276*x3835;
double x4506 = x2638 - x4504 + x4505;
double x4507 = 18*x3866;
double x4508 = x3874*x390;
double x4509 = 9*x170;
double x4510 = x403*x4509;
double x4511 = 54*x4444;
double x4512 = x414*x4434;
double x4513 = x3864*x623;
double x4514 = 18*x4442;
double x4515 = 38*x3863;
double x4516 = 54*x3866;
double x4517 = p8_b_dot*x1845;
double x4518 = x4517*x83;
double x4519 = x3874*x4472;
double x4520 = x2667 + x3887;
double x4521 = 21*x4444;
double x4522 = x390*x4430;
double x4523 = x3874*x608;
double x4524 = x3864*x933;
double x4525 = 21*x3866;
double x4526 = x1845*x4468;
double x4527 = x3864*x4472;
double x4528 = p8_b_dot*x3875;
double x4529 = x2575*x3877;
double x4530 = p9_b_dot*x3875;
double x4531 = 4*x4530;
double x4532 = x3867*x3874;
double x4533 = x369*x3901;
double x4534 = x3867*x4434;
double x4535 = 3*x4534;
double x4536 = x2617*x3877;
double x4537 = 3*x4536;
double x4538 = x3864*x608;
double x4539 = x158*x403;
double x4540 = x3864*x602;
double x4541 = -x4455 - x4456;
double x4542 = x158*x4540 + x1840*x4452 - x1921*x4434 + x1923*x4468 + x2575*x3907 + x3911 - x4434*x4539 - 4*x4536 - 8*x4538 + x4541;
double x4543 = -x154*x4435 - x154*x4437 + x154*x4540 - x1896*x4434 + x286*x3899 + x286*x3902 + 5*x4526 + 3*x4528 + 3*x4529 + x4531 - 7*x4534 - 7*x4536 - 12*x4538;
double x4544 = -x4489;
double x4545 = x1927*x4434;
double x4546 = 18*x4538;
double x4547 = x327*x3899;
double x4548 = x327*x3902;
double x4549 = 12*x4530;
double x4550 = L*x4468;
double x4551 = x414*x4550;
double x4552 = x129*x4540;
double x4553 = 6*x4528;
double x4554 = 6*x4529;
double x4555 = x129*x4435;
double x4556 = x4550*x623;
double x4557 = 16*x4534;
double x4558 = 16*x4536;
double x4559 = 6*x3766;
double x4560 = x3774*x666;
double x4561 = x4017*x675;
double x4562 = 18*x3766;
double x4563 = 10*x3763;
double x4564 = x3761*x714;
double x4565 = q4_b*x13;
double x4566 = x4565*x685;
double x4567 = x3759*x704;
double x4568 = x695*x8;
double x4569 = x4023*x4568;
double x4570 = L*x704;
double x4571 = x3774*x4570;
double x4572 = q4_b_dot*x666;
double x4573 = x369*x4572;
double x4574 = 3*x3766;
double x4575 = x3774*x695;
double x4576 = q4_b*x83;
double x4577 = x4576*x666;
double x4578 = x14*x2971;
double x4579 = -x4578;
double x4580 = x1858*x4568;
double x4581 = 4*x666;
double x4582 = x3761*x4581;
double x4583 = x3761*x4570;
double x4584 = x197*x4572;
double x4585 = x3781*x704;
double x4586 = q4_b_dot*x1852;
double x4587 = x4586*x675;
double x4588 = x3768*x3774;
double x4589 = x369*x3805;
double x4590 = q3_b_dot*x695;
double x4591 = x1859*x4590;
double x4592 = x4565*x675;
double x4593 = x1858*x4592;
double x4594 = x3781*x675;
double x4595 = 4*x4594;
double x4596 = x2967 - x4595;
double x4597 = 12*x695;
double x4598 = x3761*x4597;
double x4599 = x3792*x4565;
double x4600 = x286*x3803;
double x4601 = x286*x3806;
double x4602 = x3761*x704;
double x4603 = x154*x4602;
double x4604 = x13*x4572;
double x4605 = x154*x4604;
double x4606 = 3*x4585;
double x4607 = 3*x4587;
double x4608 = x4565*x704;
double x4609 = x154*x4608;
double x4610 = q4_b_dot*x695;
double x4611 = x13*x4610;
double x4612 = x154*x4611;
double x4613 = x13*x4590;
double x4614 = x286*x4613;
double x4615 = x286*x4592;
double x4616 = q4_b_dot*x70;
double x4617 = x4616*x83;
double x4618 = x4617*x704;
double x4619 = x2997 - x4618;
double x4620 = x4565*x4597;
double x4621 = -x4620;
double x4622 = x3006 + x4621;
double x4623 = 8*x695;
double x4624 = x3761*x4623;
double x4625 = x3818*x4565;
double x4626 = x158*x4602;
double x4627 = x158*x4604;
double x4628 = x3812*x704;
double x4629 = x4617*x675;
double x4630 = x158*x4613;
double x4631 = x158*x4592;
double x4632 = x158*x4608;
double x4633 = x158*x4611;
double x4634 = x4632 + x4633;
double x4635 = x3029 + x4619 + x4634;
double x4636 = x4565*x4623;
double x4637 = x3032 - x4636;
double x4638 = -x3827 - x3828;
double x4639 = 18*x695;
double x4640 = x4565*x4639 + x4579;
double x4641 = x3037 + x4640;
double x4642 = x158*x4568;
double x4643 = x197*x714;
double x4644 = q4_b_dot*x3840 - q4_b_dot*x4643 + x129*x4602 - x129*x4608 + x327*x3803 + x327*x3806 - x327*x4592 - x327*x4613 - x3761*x4639 - x3836*x4565 - x3839 + 6*x4585 + 6*x4587 + 12*x4594 + x4618 + x4642;
double x4645 = L*x4568;
double x4646 = 8*x4645;
double x4647 = x4576*x695;
double x4648 = 4*x170;
double x4649 = x4648*x704;
double x4650 = 24*x4645;
double x4651 = 14*x362;
double x4652 = x4651*x704;
double x4653 = x362*x733;
double x4654 = 8*x4653;
double x4655 = x4565*x743;
double x4656 = q5_b*x13;
double x4657 = x4656*x714;
double x4658 = x724*x8;
double x4659 = L*x4658;
double x4660 = 24*x4659;
double x4661 = L*x733;
double x4662 = x4576*x4661;
double x4663 = q5_b_dot*x695;
double x4664 = x369*x4663;
double x4665 = x154*x4568;
double x4666 = 3*x4653;
double x4667 = -x4666;
double x4668 = x4576*x724;
double x4669 = q5_b*x83;
double x4670 = x4669*x695;
double x4671 = 4*x695;
double x4672 = x4565*x4671;
double x4673 = x154*x4658;
double x4674 = x4565*x4661;
double x4675 = x197*x4663;
double x4676 = x4586*x733;
double x4677 = q5_b_dot*x1852;
double x4678 = x4677*x704;
double x4679 = x4570*x4576;
double x4680 = x369*x4610;
double x4681 = q4_b_dot*x724;
double x4682 = x1859*x4681;
double x4683 = x4656*x704;
double x4684 = x1858*x4683;
double x4685 = x4586*x704;
double x4686 = 4*x4685;
double x4687 = x3084 - x4686;
double x4688 = 12*x724;
double x4689 = x4565*x4688;
double x4690 = x4597*x4656;
double x4691 = x286*x4608;
double x4692 = x286*x4611;
double x4693 = x4565*x733;
double x4694 = x154*x4693;
double x4695 = x13*x4663;
double x4696 = x154*x4695;
double x4697 = 3*x4676;
double x4698 = 3*x4678;
double x4699 = x4656*x733;
double x4700 = x154*x4699;
double x4701 = q5_b_dot*x724;
double x4702 = x13*x4701;
double x4703 = x154*x4702;
double x4704 = x13*x4681;
double x4705 = x286*x4704;
double x4706 = x286*x4683;
double x4707 = q5_b_dot*x70;
double x4708 = x4707*x83;
double x4709 = x4708*x733;
double x4710 = x3110 - x4709;
double x4711 = x4656*x4688;
double x4712 = -x4711;
double x4713 = x3119 + x4712;
double x4714 = 8*x724;
double x4715 = x4565*x4714;
double x4716 = x4623*x4656;
double x4717 = x158*x4693;
double x4718 = x158*x4695;
double x4719 = x4617*x733;
double x4720 = x4708*x704;
double x4721 = x158*x4704;
double x4722 = x158*x4683;
double x4723 = x158*x4699;
double x4724 = x158*x4702;
double x4725 = x4723 + x4724;
double x4726 = x3140 + x4710 + x4725;
double x4727 = x4656*x4714;
double x4728 = x3143 - x4727;
double x4729 = -x4632 - x4633;
double x4730 = 18*x724;
double x4731 = -x1509*x3835 + x4656*x4730;
double x4732 = x3147 + x4731;
double x4733 = x158*x4658;
double x4734 = x197*x743;
double x4735 = q5_b_dot*x4643 - q5_b_dot*x4734 + x129*x4693 - x129*x4699 + x327*x4608 + x327*x4611 - x327*x4683 - x327*x4704 - x4565*x4730 - x4639*x4656 - x4642 + 6*x4676 + 6*x4678 + 12*x4685 + x4709 + x4733;
double x4736 = 10*x4659;
double x4737 = x4669*x724;
double x4738 = x4185*x733;
double x4739 = 30*x4659;
double x4740 = 18*x4653;
double x4741 = x362*x762;
double x4742 = 10*x4741;
double x4743 = x4656*x772;
double x4744 = q6_b*x13;
double x4745 = x4744*x743;
double x4746 = x753*x8;
double x4747 = L*x4746;
double x4748 = 30*x4747;
double x4749 = L*x762;
double x4750 = x4669*x4749;
double x4751 = q6_b_dot*x724;
double x4752 = x369*x4751;
double x4753 = x286*x4658;
double x4754 = 4*x4741;
double x4755 = -x4754;
double x4756 = x4669*x753;
double x4757 = q6_b*x83;
double x4758 = x4757*x724;
double x4759 = 4*x724;
double x4760 = x4656*x4759;
double x4761 = x286*x4746;
double x4762 = x4656*x4749;
double x4763 = x197*x4751;
double x4764 = x4677*x762;
double x4765 = q6_b_dot*x1852;
double x4766 = x4765*x733;
double x4767 = x4661*x4669;
double x4768 = x369*x4701;
double x4769 = q5_b_dot*x753;
double x4770 = x1859*x4769;
double x4771 = x4744*x733;
double x4772 = x1858*x4771;
double x4773 = x4677*x733;
double x4774 = 4*x4773;
double x4775 = x3190 - x4774;
double x4776 = 12*x753;
double x4777 = x4656*x4776;
double x4778 = x4688*x4744;
double x4779 = x286*x4699;
double x4780 = x286*x4702;
double x4781 = x4656*x762;
double x4782 = x154*x4781;
double x4783 = x13*x4751;
double x4784 = x154*x4783;
double x4785 = 3*x4764;
double x4786 = 3*x4766;
double x4787 = x4744*x762;
double x4788 = x154*x4787;
double x4789 = q6_b_dot*x753;
double x4790 = x13*x4789;
double x4791 = x154*x4790;
double x4792 = x13*x4769;
double x4793 = x286*x4792;
double x4794 = x286*x4771;
double x4795 = q6_b_dot*x70;
double x4796 = x4795*x83;
double x4797 = x4796*x762;
double x4798 = x3219 - x4797;
double x4799 = x4744*x4776;
double x4800 = -x4799;
double x4801 = x3228 + x4800;
double x4802 = 8*x753;
double x4803 = x4656*x4802;
double x4804 = x4714*x4744;
double x4805 = x158*x4781;
double x4806 = x158*x4783;
double x4807 = x4708*x762;
double x4808 = x4796*x733;
double x4809 = x158*x4792;
double x4810 = x158*x4771;
double x4811 = x158*x4787;
double x4812 = x158*x4790;
double x4813 = x4811 + x4812;
double x4814 = x3248 + x4798 + x4813;
double x4815 = x4744*x4802;
double x4816 = x3251 - x4815;
double x4817 = -x4723 - x4724;
double x4818 = 18*x753;
double x4819 = -x14*x3194 + x4744*x4818;
double x4820 = x3256 + x4819;
double x4821 = x158*x4746;
double x4822 = x197*x772;
double x4823 = q6_b_dot*x4734 - q6_b_dot*x4822 + x129*x4781 - x129*x4787 + x327*x4699 + x327*x4702 - x327*x4771 - x327*x4792 - x4656*x4818 - x4730*x4744 - x4733 + 6*x4764 + 6*x4766 + 12*x4773 + x4797 + x4821;
double x4824 = x3943*x4746;
double x4825 = x4757*x753;
double x4826 = x4268*x762;
double x4827 = 36*x4747;
double x4828 = 22*x4741;
double x4829 = x362*x791;
double x4830 = 12*x4829;
double x4831 = x4744*x801;
double x4832 = q7_b*x13;
double x4833 = x4832*x772;
double x4834 = x782*x8;
double x4835 = L*x4834;
double x4836 = 36*x4835;
double x4837 = L*x791;
double x4838 = x4757*x4837;
double x4839 = q7_b_dot*x753;
double x4840 = x369*x4839;
double x4841 = x4046*x4746;
double x4842 = 5*x4829;
double x4843 = -x4842;
double x4844 = x4757*x782;
double x4845 = q7_b*x83;
double x4846 = x4845*x753;
double x4847 = 4*x753;
double x4848 = x4744*x4847;
double x4849 = x4046*x4834;
double x4850 = x4744*x4837;
double x4851 = x197*x4839;
double x4852 = x4765*x791;
double x4853 = q7_b_dot*x1852;
double x4854 = x4853*x762;
double x4855 = x4749*x4757;
double x4856 = x369*x4789;
double x4857 = q6_b_dot*x782;
double x4858 = x1859*x4857;
double x4859 = x4832*x762;
double x4860 = x1858*x4859;
double x4861 = x4765*x762;
double x4862 = 4*x4861;
double x4863 = x3301 - x4862;
double x4864 = 12*x782;
double x4865 = x4744*x4864;
double x4866 = x4776*x4832;
double x4867 = x286*x4787;
double x4868 = x286*x4790;
double x4869 = x4744*x791;
double x4870 = x154*x4869;
double x4871 = x13*x4839;
double x4872 = x154*x4871;
double x4873 = 3*x4852;
double x4874 = 3*x4854;
double x4875 = x4832*x791;
double x4876 = x154*x4875;
double x4877 = q7_b_dot*x782;
double x4878 = x13*x4877;
double x4879 = x154*x4878;
double x4880 = x13*x4857;
double x4881 = x286*x4880;
double x4882 = x286*x4859;
double x4883 = q7_b_dot*x70;
double x4884 = x4883*x83;
double x4885 = x4884*x791;
double x4886 = x3327 - x4885;
double x4887 = x4832*x4864;
double x4888 = -x4887;
double x4889 = x3336 + x4888;
double x4890 = 8*x782;
double x4891 = x4744*x4890;
double x4892 = x4802*x4832;
double x4893 = x158*x4869;
double x4894 = x158*x4871;
double x4895 = x4796*x791;
double x4896 = x4884*x762;
double x4897 = x158*x4880;
double x4898 = x158*x4859;
double x4899 = x158*x4875;
double x4900 = x158*x4878;
double x4901 = x4899 + x4900;
double x4902 = x3356 + x4886 + x4901;
double x4903 = x4832*x4890;
double x4904 = x3359 - x4903;
double x4905 = -x4811 - x4812;
double x4906 = 18*x782;
double x4907 = -x1613*x3835 + x4832*x4906;
double x4908 = x3363 + x4907;
double x4909 = x158*x4834;
double x4910 = x197*x801;
double x4911 = q7_b_dot*x4822 - q7_b_dot*x4910 + x129*x4869 - x129*x4875 + x327*x4787 + x327*x4790 - x327*x4859 - x327*x4880 - x4744*x4906 - x4818*x4832 - x4821 + 6*x4852 + 6*x4854 + 12*x4861 + x4885 + x4909;
double x4912 = 14*x4835;
double x4913 = x4845*x782;
double x4914 = x4351*x791;
double x4915 = 42*x4835;
double x4916 = 26*x4829;
double x4917 = x4651*x820;
double x4918 = x4832*x830;
double x4919 = q8_b*x13;
double x4920 = x4919*x801;
double x4921 = x8*x811;
double x4922 = L*x4921;
double x4923 = 42*x4922;
double x4924 = L*x820;
double x4925 = x4845*x4924;
double x4926 = q8_b_dot*x782;
double x4927 = x369*x4926;
double x4928 = 11*x4835;
double x4929 = x3759*x820;
double x4930 = -x4929;
double x4931 = x4845*x811;
double x4932 = q8_b*x83;
double x4933 = x4932*x782;
double x4934 = 4*x782;
double x4935 = x4832*x4934;
double x4936 = 11*x4922;
double x4937 = x4832*x4924;
double x4938 = x197*x4926;
double x4939 = x4853*x820;
double x4940 = q8_b_dot*x1852;
double x4941 = x4940*x791;
double x4942 = x4837*x4845;
double x4943 = x369*x4877;
double x4944 = q7_b_dot*x811;
double x4945 = x1859*x4944;
double x4946 = x4919*x791;
double x4947 = x1858*x4946;
double x4948 = x4853*x791;
double x4949 = 4*x4948;
double x4950 = x3405 - x4949;
double x4951 = 12*x811;
double x4952 = x4832*x4951;
double x4953 = x4864*x4919;
double x4954 = x286*x4875;
double x4955 = x286*x4878;
double x4956 = x4832*x820;
double x4957 = x154*x4956;
double x4958 = x13*x4926;
double x4959 = x154*x4958;
double x4960 = 3*x4939;
double x4961 = 3*x4941;
double x4962 = x4919*x820;
double x4963 = x154*x4962;
double x4964 = q8_b_dot*x811;
double x4965 = x13*x4964;
double x4966 = x154*x4965;
double x4967 = x13*x4944;
double x4968 = x286*x4967;
double x4969 = x286*x4946;
double x4970 = q8_b_dot*x70;
double x4971 = x4970*x83;
double x4972 = x4971*x820;
double x4973 = x3435 - x4972;
double x4974 = x4919*x4951;
double x4975 = -x4974;
double x4976 = x3444 + x4975;
double x4977 = 8*x811;
double x4978 = x4832*x4977;
double x4979 = x4890*x4919;
double x4980 = x158*x4956;
double x4981 = x158*x4958;
double x4982 = x4884*x820;
double x4983 = x4971*x791;
double x4984 = x158*x4967;
double x4985 = x158*x4946;
double x4986 = x158*x4962;
double x4987 = x158*x4965;
double x4988 = x4986 + x4987;
double x4989 = x3466 + x4973 + x4988;
double x4990 = x4919*x4977;
double x4991 = x3469 - x4990;
double x4992 = -x4899 - x4900;
double x4993 = 18*x811;
double x4994 = -x14*x3409 + x4919*x4993;
double x4995 = x3474 + x4994;
double x4996 = x158*x4921;
double x4997 = x197*x830;
double x4998 = q8_b_dot*x4910 - q8_b_dot*x4997 + x129*x4956 - x129*x4962 + x327*x4875 + x327*x4878 - x327*x4946 - x327*x4967 - x4832*x4993 - x4906*x4919 - x4909 + 6*x4939 + 6*x4941 + 12*x4948 + x4972 + x4996;
double x4999 = x327*x4921;
double x5000 = x4932*x811;
double x5001 = x4432*x820;
double x5002 = 48*x4922;
double x5003 = 30*x820;
double x5004 = x362*x5003;
double x5005 = x362*x849;
double x5006 = 16*x5005;
double x5007 = x4919*x859;
double x5008 = q9_b*x13;
double x5009 = x5008*x830;
double x5010 = x8*x840;
double x5011 = L*x5010;
double x5012 = 48*x5011;
double x5013 = L*x849;
double x5014 = x4932*x5013;
double x5015 = q9_b_dot*x811;
double x5016 = x369*x5015;
double x5017 = 13*x4922;
double x5018 = 7*x5005;
double x5019 = x4932*x840;
double x5020 = q9_b*x83;
double x5021 = x5020*x811;
double x5022 = 4*x811;
double x5023 = x4919*x5022;
double x5024 = 13*x5011;
double x5025 = x4919*x5013;
double x5026 = x197*x5015;
double x5027 = x4940*x849;
double x5028 = q9_b_dot*x820;
double x5029 = x1852*x5028;
double x5030 = x4924*x4932;
double x5031 = x369*x4964;
double x5032 = q8_b_dot*x840;
double x5033 = x1859*x5032;
double x5034 = x5008*x820;
double x5035 = x1858*x5034;
double x5036 = x4940*x820;
double x5037 = 4*x5036;
double x5038 = x3520 - x5037;
double x5039 = 12*x840;
double x5040 = x4919*x5039;
double x5041 = x4951*x5008;
double x5042 = x286*x4962;
double x5043 = x286*x4965;
double x5044 = x4919*x849;
double x5045 = x154*x5044;
double x5046 = x13*x5015;
double x5047 = x154*x5046;
double x5048 = 3*x5027;
double x5049 = 3*x5029;
double x5050 = x5008*x849;
double x5051 = x154*x5050;
double x5052 = q9_b_dot*x840;
double x5053 = x13*x5052;
double x5054 = x154*x5053;
double x5055 = x13*x5032;
double x5056 = x286*x5055;
double x5057 = x286*x5034;
double x5058 = x5008*x5039;
double x5059 = -x5058;
double x5060 = x3545 + x5059;
double x5061 = q9_b_dot*x70;
double x5062 = x83*x849;
double x5063 = x5061*x5062;
double x5064 = x3554 - x5063;
double x5065 = 8*x840;
double x5066 = x5008*x5065;
double x5067 = x4919*x5065;
double x5068 = x4977*x5008;
double x5069 = x158*x5044;
double x5070 = x158*x5046;
double x5071 = x4971*x849;
double x5072 = x3738*x5028;
double x5073 = x158*x5055;
double x5074 = x158*x5034;
double x5075 = -x4986 - x4987;
double x5076 = x158*x5050;
double x5077 = x158*x5053;
double x5078 = x5076 + x5077;
double x5079 = x3573 + x5078;
double x5080 = x3578 + x5063;
double x5081 = 18*x840;
double x5082 = x158*x5010;
double x5083 = q9_b_dot*x859;
double x5084 = x1717*x3835;
double x5085 = x5008*x5081;
double x5086 = -x5084 + x5085;
double x5087 = q9_b_dot*x4997 + x129*x5044 - x129*x5050 - x197*x5083 + x327*x4962 + x327*x4965 - x327*x5034 - x327*x5055 - x4919*x5081 - x4993*x5008 - x4996 + 6*x5027 + 6*x5029 + 12*x5036 + x5082 + x5086;
double x5088 = x4023*x5010;
double x5089 = x5020*x840;
double x5090 = x4509*x849;
double x5091 = c*q10_i_dt;
double x5092 = x170*x5091;
double x5093 = q10_b*x13;
double x5094 = q9_b*x41;
double x5095 = q10_i_dot_dt*x362;
double x5096 = 18*c;
double x5097 = x83*x840;
double x5098 = q9_b*x57;
double x5099 = x0*x5098;
double x5100 = -x5076 - x5077;
double x5101 = 34*x5005 + 54*x5011 - 54*x5092 + x5093*x859 + x5094*x877 + x5095*x5096 - x5097*x876 - x5099*x872 + x5100;
double x5102 = x1852*x849;
double x5103 = q9_b_dot*x5102;
double x5104 = 4*x5103;
double x5105 = x3601 + x5104;
double x5106 = 4*x840;
double x5107 = 8*c;
double x5108 = q10_b_dot*x5102;
double x5109 = q9_b_dot*x3607;
double x5110 = x41*x5109;
double x5111 = x840*x876;
double x5112 = x5094*x872;
double x5113 = x5093*x849;
double x5114 = x3611*x865;
double x5115 = q10_b*x5097 + q10_i_dt*x5099 - x13*x5111 - x1858*x5113 + x369*x5052 - x41*x5114 - x5008*x5106 + 15*x5011 + x5013*x5020 + x5018 - 15*x5092 + x5095*x5107 + x5108 + x5110 - x5112;
double x5116 = x3607*x57;
double x5117 = q10_b_dot*x0;
double x5118 = x5116*x5117;
double x5119 = x3658 + x5118;
double x5120 = q10_b*x41;
double x5121 = x5120*x872;
double x5122 = q10_b_dot*x158;
double x5123 = q10_i_dt*x41;
double x5124 = q9_b_dot*x5123;
double x5125 = q10_b_dot*x70;
double x5126 = x13*x840;
double x5127 = -x158*x5113 - x158*x5124 + x2800*x5109 - x3655*x5094 + x3655*x5120 + x5062*x5125 - x5065*x5093 + x5066 + 4*x5112 - 4*x5121 - x5122*x5123 + x5122*x5126;
double x5128 = x41*x876;
double x5129 = q10_b_dot*x154;
double x5130 = -x1787*x5128 + x286*x5050 + x286*x5053 - x286*x5113 - x286*x5124 - x3667*x5094 + x3667*x5120 - x5039*x5093 + x5058 + 3*x5108 + 3*x5110 + 5*x5112 - 5*x5121 + x5126*x5129;
double x5131 = x3646*x5120;
double x5132 = x4648*x5091;
double x5133 = x4*x5116;
double x5134 = x5081*x5093;
double x5135 = x3646*x5094;
double x5136 = x327*x5050;
double x5137 = x327*x5053;
double x5138 = 12*x5103;
double x5139 = x859*x876;
double x5140 = x13*x5139;
double x5141 = 6*x5112;
double x5142 = 6*x5108;
double x5143 = 6*x5110;
double x5144 = 6*x5121;
double x5145 = x5128*x877;
double x5146 = x327*x5113;
double x5147 = x327*x5124;
double x5148 = pow(L, 3);
double x5149 = theta_dt*x0;
double x5150 = c*x5149;
double x5151 = x5150*x8;
double x5152 = pow(x0, 2);
double x5153 = psi_dt*x5;
double x5154 = c*phi_dt;
double x5155 = (2.0/3.0)*x5154;
double x5156 = x5153*x5155;
double x5157 = pow(x4, 2);
double x5158 = theta_dt*x4;
double x5159 = x19*x5158;
double x5160 = c*psi_dt;
double x5161 = x5159*x5160;
double x5162 = (2.0/3.0)*x0;
double x5163 = c*pow(phi_dt, 2);
double x5164 = x0*x5163;
double x5165 = q1_i*x5164;
double x5166 = L*x5164;
double x5167 = q1_i_dot*x5166;
double x5168 = theta_dt*x5152;
double x5169 = 6*x5154;
double x5170 = q1_b*x5169;
double x5171 = c*x5157;
double x5172 = x5153*x5171;
double x5173 = q1_b_dt*x5172;
double x5174 = c*x5152;
double x5175 = x5153*x5174;
double x5176 = q1_b_dt*x5175;
double x5177 = x20*x38;
double x5178 = theta_dt*x5157;
double x5179 = c*x5158;
double x5180 = q1_b_dt*x5179;
double x5181 = 6*x5180;
double x5182 = x2741*x5172;
double x5183 = x2741*x5175;
double x5184 = L*x20;
double x5185 = x5184*x52;
double x5186 = c*x20;
double x5187 = x5186*x64;
double x5188 = c*theta_dt;
double x5189 = x5152*x5188;
double x5190 = q1_b*x20;
double x5191 = x5189*x5190;
double x5192 = x15*x5171;
double x5193 = x120*x5192;
double x5194 = x2*x879;
double x5195 = x2741*x5194;
double x5196 = x15*x5174;
double x5197 = x120*x5196;
double x5198 = x5157*x5188;
double x5199 = x5190*x5198;
double x5200 = theta_dt*x5;
double x5201 = psi_dt*x5200;
double x5202 = c*x5201;
double x5203 = x4*x5202;
double x5204 = q1_i*x5203;
double x5205 = x13*x5186;
double x5206 = x49*x5205;
double x5207 = q1_b_dot*x5184;
double x5208 = x5189*x5207;
double x5209 = x5198*x5207;
double x5210 = L*x5202;
double x5211 = x4*x5210;
double x5212 = q1_i_dot*x5211;
double x5213 = 12*q1_b;
double x5214 = psi_dt*x10;
double x5215 = c*x5214;
double x5216 = x5215*x8;
double x5217 = q1_b_dot*x5215;
double x5218 = x4648*x5217;
double x5219 = 10*x5198;
double x5220 = q1_b*x2741;
double x5221 = q1_b_dot*q1_b_dt;
double x5222 = L*x5221;
double x5223 = q1_i*x51;
double x5224 = 10*L;
double x5225 = x5223*x5224;
double x5226 = x37*x49;
double x5227 = 10*x5178;
double x5228 = x5168*x5226;
double x5229 = x4*x5163;
double x5230 = q1_b*x5229;
double x5231 = q1_i_dot*x5230;
double x5232 = q1_b_dot*x5229;
double x5233 = q1_i*x5232;
double x5234 = x0*x20;
double x5235 = q1_b*x51;
double x5236 = x5234*x5235;
double x5237 = x183*x5234;
double x5238 = q1_b_dot_dt*x5186;
double x5239 = L*x5238;
double x5240 = x32*x5239;
double x5241 = x0*x5186;
double x5242 = x131*x5241;
double x5243 = q1_b*x120;
double x5244 = 10*x5154;
double x5245 = x5153*x5157;
double x5246 = x5244*x5245;
double x5247 = x5160*x6;
double x5248 = 10*x0;
double x5249 = x5247*x5248;
double x5250 = q1_b*q1_i_dot;
double x5251 = x4185*x5186;
double x5252 = q1_b_dot*q1_i;
double x5253 = 5*x5210;
double x5254 = x0*x5250;
double x5255 = q1_b_dot*x5202;
double x5256 = x32*x5255;
double x5257 = x5152*x5153;
double x5258 = x5244*x5257;
double x5259 = x170*x5150;
double x5260 = 20*x5259;
double x5261 = q1_b*q1_b_dot;
double x5262 = x5161*x5243;
double x5263 = q1_i_dot*x5232;
double x5264 = 4*x5198;
double x5265 = q1_b_dot_dt*x70;
double x5266 = q1_b_dot*x5265;
double x5267 = 4*x5178;
double x5268 = x138*x51;
double x5269 = 4*x5168;
double x5270 = pow(q1_b_dot, 2);
double x5271 = 4*x5150;
double x5272 = x362*x5271;
double x5273 = x57*x70;
double x5274 = x5257*x5273;
double x5275 = x19*x3;
double x5276 = x0*x5275;
double x5277 = x174*x51;
double x5278 = c*x5275;
double x5279 = x0*x5278;
double x5280 = q1_i_dot*x5265;
double x5281 = x5245*x5273;
double x5282 = x20*x4;
double x5283 = x5282*x57;
double x5284 = q1_i_dot*x174;
double x5285 = c*x2;
double x5286 = x5153*x5285;
double x5287 = x4*x5186;
double x5288 = x2*x70;
double x5289 = x5287*x5288;
double x5290 = x0*x5247;
double x5291 = 4*x5290;
double x5292 = x140 + x176 + x3108*x5263 + x5264*x5266 + x5266*x5291 + x5267*x5268 + x5268*x5269 - x5270*x5272 - x5270*x5274 + x5270*x5281 - x5270*x5289 - x5276*x5277 - x5279*x5280 - x5283*x5284 - x5284*x5286;
double x5293 = x151*x5230;
double x5294 = q1_b*q1_b_dt;
double x5295 = 24*x5294;
double x5296 = x5198*x5295;
double x5297 = q1_i*x37;
double x5298 = 24*x5178;
double x5299 = x5297*x5298;
double x5300 = x5168*x5297;
double x5301 = 24*x5300;
double x5302 = pow(q1_b, 2);
double x5303 = x5151*x5302;
double x5304 = 24*x5303;
double x5305 = x5153*x5302;
double x5306 = 12*x5154;
double x5307 = x5152*x5306;
double x5308 = x5305*x5307;
double x5309 = q1_b*x37;
double x5310 = x5234*x5309;
double x5311 = 12*x5310;
double x5312 = 12*x5186;
double x5313 = q1_b_dt*x32;
double x5314 = x5312*x5313;
double x5315 = x5157*x5305;
double x5316 = x5306*x5315;
double x5317 = x5186*x8;
double x5318 = q1_b*x151;
double x5319 = x5317*x5318;
double x5320 = x32*x5202;
double x5321 = x5213*x5320;
double x5322 = 12*x0;
double x5323 = x5161*x5302;
double x5324 = x5322*x5323;
double x5325 = x5290*x5295;
double x5326 = x152 + x180 + x5293 + x5296 + x5299 + x5301 - x5304 - x5308 - x5311 - x5314 + x5316 - x5319 - x5321 - x5324 + x5325;
double x5327 = q1_i*x5230;
double x5328 = x5198*x5294;
double x5329 = x5178*x5297;
double x5330 = 8*x5154;
double x5331 = x5152*x5305;
double x5332 = 8*x5186;
double x5333 = q1_b*q1_i;
double x5334 = x5332*x8;
double x5335 = 8*q1_b;
double x5336 = 8*x0;
double x5337 = 16*x5290;
double x5338 = x5292 + x5294*x5337 + 16*x5300 - 16*x5303 - 8*x5310 - x5313*x5332 + x5315*x5330 - x5320*x5335 - x5323*x5336 + 8*x5327 + 16*x5328 + 16*x5329 - x5330*x5331 - x5333*x5334;
double x5339 = 8*x5198;
double x5340 = x5220*x5339;
double x5341 = x5222*x5339;
double x5342 = 8*x5178;
double x5343 = L*x5223;
double x5344 = x5342*x5343;
double x5345 = 8*x5168;
double x5346 = x5343*x5345;
double x5347 = x5226*x5342;
double x5348 = x5226*x5345;
double x5349 = x158*x5231;
double x5350 = x158*x5233;
double x5351 = x158*x5236;
double x5352 = x158*x5237;
double x5353 = 4*x5239;
double x5354 = x32*x5353;
double x5355 = x158*x5242;
double x5356 = q1_b*x5330;
double x5357 = x120*x5356;
double x5358 = x5245*x5357;
double x5359 = x5247*x5336;
double x5360 = x5220*x5359;
double x5361 = x5222*x5359;
double x5362 = x4648*x5186;
double x5363 = x5250*x5362;
double x5364 = x5252*x5362;
double x5365 = 4*x5210;
double x5366 = x5254*x5365;
double x5367 = x158*x5256;
double x5368 = x5257*x5357;
double x5369 = 16*x5259;
double x5370 = x5261*x5369;
double x5371 = x5262*x5336;
double x5372 = -x5340 - x5341 - x5344 - x5346 - x5347 - x5348 - x5349 - x5350 + x5351 + x5352 + x5354 + x5355 - x5358 - x5360 - x5361 + x5363 + x5364 + x5366 + x5367 + x5368 + x5370 + x5371;
double x5373 = L*x5165;
double x5374 = 4*x5373;
double x5375 = 12*x5198;
double x5376 = x3943*x5198;
double x5377 = x151*x3701;
double x5378 = 12*x5178;
double x5379 = L*x5178;
double x5380 = x5356*x5379;
double x5381 = 8*x5180;
double x5382 = x323*x5381;
double x5383 = x158*x5176;
double x5384 = x158*x5177;
double x5385 = x158*x5173;
double x5386 = L*x5168;
double x5387 = x5356*x5386;
double x5388 = x158*x5199;
double x5389 = x4*x5365;
double x5390 = q1_i*x5389;
double x5391 = x158*x5187;
double x5392 = x158*x5191;
double x5393 = x0*x5207;
double x5394 = 6*x5186;
double x5395 = x323*x5394;
double x5396 = x170*x5215;
double x5397 = 16*q1_b;
double x5398 = x5396*x5397;
double x5399 = x5245*x5306;
double x5400 = x5247*x5322;
double x5401 = x3943*x5290;
double x5402 = x170*x5394;
double x5403 = 6*x5210;
double x5404 = x5153*x5307;
double x5405 = 24*x5259;
double x5406 = x3943*x5161;
double x5407 = x0*x5406;
double x5408 = x5164*x70;
double x5409 = q1_i_dot*x5408;
double x5410 = 2*x5409;
double x5411 = 18*x5154;
double x5412 = 18*x5186;
double x5413 = 4*x5154;
double x5414 = x174*x5413;
double x5415 = x5168*x5414;
double x5416 = x3*x5;
double x5417 = x5171*x5265;
double x5418 = x5416*x5417;
double x5419 = x5174*x5416;
double x5420 = x5265*x5419;
double x5421 = x134*x5275;
double x5422 = x5178*x5414;
double x5423 = q1_b_dot_dt*x5179;
double x5424 = x5423*x70;
double x5425 = 4*x5424;
double x5426 = x0*x5425;
double x5427 = x5412*x8;
double x5428 = 18*q1_b;
double x5429 = 18*x0;
double x5430 = x5234*x57;
double x5431 = x138*x5430;
double x5432 = x1*x5152;
double x5433 = x174*x5186;
double x5434 = x5432*x5433;
double x5435 = x1*x5157;
double x5436 = x5433*x5435;
double x5437 = c*x9;
double x5438 = x5153*x5437;
double x5439 = x138*x5438;
double x5440 = 36*x0;
double x5441 = x5247*x5440;
double x5442 = 8*x362;
double x5443 = x5217*x5442;
double x5444 = x5294*x5441 + 36*x5300 - 36*x5303 - 18*x5310 - x5313*x5412 + x5315*x5411 - x5320*x5428 - x5323*x5429 + 18*x5327 + 36*x5328 + 36*x5329 - x5331*x5411 - x5333*x5427 + x5410 - x5415 - x5418 + x5420 + x5421 + x5422 + x5426 - x5431 - x5434 + x5436 + x5439 + x5443;
double x5445 = p1_i*x5164;
double x5446 = p1_i*x5229;
double x5447 = p1_b*x5446;
double x5448 = p1_b*p1_b_dt;
double x5449 = p1_i*x210;
double x5450 = p1_b*x5413;
double x5451 = p1_b_dt*x5179;
double x5452 = 4*x5451;
double x5453 = L*x5452;
double x5454 = pow(p1_b, 2);
double x5455 = x5151*x5454;
double x5456 = L*p1_b_dt;
double x5457 = p1_b*x210;
double x5458 = p1_b_dt*x5278;
double x5459 = x5454*x57;
double x5460 = x5171*x5416;
double x5461 = x5186*x5435;
double x5462 = L*p1_b;
double x5463 = L*x5438;
double x5464 = p1_b*p1_i;
double x5465 = x2*x5287;
double x5466 = x5186*x5432;
double x5467 = x5184*x57;
double x5468 = x4432*x5215;
double x5469 = x5272 + x5274 - x5281 + x5289;
double x5470 = p1_i_dot*x5229;
double x5471 = p1_b*x5470;
double x5472 = p1_b_dot*x5446;
double x5473 = p1_b_dt*x5175;
double x5474 = x210*x5282;
double x5475 = p1_b_dt*x5172;
double x5476 = x1*x5171;
double x5477 = p1_b*p1_b_dot_dt;
double x5478 = p1_b_dot*p1_b_dt;
double x5479 = p1_i*x202;
double x5480 = p1_i_dot*x210;
double x5481 = p1_b*x20;
double x5482 = x5198*x5481;
double x5483 = p1_b*x202;
double x5484 = x5234*x5483;
double x5485 = x5189*x5481;
double x5486 = x340*x5234;
double x5487 = p1_b_dot_dt*x5186;
double x5488 = x283*x5241;
double x5489 = p1_i*x5205;
double x5490 = x4648*x5150;
double x5491 = L*x57;
double x5492 = x5257*x5491;
double x5493 = x5245*x5491;
double x5494 = p1_b_dot*x5184;
double x5495 = p1_b*p1_i_dot;
double x5496 = x0*x5202;
double x5497 = p1_b_dot*p1_i;
double x5498 = p1_b_dot*x5202;
double x5499 = x240*x5498;
double x5500 = p1_b*p1_b_dot;
double x5501 = 4*x5151;
double x5502 = L*x2;
double x5503 = x5287*x5502;
double x5504 = x5500*x57;
double x5505 = c*x7;
double x5506 = x0*x5505;
double x5507 = 4*x5216;
double x5508 = x4648*x5215;
double x5509 = 14*x5198;
double x5510 = p1_b*x1981;
double x5511 = p1_b_dt*x450;
double x5512 = 14*x5178;
double x5513 = p1_i*x368;
double x5514 = 14*x5168;
double x5515 = x210*x249;
double x5516 = x0*x5184;
double x5517 = 7*x5516;
double x5518 = L*x5487;
double x5519 = x240*x5518;
double x5520 = 28*x5259;
double x5521 = 14*x5154;
double x5522 = p1_b*x5521;
double x5523 = x450*x5522;
double x5524 = x4351*x5186;
double x5525 = 7*x5210;
double x5526 = x0*x5495;
double x5527 = 14*x0;
double x5528 = x5247*x5527;
double x5529 = p1_b*x450;
double x5530 = x5161*x5527;
double x5531 = p1_b_dot*x70;
double x5532 = x5470*x5531;
double x5533 = p1_b_dot_dt*x5531;
double x5534 = p1_i_dot*x345;
double x5535 = pow(p1_b_dot, 2);
double x5536 = 8*x5150;
double x5537 = x362*x5536;
double x5538 = 4*x5234;
double x5539 = p1_b_dot*x345;
double x5540 = 4*x70;
double x5541 = p1_i_dot*x5540;
double x5542 = x0*x5541;
double x5543 = x5257*x5413;
double x5544 = x5535*x70;
double x5545 = x5245*x5413;
double x5546 = p1_b_dot*p1_i_dot;
double x5547 = 4*x5186;
double x5548 = x362*x5547;
double x5549 = x5161*x5540;
double x5550 = x0*x5549;
double x5551 = x5339*x5533 + x5342*x5534 + x5345*x5534 + x5359*x5533 - x5487*x5542 - x5498*x5542 + 4*x5532 - x5535*x5537 - x5535*x5550 - x5538*x5539 - x5543*x5544 + x5544*x5545 - x5546*x5548;
double x5552 = 12*x5447;
double x5553 = 24*x5198;
double x5554 = x5448*x5553;
double x5555 = x5298*x5449;
double x5556 = 24*x5168;
double x5557 = x5449*x5556;
double x5558 = 24*x5455;
double x5559 = 12*x5234;
double x5560 = x5457*x5559;
double x5561 = p1_i*x5241;
double x5562 = x299*x5561;
double x5563 = x5404*x5454;
double x5564 = x5399*x5454;
double x5565 = x5312*x8;
double x5566 = x5464*x5565;
double x5567 = 12*x5202;
double x5568 = p1_b*x5567;
double x5569 = x240*x5568;
double x5570 = x5161*x5454;
double x5571 = x5322*x5570;
double x5572 = 24*x0;
double x5573 = x5247*x5572;
double x5574 = x5448*x5573;
double x5575 = x5552 + x5554 + x5555 + x5557 - x5558 - x5560 - x5562 - x5563 + x5564 - x5566 - x5569 - x5571 + x5574;
double x5576 = x158*x5471;
double x5577 = x158*x5472;
double x5578 = x5339*x5510;
double x5579 = x5339*x5511;
double x5580 = x5342*x5513;
double x5581 = x5345*x5513;
double x5582 = x5342*x5515;
double x5583 = x5345*x5515;
double x5584 = x158*x5484;
double x5585 = x158*x5486;
double x5586 = 4*x5518;
double x5587 = x240*x5586;
double x5588 = x158*x5488;
double x5589 = x5369*x5500;
double x5590 = x5257*x5330;
double x5591 = x5529*x5590;
double x5592 = x5362*x5495;
double x5593 = x0*x5365;
double x5594 = x5495*x5593;
double x5595 = x5362*x5497;
double x5596 = x158*x5499;
double x5597 = x5245*x5330;
double x5598 = x5529*x5597;
double x5599 = x5359*x5510;
double x5600 = x5359*x5511;
double x5601 = x5161*x5336;
double x5602 = x5529*x5601;
double x5603 = x3108*x5470;
double x5604 = p1_b_dot_dt*x70;
double x5605 = p1_i_dot*x5604;
double x5606 = p1_i_dot*x5531;
double x5607 = p1_i_dot*x5285;
double x5608 = x5153*x5607;
double x5609 = p1_b_dot*x5603 + x5264*x5533 + x5267*x5534 + x5269*x5534 - x5272*x5535 - x5274*x5535 - x5276*x5539 - x5279*x5605 + x5281*x5535 - x5283*x5606 - x5289*x5535 + x5291*x5533 - x5531*x5608;
double x5610 = x315 + x354 + x5609;
double x5611 = 16*x5198;
double x5612 = 16*x5449;
double x5613 = 8*x5234;
double x5614 = p1_b_dt*p1_i;
double x5615 = 8*x5241;
double x5616 = 8*x5202;
double x5617 = p1_b*x5616;
double x5618 = -x240*x5617 + x5168*x5612 + x5178*x5612 - x5334*x5464 - x5336*x5570 + x5337*x5448 + 8*x5447 + x5448*x5611 - x5454*x5590 + x5454*x5597 - 16*x5455 - x5457*x5613 - x5614*x5615;
double x5619 = x158*x5445;
double x5620 = x5330*x5386;
double x5621 = p1_b*x5620;
double x5622 = x158*x5475;
double x5623 = x158*x5473;
double x5624 = x158*x5474;
double x5625 = x5330*x5379;
double x5626 = p1_b*x5625;
double x5627 = 8*x5451;
double x5628 = x323*x5627;
double x5629 = 32*x5198;
double x5630 = 32*x5178;
double x5631 = 32*x5168;
double x5632 = x362*x5150;
double x5633 = 24*x5632;
double x5634 = 16*x5516;
double x5635 = 12*x314;
double x5636 = x158*x5485;
double x5637 = x158*x5489;
double x5638 = x158*x5482;
double x5639 = p1_i*x5389;
double x5640 = 64*x5259;
double x5641 = 32*x5154;
double x5642 = x5529*x5641;
double x5643 = 16*x5186;
double x5644 = x170*x5643;
double x5645 = 16*x5210;
double x5646 = x362*x5312;
double x5647 = x5161*x70;
double x5648 = x5322*x5647;
double x5649 = 16*x5396;
double x5650 = p1_b*x5649;
double x5651 = 32*x5290;
double x5652 = 32*x0;
double x5653 = x5161*x5652;
double x5654 = p1_i_dot*x5408;
double x5655 = 36*x5198;
double x5656 = 36*x5449;
double x5657 = 18*x5234;
double x5658 = 18*x5241;
double x5659 = x5257*x5411;
double x5660 = x5168*x5413;
double x5661 = x5178*x5413;
double x5662 = x5245*x5411;
double x5663 = 18*x5202;
double x5664 = p1_b*x5663;
double x5665 = x5234*x5273;
double x5666 = x5438*x70;
double x5667 = x5215*x5442;
double x5668 = p1_b_dot*x5667 - p1_i_dot*x5665 + p1_i_dot*x5666 - x240*x5664 + x293*x5271 + x373*x5275 + x5168*x5656 + x5178*x5656 + x5419*x5604 - x5427*x5464 - x5429*x5570 + x5441*x5448 + 18*x5447 + x5448*x5655 - x5454*x5659 + x5454*x5662 - 36*x5455 - x5457*x5657 - x5460*x5604 + x5461*x5531 - x5466*x5531 - x5531*x5660 + x5531*x5661 - x5614*x5658 + 2*x5654;
double x5669 = p1_b*x5244;
double x5670 = x5413*x5454;
double x5671 = x158*x5198;
double x5672 = x158*x5178;
double x5673 = x158*x5168;
double x5674 = 4*x5241;
double x5675 = x0*x5224;
double x5676 = x323*x5275;
double x5677 = x323*x5278;
double x5678 = x5547*x8;
double x5679 = 4*x5202;
double x5680 = 4*x0;
double x5681 = p1_i*x4;
double x5682 = x4432*x5150;
double x5683 = x450*x5450;
double x5684 = p1_b*x57;
double x5685 = x249*x5684;
double x5686 = p1_b*x249;
double x5687 = p1_i*x450;
double x5688 = x158*x5290;
double x5689 = 20*x5396;
double x5690 = x158*x5161;
double x5691 = x0*x5690;
double x5692 = x5169*x5531;
double x5693 = 3*x5604;
double x5694 = 6*x5150;
double x5695 = x20*x70;
double x5696 = p1_b_dot*x5695;
double x5697 = 3*x5696;
double x5698 = x1852*x5186;
double x5699 = 3*p1_i_dot;
double x5700 = x5202*x70;
double x5701 = 3*x5700;
double x5702 = p1_i_dot*x4;
double x5703 = x362*x5215;
double x5704 = p1_b_dot*x5703;
double x5705 = 3*x20*x373 + x293*x5694 - x5168*x5692 - x5172*x5693 + x5175*x5693 + x5178*x5692 - x5189*x5697 + x5198*x5697 + 3*x5654 - x5698*x5699 + x5701*x5702 + 12*x5704;
double x5706 = p1_b*x5306;
double x5707 = x5306*x5531;
double x5708 = 6*x5604;
double x5709 = L*x5282;
double x5710 = 6*x20;
double x5711 = 12*x5451;
double x5712 = 12*x5150;
double x5713 = x197*x5394;
double x5714 = 6*x5189;
double x5715 = x1852*x5394;
double x5716 = 6*x5198;
double x5717 = 6*x5700;
double x5718 = 24*x5396;
double x5719 = x319 + x359 - x5576 - x5577 - x5578 - x5579 - x5580 - x5581 - x5582 - x5583 + x5584 + x5585 + x5587 + x5588 + x5589 + x5591 + x5592 + x5594 + x5595 + x5596 - x5598 - x5599 - x5600 + x5602 + x5609;
double x5720 = q1_b*x5413;
double x5721 = L*q1_b_dt;
double x5722 = q1_b_dt*x5278;
double x5723 = L*x5275;
double x5724 = 4*x5180;
double x5725 = L*x5724;
double x5726 = L*q1_b;
double x5727 = q1_b*x57;
double x5728 = x5282*x5727;
double x5729 = q1_i*x5285;
double x5730 = x5153*x5729;
double x5731 = q1_b*x5196;
double x5732 = q1_b*x5192;
double x5733 = q1_b*q1_b_dot_dt;
double x5734 = q1_b_dt*x5194;
double x5735 = q1_i_dot*x37;
double x5736 = q1_b_dot*x5727;
double x5737 = 4*q1_b;
double x5738 = q2_i_dot*x5408;
double x5739 = 2*x5738;
double x5740 = q2_i*x5164;
double x5741 = L*x5740;
double x5742 = q2_i*x5230;
double x5743 = q2_b*x5229;
double x5744 = q1_i*x5743;
double x5745 = q1_b*q2_b_dt;
double x5746 = q1_b_dt*q2_b;
double x5747 = x151*x637;
double x5748 = q2_i*x37;
double x5749 = 12*x5748;
double x5750 = q1_b*x5306;
double x5751 = q2_b*x5306;
double x5752 = 12*x5180;
double x5753 = x2743*x5172;
double x5754 = q1_b*x5234;
double x5755 = q1_b_dt*x5394;
double x5756 = q2_b_dt*x5394;
double x5757 = q2_b*x5234;
double x5758 = q1_b*x2727;
double x5759 = q1_b_dt*q2_b_dot;
double x5760 = q1_i*x646;
double x5761 = q2_i_dot*x37;
double x5762 = x3726*x5661;
double x5763 = q2_b_dot_dt*x5179;
double x5764 = x5763*x70;
double x5765 = 4*x5764;
double x5766 = x0*x5765;
double x5767 = x5230*x663;
double x5768 = q2_b_dot*x5229;
double x5769 = q1_i*x5768;
double x5770 = x2738*x5419;
double x5771 = x2736*x5275;
double x5772 = x2738*x5460;
double x5773 = x3726*x5660;
double x5774 = x2743*x5175;
double x5775 = x1344*x20;
double x5776 = q2_b_dt*x5179;
double x5777 = 12*x5776;
double x5778 = q1_b*q2_b;
double x5779 = x5151*x5778;
double x5780 = q2_b*x20;
double x5781 = x5189*x5780;
double x5782 = q1_b*q2_i;
double x5783 = x5394*x8;
double x5784 = q1_i*q2_b;
double x5785 = 6*x5202;
double x5786 = q1_b*x5785;
double x5787 = q2_b*x5785;
double x5788 = x3726*x5461;
double x5789 = x2797*x5438;
double x5790 = q1_b*x3685;
double x5791 = x2727*x5278;
double x5792 = x2797*x5430;
double x5793 = x3726*x5466;
double x5794 = L*x5394;
double x5795 = x5198*x5780;
double x5796 = q2_i*x4;
double x5797 = x5161*x5778;
double x5798 = q2_b_dot*x5667;
double x5799 = x5720*x662;
double x5800 = q1_i*x662;
double x5801 = q1_b*x663;
double x5802 = q1_b*q2_b_dot;
double x5803 = q1_i*x3776;
double x5804 = x2797*x5232;
double x5805 = x5768*x70;
double x5806 = q1_i_dot*x5805;
double x5807 = q1_b_dot*x2743;
double x5808 = x129*x5198;
double x5809 = q1_b_dot_dt*q2_b;
double x5810 = x49*x656;
double x5811 = x129*x5178;
double x5812 = q2_i*x51;
double x5813 = x129*x5168;
double x5814 = q2_i*x5232;
double x5815 = x49*x5743;
double x5816 = q1_b_dt*x662;
double x5817 = q1_i*x3685;
double x5818 = x37*x663;
double x5819 = x5276*x637;
double x5820 = q2_b_dt*x5278;
double x5821 = q2_b*x37;
double x5822 = q1_b_dot*x2738;
double x5823 = q2_b_dot*x5265;
double x5824 = x138*x646;
double x5825 = x2797*x51;
double x5826 = q1_b*x5198;
double x5827 = x5516*x646;
double x5828 = q1_b_dt*x663;
double x5829 = q2_b_dot_dt*x5186;
double x5830 = L*x5829;
double x5831 = x32*x5830;
double x5832 = q1_b_dot*x5695;
double x5833 = x4*x5700;
double x5834 = x5184*x5189;
double x5835 = x5234*x70;
double x5836 = x3695*x5835;
double x5837 = x2798*x5238;
double x5838 = x139*x5829;
double x5839 = x3726*x51;
double x5840 = x5234*x5839;
double x5841 = q2_b*x5720;
double x5842 = x5393*x637;
double x5843 = x1367*x5239;
double x5844 = q1_i_dot*x5241;
double x5845 = 3*x5516;
double x5846 = q2_b*x51;
double x5847 = x170*x5186;
double x5848 = q1_b*q2_i_dot;
double x5849 = q1_i*q2_b_dot;
double x5850 = x0*x5210;
double x5851 = q2_b_dot*x5202;
double x5852 = L*x5851;
double x5853 = x362*x5186;
double x5854 = q2_i_dot*x5853;
double x5855 = q1_b_dot*x5854;
double x5856 = q2_b_dot*x5853;
double x5857 = q1_i_dot*x5856;
double x5858 = x2798*x5255;
double x5859 = x139*x5851;
double x5860 = x5169*x5245;
double x5861 = q2_b*x120;
double x5862 = 6*x5290;
double x5863 = x129*x5290;
double x5864 = x120*x5720;
double x5865 = q1_b_dot*q2_b_dot;
double x5866 = x5727*x662;
double x5867 = x57*x5709;
double x5868 = q1_b*x49;
double x5869 = L*x5285;
double x5870 = x5153*x5869;
double x5871 = q1_b_dot*x3726;
double x5872 = x57*x5871;
double x5873 = q1_b_dot*q2_i;
double x5874 = x4017*x5186;
double x5875 = q1_i_dot*q2_b;
double x5876 = x1367*x5255;
double x5877 = 3*x5210;
double x5878 = x0*x5875;
double x5879 = q1_b*x2802;
double x5880 = 4*x362;
double x5881 = x5169*x5257;
double x5882 = 12*x5259;
double x5883 = q1_b_dot*q2_b;
double x5884 = x2*x3726;
double x5885 = x5287*x5884;
double x5886 = q1_b*x662;
double x5887 = x129*x5161;
double x5888 = x0*x5887;
double x5889 = q2_b*x5192;
double x5890 = q2_b*x5196;
double x5891 = x197*x5186;
double x5892 = q2_b*x5184;
double x5893 = x5189*x5892;
double x5894 = -L*x5775 - L*x5889 + L*x5890 - q2_b*x5508 - q2_i*x5211 + q2_i*x5891 - x2743*x5194 - x5198*x5892 - x5741 + x5753 - x5774 + x5893;
double x5895 = x5270*x70;
double x5896 = x3702*x5540;
double x5897 = x0*x5540;
double x5898 = q1_i_dot*x5897;
double x5899 = q1_b_dot*q1_i_dot;
double x5900 = -x5234*x5896 - x5238*x5898 - x5255*x5898 + x5263*x5540 + x5266*x5339 + x5266*x5359 + x5268*x5342 + x5268*x5345 - x5270*x5537 - x5270*x5550 - x5543*x5895 + x5545*x5895 - x5548*x5899;
double x5901 = q1_i*x637;
double x5902 = 16*x5901;
double x5903 = 16*x5748;
double x5904 = q2_b*x2741;
double x5905 = x3733*x49;
double x5906 = q2_i*x3701;
double x5907 = q2_i_dot*x3108;
double x5908 = x3108*x5768;
double x5909 = x1367*x5332;
double x5910 = q2_b_dt*x5332;
double x5911 = 16*x5154;
double x5912 = x5778*x5911;
double x5913 = x158*x646;
double x5914 = q1_b_dt*x5241;
double x5915 = 4*x5830;
double x5916 = x158*x5234;
double x5917 = x3695*x70;
double x5918 = x313*x5278;
double x5919 = q1_i_dot*x2743;
double x5920 = x158*x51;
double x5921 = x1367*x5202;
double x5922 = q2_b*x5320;
double x5923 = x5356*x662;
double x5924 = x158*x5851;
double x5925 = q1_b_dot*x2797;
double x5926 = q1_i_dot*x3726;
double x5927 = x158*x5255;
double x5928 = 16*x0;
double x5929 = q2_b_dot*x5540;
double x5930 = q1_b_dot*x0;
double x5931 = x5161*x5930;
double x5932 = q2_b*x2727;
double x5933 = x5339*x5932;
double x5934 = q2_b_dot*x2743;
double x5935 = x5339*x5934;
double x5936 = q2_i*x3685;
double x5937 = x5342*x5936;
double x5938 = x5345*x5936;
double x5939 = x3733*x663;
double x5940 = x5178*x5939;
double x5941 = x5168*x5939;
double x5942 = q2_i_dot*x5743;
double x5943 = x158*x5942;
double x5944 = q2_i*x5768;
double x5945 = x158*x5944;
double x5946 = q2_b*x646;
double x5947 = x5234*x5946;
double x5948 = x158*x5947;
double x5949 = x3720*x5234;
double x5950 = x158*x5949;
double x5951 = x1367*x5915;
double x5952 = q2_i_dot*x2743;
double x5953 = x5674*x5952;
double x5954 = q2_b*x662;
double x5955 = x5597*x5954;
double x5956 = x5359*x5932;
double x5957 = x5359*x5934;
double x5958 = q2_b*q2_i_dot;
double x5959 = x5362*x5958;
double x5960 = q2_b_dot*q2_i;
double x5961 = x5362*x5960;
double x5962 = x5593*x5958;
double x5963 = x1367*x5851;
double x5964 = x158*x5963;
double x5965 = x5590*x5954;
double x5966 = q2_b*q2_b_dot;
double x5967 = x5369*x5966;
double x5968 = x5601*x5954;
double x5969 = q2_b_dot*x2738;
double x5970 = x2797*x646;
double x5971 = pow(q2_b_dot, 2);
double x5972 = x3726*x646;
double x5973 = q2_i_dot*x2738;
double x5974 = q2_b_dot*x2797;
double x5975 = q2_i_dot*x5908 + x5264*x5969 + x5267*x5970 + x5269*x5970 - x5272*x5971 - x5274*x5971 - x5276*x5972 - x5279*x5973 + x5281*x5971 - x5283*x5974 - x5286*x5974 - x5289*x5971 + x5291*x5969;
double x5976 = x2781 + x3728 + x5975;
double x5977 = x2925 + x3833 - x5933 - x5935 - x5937 - x5938 - x5940 - x5941 - x5943 - x5945 + x5948 + x5950 + x5951 + x5953 - x5955 - x5956 - x5957 + x5959 + x5961 + x5962 + x5964 + x5965 + x5967 + x5968 + x5976;
double x5978 = q2_i*x5743;
double x5979 = q2_b*q2_b_dt;
double x5980 = q2_i*x637;
double x5981 = 16*x5980;
double x5982 = pow(q2_b, 2);
double x5983 = x5151*x5982;
double x5984 = q2_b*q2_i;
double x5985 = q2_b*x1367;
double x5986 = x5161*x5982;
double x5987 = -q2_b_dt*x5909 + x2819 - x3733*x5757 + x3747 + x5168*x5981 + x5178*x5981 - x5334*x5984 - x5336*x5986 + x5337*x5979 - x5590*x5982 + x5597*x5982 + x5611*x5979 - x5616*x5985 + 8*x5978 - 16*x5983;
double x5988 = x49*x637;
double x5989 = 10*x5168;
double x5990 = x637*x663;
double x5991 = 6*x5178;
double x5992 = 6*x5168;
double x5993 = q1_b_dt*x1367;
double x5994 = x32*x5186;
double x5995 = 14*x5223;
double x5996 = 24*x5154;
double x5997 = q2_b*x5996;
double x5998 = q1_b*x5997;
double x5999 = x5754*x646;
double x6000 = x154*x5234;
double x6001 = x1367*x5830;
double x6002 = 5*x5241;
double x6003 = q2_b*x151;
double x6004 = x5257*x5521;
double x6005 = x5245*x5521;
double x6006 = 12*x5632;
double x6007 = x0*x5253;
double x6008 = x32*x5851;
double x6009 = 6*x2738;
double x6010 = q1_b_dot*x6009;
double x6011 = x5161*x5248;
double x6012 = 6*x3726;
double x6013 = 12*x5978;
double x6014 = x5553*x5979;
double x6015 = x5298*x5980;
double x6016 = x5556*x5980;
double x6017 = 24*x5983;
double x6018 = x5404*x5982;
double x6019 = x3706*x5757;
double x6020 = x1367*x5186;
double x6021 = x2788*x6020;
double x6022 = x5399*x5982;
double x6023 = x5565*x5984;
double x6024 = x5567*x5985;
double x6025 = x5322*x5986;
double x6026 = x5573*x5979;
double x6027 = x2789 + x3730 + x6013 + x6014 + x6015 + x6016 - x6017 - x6018 - x6019 - x6021 + x6022 - x6023 - x6024 - x6025 + x6026;
double x6028 = 36*x5901;
double x6029 = 36*x5748;
double x6030 = 4*x5741;
double x6031 = q2_i*x646;
double x6032 = x3943*x5178;
double x6033 = x3943*x5168;
double x6034 = x3706*x663;
double x6035 = q2_b*x5625;
double x6036 = 8*x5776;
double x6037 = x323*x6036;
double x6038 = 4*x5774;
double x6039 = x158*x5775;
double x6040 = 4*x5753;
double x6041 = q2_b*x5620;
double x6042 = x151*x3685;
double x6043 = 12*x5168;
double x6044 = 12*x138;
double x6045 = 18*q2_b_dt;
double x6046 = 32*x5223;
double x6047 = 36*x5154;
double x6048 = x5778*x6047;
double x6049 = 12*x139;
double x6050 = x158*x5795;
double x6051 = q2_i*x5389;
double x6052 = q2_i*x5205;
double x6053 = x158*x6052;
double x6054 = x158*x5781;
double x6055 = x5516*x656;
double x6056 = x0*x5394;
double x6057 = 16*x2743;
double x6058 = x5243*x5641;
double x6059 = x5641*x5861;
double x6060 = q2_b*x5649;
double x6061 = x0*x5403;
double x6062 = x362*x5394;
double x6063 = q2_i_dot*x6062;
double x6064 = q1_i_dot*q2_b_dot;
double x6065 = x5161*x5322;
double x6066 = 36*x5980;
double x6067 = x2823 - x3749*x5757 + x3750 + x5168*x6066 + x5178*x6066 - x5427*x5984 - x5429*x5986 + x5441*x5979 + x5655*x5979 - x5659*x5982 + x5662*x5982 - x5663*x5985 + x5739 + x5762 + x5766 + x5770 + x5771 - x5772 - x5773 + x5788 + x5789 - x5792 - x5793 + x5798 + 18*x5978 - 36*x5983 - x6020*x6045;
double x6068 = q2_i*x3776;
double x6069 = x57*x5982;
double x6070 = x5336*x5647 + x5590*x70 - x5597*x70 + 16*x5632;
double x6071 = x3834 + x6030 + x6035 + x6037 + x6038 + x6039 - x6040 - x6041 + x6050 + x6051 - x6053 - x6054 + x6060;
double x6072 = 2*x5166;
double x6073 = q2_b*q2_b_dot_dt;
double x6074 = q2_b_dot*q2_b_dt;
double x6075 = q2_i_dot*x637;
double x6076 = L*x5413;
double x6077 = x5245*x6076;
double x6078 = x5257*x6076;
double x6079 = L*x5763;
double x6080 = 4*x6079;
double x6081 = q2_b*x57;
double x6082 = q2_b_dot*x6081;
double x6083 = q3_i_dot*x5408;
double x6084 = q3_i*x5743;
double x6085 = q3_b*x5229;
double x6086 = q2_i*x6085;
double x6087 = q3_i*x5164;
double x6088 = L*x6087;
double x6089 = q2_b*q3_b_dt;
double x6090 = q2_b_dt*q3_b;
double x6091 = q2_i*x3792;
double x6092 = q3_i*x3706;
double x6093 = q3_b*x5996;
double x6094 = L*x5776;
double x6095 = q3_b_dt*x5172;
double x6096 = x3726*x5306;
double x6097 = 12*x5764;
double x6098 = x3811*x5330;
double x6099 = q3_b_dot_dt*x5179;
double x6100 = x6099*x70;
double x6101 = q3_b_dt*x5394;
double x6102 = q3_b*x5234;
double x6103 = q2_b*x2839;
double x6104 = q3_b_dot*x2743;
double x6105 = q2_i*x675;
double x6106 = q3_i_dot*x637;
double x6107 = x2856*x5175;
double x6108 = x1404*x5695;
double x6109 = x5743*x692;
double x6110 = q3_b_dot*x5229;
double x6111 = q2_i*x6110;
double x6112 = x2856*x5172;
double x6113 = q3_b_dt*x5175;
double x6114 = x1397*x20;
double x6115 = q3_b_dt*x5179;
double x6116 = L*x6115;
double x6117 = q2_b*q3_b;
double x6118 = x5151*x6117;
double x6119 = q3_i*x5205;
double x6120 = 12*x5210;
double x6121 = q3_b*x5184;
double x6122 = x5189*x6121;
double x6123 = q2_b*q3_i;
double x6124 = q2_i*q3_b;
double x6125 = q2_b_dot*x5695;
double x6126 = q3_b*x5785;
double x6127 = q3_b_dot*x5695;
double x6128 = 4*x5700;
double x6129 = q3_i_dot*x4;
double x6130 = q2_b*x3768;
double x6131 = q3_i_dot*x2743;
double x6132 = x2839*x5278;
double x6133 = x1852*x5547;
double x6134 = 4*x5189;
double x6135 = q3_i*x4;
double x6136 = 48*x5396;
double x6137 = q3_b_dot*x5703;
double x6138 = x5161*x6117;
double x6139 = q2_b*x691;
double x6140 = q2_b*x3017;
double x6141 = x5282*x6081;
double x6142 = q2_i*x691;
double x6143 = q2_b*x692;
double x6144 = q2_b*q3_b_dot;
double x6145 = q2_i*x3733;
double x6146 = q2_i*x4581;
double x6147 = q3_i*x3776;
double x6148 = q3_i_dot*x5805;
double x6149 = x6110*x70;
double x6150 = q2_i_dot*x6149;
double x6151 = q2_b_dot*q3_b_dt;
double x6152 = q3_b*x2727;
double x6153 = x663*x685;
double x6154 = q3_i*x646;
double x6155 = x5413*x5982;
double x6156 = q3_i*x5768;
double x6157 = q3_b*x5196;
double x6158 = q2_i*x3768;
double x6159 = x637*x692;
double x6160 = x5276*x666;
double x6161 = q3_b_dt*x5278;
double x6162 = q3_b*x5192;
double x6163 = q3_b_dt*x5194;
double x6164 = q2_b_dot*x2856;
double x6165 = q3_b_dot*x2738;
double x6166 = x2797*x675;
double x6167 = q3_i_dot*x70;
double x6168 = x6167*x646;
double x6169 = x5516*x675;
double x6170 = x5241*x6131;
double x6171 = q3_b_dot_dt*x5186;
double x6172 = L*x6171;
double x6173 = x1367*x6172;
double x6174 = x5198*x6121;
double x6175 = x5234*x675;
double x6176 = x3726*x6175;
double x6177 = x0*x6167;
double x6178 = x5829*x6177;
double x6179 = x2798*x6171;
double x6180 = x3811*x5234;
double x6181 = x6180*x646;
double x6182 = q3_i*x6081;
double x6183 = x1440*x5830;
double x6184 = q3_b_dt*x5241;
double x6185 = q3_b*x5827;
double x6186 = q2_b*q3_i_dot;
double x6187 = q2_i*q3_b_dot;
double x6188 = q3_b_dot*x5202;
double x6189 = L*x6188;
double x6190 = q3_i_dot*x5856;
double x6191 = q3_b_dot*x5854;
double x6192 = x5851*x6177;
double x6193 = x2798*x6188;
double x6194 = q3_b*x5169;
double x6195 = x6194*x662;
double x6196 = q2_b_dot*q3_b_dot;
double x6197 = x6081*x691;
double x6198 = q2_i*x662;
double x6199 = q2_b*x663;
double x6200 = q3_b_dot*x3726;
double x6201 = x57*x6200;
double x6202 = q2_b_dot*q3_i;
double x6203 = q2_i_dot*q3_b;
double x6204 = x1440*x5851;
double x6205 = x0*x6203;
double x6206 = q2_b_dot*q3_b;
double x6207 = q3_i_dot*x5698;
double x6208 = -q3_i_dot*x5833 - x2856*x5194 + x3763 - x3811*x5192 + x3811*x5196 + x5189*x6127 - x5198*x6127 - x6083 - x6107 - x6108 + x6112 - 4*x6137 + x6207;
double x6209 = x5971*x70;
double x6210 = x5929*x646;
double x6211 = 4*x2798;
double x6212 = q2_b_dot*q2_i_dot;
double x6213 = x2807*x5805 + x2866 + x3790 - x5234*x6210 + x5339*x5969 + x5342*x5970 + x5345*x5970 + x5359*x5969 - x5537*x5971 - x5543*x6209 + x5545*x6209 - x5548*x6212 - x5550*x5971 - x5829*x6211 - x5851*x6211;
double x6214 = q2_i*x666;
double x6215 = 16*x6214;
double x6216 = q3_i*x637;
double x6217 = 16*x6216;
double x6218 = q3_b_dt*x662;
double x6219 = x3818*x663;
double x6220 = q3_i*x3685;
double x6221 = x3108*x6110;
double x6222 = q3_i_dot*x158;
double x6223 = x3733*x692;
double x6224 = q2_b_dt*q3_i;
double x6225 = q3_b_dt*x1367;
double x6226 = x5911*x6117;
double x6227 = q2_b*x6175;
double x6228 = 4*x6172;
double x6229 = x3726*x675;
double x6230 = q3_i_dot*x2738;
double x6231 = q2_i_dot*x2856;
double x6232 = x3811*x646;
double x6233 = q2_b*x1440;
double x6234 = q3_b*x1367;
double x6235 = q3_b*x662;
double x6236 = x158*x6188;
double x6237 = q3_i_dot*x3726;
double x6238 = q3_b_dot*x2797;
double x6239 = x0*x5161;
double x6240 = q3_b_dot*x6239;
double x6241 = q3_b*x2839;
double x6242 = x5339*x6241;
double x6243 = q3_b_dot*q3_b_dt;
double x6244 = L*x6243;
double x6245 = x5339*x6244;
double x6246 = q3_i*x3768;
double x6247 = x5342*x6246;
double x6248 = x5345*x6246;
double x6249 = x3818*x692;
double x6250 = x5178*x6249;
double x6251 = x5168*x6249;
double x6252 = q3_i_dot*x6085;
double x6253 = x158*x6252;
double x6254 = q3_i*x6110;
double x6255 = x158*x6254;
double x6256 = q3_b*x675;
double x6257 = x5234*x6256;
double x6258 = x158*x6257;
double x6259 = x3805*x5234;
double x6260 = x158*x6259;
double x6261 = x1440*x6228;
double x6262 = x2883*x5241;
double x6263 = x158*x6262;
double x6264 = q3_b*x691;
double x6265 = x5597*x6264;
double x6266 = x5359*x6241;
double x6267 = x5359*x6244;
double x6268 = q3_b*q3_i_dot;
double x6269 = x5362*x6268;
double x6270 = q3_b_dot*q3_i;
double x6271 = x5362*x6270;
double x6272 = x5593*x6268;
double x6273 = x1440*x6188;
double x6274 = x158*x6273;
double x6275 = x5590*x6264;
double x6276 = q3_b*q3_b_dot;
double x6277 = x5369*x6276;
double x6278 = x5601*x6264;
double x6279 = q3_b_dot*x2856;
double x6280 = x675*x70;
double x6281 = q3_i_dot*x6280;
double x6282 = pow(q3_b_dot, 2);
double x6283 = x3811*x675;
double x6284 = q3_i_dot*x2856;
double x6285 = q3_i_dot*x3811;
double x6286 = q3_i_dot*x6221 + x5264*x6279 + x5267*x6281 + x5269*x6281 - x5272*x6282 - x5274*x6282 - x5276*x6283 - x5279*x6284 + x5281*x6282 - x5283*x6285 - x5286*x6285 - x5289*x6282 + x5291*x6279;
double x6287 = x2893 + x3813 + x6286;
double x6288 = x3036 + x4638 - x6242 - x6245 - x6247 - x6248 - x6250 - x6251 - x6253 - x6255 + x6258 + x6260 + x6261 + x6263 - x6265 - x6266 - x6267 + x6269 + x6271 + x6272 + x6274 + x6275 + x6277 + x6278 + x6287;
double x6289 = q3_i*x6085;
double x6290 = q3_b*q3_b_dt;
double x6291 = q3_i*x666;
double x6292 = 16*x6291;
double x6293 = pow(q3_b, 2);
double x6294 = x5151*x6293;
double x6295 = q3_b_dt*q3_i;
double x6296 = q3_b*q3_i;
double x6297 = q3_b*x1440;
double x6298 = x5161*x6293;
double x6299 = x2923 - x3818*x6102 + x3831 + x5168*x6292 + x5178*x6292 - x5334*x6296 - x5336*x6298 + x5337*x6290 - x5590*x6293 + x5597*x6293 + x5611*x6290 - x5615*x6295 - x5616*x6297 + 8*x6289 - 16*x6294;
double x6300 = x663*x666;
double x6301 = x666*x692;
double x6302 = q3_i_dot*x5743;
double x6303 = q3_i*x5241;
double x6304 = q3_b*x5997;
double x6305 = q2_i_dot*x2775;
double x6306 = x1440*x6172;
double x6307 = x0*x5958;
double x6308 = x1367*x6188;
double x6309 = 12*x6289;
double x6310 = x5553*x6290;
double x6311 = x5298*x6291;
double x6312 = x5556*x6291;
double x6313 = 24*x6294;
double x6314 = x5404*x6293;
double x6315 = x3792*x6102;
double x6316 = 12*q3_b_dt;
double x6317 = x6303*x6316;
double x6318 = x5399*x6293;
double x6319 = x5565*x6296;
double x6320 = x5567*x6297;
double x6321 = x5322*x6298;
double x6322 = x5573*x6290;
double x6323 = x2901 + x3815 + x6309 + x6310 + x6311 + x6312 - x6313 - x6314 - x6315 - x6317 + x6318 - x6319 - x6320 - x6321 + x6322;
double x6324 = 36*x6214;
double x6325 = 36*x6216;
double x6326 = 4*x6088;
double x6327 = q3_i*x675;
double x6328 = x3792*x692;
double x6329 = q3_b*x5625;
double x6330 = 8*x6115;
double x6331 = x323*x6330;
double x6332 = x158*x6113;
double x6333 = x158*x6114;
double x6334 = x158*x6095;
double x6335 = q3_b*x5620;
double x6336 = x3706*x692;
double x6337 = q3_b*x6047;
double x6338 = q2_b*x6337;
double x6339 = 16*x5241;
double x6340 = x2797*x5322;
double x6341 = q3_b*x20;
double x6342 = x5198*x6341;
double x6343 = x158*x6342;
double x6344 = x2910*x5211;
double x6345 = x158*x6119;
double x6346 = x5189*x6341;
double x6347 = x158*x6346;
double x6348 = x5516*x685;
double x6349 = x5641*x5954;
double x6350 = x5641*x6235;
double x6351 = q3_b*x5649;
double x6352 = q2_b_dot*q3_i_dot;
double x6353 = 36*x6291;
double x6354 = x5275*x70;
double x6355 = 4*x6100;
double x6356 = q3_b_dot*x5667 + x0*x6355 + x1404*x6354 + x2856*x5419 - x2856*x5460 + x2927 + x3811*x5461 - x3811*x5466 - x3811*x5660 + x3811*x5661 - x3836*x6102 + x3837 + x5168*x6353 + x5178*x6353 - x5427*x6296 - x5429*x6298 - x5430*x6167 + x5438*x6167 + x5441*x6290 + x5655*x6290 - x5658*x6295 - x5659*x6293 + x5662*x6293 - x5663*x6297 + 2*x6083 + 18*x6289 - 36*x6294;
double x6357 = q3_i*x4581;
double x6358 = q3_b*x5306;
double x6359 = x57*x6293;
double x6360 = 12*x6115;
double x6361 = x5429*x5647 + 36*x5632 + x5659*x70 - x5662*x70;
double x6362 = q3_b*q3_b_dot_dt;
double x6363 = q3_i_dot*x666;
double x6364 = 3*x5166;
double x6365 = L*x5169;
double x6366 = x5245*x6365;
double x6367 = x5169*x691;
double x6368 = 3*x5184;
double x6369 = x5257*x6365;
double x6370 = L*x6099;
double x6371 = 6*x6370;
double x6372 = 3*x692;
double x6373 = q3_b_dot*x6368;
double x6374 = q3_b*x57;
double x6375 = q3_b_dot*x6374;
double x6376 = 12*x5396;
double x6377 = q4_i_dot*x5408;
double x6378 = q4_i*x6085;
double x6379 = q4_b*x5229;
double x6380 = q3_i*x6379;
double x6381 = q3_b*q4_b_dt;
double x6382 = q3_b_dt*q4_b;
double x6383 = q3_i*x4597;
double x6384 = q4_i*x3792;
double x6385 = q4_i*x5164;
double x6386 = q4_b*x6047;
double x6387 = 20*x5154;
double x6388 = x3811*x6387;
double x6389 = 20*x0;
double x6390 = 18*x2964;
double x6391 = x4616*x5306;
double x6392 = q4_b_dot_dt*x5179;
double x6393 = x6392*x70;
double x6394 = 12*x6393;
double x6395 = q4_b_dt*x5394;
double x6396 = q4_b*x5234;
double x6397 = 6*x2958;
double x6398 = q3_b*x2943;
double x6399 = q3_b_dt*q4_b_dot;
double x6400 = q3_i*x704;
double x6401 = q4_i_dot*x666;
double x6402 = x6085*x721;
double x6403 = q4_b_dot*x5229;
double x6404 = q3_i*x6403;
double x6405 = x1448*x20;
double x6406 = q4_b_dt*x5179;
double x6407 = L*x6406;
double x6408 = x0*x6407;
double x6409 = q3_b*q4_b;
double x6410 = x5151*x6409;
double x6411 = q4_i*x5205;
double x6412 = 18*x5210;
double x6413 = 18*q4_b;
double x6414 = 10*x5700;
double x6415 = q3_b*q4_i;
double x6416 = q3_i*q4_b;
double x6417 = q4_b*x5785;
double x6418 = q4_b_dot*x5695;
double x6419 = q4_i_dot*x4;
double x6420 = q3_b*x4570;
double x6421 = x2943*x5278;
double x6422 = x5189*x6418;
double x6423 = 10*x5189;
double x6424 = x5184*x5198;
double x6425 = q4_i*x4;
double x6426 = 72*x5396;
double x6427 = q4_b_dot*x5703;
double x6428 = x5161*x6409;
double x6429 = q3_b*x720;
double x6430 = x3021*x5290;
double x6431 = x5282*x6374;
double x6432 = q3_i*x720;
double x6433 = q3_b*x721;
double x6434 = q3_b*q4_b_dot;
double x6435 = q4_b*x5396;
double x6436 = q4_b_dot*x158;
double x6437 = x6239*x6436;
double x6438 = q3_i*x3818;
double x6439 = q3_i*x4671;
double x6440 = q4_i*x4581;
double x6441 = q4_i_dot*x6149;
double x6442 = x6403*x70;
double x6443 = q3_i_dot*x6442;
double x6444 = q4_b*x5169;
double x6445 = q3_b_dot*x2964;
double x6446 = q4_b*x2839;
double x6447 = 6*x6115;
double x6448 = L*x6447;
double x6449 = x692*x714;
double x6450 = q4_i*x675;
double x6451 = x5413*x6293;
double x6452 = q4_i*x6110;
double x6453 = x6379*x692;
double x6454 = q3_b_dt*x720;
double x6455 = q3_i*x4570;
double x6456 = x666*x721;
double x6457 = x5276*x695;
double x6458 = q4_b_dt*x5278;
double x6459 = q3_b_dot*x2958;
double x6460 = q4_b_dot*x2856;
double x6461 = x6167*x704;
double x6462 = q4_i_dot*x6280;
double x6463 = 6*x6406;
double x6464 = L*x6463;
double x6465 = x5516*x704;
double x6466 = q4_b_dot_dt*x5186;
double x6467 = L*x6466;
double x6468 = x1440*x6467;
double x6469 = x6180*x704;
double x6470 = x3129*x6171;
double x6471 = x6177*x6466;
double x6472 = x4616*x6175;
double x6473 = q3_b*x6368;
double x6474 = q4_b*x6368;
double x6475 = q4_i*x6374;
double x6476 = q4_b*x57;
double x6477 = x5282*x6476;
double x6478 = x1494*x6172;
double x6479 = q3_i_dot*x5241;
double x6480 = q4_b*x6169;
double x6481 = q3_b*x2910;
double x6482 = q3_b*q4_i_dot;
double x6483 = q3_i*q4_b_dot;
double x6484 = q4_b_dot*x5202;
double x6485 = L*x6484;
double x6486 = q4_i_dot*x5853;
double x6487 = q3_b_dot*x6486;
double x6488 = q4_b_dot*x5853;
double x6489 = q3_i_dot*x6488;
double x6490 = x3129*x6188;
double x6491 = x6177*x6484;
double x6492 = q4_b*x6367;
double x6493 = q3_b_dot*q4_b_dot;
double x6494 = x6374*x720;
double x6495 = q3_i*x691;
double x6496 = q3_b*x692;
double x6497 = x3811*x57;
double x6498 = q4_b_dot*x6497;
double x6499 = q3_b_dot*q4_i;
double x6500 = q3_i_dot*q4_b;
double x6501 = x1494*x6188;
double x6502 = x0*x6500;
double x6503 = q3_b_dot*q4_b;
double x6504 = x2*x3811;
double x6505 = 2*x6377;
double x6506 = x4616*x5661;
double x6507 = 4*x6393;
double x6508 = x0*x6507;
double x6509 = x2958*x5419;
double x6510 = x2971*x5275;
double x6511 = x2958*x5460;
double x6512 = x4616*x5660;
double x6513 = x4616*x5461;
double x6514 = q4_i_dot*x5666;
double x6515 = q4_i_dot*x5665;
double x6516 = x4616*x5466;
double x6517 = q4_b_dot*x5667;
double x6518 = x4578 - x6505 - x6506 - x6508 - x6509 - x6510 + x6511 + x6512 - x6513 - x6514 + x6515 + x6516 - x6517;
double x6519 = x6282*x70;
double x6520 = q3_b_dot*x5540;
double x6521 = q3_i_dot*x5540;
double x6522 = x0*x6521;
double x6523 = q3_b_dot*q3_i_dot;
double x6524 = x362*x6523;
double x6525 = x2968*x6149 + x2969 + x4595 + x5339*x6279 + x5342*x6281 + x5345*x6281 + x5359*x6279 - x5537*x6282 - x5543*x6519 + x5545*x6519 - x5547*x6524 - x5550*x6282 - x6171*x6522 - x6175*x6520 - x6188*x6522;
double x6526 = q3_i*x695;
double x6527 = 16*x6526;
double x6528 = q4_i*x666;
double x6529 = 16*x6528;
double x6530 = x4623*x692;
double x6531 = q4_i*x3768;
double x6532 = x3108*x6403;
double x6533 = x3818*x721;
double x6534 = q3_b_dt*q4_i;
double x6535 = q3_i*q4_b_dt;
double x6536 = q4_b*x5911;
double x6537 = q3_b*x6536;
double x6538 = x158*x704;
double x6539 = 4*x6467;
double x6540 = x3811*x704;
double x6541 = q4_i_dot*x2856;
double x6542 = q3_i_dot*x2958;
double x6543 = x4616*x675;
double x6544 = q3_i_dot*x2964;
double x6545 = x158*x675;
double x6546 = q3_b*x1494;
double x6547 = q4_b*x1440;
double x6548 = q4_b*x691;
double x6549 = x158*x6484;
double x6550 = q4_b_dot*x3811;
double x6551 = q4_i_dot*x3811;
double x6552 = q3_i_dot*x4616;
double x6553 = q4_i_dot*x5285;
double x6554 = x5153*x6553;
double x6555 = q4_b*x2943;
double x6556 = x5339*x6555;
double x6557 = q4_b_dot*x2964;
double x6558 = x5339*x6557;
double x6559 = q4_i*x4570;
double x6560 = x5342*x6559;
double x6561 = x5345*x6559;
double x6562 = x4623*x721;
double x6563 = x5178*x6562;
double x6564 = x5168*x6562;
double x6565 = q4_i_dot*x6379;
double x6566 = x158*x6565;
double x6567 = q4_i*x6403;
double x6568 = x158*x6567;
double x6569 = q4_b*x704;
double x6570 = x5234*x6569;
double x6571 = x158*x6570;
double x6572 = x4610*x5234;
double x6573 = x158*x6572;
double x6574 = x1494*x6539;
double x6575 = q4_i_dot*x2964;
double x6576 = x5674*x6575;
double x6577 = q4_b*x720;
double x6578 = x5597*x6577;
double x6579 = x5359*x6555;
double x6580 = x5359*x6557;
double x6581 = q4_b*q4_i_dot;
double x6582 = x5362*x6581;
double x6583 = q4_b_dot*q4_i;
double x6584 = x5362*x6583;
double x6585 = x5593*x6581;
double x6586 = x1494*x6484;
double x6587 = x158*x6586;
double x6588 = x5590*x6577;
double x6589 = q4_b*q4_b_dot;
double x6590 = x5369*x6589;
double x6591 = x5601*x6577;
double x6592 = q4_b_dot*x2958;
double x6593 = x70*x704;
double x6594 = q4_i_dot*x6593;
double x6595 = pow(q4_b_dot, 2);
double x6596 = x4616*x704;
double x6597 = q4_i_dot*x2958;
double x6598 = q4_i_dot*x4616;
double x6599 = q4_i_dot*x6532 - x4616*x6554 + x5264*x6592 + x5267*x6594 + x5269*x6594 - x5272*x6595 - x5274*x6595 - x5276*x6596 - x5279*x6597 + x5281*x6595 - x5283*x6598 - x5289*x6595 + x5291*x6592;
double x6600 = x3000 + x4618 + x6599;
double x6601 = x3146 + x4729 - x6556 - x6558 - x6560 - x6561 - x6563 - x6564 - x6566 - x6568 + x6571 + x6573 + x6574 + x6576 - x6578 - x6579 - x6580 + x6582 + x6584 + x6585 + x6587 + x6588 + x6590 + x6591 + x6600;
double x6602 = q4_i*x6379;
double x6603 = q4_b*q4_b_dt;
double x6604 = q4_i*x695;
double x6605 = 16*x6604;
double x6606 = pow(q4_b, 2);
double x6607 = x5151*x6606;
double x6608 = q4_b_dt*q4_i;
double x6609 = q4_b*q4_i;
double x6610 = q4_b*x1494;
double x6611 = x5161*x6606;
double x6612 = x3034 - x4623*x6396 + x4636 + x5168*x6605 + x5178*x6605 - x5334*x6609 - x5336*x6611 + x5337*x6603 - x5590*x6606 + x5597*x6606 + x5611*x6603 - x5615*x6608 - x5616*x6610 + 8*x6602 - 16*x6607;
double x6613 = x692*x695;
double x6614 = x695*x721;
double x6615 = q4_i*x5241;
double x6616 = q4_b*x6093;
double x6617 = x6102*x704;
double x6618 = x1494*x6467;
double x6619 = q4_i_dot*x5241;
double x6620 = q4_b*x5244;
double x6621 = x6620*x720;
double x6622 = x0*x6268;
double x6623 = x1440*x6484;
double x6624 = 6*x5161;
double x6625 = x0*x6624;
double x6626 = 12*x6602;
double x6627 = x5553*x6603;
double x6628 = x5298*x6604;
double x6629 = x5556*x6604;
double x6630 = 24*x6607;
double x6631 = x5404*x6606;
double x6632 = x4597*x6396;
double x6633 = x2978*x6615;
double x6634 = x5399*x6606;
double x6635 = x5565*x6609;
double x6636 = x5567*x6610;
double x6637 = x5322*x6611;
double x6638 = x5573*x6603;
double x6639 = x3007 + x4620 + x6626 + x6627 + x6628 + x6629 - x6630 - x6631 - x6632 - x6633 + x6634 - x6635 - x6636 - x6637 + x6638;
double x6640 = 36*x6526;
double x6641 = 36*x6528;
double x6642 = x158*x6385;
double x6643 = q4_i*x704;
double x6644 = x4597*x721;
double x6645 = q4_b*x5625;
double x6646 = 8*x6406;
double x6647 = x323*x6646;
double x6648 = x3019*x5175;
double x6649 = x158*x6405;
double x6650 = x3019*x5172;
double x6651 = q4_b*x5620;
double x6652 = x3792*x721;
double x6653 = q4_b*x6337;
double x6654 = x5322*x6167;
double x6655 = q4_b*x20;
double x6656 = x5198*x6655;
double x6657 = x158*x6656;
double x6658 = q4_i*x5389;
double x6659 = x158*x6411;
double x6660 = x5189*x6655;
double x6661 = x158*x6660;
double x6662 = x5516*x714;
double x6663 = x5641*x6264;
double x6664 = x5641*x6548;
double x6665 = q4_b*x5649;
double x6666 = q3_b_dot*q4_i_dot;
double x6667 = q3_i_dot*q4_b_dot;
double x6668 = 36*x6604;
double x6669 = x3038 - x4639*x6396 + x4640 + x5168*x6668 + x5178*x6668 - x5427*x6609 - x5429*x6611 + x5441*x6603 + x5655*x6603 - x5658*x6608 - x5659*x6606 + x5662*x6606 - x5663*x6610 + x6505 + x6506 + x6508 + x6509 + x6510 - x6511 - x6512 + x6513 + x6514 - x6515 - x6516 + x6517 + 18*x6602 - 36*x6607;
double x6670 = q4_i*x4671;
double x6671 = L*x6385;
double x6672 = 8*x2964;
double x6673 = x57*x6606;
double x6674 = 8*L;
double x6675 = 16*x6407;
double x6676 = q4_i*x5332;
double x6677 = 8*x5189;
double x6678 = q4_b*x5184;
double x6679 = 8*x5210;
double x6680 = 32*x5396;
double x6681 = x5641*x70;
double x6682 = x0*x5647;
double x6683 = -x5245*x6681 + x5257*x6681 + 64*x5632 + 32*x6682;
double x6684 = q4_b*q4_b_dot_dt;
double x6685 = q4_b_dot*q4_b_dt;
double x6686 = q4_i_dot*x695;
double x6687 = 4*x5166;
double x6688 = L*x5597;
double x6689 = x5330*x720;
double x6690 = 4*x20;
double x6691 = L*x5590;
double x6692 = L*x6392;
double x6693 = x20*x5189;
double x6694 = q4_b_dot*x6476;
double x6695 = x20*x5671;
double x6696 = L*x5161;
double x6697 = x5336*x6696;
double x6698 = q5_i_dot*x5408;
double x6699 = q5_i*x6379;
double x6700 = q5_b*x5229;
double x6701 = q4_i*x6700;
double x6702 = q4_b*q5_b_dt;
double x6703 = q4_b_dt*q5_b;
double x6704 = q4_i*x4688;
double x6705 = q5_i*x4597;
double x6706 = q5_i*x5164;
double x6707 = L*x6706;
double x6708 = x5154*x5178;
double x6709 = 48*L;
double x6710 = q4_b*x6709;
double x6711 = x5154*x5168;
double x6712 = q5_b*x6709;
double x6713 = 28*x4616;
double x6714 = 28*x0;
double x6715 = 24*x2964;
double x6716 = 24*L;
double x6717 = q5_b_dt*x5172;
double x6718 = x4707*x5911;
double x6719 = q5_b_dot_dt*x5179;
double x6720 = x6719*x70;
double x6721 = x0*x6720;
double x6722 = 14*x2958;
double x6723 = 14*x20;
double x6724 = q5_b_dot_dt*x70;
double x6725 = 8*x6724;
double x6726 = x1509*x5695;
double x6727 = q5_b_dt*x5394;
double x6728 = q5_b*x5234;
double x6729 = q4_b*x3059;
double x6730 = q5_b_dot*x2964;
double x6731 = q4_i*x733;
double x6732 = q5_i_dot*x695;
double x6733 = x6379*x750;
double x6734 = q5_b_dot*x5229;
double x6735 = q4_i*x6734;
double x6736 = q5_b_dt*x5175;
double x6737 = x1502*x20;
double x6738 = q5_b_dt*x5179;
double x6739 = L*x6738;
double x6740 = x0*x6739;
double x6741 = 24*x5186;
double x6742 = x197*x6741;
double x6743 = 24*x5210;
double x6744 = 24*x5189;
double x6745 = q5_b*x5184;
double x6746 = q4_b*q5_b;
double x6747 = x5151*x6746;
double x6748 = 14*x5700;
double x6749 = q5_b_dot*x5695;
double x6750 = 8*x5700;
double x6751 = q5_i_dot*x4;
double x6752 = q4_b*q5_i;
double x6753 = q4_i*q5_b;
double x6754 = q5_b*x5785;
double x6755 = q4_b*x4661;
double x6756 = q5_i_dot*x2964;
double x6757 = x3059*x5278;
double x6758 = x1852*x5332;
double x6759 = 14*q4_i_dot;
double x6760 = q5_i*x4;
double x6761 = q5_b_dot*x5703;
double x6762 = x5161*x6746;
double x6763 = q4_b*x749;
double x6764 = q4_i*x749;
double x6765 = q4_b*x750;
double x6766 = q4_b*q5_b_dot;
double x6767 = q5_b*x5396;
double x6768 = q4_i*x4623;
double x6769 = q4_i*x4759;
double x6770 = q5_i*x4671;
double x6771 = q5_i_dot*x6442;
double x6772 = x6734*x70;
double x6773 = q4_i_dot*x6772;
double x6774 = q5_b*x5244;
double x6775 = q4_b_dot*q5_b_dt;
double x6776 = q5_b*x2943;
double x6777 = x721*x743;
double x6778 = q5_i*x704;
double x6779 = x5413*x6606;
double x6780 = q5_i*x6403;
double x6781 = q4_i*x4661;
double x6782 = x695*x750;
double x6783 = x5276*x724;
double x6784 = q5_b_dt*x5278;
double x6785 = q5_b_dot_dt*x4616;
double x6786 = q5_b_dot*x2958;
double x6787 = x70*x733;
double x6788 = q4_i_dot*x6787;
double x6789 = q5_i_dot*x6593;
double x6790 = x5516*x733;
double x6791 = q5_b_dot_dt*x5186;
double x6792 = L*x6791;
double x6793 = x1494*x6792;
double x6794 = x5234*x733;
double x6795 = x4616*x6794;
double x6796 = x3112*x6466;
double x6797 = x3129*x6791;
double x6798 = x4707*x5234;
double x6799 = x6798*x704;
double x6800 = q5_i*x5205;
double x6801 = q5_b*x20;
double x6802 = x5189*x6801;
double x6803 = q5_b*x57;
double x6804 = x5282*x6803;
double x6805 = x1545*x6467;
double x6806 = q5_b_dt*x5241;
double x6807 = q5_b*x6465;
double x6808 = x5198*x6801;
double x6809 = q4_b*q5_i_dot;
double x6810 = q4_i*q5_b_dot;
double x6811 = q5_b_dot*x5202;
double x6812 = L*x6811;
double x6813 = q5_b_dot*x6486;
double x6814 = x3112*x6484;
double x6815 = x3129*x6811;
double x6816 = q5_b*x720;
double x6817 = q4_b_dot*q5_b_dot;
double x6818 = x6476*x749;
double x6819 = q4_i*x720;
double x6820 = q4_b*x721;
double x6821 = q5_b_dot*x4616;
double x6822 = x57*x6821;
double x6823 = q4_b_dot*q5_i;
double x6824 = q4_i_dot*q5_b;
double x6825 = x1545*x6484;
double x6826 = x0*x6824;
double x6827 = q4_b_dot*q5_b;
double x6828 = x2*x4616;
double x6829 = x4707*x5169;
double x6830 = 6*x6720;
double x6831 = 3*x6724;
double x6832 = 3*x6749;
double x6833 = 3*q5_i_dot;
double x6834 = -x0*x6830 + x4666 + x5168*x6829 + x5172*x6831 - x5175*x6831 - x5178*x6829 + x5189*x6832 - x5198*x6832 + x5698*x6833 - x5701*x6751 - 3*x6698 - 3*x6726 - 12*x6761;
double x6835 = x6595*x70;
double x6836 = q4_b_dot*x5540;
double x6837 = x6836*x704;
double x6838 = q4_i_dot*x5897;
double x6839 = q4_b_dot*q4_i_dot;
double x6840 = x362*x6839;
double x6841 = x3023*x6442 + x3085 + x4686 - x5234*x6837 + x5339*x6592 + x5342*x6594 + x5345*x6594 + x5359*x6592 - x5537*x6595 - x5543*x6835 + x5545*x6835 - x5547*x6840 - x5550*x6595 - x6466*x6838 - x6484*x6838;
double x6842 = q4_i*x724;
double x6843 = 16*x6842;
double x6844 = q5_i*x695;
double x6845 = 16*x6844;
double x6846 = q5_b_dt*x720;
double x6847 = x4714*x721;
double x6848 = q5_i*x4570;
double x6849 = x3108*x6734;
double x6850 = q5_i_dot*x158;
double x6851 = x4623*x750;
double x6852 = q4_b_dt*q5_i;
double x6853 = q4_i*q5_b_dt;
double x6854 = q5_b*x6536;
double x6855 = q4_b*x6794;
double x6856 = 4*x6792;
double x6857 = x4616*x733;
double x6858 = q5_i_dot*x2958;
double x6859 = q4_i_dot*x6724;
double x6860 = x4707*x704;
double x6861 = q4_b*x1545;
double x6862 = q5_b*x1494;
double x6863 = x158*x6811;
double x6864 = q5_i_dot*x4616;
double x6865 = q4_i_dot*x4707;
double x6866 = q5_b_dot_dt*x5290;
double x6867 = q5_b_dot*x6239;
double x6868 = q5_b*x3059;
double x6869 = x5339*x6868;
double x6870 = q5_b_dot*q5_b_dt;
double x6871 = L*x6870;
double x6872 = x5339*x6871;
double x6873 = q5_i*x4661;
double x6874 = x5342*x6873;
double x6875 = x5345*x6873;
double x6876 = x4714*x750;
double x6877 = x5178*x6876;
double x6878 = x5168*x6876;
double x6879 = q5_i_dot*x6700;
double x6880 = x158*x6879;
double x6881 = q5_i*x6734;
double x6882 = x158*x6881;
double x6883 = q5_b*x733;
double x6884 = x5234*x6883;
double x6885 = x158*x6884;
double x6886 = x4701*x5234;
double x6887 = x158*x6886;
double x6888 = x1545*x6856;
double x6889 = x3102*x5241;
double x6890 = x158*x6889;
double x6891 = q5_b*x749;
double x6892 = x5597*x6891;
double x6893 = x5359*x6868;
double x6894 = x5359*x6871;
double x6895 = q5_b*q5_i_dot;
double x6896 = x5362*x6895;
double x6897 = q5_b_dot*q5_i;
double x6898 = x5362*x6897;
double x6899 = x5593*x6895;
double x6900 = x1545*x6811;
double x6901 = x158*x6900;
double x6902 = x5590*x6891;
double x6903 = q5_b*q5_b_dot;
double x6904 = x5369*x6903;
double x6905 = x5601*x6891;
double x6906 = q5_b_dot_dt*x4707;
double x6907 = q5_i_dot*x6787;
double x6908 = pow(q5_b_dot, 2);
double x6909 = x4707*x733;
double x6910 = q5_i_dot*x6724;
double x6911 = q5_i_dot*x4707;
double x6912 = q5_b_dot*x5540;
double x6913 = q5_i_dot*x6849 + x5264*x6906 + x5267*x6907 + x5269*x6907 - x5272*x6908 - x5274*x6908 - x5276*x6909 - x5279*x6910 + x5281*x6908 - x5283*x6911 - x5286*x6911 - x5289*x6908 + x6866*x6912;
double x6914 = x3113 + x4709 + x6913;
double x6915 = x3255 + x4817 - x6869 - x6872 - x6874 - x6875 - x6877 - x6878 - x6880 - x6882 + x6885 + x6887 + x6888 + x6890 - x6892 - x6893 - x6894 + x6896 + x6898 + x6899 + x6901 + x6902 + x6904 + x6905 + x6914;
double x6916 = q5_i*x6700;
double x6917 = q5_b*q5_b_dt;
double x6918 = q5_i*x724;
double x6919 = 16*x6918;
double x6920 = pow(q5_b, 2);
double x6921 = x5151*x6920;
double x6922 = q5_b_dt*q5_i;
double x6923 = q5_b*q5_i;
double x6924 = q5_b*x1545;
double x6925 = x5161*x6920;
double x6926 = x3144 - x4714*x6728 + x4727 + x5168*x6919 + x5178*x6919 - x5334*x6923 - x5336*x6925 + x5337*x6917 - x5590*x6920 + x5597*x6920 + x5611*x6917 - x5615*x6922 - x5616*x6924 + 8*x6916 - 16*x6921;
double x6927 = x721*x724;
double x6928 = x724*x750;
double x6929 = q5_i_dot*x6379;
double x6930 = 6*x6788;
double x6931 = 6*x6789;
double x6932 = q5_i*x5241;
double x6933 = 12*x5241;
double x6934 = x5996*x6746;
double x6935 = q5_i_dot*x5241;
double x6936 = x1545*x6792;
double x6937 = x5521*x6577;
double x6938 = q5_b*x5521;
double x6939 = x6938*x720;
double x6940 = x5244*x749;
double x6941 = q4_b*x6940;
double x6942 = q5_b*x6940;
double x6943 = x0*x6581;
double x6944 = x1494*x6811;
double x6945 = 6*x4616;
double x6946 = 12*x6916;
double x6947 = x5553*x6917;
double x6948 = x5298*x6918;
double x6949 = x5556*x6918;
double x6950 = 24*x6921;
double x6951 = x5404*x6920;
double x6952 = x4688*x6728;
double x6953 = 12*q5_b_dt;
double x6954 = x6932*x6953;
double x6955 = x5399*x6920;
double x6956 = x5565*x6923;
double x6957 = x5567*x6924;
double x6958 = x5322*x6925;
double x6959 = x5573*x6917;
double x6960 = x3121 + x4711 + x6946 + x6947 + x6948 + x6949 - x6950 - x6951 - x6952 - x6954 + x6955 - x6956 - x6957 - x6958 + x6959;
double x6961 = 36*x6842;
double x6962 = 36*x6844;
double x6963 = x158*x6706;
double x6964 = 32*x6927;
double x6965 = 32*x6848;
double x6966 = q5_i*x733;
double x6967 = x4688*x750;
double x6968 = q5_b*x5625;
double x6969 = 8*x6738;
double x6970 = x323*x6969;
double x6971 = x158*x6736;
double x6972 = x158*x6737;
double x6973 = x158*x6717;
double x6974 = q5_b*x5620;
double x6975 = x4597*x750;
double x6976 = 12*q4_i_dot;
double x6977 = 32*x6559;
double x6978 = 32*x6614;
double x6979 = q5_b*x6386;
double x6980 = 12*x3129;
double x6981 = x158*x6808;
double x6982 = x3131*x5211;
double x6983 = x158*x6800;
double x6984 = x158*x6802;
double x6985 = x5516*x743;
double x6986 = x5641*x6577;
double x6987 = x5641*x6816;
double x6988 = 16*x6767;
double x6989 = q4_b_dot*q5_i_dot;
double x6990 = q4_i_dot*q5_b_dot;
double x6991 = 36*x6918;
double x6992 = 4*x6720;
double x6993 = q5_b_dot*x5667 - q5_i_dot*x5665 + q5_i_dot*x5666 + x0*x6992 + x1509*x6354 + x3148 + x4707*x5461 - x4707*x5466 - x4707*x5660 + x4707*x5661 - x4730*x6728 + x4731 + x5168*x6991 + x5178*x6991 + x5419*x6724 - x5427*x6923 - x5429*x6925 + x5441*x6917 - x5460*x6724 + x5655*x6917 - x5658*x6922 - x5659*x6920 + x5662*x6920 - x5663*x6924 + 2*x6698 + 18*x6916 - 36*x6921;
double x6994 = q5_i*x4759;
double x6995 = q5_b*x6387;
double x6996 = x57*x6920;
double x6997 = 10*q5_i;
double x6998 = 10*x5184;
double x6999 = x5189*x6998;
double x7000 = x5184*x5219;
double x7001 = 10*x5210;
double x7002 = 40*x5396;
double x7003 = x5154*x5245;
double x7004 = 50*x70;
double x7005 = x5154*x5257;
double x7006 = 100*x5632 + 50*x6682 - x7003*x7004 + x7004*x7005;
double x7007 = q5_b*q5_b_dot_dt;
double x7008 = q5_i_dot*x724;
double x7009 = 5*x5166;
double x7010 = L*x5244;
double x7011 = x5245*x7010;
double x7012 = x154*x20;
double x7013 = x5257*x7010;
double x7014 = L*x6719;
double x7015 = q5_i_dot*x154;
double x7016 = q5_b_dot*x7012;
double x7017 = q5_b_dot*x6803;
double x7018 = x5161*x5675;
double x7019 = q6_i_dot*x5408;
double x7020 = q6_i*x6700;
double x7021 = q6_b*x5229;
double x7022 = q5_i*x7021;
double x7023 = q5_b*q6_b_dt;
double x7024 = q5_b_dt*q6_b;
double x7025 = q5_i*x4776;
double x7026 = q6_i*x4688;
double x7027 = q6_i*x5164;
double x7028 = L*x7027;
double x7029 = 60*x5379;
double x7030 = q5_b*x5154;
double x7031 = q6_b*x5154;
double x7032 = 60*x5386;
double x7033 = x4707*x6047;
double x7034 = 30*L;
double x7035 = 30*x3186;
double x7036 = x4795*x6387;
double x7037 = q6_b_dot_dt*x5179;
double x7038 = x70*x7037;
double x7039 = x0*x7038;
double x7040 = 18*x6724;
double x7041 = 10*x3180;
double x7042 = x20*x3194;
double x7043 = q6_b_dt*x5394;
double x7044 = q6_b*x5234;
double x7045 = q5_b*x3165;
double x7046 = q5_b_dt*q6_b_dot;
double x7047 = q5_i*x762;
double x7048 = q6_i_dot*x724;
double x7049 = x6700*x779;
double x7050 = q6_b_dot*x5229;
double x7051 = q5_i*x7050;
double x7052 = x1553*x20;
double x7053 = q6_b_dt*x5179;
double x7054 = L*x7053;
double x7055 = x0*x7054;
double x7056 = 30*x5891;
double x7057 = 30*q5_b;
double x7058 = 30*x5210;
double x7059 = q6_b*x5834;
double x7060 = q5_b*q6_b;
double x7061 = x5151*x7060;
double x7062 = 18*x6749;
double x7063 = 18*x5700;
double x7064 = q6_b_dot*x5695;
double x7065 = q6_i_dot*x4;
double x7066 = q5_b*q6_i;
double x7067 = q5_i*q6_b;
double x7068 = q6_b*x5785;
double x7069 = q5_b*x4749;
double x7070 = x3165*x5278;
double x7071 = 10*q6_i_dot;
double x7072 = x1852*x5412;
double x7073 = q6_i*x4;
double x7074 = q6_b_dot*x5703;
double x7075 = x5161*x7060;
double x7076 = q5_b*x778;
double x7077 = q5_i*x778;
double x7078 = q5_b*x779;
double x7079 = q5_b*q6_b_dot;
double x7080 = q6_b*x5396;
double x7081 = q5_i*x4714;
double x7082 = q5_i*x4847;
double x7083 = q6_i*x4759;
double x7084 = q6_i_dot*x6772;
double x7085 = x70*x7050;
double x7086 = q5_i_dot*x7085;
double x7087 = q6_b*x5521;
double x7088 = q5_b_dot*x3186;
double x7089 = q6_b*x3059;
double x7090 = x750*x772;
double x7091 = q6_i*x733;
double x7092 = x5413*x6920;
double x7093 = q6_i*x6734;
double x7094 = x7021*x750;
double x7095 = q5_b_dt*x778;
double x7096 = q5_i*x4749;
double x7097 = x724*x779;
double x7098 = x5276*x753;
double x7099 = q6_b_dt*x5278;
double x7100 = q5_b_dot*x3180;
double x7101 = q5_b_dot_dt*x4795;
double x7102 = x70*x762;
double x7103 = q5_i_dot*x7102;
double x7104 = q6_i_dot*x6787;
double x7105 = x5516*x762;
double x7106 = q6_b_dot_dt*x5186;
double x7107 = L*x7106;
double x7108 = x1545*x7107;
double x7109 = x6798*x762;
double x7110 = x3237*x6791;
double x7111 = x3112*x7106;
double x7112 = x4795*x6794;
double x7113 = q6_i*x5205;
double x7114 = 7*x5184;
double x7115 = q5_b*x7114;
double x7116 = q6_b*x7114;
double x7117 = q6_b*x57;
double x7118 = x5282*x7117;
double x7119 = x1598*x6792;
double x7120 = q5_i_dot*x3186;
double x7121 = 3*x5241;
double x7122 = q6_b*x6790;
double x7123 = q5_b*x3131;
double x7124 = q5_b*q6_i_dot;
double x7125 = q5_i*q6_b_dot;
double x7126 = q6_b_dot*x5202;
double x7127 = L*x7126;
double x7128 = q6_i_dot*x5853;
double x7129 = q5_b_dot*x7128;
double x7130 = q6_b_dot*x5853;
double x7131 = x3237*x6811;
double x7132 = x3112*x7126;
double x7133 = 28*x5396;
double x7134 = q6_b*x749;
double x7135 = q5_b_dot*q6_b_dot;
double x7136 = x6803*x778;
double x7137 = q5_i*x749;
double x7138 = q5_b*x750;
double x7139 = q6_b_dot*x4707;
double x7140 = x57*x7139;
double x7141 = q5_b_dot*q6_i;
double x7142 = q5_i_dot*q6_b;
double x7143 = x1598*x6811;
double x7144 = x0*x7142;
double x7145 = q5_b_dot*q6_b;
double x7146 = x2*x4707;
double x7147 = x4795*x5330;
double x7148 = q6_i_dot*x6133 + x3302*x5172 - x3302*x5175 + x4754 + x5168*x7147 - x5178*x7147 - x5264*x7064 - x6128*x7065 + x6134*x7064 - 4*x7019 - 8*x7039 - 4*x7042 - 16*x7074;
double x7149 = x6908*x70;
double x7150 = q5_i_dot*x5897;
double x7151 = q5_b_dot*q5_i_dot;
double x7152 = x362*x7151;
double x7153 = x3191*x6772 + x3192 + x4774 + x5339*x6906 + x5342*x6907 + x5345*x6907 + x5359*x6906 - x5537*x6908 - x5543*x7149 + x5545*x7149 - x5547*x7152 - x5550*x6908 - x6791*x7150 - x6794*x6912 - x6811*x7150;
double x7154 = q5_i*x753;
double x7155 = 16*x7154;
double x7156 = q6_i*x724;
double x7157 = 16*x7156;
double x7158 = x4802*x750;
double x7159 = q6_i*x4661;
double x7160 = x3108*x7050;
double x7161 = x4714*x779;
double x7162 = q5_b_dt*q6_i;
double x7163 = q5_i*q6_b_dt;
double x7164 = x5911*x7060;
double x7165 = x158*x762;
double x7166 = 4*x7107;
double x7167 = x4707*x762;
double x7168 = q6_i_dot*x6724;
double x7169 = q5_i_dot*x3180;
double x7170 = x4795*x733;
double x7171 = x158*x733;
double x7172 = q5_b*x1598;
double x7173 = q6_b*x1545;
double x7174 = x158*x7126;
double x7175 = q6_i_dot*x4707;
double x7176 = q5_i_dot*x4795;
double x7177 = x3302*x5290;
double x7178 = q6_b_dot*x5540;
double x7179 = q6_b*x3165;
double x7180 = x5339*x7179;
double x7181 = q6_b_dot*x3186;
double x7182 = x5339*x7181;
double x7183 = q6_i*x4749;
double x7184 = x5342*x7183;
double x7185 = x5345*x7183;
double x7186 = x4802*x779;
double x7187 = x5178*x7186;
double x7188 = x5168*x7186;
double x7189 = q6_i_dot*x7021;
double x7190 = x158*x7189;
double x7191 = q6_i*x7050;
double x7192 = x158*x7191;
double x7193 = q6_b*x762;
double x7194 = x5234*x7193;
double x7195 = x158*x7194;
double x7196 = x4789*x5234;
double x7197 = x158*x7196;
double x7198 = x1598*x7166;
double x7199 = q6_i_dot*x3186;
double x7200 = x5674*x7199;
double x7201 = q6_b*x778;
double x7202 = x5597*x7201;
double x7203 = x5359*x7179;
double x7204 = x5359*x7181;
double x7205 = q6_b*q6_i_dot;
double x7206 = x5362*x7205;
double x7207 = q6_b_dot*q6_i;
double x7208 = x5362*x7207;
double x7209 = x5593*x7205;
double x7210 = x1598*x7126;
double x7211 = x158*x7210;
double x7212 = x5590*x7201;
double x7213 = q6_b*q6_b_dot;
double x7214 = x5369*x7213;
double x7215 = x5601*x7201;
double x7216 = q6_b_dot*x3180;
double x7217 = q6_i_dot*x7102;
double x7218 = pow(q6_b_dot, 2);
double x7219 = x4795*x762;
double x7220 = q6_i_dot*x3180;
double x7221 = q6_i_dot*x4795;
double x7222 = q6_b_dot*x7177 + q6_i_dot*x7160 + x5264*x7216 + x5267*x7217 + x5269*x7217 - x5272*x7218 - x5274*x7218 - x5276*x7219 - x5279*x7220 + x5281*x7218 - x5283*x7221 - x5286*x7221 - x5289*x7218;
double x7223 = x3222 + x4797 + x7222;
double x7224 = x3362 + x4905 - x7180 - x7182 - x7184 - x7185 - x7187 - x7188 - x7190 - x7192 + x7195 + x7197 + x7198 + x7200 - x7202 - x7203 - x7204 + x7206 + x7208 + x7209 + x7211 + x7212 + x7214 + x7215 + x7223;
double x7225 = q6_i*x7021;
double x7226 = q6_b*q6_b_dt;
double x7227 = q6_i*x753;
double x7228 = 16*x7227;
double x7229 = pow(q6_b, 2);
double x7230 = x5151*x7229;
double x7231 = q6_b_dt*q6_i;
double x7232 = q6_b*q6_i;
double x7233 = q6_b*x1598;
double x7234 = x5161*x7229;
double x7235 = x3253 - x4802*x7044 + x4815 + x5168*x7228 + x5178*x7228 - x5334*x7232 - x5336*x7234 + x5337*x7226 - x5590*x7229 + x5597*x7229 + x5611*x7226 - x5615*x7231 - x5616*x7233 + 8*x7225 - 16*x7230;
double x7236 = x750*x753;
double x7237 = x753*x779;
double x7238 = 6*x7103;
double x7239 = 6*x7104;
double x7240 = q6_i*x5241;
double x7241 = q6_b*x5996;
double x7242 = q5_b*x7241;
double x7243 = x6728*x762;
double x7244 = x1598*x7107;
double x7245 = x6938*x749;
double x7246 = x7087*x749;
double x7247 = x6774*x778;
double x7248 = x0*x6895;
double x7249 = q6_b_dot*x6829;
double x7250 = x1545*x7126;
double x7251 = 12*x7225;
double x7252 = x5553*x7226;
double x7253 = x5298*x7227;
double x7254 = x5556*x7227;
double x7255 = 24*x7230;
double x7256 = x5404*x7229;
double x7257 = x4776*x7044;
double x7258 = x3201*x7240;
double x7259 = x5399*x7229;
double x7260 = x5565*x7232;
double x7261 = x5567*x7233;
double x7262 = x5322*x7234;
double x7263 = x5573*x7226;
double x7264 = x3229 + x4799 + x7251 + x7252 + x7253 + x7254 - x7255 - x7256 - x7257 - x7258 + x7259 - x7260 - x7261 - x7262 + x7263;
double x7265 = 36*x7154;
double x7266 = 36*x7156;
double x7267 = x158*x7027;
double x7268 = 32*x7236;
double x7269 = 32*x7159;
double x7270 = q6_i*x762;
double x7271 = x4776*x779;
double x7272 = q6_b*x5625;
double x7273 = 8*x7053;
double x7274 = x323*x7273;
double x7275 = x3241*x5175;
double x7276 = x158*x7052;
double x7277 = x3241*x5172;
double x7278 = q6_b*x5620;
double x7279 = x4688*x779;
double x7280 = 32*x6873;
double x7281 = 32*x6928;
double x7282 = x6047*x7060;
double x7283 = 12*x3112;
double x7284 = q6_b*x20;
double x7285 = x5198*x7284;
double x7286 = x158*x7285;
double x7287 = q6_i*x5389;
double x7288 = x158*x7113;
double x7289 = x5189*x7284;
double x7290 = x158*x7289;
double x7291 = x5516*x772;
double x7292 = x5641*x6891;
double x7293 = x5641*x7134;
double x7294 = 16*x7080;
double x7295 = q5_b_dot*q6_i_dot;
double x7296 = q5_i_dot*q6_b_dot;
double x7297 = 36*x7227;
double x7298 = 4*x7038;
double x7299 = q6_b_dot*x5667 - q6_i_dot*x5665 + q6_i_dot*x5666 + x0*x7298 + x3180*x5419 - x3180*x5460 + x3194*x5275 + x3257 + x4795*x5461 - x4795*x5466 - x4795*x5660 + x4795*x5661 - x4818*x7044 + x4819 + x5168*x7297 + x5178*x7297 - x5427*x7232 - x5429*x7234 + x5441*x7226 + x5655*x7226 - x5658*x7231 - x5659*x7229 + x5662*x7229 - x5663*x7233 + 2*x7019 + 18*x7225 - 36*x7230;
double x7300 = q6_i*x4847;
double x7301 = 12*x3186;
double x7302 = x57*x7229;
double x7303 = q6_b*x5184;
double x7304 = 72*x70;
double x7305 = 144*x5632 + 72*x6682 - x7003*x7304 + x7005*x7304;
double x7306 = q6_b*q6_b_dot_dt;
double x7307 = q6_b_dot*q6_b_dt;
double x7308 = q6_i_dot*x753;
double x7309 = 6*x5166;
double x7310 = L*x5399;
double x7311 = x5306*x778;
double x7312 = L*x5404;
double x7313 = L*x7037;
double x7314 = x13*x5394;
double x7315 = q6_b_dot*x129;
double x7316 = q6_b_dot*x7117;
double x7317 = x20*x5808;
double x7318 = q7_i_dot*x5408;
double x7319 = q7_i*x7021;
double x7320 = q7_b*x5229;
double x7321 = q6_i*x7320;
double x7322 = q6_b*q7_b_dt;
double x7323 = q6_b_dt*q7_b;
double x7324 = q6_i*x4864;
double x7325 = q7_i*x4776;
double x7326 = q7_i*x5164;
double x7327 = L*x7326;
double x7328 = 72*x5379;
double x7329 = q7_b*x5154;
double x7330 = 72*x5386;
double x7331 = 44*x4795;
double x7332 = 36*x3186;
double x7333 = 36*L;
double x7334 = q7_b_dt*x5172;
double x7335 = x4883*x5996;
double x7336 = q7_b_dot_dt*x5179;
double x7337 = x70*x7336;
double x7338 = x0*x7337;
double x7339 = 22*x3180;
double x7340 = q7_b_dot_dt*x70;
double x7341 = 12*x7340;
double x7342 = x1613*x5695;
double x7343 = q7_b_dt*x5394;
double x7344 = q7_b*x5234;
double x7345 = q6_b*x3276;
double x7346 = q7_b_dot*x3186;
double x7347 = q6_i*x791;
double x7348 = q7_i_dot*x753;
double x7349 = x7021*x808;
double x7350 = q7_b_dot*x5229;
double x7351 = q6_i*x7350;
double x7352 = q7_b_dt*x5175;
double x7353 = x1606*x20;
double x7354 = q7_b_dt*x5179;
double x7355 = L*x7354;
double x7356 = x0*x7355;
double x7357 = 36*x5186;
double x7358 = x197*x7357;
double x7359 = 36*x5210;
double x7360 = 36*x5189;
double x7361 = q7_b*x5184;
double x7362 = q6_b*q7_b;
double x7363 = x5151*x7362;
double x7364 = 22*x7064;
double x7365 = 22*x5700;
double x7366 = q7_b_dot*x5695;
double x7367 = 12*x5700;
double x7368 = q7_i_dot*x4;
double x7369 = q6_b*q7_i;
double x7370 = q6_i*q7_b;
double x7371 = q7_b*x5785;
double x7372 = q6_b*x4837;
double x7373 = q7_i_dot*x3186;
double x7374 = x3276*x5278;
double x7375 = x1852*x5312;
double x7376 = 12*x7366;
double x7377 = 22*q6_i_dot;
double x7378 = q7_i*x4;
double x7379 = q7_b_dot*x5703;
double x7380 = x5161*x7362;
double x7381 = q6_b*x807;
double x7382 = q6_i*x807;
double x7383 = q6_b*x808;
double x7384 = q6_b*q7_b_dot;
double x7385 = q7_b*x5396;
double x7386 = q6_i*x4802;
double x7387 = q6_i*x4934;
double x7388 = q7_i*x4847;
double x7389 = q7_i_dot*x7085;
double x7390 = x70*x7350;
double x7391 = q6_i_dot*x7390;
double x7392 = q6_b*x4023;
double x7393 = q7_b*x4023;
double x7394 = 18*x7053;
double x7395 = 9*x3186;
double x7396 = q6_b_dot*q7_b_dt;
double x7397 = q7_b*x3165;
double x7398 = x779*x801;
double x7399 = q7_i*x762;
double x7400 = x5413*x7229;
double x7401 = q7_i*x7050;
double x7402 = q6_i*x4837;
double x7403 = x753*x808;
double x7404 = x5276*x782;
double x7405 = q7_b_dt*x5278;
double x7406 = q7_b_dot_dt*x4795;
double x7407 = q7_b_dot*x3180;
double x7408 = x70*x791;
double x7409 = q6_i_dot*x7408;
double x7410 = q7_i_dot*x7102;
double x7411 = 18*x7354;
double x7412 = x5516*x791;
double x7413 = x5241*x7373;
double x7414 = q7_b_dot_dt*x5186;
double x7415 = L*x7414;
double x7416 = x1598*x7415;
double x7417 = x5234*x791;
double x7418 = x4795*x7417;
double x7419 = x3329*x7106;
double x7420 = x3237*x7414;
double x7421 = x4883*x5234;
double x7422 = x7421*x762;
double x7423 = q7_i*x5205;
double x7424 = 9*x5184;
double x7425 = q6_b*x7424;
double x7426 = 9*x5210;
double x7427 = q7_b*x7424;
double x7428 = q7_b*x57;
double x7429 = x5282*x7428;
double x7430 = x1649*x7107;
double x7431 = q7_b_dt*x5241;
double x7432 = q7_b*x7105;
double x7433 = q6_b*q7_i_dot;
double x7434 = q6_i*q7_b_dot;
double x7435 = q7_b_dot*x5202;
double x7436 = L*x7435;
double x7437 = q7_i_dot*x7130;
double x7438 = q7_b_dot*x7128;
double x7439 = x3329*x7126;
double x7440 = x3237*x7435;
double x7441 = 36*x5396;
double x7442 = q7_b*x778;
double x7443 = q7_b*x3260;
double x7444 = q6_b_dot*q7_b_dot;
double x7445 = x7117*x807;
double x7446 = q6_i*x778;
double x7447 = q6_b*x779;
double x7448 = q7_b_dot*x4795;
double x7449 = x57*x7448;
double x7450 = q6_b_dot*q7_i;
double x7451 = q6_i_dot*q7_b;
double x7452 = x1649*x7126;
double x7453 = x0*x7451;
double x7454 = q6_b_dot*q7_b;
double x7455 = x2*x4795;
double x7456 = q7_b*x7315;
double x7457 = x4883*x5244;
double x7458 = 5*x7340;
double x7459 = 5*x7366;
double x7460 = 5*x5700;
double x7461 = 5*q7_i_dot;
double x7462 = x4842 + x5168*x7457 + x5172*x7458 - x5175*x7458 - x5178*x7457 + x5189*x7459 - x5198*x7459 + x5698*x7461 - 5*x7318 - 10*x7338 - 5*x7342 - x7368*x7460 - 20*x7379;
double x7463 = q6_i_dot*x7085;
double x7464 = x70*x7218;
double x7465 = x7178*x762;
double x7466 = q6_i_dot*x5540;
double x7467 = x0*x7466;
double x7468 = q6_b_dot*q6_i_dot;
double x7469 = x362*x7468;
double x7470 = x3303 + x4862 - x5234*x7465 + x5339*x7216 + x5342*x7217 + x5345*x7217 + x5359*x7216 - x5537*x7218 - x5543*x7464 + x5545*x7464 - x5547*x7469 - x5550*x7218 - x7106*x7467 - x7126*x7467 + 4*x7463;
double x7471 = q6_i*x782;
double x7472 = 16*x7471;
double x7473 = q7_i*x753;
double x7474 = 16*x7473;
double x7475 = q7_b_dt*x778;
double x7476 = x4890*x779;
double x7477 = q7_i*x4749;
double x7478 = x3108*x7350;
double x7479 = q7_i_dot*x158;
double x7480 = x4802*x808;
double x7481 = q6_b_dt*q7_i;
double x7482 = q6_i*q7_b_dt;
double x7483 = x5911*x7362;
double x7484 = q6_b*x7417;
double x7485 = 4*x7415;
double x7486 = x4795*x791;
double x7487 = q7_i_dot*x3180;
double x7488 = q6_i_dot*x7340;
double x7489 = x4883*x762;
double x7490 = q6_b*x1649;
double x7491 = q7_b*x1598;
double x7492 = x158*x7435;
double x7493 = q7_i_dot*x4795;
double x7494 = q6_i_dot*x4883;
double x7495 = q7_b_dot_dt*x5290;
double x7496 = q7_b_dot*x5290;
double x7497 = q7_b*x3276;
double x7498 = x5339*x7497;
double x7499 = q7_b_dot*q7_b_dt;
double x7500 = L*x7499;
double x7501 = x5339*x7500;
double x7502 = q7_i*x4837;
double x7503 = x5342*x7502;
double x7504 = x5345*x7502;
double x7505 = x4890*x808;
double x7506 = x5178*x7505;
double x7507 = x5168*x7505;
double x7508 = q7_i_dot*x7320;
double x7509 = x158*x7508;
double x7510 = q7_i*x7350;
double x7511 = x158*x7510;
double x7512 = q7_b*x791;
double x7513 = x5234*x7512;
double x7514 = x158*x7513;
double x7515 = x4877*x5234;
double x7516 = x158*x7515;
double x7517 = x1649*x7485;
double x7518 = x3320*x5241;
double x7519 = x158*x7518;
double x7520 = q7_b*x807;
double x7521 = x5597*x7520;
double x7522 = x5359*x7497;
double x7523 = x5359*x7500;
double x7524 = q7_b*q7_i_dot;
double x7525 = x5362*x7524;
double x7526 = q7_b_dot*q7_i;
double x7527 = x5362*x7526;
double x7528 = x5593*x7524;
double x7529 = x1649*x7435;
double x7530 = x158*x7529;
double x7531 = x5590*x7520;
double x7532 = q7_b*q7_b_dot;
double x7533 = x5369*x7532;
double x7534 = x5601*x7520;
double x7535 = q7_b_dot_dt*x4883;
double x7536 = q7_i_dot*x7408;
double x7537 = pow(q7_b_dot, 2);
double x7538 = x4883*x791;
double x7539 = q7_i_dot*x7340;
double x7540 = q7_i_dot*x4883;
double x7541 = q7_b_dot*x5540;
double x7542 = q7_i_dot*x7478 + x5264*x7535 + x5267*x7536 + x5269*x7536 - x5272*x7537 - x5274*x7537 - x5276*x7538 - x5279*x7539 + x5281*x7537 - x5283*x7540 - x5286*x7540 - x5289*x7537 + x7495*x7541;
double x7543 = x3330 + x4885 + x7542;
double x7544 = x3473 + x4992 - x7498 - x7501 - x7503 - x7504 - x7506 - x7507 - x7509 - x7511 + x7514 + x7516 + x7517 + x7519 - x7521 - x7522 - x7523 + x7525 + x7527 + x7528 + x7530 + x7531 + x7533 + x7534 + x7543;
double x7545 = q7_i*x7320;
double x7546 = q7_b*q7_b_dt;
double x7547 = q7_i*x782;
double x7548 = 16*x7547;
double x7549 = pow(q7_b, 2);
double x7550 = x5151*x7549;
double x7551 = q7_b_dt*q7_i;
double x7552 = q7_b*q7_i;
double x7553 = q7_b*x1649;
double x7554 = x5161*x7549;
double x7555 = x3360 - x4890*x7344 + x4903 + x5168*x7548 + x5178*x7548 - x5334*x7552 - x5336*x7554 + x5337*x7546 - x5590*x7549 + x5597*x7549 + x5611*x7546 - x5615*x7551 - x5616*x7553 + 8*x7545 - 16*x7550;
double x7556 = x779*x782;
double x7557 = x782*x808;
double x7558 = q7_i_dot*x7021;
double x7559 = 6*x7409;
double x7560 = 6*x7410;
double x7561 = q7_i*x5241;
double x7562 = q7_b*x7241;
double x7563 = q6_i_dot*x3216;
double x7564 = x1649*x7415;
double x7565 = q7_b*x5567;
double x7566 = x7087*x778;
double x7567 = x5521*x7442;
double x7568 = x0*x7205;
double x7569 = x1598*x7435;
double x7570 = 12*x7545;
double x7571 = x5553*x7546;
double x7572 = x5298*x7547;
double x7573 = x5556*x7547;
double x7574 = 24*x7550;
double x7575 = x5404*x7549;
double x7576 = x4864*x7344;
double x7577 = 12*q7_b_dt;
double x7578 = x7561*x7577;
double x7579 = x5399*x7549;
double x7580 = x5565*x7552;
double x7581 = x5567*x7553;
double x7582 = x5322*x7554;
double x7583 = x5573*x7546;
double x7584 = x3338 + x4887 + x7570 + x7571 + x7572 + x7573 - x7574 - x7575 - x7576 - x7578 + x7579 - x7580 - x7581 - x7582 + x7583;
double x7585 = 36*x7471;
double x7586 = 36*x7473;
double x7587 = x158*x7326;
double x7588 = 32*x7556;
double x7589 = 32*x7477;
double x7590 = q7_i*x791;
double x7591 = x4864*x808;
double x7592 = q7_b*x5625;
double x7593 = 8*x7354;
double x7594 = x323*x7593;
double x7595 = x158*x7352;
double x7596 = x158*x7353;
double x7597 = x158*x7334;
double x7598 = q7_b*x5620;
double x7599 = x4776*x808;
double x7600 = 32*x7183;
double x7601 = 32*x7237;
double x7602 = x6047*x7362;
double x7603 = 12*x3237;
double x7604 = q7_b*x20;
double x7605 = x5198*x7604;
double x7606 = x158*x7605;
double x7607 = x3347*x5211;
double x7608 = x158*x7423;
double x7609 = x5189*x7604;
double x7610 = x158*x7609;
double x7611 = x5516*x801;
double x7612 = x5641*x7201;
double x7613 = x5641*x7442;
double x7614 = 16*x7385;
double x7615 = q6_b_dot*q7_i_dot;
double x7616 = q6_i_dot*q7_b_dot;
double x7617 = 36*x7547;
double x7618 = 4*x7337;
double x7619 = q7_b_dot*x5667 - q7_i_dot*x5665 + q7_i_dot*x5666 + x0*x7618 + x1613*x6354 + x3364 + x4883*x5461 - x4883*x5466 - x4883*x5660 + x4883*x5661 - x4906*x7344 + x4907 + x5168*x7617 + x5178*x7617 + x5419*x7340 - x5427*x7552 - x5429*x7554 + x5441*x7546 - x5460*x7340 + x5655*x7546 - x5658*x7551 - x5659*x7549 + x5662*x7549 - x5663*x7553 + 2*x7318 + 18*x7545 - 36*x7550;
double x7620 = q7_i*x4934;
double x7621 = 28*x7329;
double x7622 = 14*L;
double x7623 = x57*x7549;
double x7624 = q7_i*x5891;
double x7625 = q7_b*x5834;
double x7626 = x5184*x5509;
double x7627 = 14*x5210;
double x7628 = 98*x70;
double x7629 = 196*x5632 + 98*x6682 - x7003*x7628 + x7005*x7628;
double x7630 = q7_b*q7_b_dot_dt;
double x7631 = q7_i_dot*x782;
double x7632 = 7*x5166;
double x7633 = L*x5521;
double x7634 = x5245*x7633;
double x7635 = x5521*x807;
double x7636 = x5257*x7633;
double x7637 = L*x7336;
double x7638 = 7*x808;
double x7639 = q7_b_dot*x7114;
double x7640 = q7_b_dot*x7428;
double x7641 = x5527*x6696;
double x7642 = q8_i_dot*x5408;
double x7643 = q8_i*x7320;
double x7644 = q8_b*x5229;
double x7645 = q7_i*x7644;
double x7646 = q7_b*q8_b_dt;
double x7647 = q7_b_dt*q8_b;
double x7648 = q7_i*x4951;
double x7649 = q8_i*x4864;
double x7650 = q8_i*x5164;
double x7651 = L*x7650;
double x7652 = 84*x7329;
double x7653 = q8_b*x5386;
double x7654 = 84*x5154;
double x7655 = 52*x4883;
double x7656 = 42*L;
double x7657 = 42*x3401;
double x7658 = 28*x4970;
double x7659 = q8_b_dot_dt*x5179;
double x7660 = x70*x7659;
double x7661 = x0*x7660;
double x7662 = 26*x7340;
double x7663 = 14*x3395;
double x7664 = x20*x3409;
double x7665 = q8_b_dt*x5394;
double x7666 = q8_b*x5234;
double x7667 = q7_b*x3380;
double x7668 = q7_b_dt*q8_b_dot;
double x7669 = q7_i*x820;
double x7670 = q8_i_dot*x782;
double x7671 = x7320*x837;
double x7672 = q8_b_dot*x5229;
double x7673 = q7_i*x7672;
double x7674 = x1657*x20;
double x7675 = q8_b*x5379;
double x7676 = q8_b_dt*x5179;
double x7677 = L*x7676;
double x7678 = x0*x7677;
double x7679 = q8_i*x5891;
double x7680 = 42*x6424;
double x7681 = 42*x5210;
double x7682 = q8_b*x5834;
double x7683 = 26*x7366;
double x7684 = 26*x5700;
double x7685 = q7_b*q8_b;
double x7686 = x5151*x7685;
double x7687 = q8_b_dot*x5695;
double x7688 = q8_i_dot*x4;
double x7689 = q7_b*q8_i;
double x7690 = q7_i*q8_b;
double x7691 = q8_b*x5785;
double x7692 = q7_b*x4924;
double x7693 = x3380*x5278;
double x7694 = 14*q8_i_dot;
double x7695 = x5189*x7687;
double x7696 = 26*x5698;
double x7697 = q8_i*x4;
double x7698 = q8_b_dot*x5703;
double x7699 = x5161*x7685;
double x7700 = q7_b*x836;
double x7701 = q7_i*x836;
double x7702 = q7_b*x837;
double x7703 = q7_b*q8_b_dot;
double x7704 = q8_b*x5396;
double x7705 = q7_i*x4890;
double x7706 = q7_i*x5022;
double x7707 = q8_i*x4934;
double x7708 = q8_i_dot*x7390;
double x7709 = x70*x7672;
double x7710 = q7_i_dot*x7709;
double x7711 = 22*x7329;
double x7712 = 22*x5154;
double x7713 = 11*L;
double x7714 = 11*x3401;
double x7715 = q7_b_dot*x3401;
double x7716 = q8_b*x3276;
double x7717 = x808*x830;
double x7718 = q8_i*x791;
double x7719 = x5413*x7549;
double x7720 = q8_i*x7350;
double x7721 = x7644*x808;
double x7722 = q7_b_dt*x836;
double x7723 = q7_i*x4924;
double x7724 = x782*x837;
double x7725 = x5276*x811;
double x7726 = q8_b_dt*x5278;
double x7727 = q7_b_dot*x3395;
double x7728 = q7_b_dot_dt*x4970;
double x7729 = x70*x820;
double x7730 = q7_i_dot*x7729;
double x7731 = q8_i_dot*x7408;
double x7732 = x5516*x820;
double x7733 = q8_b_dot_dt*x5186;
double x7734 = L*x7733;
double x7735 = x1649*x7734;
double x7736 = x7421*x820;
double x7737 = x3453*x7414;
double x7738 = x3329*x7733;
double x7739 = x4970*x7417;
double x7740 = 11*x6424;
double x7741 = 11*x5210;
double x7742 = q8_b*x57;
double x7743 = x5282*x7742;
double x7744 = x1702*x7415;
double x7745 = q7_i_dot*x5241;
double x7746 = q8_b*x7412;
double x7747 = q7_b*x3347;
double x7748 = q7_b*q8_i_dot;
double x7749 = q7_i*q8_b_dot;
double x7750 = q8_b_dot*x5202;
double x7751 = L*x7750;
double x7752 = q8_i_dot*x5853;
double x7753 = q7_b_dot*x7752;
double x7754 = q8_b_dot*x5853;
double x7755 = q7_i_dot*x7754;
double x7756 = x3453*x7435;
double x7757 = x3329*x7750;
double x7758 = q8_b*x807;
double x7759 = q7_b_dot*q8_b_dot;
double x7760 = x7428*x836;
double x7761 = q7_i*x807;
double x7762 = q7_b*x808;
double x7763 = q8_b_dot*x4883;
double x7764 = x57*x7763;
double x7765 = q7_b_dot*q8_i;
double x7766 = q7_i_dot*q8_b;
double x7767 = x1702*x7435;
double x7768 = x0*x7766;
double x7769 = q7_b_dot*q8_b;
double x7770 = x2*x4883;
double x7771 = x4970*x5306;
double x7772 = 12*x7660;
double x7773 = 6*x3395;
double x7774 = q8_i_dot*x5715 - x0*x7772 + x4929 + x5168*x7771 + x5172*x7773 - x5175*x7773 - x5178*x7771 - x5716*x7687 - x5717*x7688 - 6*x7642 - 6*x7664 + 6*x7695 - 24*x7698;
double x7775 = x70*x7537;
double x7776 = q7_i_dot*x5897;
double x7777 = q7_b_dot*q7_i_dot;
double x7778 = x362*x7777;
double x7779 = x3406*x7390 + x3407 + x4949 + x5339*x7535 + x5342*x7536 + x5345*x7536 + x5359*x7535 - x5537*x7537 - x5543*x7775 + x5545*x7775 - x5547*x7778 - x5550*x7537 - x7414*x7776 - x7417*x7541 - x7435*x7776;
double x7780 = q7_i*x811;
double x7781 = 16*x7780;
double x7782 = q8_i*x782;
double x7783 = 16*x7782;
double x7784 = x4977*x808;
double x7785 = q8_i*x4837;
double x7786 = x3108*x7672;
double x7787 = x4890*x837;
double x7788 = q7_b_dt*q8_i;
double x7789 = q7_i*q8_b_dt;
double x7790 = x5911*x7685;
double x7791 = x158*x820;
double x7792 = 4*x7734;
double x7793 = x4883*x820;
double x7794 = q8_i_dot*x7340;
double x7795 = q7_i_dot*x3395;
double x7796 = x4970*x791;
double x7797 = q7_i_dot*x3401;
double x7798 = x158*x791;
double x7799 = x1702*x5202;
double x7800 = q7_b*x7799;
double x7801 = q8_b*x1649;
double x7802 = x158*x7750;
double x7803 = q8_i_dot*x4883;
double x7804 = q7_i_dot*x4970;
double x7805 = q8_b_dot*x5540;
double x7806 = 8*x3380;
double x7807 = x5290*x7806;
double x7808 = q8_b*x3380;
double x7809 = x5339*x7808;
double x7810 = q8_b_dot*x3401;
double x7811 = x5339*x7810;
double x7812 = q8_i*x4924;
double x7813 = x5342*x7812;
double x7814 = x5345*x7812;
double x7815 = x4977*x837;
double x7816 = x5178*x7815;
double x7817 = x5168*x7815;
double x7818 = q8_i_dot*x7644;
double x7819 = x158*x7818;
double x7820 = q8_i*x7672;
double x7821 = x158*x7820;
double x7822 = q8_b*x820;
double x7823 = x5234*x7822;
double x7824 = x158*x7823;
double x7825 = x4964*x5234;
double x7826 = x158*x7825;
double x7827 = x1702*x7792;
double x7828 = q8_i_dot*x3401;
double x7829 = x5674*x7828;
double x7830 = q8_b*x836;
double x7831 = x5597*x7830;
double x7832 = q8_b*x7807;
double x7833 = x5359*x7810;
double x7834 = q8_b*q8_i_dot;
double x7835 = x5362*x7834;
double x7836 = q8_b_dot*q8_i;
double x7837 = x5362*x7836;
double x7838 = x5593*x7834;
double x7839 = x1702*x7750;
double x7840 = x158*x7839;
double x7841 = x5590*x7830;
double x7842 = q8_b*q8_b_dot;
double x7843 = x5369*x7842;
double x7844 = x5601*x7830;
double x7845 = q8_b_dot*x3395;
double x7846 = q8_i_dot*x7729;
double x7847 = pow(q8_b_dot, 2);
double x7848 = x4970*x820;
double x7849 = q8_i_dot*x3395;
double x7850 = q8_i_dot*x4970;
double x7851 = q8_i_dot*x7786 + x5264*x7845 + x5267*x7846 + x5269*x7846 - x5272*x7847 - x5274*x7847 - x5276*x7848 - x5279*x7849 + x5281*x7847 - x5283*x7850 - x5286*x7850 - x5289*x7847 + x5291*x7845;
double x7852 = x3438 + x4972 + x7851;
double x7853 = x3570 + x5075 - x7809 - x7811 - x7813 - x7814 - x7816 - x7817 - x7819 - x7821 + x7824 + x7826 + x7827 + x7829 - x7831 - x7832 - x7833 + x7835 + x7837 + x7838 + x7840 + x7841 + x7843 + x7844 + x7852;
double x7854 = q8_i*x7644;
double x7855 = q8_b*q8_b_dt;
double x7856 = q8_i*x811;
double x7857 = 16*x7856;
double x7858 = pow(q8_b, 2);
double x7859 = x5151*x7858;
double x7860 = q8_b_dt*q8_i;
double x7861 = q8_b*q8_i;
double x7862 = q8_b*x1702;
double x7863 = x5202*x7862;
double x7864 = x5161*x7858;
double x7865 = x3471 - x4977*x7666 + x4990 + x5168*x7857 + x5178*x7857 - x5334*x7861 - x5336*x7864 + x5337*x7855 - x5590*x7858 + x5597*x7858 + x5611*x7855 - x5615*x7860 + 8*x7854 - 16*x7859 - 8*x7863;
double x7866 = x808*x811;
double x7867 = x811*x837;
double x7868 = 6*x7730;
double x7869 = 6*x7731;
double x7870 = q8_i*x5241;
double x7871 = x5996*x7685;
double x7872 = x7344*x820;
double x7873 = x1702*x7734;
double x7874 = q7_b*x7635;
double x7875 = q8_b*x7635;
double x7876 = x0*x7524;
double x7877 = x5290*x7773;
double x7878 = 12*x7854;
double x7879 = x5553*x7855;
double x7880 = x5298*x7856;
double x7881 = x5556*x7856;
double x7882 = 24*x7859;
double x7883 = x5404*x7858;
double x7884 = x4951*x7666;
double x7885 = x3416*x7870;
double x7886 = x5399*x7858;
double x7887 = x5565*x7861;
double x7888 = x5567*x7862;
double x7889 = x5322*x7864;
double x7890 = x5573*x7855;
double x7891 = x3445 + x4974 + x7878 + x7879 + x7880 + x7881 - x7882 - x7883 - x7884 - x7885 + x7886 - x7887 - x7888 - x7889 + x7890;
double x7892 = 36*x7780;
double x7893 = 36*x7782;
double x7894 = x158*x7650;
double x7895 = 32*x7866;
double x7896 = 32*x7785;
double x7897 = q8_i*x820;
double x7898 = x4951*x837;
double x7899 = q8_b*x5625;
double x7900 = 8*x7676;
double x7901 = x323*x7900;
double x7902 = x3457*x5175;
double x7903 = x158*x7674;
double x7904 = x3457*x5172;
double x7905 = x5330*x7653;
double x7906 = x4864*x837;
double x7907 = 32*x7502;
double x7908 = 32*x7557;
double x7909 = x6047*x7685;
double x7910 = 12*x3329;
double x7911 = q8_b*x20;
double x7912 = x5198*x7911;
double x7913 = x158*x7912;
double x7914 = q8_i*x5389;
double x7915 = q8_i*x5205;
double x7916 = x158*x7915;
double x7917 = x5189*x7911;
double x7918 = x158*x7917;
double x7919 = x5516*x830;
double x7920 = x5641*x7520;
double x7921 = q8_b*x5641;
double x7922 = x7921*x807;
double x7923 = 16*x7704;
double x7924 = x129*x7750;
double x7925 = q7_b_dot*q8_i_dot;
double x7926 = q7_i_dot*q8_b_dot;
double x7927 = 36*x7856;
double x7928 = 4*x7660;
double x7929 = q8_b_dot*x5667 - q8_i_dot*x5665 + q8_i_dot*x5666 + x0*x7928 + x3395*x5419 - x3395*x5460 + x3409*x5275 + x3475 + x4970*x5461 - x4970*x5466 - x4970*x5660 + x4970*x5661 - x4993*x7666 + x4994 + x5168*x7927 + x5178*x7927 - x5427*x7861 - x5429*x7864 + x5441*x7855 + x5655*x7855 - x5658*x7860 - x5659*x7858 + x5662*x7858 + 2*x7642 + 18*x7854 - 36*x7859 - 18*x7863;
double x7930 = q8_i*x5022;
double x7931 = x57*x7858;
double x7932 = 16*x5189;
double x7933 = q8_b*x5184;
double x7934 = 128*x70;
double x7935 = 256*x5632 + 128*x6682 - x7003*x7934 + x7005*x7934;
double x7936 = q8_b*q8_b_dot_dt;
double x7937 = q8_b_dot*q8_b_dt;
double x7938 = q8_i_dot*x811;
double x7939 = 8*x5166;
double x7940 = L*x5911;
double x7941 = x5245*x7940;
double x7942 = x5911*x836;
double x7943 = 8*x20;
double x7944 = x5257*x7940;
double x7945 = L*x7659;
double x7946 = 16*x7945;
double x7947 = 32*x5259;
double x7948 = 8*x837;
double x7949 = q8_b_dot*x5184;
double x7950 = q8_b_dot*x7742;
double x7951 = x327*x5161;
double x7952 = x0*x7951;
double x7953 = q9_i_dot*x5408;
double x7954 = q9_i*x5229;
double x7955 = q8_b*x7954;
double x7956 = q9_b*x5229;
double x7957 = q8_i*x7956;
double x7958 = q8_b*q9_b_dt;
double x7959 = q8_b_dt*q9_b;
double x7960 = q8_i*x5039;
double x7961 = q9_i*x4951;
double x7962 = q9_i*x5164;
double x7963 = L*x7962;
double x7964 = 96*x5154;
double x7965 = q8_b*x7964;
double x7966 = q9_b*x5386;
double x7967 = 60*x4970;
double x7968 = 48*x3401;
double x7969 = q9_b_dt*x5172;
double x7970 = x5061*x5641;
double x7971 = q9_b_dot_dt*x5179;
double x7972 = x70*x7971;
double x7973 = x0*x7972;
double x7974 = 30*x3395;
double x7975 = q9_b_dot_dt*x70;
double x7976 = 16*x7975;
double x7977 = x1717*x5695;
double x7978 = q9_b_dt*x5394;
double x7979 = q9_b*x5234;
double x7980 = q8_b*x3494;
double x7981 = q9_b_dot*x3401;
double x7982 = q8_i*x849;
double x7983 = q9_i_dot*x811;
double x7984 = x7644*x866;
double x7985 = q8_i*q9_b_dot;
double x7986 = x5229*x7985;
double x7987 = q9_b_dt*x5175;
double x7988 = x1710*x20;
double x7989 = q9_b*x5379;
double x7990 = q9_b_dt*x5179;
double x7991 = L*x7990;
double x7992 = x0*x7991;
double x7993 = 48*x5891;
double x7994 = 48*q8_b;
double x7995 = 48*x5210;
double x7996 = 48*q9_b;
double x7997 = 30*x5700;
double x7998 = q8_b*q9_b;
double x7999 = x5151*x7998;
double x8000 = q9_b_dot*x5695;
double x8001 = 16*x5700;
double x8002 = q9_i_dot*x4;
double x8003 = q8_b*q9_i;
double x8004 = q8_i*q9_b;
double x8005 = q9_b*x5785;
double x8006 = q8_b*x5013;
double x8007 = q9_i_dot*x3401;
double x8008 = x3494*x5278;
double x8009 = x1852*x5643;
double x8010 = 30*q8_i_dot;
double x8011 = q9_i*x4;
double x8012 = q9_b_dot*x5703;
double x8013 = x5161*x7998;
double x8014 = q8_b*x865;
double x8015 = q8_i*x865;
double x8016 = q8_b*x866;
double x8017 = q8_b*q9_b_dot;
double x8018 = q9_b*x5396;
double x8019 = q9_b_dot*x158;
double x8020 = q8_b*x8019;
double x8021 = q8_i*x4977;
double x8022 = q8_i*x5106;
double x8023 = q9_i*x5022;
double x8024 = q9_i_dot*x7709;
double x8025 = x5229*x70;
double x8026 = q9_b_dot*x8025;
double x8027 = q8_i_dot*x8026;
double x8028 = x5229*x865;
double x8029 = 26*x5154;
double x8030 = q8_b*x8029;
double x8031 = 13*x3401;
double x8032 = 13*L;
double x8033 = q9_b_dt*x5198;
double x8034 = q8_b_dot*x129;
double x8035 = q9_b*x3380;
double x8036 = x837*x859;
double x8037 = q9_i*x820;
double x8038 = x5413*x7858;
double x8039 = q8_b_dot*x7954;
double x8040 = q8_i*x5013;
double x8041 = x811*x866;
double x8042 = x5276*x840;
double x8043 = q9_b_dt*x5278;
double x8044 = q9_b_dot_dt*x4970;
double x8045 = q9_b_dot*x3395;
double x8046 = x70*x849;
double x8047 = q8_i_dot*x8046;
double x8048 = q9_i_dot*x7729;
double x8049 = x5516*x849;
double x8050 = x5241*x8007;
double x8051 = q9_b_dot_dt*x5186;
double x8052 = L*x8051;
double x8053 = x1702*x8052;
double x8054 = x5234*x849;
double x8055 = x4970*x8054;
double x8056 = x3556*x7733;
double x8057 = x3453*x8051;
double x8058 = x5028*x5835;
double x8059 = 13*x5891;
double x8060 = 13*q8_b;
double x8061 = 13*x5210;
double x8062 = 13*q9_b;
double x8063 = x5098*x5282;
double x8064 = x1752*x7734;
double x8065 = q9_b_dt*x5241;
double x8066 = q9_b*x7732;
double x8067 = q8_b*q9_i_dot;
double x8068 = q9_b_dot*x5202;
double x8069 = L*x8068;
double x8070 = q9_i_dot*x7754;
double x8071 = q9_b_dot*x7752;
double x8072 = x3556*x7750;
double x8073 = x3453*x8068;
double x8074 = q9_b*x836;
double x8075 = q9_b_dt*x5247;
double x8076 = x0*x8075;
double x8077 = q8_b_dot*q9_b_dot;
double x8078 = x7742*x865;
double x8079 = q8_i*x836;
double x8080 = q8_b*x837;
double x8081 = q9_b_dot*x4970;
double x8082 = x57*x8081;
double x8083 = q8_b_dot*q9_i;
double x8084 = q8_i_dot*q9_b;
double x8085 = x1752*x7750;
double x8086 = x0*x8084;
double x8087 = q8_b_dot*q9_b;
double x8088 = x2*x4970;
double x8089 = q9_b*x6239;
double x8090 = x5061*x5521;
double x8091 = 7*x7975;
double x8092 = 7*x8000;
double x8093 = 7*x5700;
double x8094 = 7*q9_i_dot;
double x8095 = x5168*x8090 + x5172*x8091 - x5175*x8091 - x5178*x8090 + x5189*x8092 - x5198*x8092 + x5698*x8094 - 7*x7953 - 14*x7973 - 7*x7977 - x8002*x8093 - 28*x8012;
double x8096 = x70*x7847;
double x8097 = x7805*x820;
double x8098 = q8_i_dot*x5897;
double x8099 = q8_b_dot*q8_i_dot;
double x8100 = x362*x8099;
double x8101 = x3460*x7709 + x3521 + x5037 - x5234*x8097 + x5339*x7845 + x5342*x7846 + x5345*x7846 + x5359*x7845 - x5537*x7847 - x5543*x8096 + x5545*x8096 - x5547*x8100 - x5550*x7847 - x7733*x8098 - x7750*x8098;
double x8102 = q8_i*x840;
double x8103 = 16*x8102;
double x8104 = q9_i*x811;
double x8105 = 16*x8104;
double x8106 = q9_b_dt*x836;
double x8107 = x5065*x837;
double x8108 = q9_i*x4924;
double x8109 = x3108*x5229;
double x8110 = q9_b_dot*x8109;
double x8111 = q9_i_dot*x158;
double x8112 = x4977*x866;
double x8113 = q8_b_dt*q9_i;
double x8114 = q8_i*q9_b_dt;
double x8115 = x5911*x7998;
double x8116 = q8_b*x8054;
double x8117 = x3401*x3602;
double x8118 = 4*x8052;
double x8119 = x4970*x849;
double x8120 = q9_i_dot*x3395;
double x8121 = q8_i_dot*x7975;
double x8122 = x5028*x70;
double x8123 = x1752*x5202;
double x8124 = q8_b*x8123;
double x8125 = q9_b*x1702;
double x8126 = x158*x8068;
double x8127 = q9_i_dot*x4970;
double x8128 = q8_i_dot*x5061;
double x8129 = q9_b_dot_dt*x5290;
double x8130 = q9_b_dot*x6239;
double x8131 = q9_b*x3494;
double x8132 = x5339*x8131;
double x8133 = q9_b_dot*q9_b_dt;
double x8134 = L*x8133;
double x8135 = x5339*x8134;
double x8136 = q9_i*x5013;
double x8137 = x5342*x8136;
double x8138 = x5345*x8136;
double x8139 = x5065*x866;
double x8140 = x5178*x8139;
double x8141 = x5168*x8139;
double x8142 = q9_i_dot*x7956;
double x8143 = x158*x8142;
double x8144 = q9_b_dot*x7954;
double x8145 = x158*x8144;
double x8146 = q9_b*x849;
double x8147 = x5234*x8146;
double x8148 = x158*x8147;
double x8149 = x5052*x5234;
double x8150 = x158*x8149;
double x8151 = x1752*x8118;
double x8152 = x3538*x5241;
double x8153 = x158*x8152;
double x8154 = q9_b*x865;
double x8155 = x5597*x8154;
double x8156 = x5359*x8131;
double x8157 = x5359*x8134;
double x8158 = q9_b*q9_i_dot;
double x8159 = x5362*x8158;
double x8160 = q9_b_dot*q9_i;
double x8161 = x5362*x8160;
double x8162 = x5593*x8158;
double x8163 = x1752*x8068;
double x8164 = x158*x8163;
double x8165 = x5590*x8154;
double x8166 = q9_b*q9_b_dot;
double x8167 = x5369*x8166;
double x8168 = x5601*x8154;
double x8169 = q9_b_dot_dt*x5061;
double x8170 = q9_i_dot*x8046;
double x8171 = pow(q9_b_dot, 2);
double x8172 = x5061*x849;
double x8173 = q9_i_dot*x7975;
double x8174 = q9_i_dot*x5061;
double x8175 = q9_b_dot*x5540;
double x8176 = q9_i_dot*x8110 + x3557 + x5063 + x5264*x8169 + x5267*x8170 + x5269*x8170 - x5272*x8171 - x5274*x8171 - x5276*x8172 - x5279*x8173 + x5281*x8171 - x5283*x8174 - x5286*x8174 - x5289*x8171 + x8129*x8175;
double x8177 = -x8132 - x8135 - x8137 - x8138 - x8140 - x8141 - x8143 - x8145 + x8148 + x8150 + x8151 + x8153 - x8155 - x8156 - x8157 + x8159 + x8161 + x8162 + x8164 + x8165 + x8167 + x8168 + x8176;
double x8178 = q9_i*x7956;
double x8179 = q9_b*q9_b_dt;
double x8180 = q9_i*x840;
double x8181 = 16*x8180;
double x8182 = pow(q9_b, 2);
double x8183 = x5151*x8182;
double x8184 = q9_b_dt*q9_i;
double x8185 = q9_b*q9_i;
double x8186 = q9_b*x1752;
double x8187 = x5202*x8186;
double x8188 = x5161*x8182;
double x8189 = -x5065*x7979 + x5168*x8181 + x5178*x8181 - x5334*x8185 - x5336*x8188 + x5337*x8179 - x5590*x8182 + x5597*x8182 + x5611*x8179 - x5615*x8184 + 8*x8178 - 16*x8183 - 8*x8187;
double x8190 = x837*x840;
double x8191 = x840*x866;
double x8192 = q9_i_dot*x7644;
double x8193 = 6*x8047;
double x8194 = 6*x8048;
double x8195 = q9_i*x5241;
double x8196 = x5996*x7998;
double x8197 = q8_i_dot*x5241;
double x8198 = x1752*x8052;
double x8199 = x5521*x7830;
double x8200 = x5521*x8074;
double x8201 = x0*x7834;
double x8202 = x1702*x8068;
double x8203 = 6*x4970;
double x8204 = 12*x8178;
double x8205 = x5553*x8179;
double x8206 = x5298*x8180;
double x8207 = x5556*x8180;
double x8208 = 24*x8183;
double x8209 = x5404*x8182;
double x8210 = x5039*x7979;
double x8211 = 12*q9_b_dt;
double x8212 = x8195*x8211;
double x8213 = x5399*x8182;
double x8214 = x5565*x8185;
double x8215 = 12*x8187;
double x8216 = x5322*x8188;
double x8217 = x5573*x8179;
double x8218 = x8204 + x8205 + x8206 + x8207 - x8208 - x8209 - x8210 - x8212 + x8213 - x8214 - x8215 - x8216 + x8217;
double x8219 = 36*x8102;
double x8220 = 36*x8104;
double x8221 = x158*x7962;
double x8222 = 32*x8190;
double x8223 = 32*x8108;
double x8224 = q9_i*x849;
double x8225 = x5039*x866;
double x8226 = q9_b*x5625;
double x8227 = 8*x7990;
double x8228 = x323*x8227;
double x8229 = x158*x7987;
double x8230 = x158*x7988;
double x8231 = x158*x7969;
double x8232 = x5330*x7966;
double x8233 = x4951*x866;
double x8234 = 12*q8_i_dot;
double x8235 = 32*x7812;
double x8236 = 32*x7867;
double x8237 = q9_b*x6047;
double x8238 = q8_b*x8237;
double x8239 = 12*x3453;
double x8240 = q9_b*x20;
double x8241 = x5198*x8240;
double x8242 = x158*x8241;
double x8243 = q9_i*x5389;
double x8244 = q9_i*x5205;
double x8245 = x158*x8244;
double x8246 = x5189*x8240;
double x8247 = x158*x8246;
double x8248 = 18*q9_b;
double x8249 = x7921*x836;
double x8250 = x5641*x8074;
double x8251 = 16*x8018;
double x8252 = q8_b_dot*q9_i_dot;
double x8253 = q8_i_dot*q9_b_dot;
double x8254 = 36*x8180;
double x8255 = 4*x7972;
double x8256 = q9_b_dot*x5667 - q9_i_dot*x5665 + q9_i_dot*x5666 + x0*x8255 + x1717*x6354 + x5061*x5461 - x5061*x5466 - x5061*x5660 + x5061*x5661 - x5081*x7979 + x5168*x8254 + x5178*x8254 + x5419*x7975 - x5427*x8185 - x5429*x8188 + x5441*x8179 - x5460*x7975 + x5655*x8179 - x5658*x8184 - x5659*x8182 + x5662*x8182 + 2*x7953 - x8123*x8248 + 18*x8178 - 36*x8183;
double x8257 = q9_i*x5106;
double x8258 = x57*x8182;
double x8259 = 162*x70;
double x8260 = 324*x5632 + 162*x6682 - x7003*x8259 + x7005*x8259;
double x8261 = q9_b*q9_b_dot_dt;
double x8262 = q9_i_dot*x840;
double x8263 = 9*x5166;
double x8264 = x4023*x7003;
double x8265 = q9_b_dot*x4023;
double x8266 = 9*x3494;
double x8267 = x4023*x7005;
double x8268 = L*x7971;
double x8269 = 36*x5259;
double x8270 = 9*x866;
double x8271 = q9_b_dot*x7424;
double x8272 = q9_b_dot*x5098;
double x8273 = x4023*x5161;
double x8274 = x0*x8273;
double x8275 = q10_i_dot*x5408;
double x8276 = q10_b*x7954;
double x8277 = q10_i*x7956;
double x8278 = q10_b*q9_b_dt;
double x8279 = q10_b_dt*q9_b;
double x8280 = q10_i*x5039;
double x8281 = q9_i*x3667;
double x8282 = q10_i*x5166;
double x8283 = q10_b*x5386;
double x8284 = 108*x5154;
double x8285 = x5379*x8284;
double x8286 = 68*x5061;
double x8287 = 54*L;
double x8288 = q10_b_dt*x8287;
double x8289 = x5125*x6047;
double x8290 = x3605*x5179;
double x8291 = x0*x8290;
double x8292 = 34*x7975;
double x8293 = 18*x3605;
double x8294 = x3607*x4;
double x8295 = q10_b*x5234;
double x8296 = x3595*x5186;
double x8297 = q10_i*x0;
double x8298 = q9_b*x5241;
double x8299 = q9_b*x871;
double x8300 = q10_i_dot*x840;
double x8301 = q9_i*x872;
double x8302 = x7954*x876;
double x8303 = x7956*x875;
double x8304 = q10_i_dt*x5287;
double x8305 = q10_b_dt*x5179;
double x8306 = x323*x8305;
double x8307 = 54*x5891;
double x8308 = 54*q10_b;
double x8309 = 54*q9_b;
double x8310 = 54*x5210;
double x8311 = 34*x8000;
double x8312 = 34*x5700;
double x8313 = q10_b*q9_b;
double x8314 = x5151*x8313;
double x8315 = q10_b_dot*x5695;
double x8316 = 18*x8315;
double x8317 = q10_i_dot*x4;
double x8318 = q10_b*q9_i;
double x8319 = q10_i*q9_b;
double x8320 = 6*q10_b;
double x8321 = x5202*x8320;
double x8322 = x5278*x871;
double x8323 = q9_b*x5279;
double x8324 = 34*q9_i_dot;
double x8325 = q10_i*x4;
double x8326 = q10_b_dot*x5703;
double x8327 = x5161*x8313;
double x8328 = q9_b*x876;
double x8329 = q9_i*x876;
double x8330 = q9_b*x875;
double x8331 = q10_b_dot*q9_b;
double x8332 = q10_b*x5396;
double x8333 = q9_i*x5065;
double x8334 = q10_i*x5106;
double x8335 = q9_i*x3656;
double x8336 = q10_b_dot*q9_i_dot;
double x8337 = x8025*x8336;
double x8338 = q10_i_dot*x8026;
double x8339 = 30*x5154;
double x8340 = x5379*x8339;
double x8341 = x5125*x5911;
double x8342 = 15*L;
double x8343 = q10_b_dt*x8342;
double x8344 = 8*x3605;
double x8345 = x3494*x8320;
double x8346 = x3595*x865;
double x8347 = q10_i*x849;
double x8348 = x866*x877;
double x8349 = x5413*x8182;
double x8350 = q10_b*x5229;
double x8351 = q9_b_dt*x876;
double x8352 = x840*x875;
double x8353 = x1*x5174;
double x8354 = q10_b_dt*x5278;
double x8355 = q9_b_dot_dt*x5125;
double x8356 = q9_b_dot*x3605;
double x8357 = x3664*x849;
double x8358 = q9_i_dot*x3607;
double x8359 = q10_i_dt*x8342;
double x8360 = x5186*x871;
double x8361 = x1752*x8360;
double x8362 = x8298*x872;
double x8363 = x5125*x8054;
double x8364 = x3663*x5241;
double x8365 = x3665*x8051;
double x8366 = x5109*x5241;
double x8367 = 15*x5891;
double x8368 = 15*q10_b;
double x8369 = 15*q9_b;
double x8370 = 15*x5210;
double x8371 = q10_b*x8049;
double x8372 = q10_b_dt*x5241;
double x8373 = x0*x1790;
double x8374 = q10_b_dot*q9_i;
double x8375 = q10_i_dot*q9_b;
double x8376 = q10_b_dot*x5210;
double x8377 = x1752*x8376;
double x8378 = x5853*x8336;
double x8379 = q10_i_dot*q9_b_dot;
double x8380 = x5853*x8379;
double x8381 = x0*x8336;
double x8382 = x3665*x8068;
double x8383 = q10_b*x865;
double x8384 = q10_b_dot*q9_b_dot;
double x8385 = x5098*x876;
double x8386 = q9_i*x865;
double x8387 = q9_b*x866;
double x8388 = q10_b_dot*x5061;
double x8389 = x57*x8388;
double x8390 = q10_b*q9_i_dot;
double x8391 = x0*x8390;
double x8392 = q10_b*q9_b_dot;
double x8393 = x70*x8171;
double x8394 = q9_i_dot*x5897;
double x8395 = q9_b_dot*q9_i_dot;
double x8396 = x362*x8395;
double x8397 = x3602*x8026 + x3603 + x5104 + x5339*x8169 + x5342*x8170 + x5345*x8170 + x5359*x8169 - x5537*x8171 - x5543*x8393 + x5545*x8393 - x5547*x8396 - x5550*x8171 - x8051*x8394 - x8054*x8175 - x8068*x8394;
double x8398 = q10_i*x840;
double x8399 = 16*x8398;
double x8400 = q10_i_dt*q9_i;
double x8401 = q10_i*x8350;
double x8402 = q10_b*q10_b_dt;
double x8403 = q10_i*q10_i_dt;
double x8404 = pow(q10_b, 2);
double x8405 = x5151*x8404;
double x8406 = q10_b*x871;
double x8407 = q10_b*x3494;
double x8408 = q10_b_dt*x876;
double x8409 = q10_b_dt*x865;
double x8410 = q10_i*x872;
double x8411 = q10_i*x5013;
double x8412 = x3655*x875;
double x8413 = x3655*x866;
double x8414 = q10_b*x5241;
double x8415 = q10_i*x5241;
double x8416 = q10_i*x5229;
double x8417 = q9_b_dot*x8416;
double x8418 = x5065*x875;
double x8419 = x5189*x8301;
double x8420 = q10_i*q9_b_dt;
double x8421 = x5911*x8313;
double x8422 = q10_b*q10_i;
double x8423 = 8*x5496;
double x8424 = x5161*x8404;
double x8425 = x5234*x840;
double x8426 = x5125*x849;
double x8427 = q10_i_dot*x7975;
double x8428 = x8414*x872;
double x8429 = q10_b*x158;
double x8430 = q10_i_dt*x5241;
double x8431 = 4*x8360;
double x8432 = q10_i_dot*x3662;
double x8433 = q9_i_dot*x3662;
double x8434 = q10_i_dt*q9_b_dot;
double x8435 = x5241*x8434;
double x8436 = 8*q10_b;
double x8437 = q10_b*x876;
double x8438 = x5290*x876;
double x8439 = x3660*x865;
double x8440 = q10_b_dot*x1752;
double x8441 = q10_i_dot*x5061;
double x8442 = x70*x8336;
double x8443 = q10_b*q10_i_dot;
double x8444 = q10_b_dot*q10_i;
double x8445 = q10_i*q9_b_dot;
double x8446 = q10_i*x5117;
double x8447 = q10_b_dot*x5540;
double x8448 = q10_b*q10_b_dot;
double x8449 = x5117*x5161;
double x8450 = q10_b_dot*q10_i_dot;
double x8451 = q10_b_dot*x3605;
double x8452 = q10_i_dot*x3607;
double x8453 = pow(q10_b_dot, 2);
double x8454 = q10_i_dot*x5125;
double x8455 = -x3607*x5117*x5278 - x3636*x5279 + x3637 + x5118 + x5264*x8451 + x5264*x8452 - x5272*x8453 - x5274*x8453 + x5281*x8453 - x5283*x8454 - x5286*x8454 - x5289*x8453 + x5291*x8451 + x6134*x8452 + x8109*x8450;
double x8456 = q10_i_dt*x866;
double x8457 = x5189*x8456;
double x8458 = q10_i_dt*x875;
double x8459 = q9_b_dot*x286;
double x8460 = 6*x8357;
double x8461 = x5189*x8358;
double x8462 = x5996*x8313;
double x8463 = q10_b*x3670;
double x8464 = 7*x8052;
double x8465 = x1787*x876;
double x8466 = 5*q10_i;
double x8467 = x0*x8466;
double x8468 = q9_b*x3670;
double x8469 = 12*q10_b;
double x8470 = x5521*x8383;
double x8471 = x5521*x8154;
double x8472 = x5244*x876;
double x8473 = q10_b*x8472;
double x8474 = q9_b*x8472;
double x8475 = x0*x8158;
double x8476 = x8068*x8297;
double x8477 = 36*x8398;
double x8478 = 32*x8411;
double x8479 = x3670*x872;
double x8480 = x3667*x875;
double x8481 = 8*x8305;
double x8482 = q10_b_dot*x129;
double x8483 = x5039*x875;
double x8484 = 32*x8136;
double x8485 = 32*x8191;
double x8486 = q10_b*x8237;
double x8487 = 18*x5496;
double x8488 = 16*x8052;
double x8489 = 12*x3556;
double x8490 = x5394*x871;
double x8491 = q9_b*x872;
double x8492 = q10_i*x158;
double x8493 = q10_b*x872;
double x8494 = x876*x877;
double x8495 = 18*q10_b;
double x8496 = x5641*x8383;
double x8497 = x5641*x8154;
double x8498 = 12*x5061;
double x8499 = x387*x5163;
double x8500 = L*x8499;
double x8501 = p10_b*p10_b_dt;
double x8502 = x5198*x8501;
double x8503 = p10_i*x5229;
double x8504 = p10_b*x8503;
double x8505 = p10_i*x385;
double x8506 = x5168*x8505;
double x8507 = p10_b_dt*x5179;
double x8508 = L*x8507;
double x8509 = x0*x8508;
double x8510 = x1838*x5282;
double x8511 = p10_b*x0;
double x8512 = x5275*x8511;
double x8513 = p10_b_dt*x5278;
double x8514 = L*p10_b;
double x8515 = x5154*x8514;
double x8516 = 40*x8515;
double x8517 = x1803*x5186;
double x8518 = 20*L;
double x8519 = 20*x5210;
double x8520 = p10_i*x4;
double x8521 = p10_b*x57;
double x8522 = x5282*x8521;
double x8523 = p10_i*x5285;
double x8524 = p10_b*x5153;
double x8525 = p10_b_dt*x5174;
double x8526 = x5153*x8525;
double x8527 = p10_b_dt*x5172;
double x8528 = pow(p10_b, 2);
double x8529 = x5151*x8528;
double x8530 = 20*p10_b;
double x8531 = p10_b*x5396;
double x8532 = 200*x70;
double x8533 = x57*x8528;
double x8534 = p10_b*p10_i_dot;
double x8535 = x5229*x8534;
double x8536 = p10_b_dot*x8503;
double x8537 = 10*p10_i_dot;
double x8538 = p10_b*x1802;
double x8539 = p10_b*x5171;
double x8540 = p10_b_dot*p10_b_dt;
double x8541 = p10_i*x379;
double x8542 = p10_i_dot*x385;
double x8543 = p10_b*x20;
double x8544 = x5198*x8543;
double x8545 = x0*x8543;
double x8546 = x379*x8545;
double x8547 = x5189*x8543;
double x8548 = x3851*x5234;
double x8549 = x1802*x20;
double x8550 = x1805*x5241;
double x8551 = L*p10_b_dot;
double x8552 = x6387*x8551;
double x8553 = x1799*x5150;
double x8554 = L*x6387;
double x8555 = x1802*x5224;
double x8556 = p10_b_dot*p10_i;
double x8557 = p10_b_dot*x5202;
double x8558 = x387*x8557;
double x8559 = p10_b*p10_b_dot;
double x8560 = p10_b_dot*x8521;
double x8561 = x0*x7;
double x8562 = p10_b_dot*x5189;
double x8563 = 10*x898;
double x8564 = p9_i*x5164;
double x8565 = L*x8564;
double x8566 = 24*x8502;
double x8567 = x5298*x8505;
double x8568 = 24*x8506;
double x8569 = 12*x8504;
double x8570 = p9_i*x5229;
double x8571 = p10_b*x8570;
double x8572 = p9_b*x8503;
double x8573 = p10_b*p9_b_dt;
double x8574 = p10_b_dt*p9_b;
double x8575 = p10_i*x1896;
double x8576 = p9_i*x385;
double x8577 = x5178*x8576;
double x8578 = x5168*x8576;
double x8579 = p9_i_dot*x5408;
double x8580 = p10_i_dot*x5408;
double x8581 = 120*x8515;
double x8582 = L*p9_b;
double x8583 = 120*x8582;
double x8584 = p9_b_dt*x5179;
double x8585 = L*x8584;
double x8586 = x0*x8585;
double x8587 = p10_b_dot*x70;
double x8588 = 84*x8587;
double x8589 = 60*L;
double x8590 = 60*x1847;
double x8591 = x1845*x5282;
double x8592 = x1802*x70;
double x8593 = 42*x8592;
double x8594 = p9_b_dot*x70;
double x8595 = 40*x8594;
double x8596 = 20*x1842;
double x8597 = x5399*x8528;
double x8598 = p10_b_dot_dt*x5339;
double x8599 = x8514*x8598;
double x8600 = L*x8540;
double x8601 = x5339*x8600;
double x8602 = L*x8541;
double x8603 = x5342*x8602;
double x8604 = x5345*x8602;
double x8605 = p10_i_dot*x1838;
double x8606 = x5342*x8605;
double x8607 = x5345*x8605;
double x8608 = p10_b_dt*x5394;
double x8609 = p9_b_dt*x5394;
double x8610 = p9_b*x5234;
double x8611 = x158*x8535;
double x8612 = p10_b*x158;
double x8613 = p9_b_dot_dt*x5198;
double x8614 = x158*x8536;
double x8615 = p10_b_dt*p9_b_dot;
double x8616 = p10_i*x4539;
double x8617 = p9_i_dot*x1838;
double x8618 = p9_i_dot*x5229;
double x8619 = p10_b*x8618;
double x8620 = p9_b_dot*x8503;
double x8621 = 12*x385;
double x8622 = x8545*x8621;
double x8623 = p10_b_dt*x387;
double x8624 = x5312*x8623;
double x8625 = x5404*x8528;
double x8626 = x5695*x912;
double x8627 = 24*x8529;
double x8628 = x5150*x70;
double x8629 = x1826*x8628;
double x8630 = x5695*x892;
double x8631 = x1799*x8628;
double x8632 = 60*p10_b;
double x8633 = 60*p9_b;
double x8634 = 60*x5210;
double x8635 = p9_i*x4;
double x8636 = x5695*x8562;
double x8637 = 42*p10_i_dot;
double x8638 = x5247*x8501;
double x8639 = x5572*x8638;
double x8640 = p10_b*p9_b;
double x8641 = x5151*x8640;
double x8642 = 20*x8594;
double x8643 = x20*x8642;
double x8644 = 20*p9_i_dot;
double x8645 = p10_b*p9_i;
double x8646 = p10_b*x5785;
double x8647 = p10_i*p9_b;
double x8648 = p9_b*x5785;
double x8649 = x1857*x5278;
double x8650 = x158*x8546;
double x8651 = x158*x8548;
double x8652 = L*x8549;
double x8653 = 4*x8652;
double x8654 = x387*x8653;
double x8655 = x158*x8550;
double x8656 = p10_b*p10_i;
double x8657 = x5565*x8656;
double x8658 = 12*p10_b;
double x8659 = x5202*x8658;
double x8660 = x387*x8659;
double x8661 = x5161*x8528;
double x8662 = x5322*x8661;
double x8663 = 20*x5700;
double x8664 = p9_i_dot*x4;
double x8665 = p10_b_dot*x5695;
double x8666 = 42*x5700;
double x8667 = p10_i_dot*x4;
double x8668 = p9_i*x5891;
double x8669 = p9_b*x5396;
double x8670 = 12*p9_b;
double x8671 = x5161*x8511;
double x8672 = x5330*x8514;
double x8673 = p10_b_dot*x8672;
double x8674 = x5245*x8673;
double x8675 = psi_dt*x6;
double x8676 = 8*x8675;
double x8677 = x323*x8538;
double x8678 = x8676*x8677;
double x8679 = x5359*x8600;
double x8680 = p9_b_dot*x8514;
double x8681 = p9_b_dot_dt*x158;
double x8682 = x5247*x8511;
double x8683 = p10_b*x421;
double x8684 = p10_i*x420;
double x8685 = x420*x5153;
double x8686 = x5362*x8534;
double x8687 = x0*x8534;
double x8688 = x5365*x8687;
double x8689 = x5362*x8556;
double x8690 = x158*x8558;
double x8691 = x5257*x8673;
double x8692 = p10_b*p9_b_dot;
double x8693 = x5369*x8559;
double x8694 = p9_b_dot*x5703;
double x8695 = p10_b_dot*x5703;
double x8696 = x5690*x8511;
double x8697 = p10_b_dot*x8514;
double x8698 = x5161*x8697;
double x8699 = x5336*x8698;
double x8700 = p10_i_dot*x5229;
double x8701 = x3108*x8700;
double x8702 = p10_b_dot_dt*x8587;
double x8703 = p10_i_dot*x1822;
double x8704 = pow(p10_b_dot, 2);
double x8705 = p10_b_dot*x1822;
double x8706 = p10_i_dot*x8592;
double x8707 = p10_i_dot*x8587;
double x8708 = p10_b_dot*x5540;
double x8709 = x0*x8675;
double x8710 = x1802*x8709;
double x8711 = p10_b_dot*x8701 + x5264*x8702 + x5267*x8703 + x5269*x8703 - x5272*x8704 - x5274*x8704 - x5276*x8705 - x5276*x8706 + x5281*x8704 - x5283*x8707 - x5286*x8707 - x5289*x8704 + x8708*x8710;
double x8712 = x5178*x8505;
double x8713 = p10_i*x933;
double x8714 = x70*x8618;
double x8715 = p10_b_dot*x8714;
double x8716 = x8594*x8700;
double x8717 = 46*x8515;
double x8718 = 46*x8582;
double x8719 = x5996*x8587;
double x8720 = 23*L;
double x8721 = 23*x1847;
double x8722 = 12*x8592;
double x8723 = p10_b_dot*x1847;
double x8724 = x5198*x8723;
double x8725 = p10_b_dot_dt*x5198;
double x8726 = p9_b*x129;
double x8727 = x414*x898;
double x8728 = p9_i*x379;
double x8729 = x5413*x8528;
double x8730 = p10_b_dot*x8570;
double x8731 = 3*p9_b;
double x8732 = x5229*x898;
double x8733 = p10_b_dt*x420;
double x8734 = p10_i*x3867;
double x8735 = p9_b_dt*x5278;
double x8736 = p9_b*x385;
double x8737 = p10_b_dot*x1842;
double x8738 = x1802*x8594;
double x8739 = p10_i_dot*x1840;
double x8740 = p9_i_dot*x1822;
double x8741 = x158*x8541;
double x8742 = 4*x385;
double x8743 = x403*x5184;
double x8744 = p10_b_dt*x5241;
double x8745 = p9_b_dot_dt*x5186;
double x8746 = L*x8745;
double x8747 = x387*x8746;
double x8748 = x3868*x5234;
double x8749 = x1840*x5234;
double x8750 = p10_b_dot*x8749;
double x8751 = p9_i_dot*x8549;
double x8752 = x313*x8751;
double x8753 = x1835*x8745;
double x8754 = p9_b_dot*x5234;
double x8755 = x1822*x8754;
double x8756 = 23*p10_b;
double x8757 = 23*p9_b;
double x8758 = 23*x5210;
double x8759 = x379*x8514;
double x8760 = x1802*x5275;
double x8761 = p9_i*x5285;
double x8762 = p9_b*x57;
double x8763 = x5282*x8762;
double x8764 = p9_b*x5153;
double x8765 = p10_b_dot*x5234;
double x8766 = x1313*x8652;
double x8767 = x1847*x1862;
double x8768 = x379*x5516;
double x8769 = p10_b*x1850;
double x8770 = p10_b*p9_i_dot;
double x8771 = p9_i_dot*x8511;
double x8772 = p10_i*p9_b_dot;
double x8773 = p9_b_dot*x5202;
double x8774 = L*x8773;
double x8775 = p10_b_dot*p9_i_dot;
double x8776 = x1910*x8557;
double x8777 = p9_b_dot*x5853;
double x8778 = x1835*x8773;
double x8779 = p10_b_dot*x8582;
double x8780 = 4*p9_b;
double x8781 = p10_b_dot*p9_b_dot;
double x8782 = x420*x8521;
double x8783 = p9_b_dot_dt*x8514;
double x8784 = p10_b_dot*x8594;
double x8785 = x57*x8784;
double x8786 = p10_b_dot*p9_i;
double x8787 = x1313*x8557;
double x8788 = p10_i_dot*p9_b;
double x8789 = x0*x8788;
double x8790 = p10_b_dot*p9_b;
double x8791 = p9_b_dot*x2;
double x8792 = x5287*x8791;
double x8793 = p10_b_dot*x0;
double x8794 = x5161*x8793;
double x8795 = 22*x8594;
double x8796 = 11*x1842;
double x8797 = 11*x8594;
double x8798 = x20*x8797;
double x8799 = 11*p9_i_dot;
double x8800 = 11*x5700;
double x8801 = -x5172*x8796 + x5175*x8796 - x5189*x8798 + x5198*x8798 - x5698*x8799 + x6708*x8795 - x6711*x8795 + 11*x8579 + 11*x8626 + 22*x8629 + x8664*x8800 + 44*x8694;
double x8802 = p10_i_dot*x8549;
double x8803 = x70*x8704;
double x8804 = p10_b_dot*p10_i_dot;
double x8805 = x362*x8804;
double x8806 = x1802*x8675;
double x8807 = x8587*x8806;
double x8808 = -p10_i_dot*x5897*x8557 + x5336*x8807 + x5342*x8703 + x5345*x8703 - x5537*x8704 - x5538*x8705 - x5543*x8803 + x5545*x8803 - x5547*x8805 - x5550*x8704 - x5897*x8802 + x8587*x8598 + x8700*x8708;
double x8809 = p10_i*x390;
double x8810 = 14*x8725;
double x8811 = p10_i_dot*x1845;
double x8812 = 14*x8728;
double x8813 = p9_b*x1857;
double x8814 = p9_b_dot*x1847;
double x8815 = p9_i*x3867;
double x8816 = p9_i_dot*x1845;
double x8817 = p9_b*x8732;
double x8818 = p9_b*x8618;
double x8819 = p9_b_dot*x8570;
double x8820 = 6*x8594;
double x8821 = 6*x8739;
double x8822 = 6*x8740;
double x8823 = p9_i*x8744;
double x8824 = x1868*x5186;
double x8825 = x5198*x8600;
double x8826 = 14*x8541;
double x8827 = x5996*x8640;
double x8828 = p10_b*x379;
double x8829 = x387*x8652;
double x8830 = x403*x8545;
double x8831 = p9_i_dot*x8744;
double x8832 = x1862*x313;
double x8833 = p9_b*x403;
double x8834 = x5234*x8833;
double x8835 = x3901*x5234;
double x8836 = x1313*x8746;
double x8837 = p9_i_dot*x1847;
double x8838 = x5241*x8837;
double x8839 = x1845*x8765;
double x8840 = p10_i_dot*x1847;
double x8841 = x5241*x8840;
double x8842 = p9_b*x8768;
double x8843 = p9_i*x5565;
double x8844 = x5202*x8670;
double x8845 = x5521*x8697;
double x8846 = x5521*x8779;
double x8847 = x8582*x8806;
double x8848 = p9_b*x420;
double x8849 = x387*x8773;
double x8850 = p9_b*p9_i_dot;
double x8851 = x0*x8850;
double x8852 = p9_b_dot*p9_i;
double x8853 = x1313*x8773;
double x8854 = x8675*x8677;
double x8855 = p9_b*p9_b_dot;
double x8856 = p9_b*x8671;
double x8857 = x3108*x8618;
double x8858 = p9_b_dot*x1842;
double x8859 = p9_i_dot*x1840;
double x8860 = pow(p9_b_dot, 2);
double x8861 = p9_b_dot*x1840;
double x8862 = p9_i_dot*x1842;
double x8863 = p9_i_dot*x8594;
double x8864 = p9_i_dot*x5285;
double x8865 = x5153*x8864;
double x8866 = p9_b_dot*x8857 + x1894 + x3908 + x5264*x8858 + x5267*x8859 + x5269*x8859 - x5272*x8860 - x5274*x8860 - x5276*x8861 - x5279*x8862 + x5281*x8860 - x5283*x8863 - x5289*x8860 + x5291*x8858 - x8594*x8865;
double x8867 = p9_b*x8570;
double x8868 = 12*x8867;
double x8869 = p9_b*p9_b_dt;
double x8870 = x5553*x8869;
double x8871 = p9_i*x390;
double x8872 = x5298*x8871;
double x8873 = x5556*x8871;
double x8874 = pow(p9_b, 2);
double x8875 = x5151*x8874;
double x8876 = 24*x8875;
double x8877 = x1896*x8610;
double x8878 = p9_i*x5241;
double x8879 = x1868*x8878;
double x8880 = x5404*x8874;
double x8881 = x5399*x8874;
double x8882 = p9_b*x8843;
double x8883 = x1313*x8844;
double x8884 = x5161*x8874;
double x8885 = x5322*x8884;
double x8886 = x5573*x8869;
double x8887 = x1869 + x3887 + x8868 + x8870 + x8872 + x8873 - x8876 - x8877 - x8879 - x8880 + x8881 - x8882 - x8883 - x8885 + x8886;
double x8888 = 16*x8809;
double x8889 = x1921*x898;
double x8890 = p9_i*x3883;
double x8891 = 8*x385;
double x8892 = p9_b*x158;
double x8893 = p10_b_dot_dt*x8594;
double x8894 = p9_b_dt*x387;
double x8895 = x5911*x8640;
double x8896 = 8*p10_b;
double x8897 = x5202*x8896;
double x8898 = 4*x8746;
double x8899 = p10_b_dot*x1840;
double x8900 = x1853*x70;
double x8901 = p10_i_dot*x1842;
double x8902 = p9_b_dot*x1822;
double x8903 = x5516*x933;
double x8904 = 4*x1847;
double x8905 = x5241*x8904;
double x8906 = x158*x8610;
double x8907 = 8*p9_b;
double x8908 = x5202*x8907;
double x8909 = p9_b_dot*x8672;
double x8910 = x5330*x8582;
double x8911 = p10_b_dot*x8910;
double x8912 = x158*x8773;
double x8913 = p9_i_dot*x8587;
double x8914 = p10_i_dot*x8594;
double x8915 = x158*x8557;
double x8916 = 4*x8594;
double x8917 = x5161*x8779;
double x8918 = x5339*x8813;
double x8919 = x5339*x8814;
double x8920 = x5342*x8815;
double x8921 = x5345*x8815;
double x8922 = x1921*x421;
double x8923 = x5178*x8922;
double x8924 = x5168*x8922;
double x8925 = x158*x8818;
double x8926 = x158*x8819;
double x8927 = x158*x8834;
double x8928 = x158*x8835;
double x8929 = x1313*x8898;
double x8930 = p9_i_dot*x8905;
double x8931 = x5597*x8848;
double x8932 = x5359*x8813;
double x8933 = x5359*x8814;
double x8934 = x5362*x8850;
double x8935 = x5365*x8851;
double x8936 = x5362*x8852;
double x8937 = x158*x8853;
double x8938 = x5590*x8848;
double x8939 = x5369*x8855;
double x8940 = x5601*x8848;
double x8941 = -x1916 - x1917 - x3920 - x3921 + x8866 - x8918 - x8919 - x8920 - x8921 - x8923 - x8924 - x8925 - x8926 + x8927 + x8928 + x8929 + x8930 - x8931 - x8932 - x8933 + x8934 + x8935 + x8936 + x8937 + x8938 + x8939 + x8940;
double x8942 = 16*x8871;
double x8943 = p9_b_dt*x8878;
double x8944 = p9_b*p9_i;
double x8945 = -x1313*x8908 - x1921*x8610 + x5168*x8942 + x5178*x8942 - x5334*x8944 - x5336*x8884 + x5337*x8869 - x5590*x8874 + x5597*x8874 + x5611*x8869 + 8*x8867 - 16*x8875 - 8*x8943;
double x8946 = 36*x8809;
double x8947 = x158*x8564;
double x8948 = 32*x8725;
double x8949 = 32*x8811;
double x8950 = 32*x8728;
double x8951 = 18*x385;
double x8952 = p9_b*p9_b_dot_dt;
double x8953 = x1896*x421;
double x8954 = x5178*x8910;
double x8955 = 8*x8584;
double x8956 = x323*x8955;
double x8957 = x5175*x8904;
double x8958 = x1923*x5282;
double x8959 = x5416*x8592;
double x8960 = x5172*x8904;
double x8961 = 8*x8507;
double x8962 = x5168*x8910;
double x8963 = p10_b*p9_b_dot_dt;
double x8964 = 12*x8587;
double x8965 = 32*x8541;
double x8966 = 32*x8605;
double x8967 = x6047*x8640;
double x8968 = 18*p10_b;
double x8969 = x5202*x8968;
double x8970 = 12*x1835;
double x8971 = p9_b_dot*x5516;
double x8972 = p9_b*x20;
double x8973 = x5198*x8972;
double x8974 = x158*x8973;
double x8975 = p9_i*x5389;
double x8976 = x5189*x8972;
double x8977 = x158*x8976;
double x8978 = p9_i*x5205;
double x8979 = x158*x8978;
double x8980 = 18*p9_b;
double x8981 = x5202*x8980;
double x8982 = x5641*x8697;
double x8983 = x5641*x8779;
double x8984 = 32*x8582;
double x8985 = 16*x8669;
double x8986 = p10_i_dot*p9_b_dot;
double x8987 = p9_b_dot*x8511;
double x8988 = 36*x8871;
double x8989 = x5150*x5540;
double x8990 = p9_b_dot*x5667 - p9_i_dot*x5665 + p9_i_dot*x5666 - x1313*x8981 + x1826*x8989 + x1842*x5419 - x1842*x5460 - x1927*x8610 + x5168*x8988 + x5178*x8988 - x5427*x8944 - x5429*x8884 + x5441*x8869 + x5461*x8594 - x5466*x8594 + x5655*x8869 - x5659*x8874 - x5660*x8594 + x5661*x8594 + x5662*x8874 + x6354*x912 + 2*x8579 + 18*x8867 - 36*x8875 - 18*x8943;
double x8991 = p2_i*x5229;
double x8992 = p2_b*x8991;
double x8993 = p2_b*p2_b_dt;
double x8994 = p2_i*x429;
double x8995 = pow(p2_b, 2);
double x8996 = x5151*x8995;
double x8997 = p2_b*x429;
double x8998 = p2_b_dt*x5278;
double x8999 = x57*x8995;
double x9000 = p2_b*p2_i;
double x9001 = p2_i*x5164;
double x9002 = x158*x9001;
double x9003 = L*p2_b;
double x9004 = x5330*x9003;
double x9005 = x5178*x9004;
double x9006 = p2_b_dt*x5179;
double x9007 = 8*x9006;
double x9008 = x323*x9007;
double x9009 = 4*x1968;
double x9010 = x5175*x9009;
double x9011 = x2000*x5282;
double x9012 = 4*x9011;
double x9013 = x5172*x9009;
double x9014 = x5168*x9004;
double x9015 = p2_b*x20;
double x9016 = x5198*x9015;
double x9017 = x158*x9016;
double x9018 = p2_i*x5389;
double x9019 = x5189*x9015;
double x9020 = x158*x9019;
double x9021 = p2_i*x5205;
double x9022 = x158*x9021;
double x9023 = p2_b*x5649;
double x9024 = x3934 - x9002 - x9005 - x9008 - x9010 - x9012 + x9013 + x9014 - x9017 - x9018 + x9020 + x9022 - x9023;
double x9025 = p2_i_dot*x5229;
double x9026 = p2_b*x9025;
double x9027 = p2_b_dot*x8991;
double x9028 = p2_b*p2_b_dot_dt;
double x9029 = p2_b_dot*p2_b_dt;
double x9030 = p2_i*x423;
double x9031 = p2_i_dot*x429;
double x9032 = p2_b*x423;
double x9033 = x5234*x9032;
double x9034 = x3941*x5234;
double x9035 = p2_b_dot_dt*x5186;
double x9036 = p2_b*p2_i_dot;
double x9037 = p2_b_dot*p2_i;
double x9038 = p2_b_dot*x5202;
double x9039 = x9038*x964;
double x9040 = p2_b*p2_b_dot;
double x9041 = x57*x9040;
double x9042 = p2_b_dot*x2;
double x9043 = x5287*x9042;
double x9044 = x5553*x8993;
double x9045 = x5298*x8994;
double x9046 = x5556*x8994;
double x9047 = 12*x8992;
double x9048 = p1_b*x8991;
double x9049 = p2_b*x5446;
double x9050 = p2_i_dot*x5408;
double x9051 = p1_b*p2_b_dt;
double x9052 = p1_b_dt*p2_b;
double x9053 = p1_i*x429;
double x9054 = 12*x9053;
double x9055 = p2_i*x210;
double x9056 = 12*x9055;
double x9057 = p1_b*x5996;
double x9058 = x323*x5451;
double x9059 = x5996*x9003;
double x9060 = p2_b_dot*x70;
double x9061 = x6387*x9060;
double x9062 = 12*x1968;
double x9063 = x5399*x8995;
double x9064 = p2_b_dot_dt*x70;
double x9065 = 10*x9064;
double x9066 = x5330*x5531;
double x9067 = p1_b*x444;
double x9068 = p1_b_dt*x5394;
double x9069 = p2_b_dt*x5394;
double x9070 = p2_b*x5234;
double x9071 = p1_b_dot*x1968;
double x9072 = p2_b*x1981;
double x9073 = p1_i_dot*x2000;
double x9074 = p2_i*x202;
double x9075 = p1_b_dot_dt*x5540;
double x9076 = p1_b_dot*x8991;
double x9077 = p2_b*x5470;
double x9078 = 10*x20;
double x9079 = x5559*x8997;
double x9080 = p2_i*x5241;
double x9081 = x1954*x9080;
double x9082 = x5404*x8995;
double x9083 = 20*x5150;
double x9084 = L*x9006;
double x9085 = 24*x8996;
double x9086 = p1_b*p2_b;
double x9087 = x5151*x9086;
double x9088 = x5573*x8993;
double x9089 = x5184*x5375;
double x9090 = 12*x5834;
double x9091 = p2_b_dot*x5695;
double x9092 = 10*p2_i_dot;
double x9093 = p1_b*p2_i;
double x9094 = p1_b*x5785;
double x9095 = p1_i*p2_b;
double x9096 = p2_b*x5785;
double x9097 = x1981*x5278;
double x9098 = p2_b*x368;
double x9099 = p2_i_dot*x4;
double x9100 = p2_i*x4;
double x9101 = x5565*x9000;
double x9102 = p2_b*x5567;
double x9103 = x9102*x964;
double x9104 = x5161*x8995;
double x9105 = x5322*x9104;
double x9106 = x5161*x9086;
double x9107 = p2_b*x450;
double x9108 = p2_i*x450;
double x9109 = p2_i*x5285;
double x9110 = x5153*x9109;
double x9111 = p2_b*x57;
double x9112 = x5282*x9111;
double x9113 = p2_b*x249;
double x9114 = p1_b_dot*p2_b;
double x9115 = p2_b_dot*x5703;
double x9116 = p2_b*x2084;
double x9117 = x5339*x9116;
double x9118 = p2_b_dot*x1968;
double x9119 = x5339*x9118;
double x9120 = p2_i*x3978;
double x9121 = x5342*x9120;
double x9122 = x5345*x9120;
double x9123 = p2_i_dot*x2000;
double x9124 = x5342*x9123;
double x9125 = x5345*x9123;
double x9126 = x158*x9026;
double x9127 = x158*x9027;
double x9128 = x158*x9033;
double x9129 = x158*x9034;
double x9130 = L*x9035;
double x9131 = 4*x9130;
double x9132 = x9131*x964;
double x9133 = p2_i_dot*x1968;
double x9134 = x5674*x9133;
double x9135 = p2_b*x479;
double x9136 = x5597*x9135;
double x9137 = x5359*x9116;
double x9138 = x5359*x9118;
double x9139 = x5362*x9036;
double x9140 = x5593*x9036;
double x9141 = x5362*x9037;
double x9142 = x158*x9039;
double x9143 = x5590*x9135;
double x9144 = x5369*x9040;
double x9145 = x5601*x9135;
double x9146 = x3108*x9025;
double x9147 = p2_b_dot_dt*x9060;
double x9148 = p2_i_dot*x3976;
double x9149 = pow(p2_b_dot, 2);
double x9150 = p2_b_dot*x3957;
double x9151 = p2_i_dot*x9064;
double x9152 = p2_i_dot*x9060;
double x9153 = p2_b_dot*x9146 + x1962 + x3959 + x5168*x9148 + x5178*x9148 + x5264*x9147 - x5272*x9149 - x5274*x9149 - x5276*x9150 - x5279*x9151 + x5281*x9149 - x5283*x9152 - x5286*x9152 - x5289*x9149 + x5291*x9147;
double x9154 = -x9117 - x9119 - x9121 - x9122 - x9124 - x9125 - x9126 - x9127 + x9128 + x9129 + x9132 + x9134 - x9136 - x9137 - x9138 + x9139 + x9140 + x9141 + x9142 + x9143 + x9144 + x9145 + x9153;
double x9155 = x5531*x9025;
double x9156 = x5470*x9060;
double x9157 = x5521*x9003;
double x9158 = 7*x1968;
double x9159 = p1_b*p2_b_dot_dt;
double x9160 = p1_b_dt*p2_b_dot;
double x9161 = p1_i*x423;
double x9162 = x226*x480;
double x9163 = x5413*x8995;
double x9164 = p1_b*x9025;
double x9165 = p2_b_dot*x5446;
double x9166 = p2_i*x368;
double x9167 = p1_b*x429;
double x9168 = p2_b*x210;
double x9169 = p2_b_dot_dt*x5531;
double x9170 = p1_b_dot_dt*x9060;
double x9171 = p1_i_dot*x3957;
double x9172 = p2_i_dot*x345;
double x9173 = p2_b_dt*p2_i;
double x9174 = x3951*x5234;
double x9175 = x5518*x964;
double x9176 = x1983*x5241;
double x9177 = p2_b*x202;
double x9178 = p1_b_dot*x3957;
double x9179 = x5234*x9178;
double x9180 = x1961*x5487;
double x9181 = x314*x9035;
double x9182 = p2_b_dot*x345;
double x9183 = x5234*x9182;
double x9184 = p1_b*x7114;
double x9185 = p2_b*x7114;
double x9186 = p2_b*x5450;
double x9187 = p1_b*x423;
double x9188 = p1_b_dt*x5241;
double x9189 = x240*x9130;
double x9190 = p2_b_dot*x210;
double x9191 = p1_b_dot*p2_i;
double x9192 = L*x5498;
double x9193 = p1_i_dot*p2_b;
double x9194 = p1_b_dot*p2_i_dot;
double x9195 = x5853*x9194;
double x9196 = x1961*x5498;
double x9197 = p2_b_dot*x5853;
double x9198 = x314*x9038;
double x9199 = p1_b*x479;
double x9200 = p1_b_dot*p2_b_dot;
double x9201 = x450*x9111;
double x9202 = p2_b*x480;
double x9203 = p2_i*x479;
double x9204 = p2_b_dot*x5531;
double x9205 = x57*x9204;
double x9206 = p1_b*p2_i_dot;
double x9207 = x0*x9206;
double x9208 = p1_i*p2_b_dot;
double x9209 = x240*x9038;
double x9210 = p1_b*p2_b_dot;
double x9211 = x5330*x9060;
double x9212 = p2_b_dot_dt*x5540;
double x9213 = -p2_i_dot*x6133 + x1957*x5536 + x2099*x6690 - x3969 - x5168*x9211 - x5172*x9212 + x5175*x9212 + x5178*x9211 + x5264*x9091 + x6128*x9099 - x6134*x9091 + 4*x9050 + 16*x9115;
double x9214 = x9025*x9060;
double x9215 = p2_i_dot*x3957;
double x9216 = x2005*x9060;
double x9217 = p2_i_dot*x5540;
double x9218 = x0*x9217;
double x9219 = x70*x9149;
double x9220 = p2_b_dot*p2_i_dot;
double x9221 = x362*x9220;
double x9222 = -x5234*x9216 + x5339*x9147 + x5342*x9215 + x5345*x9215 + x5359*x9147 - x5537*x9149 - x5543*x9219 + x5545*x9219 - x5547*x9221 - x5550*x9149 - x9035*x9218 - x9038*x9218 + 4*x9214;
double x9223 = p1_b*x2084;
double x9224 = p1_b_dt*x479;
double x9225 = p1_i*x3978;
double x9226 = x210*x480;
double x9227 = x249*x264;
double x9228 = 6*x3957;
double x9229 = p1_i_dot*x5168;
double x9230 = p2_b*x9057;
double x9231 = x9130*x964;
double x9232 = x5241*x9158;
double x9233 = x202*x9070;
double x9234 = 7*x5241;
double x9235 = p1_b_dt*x480;
double x9236 = x479*x5522;
double x9237 = x450*x5669;
double x9238 = x0*x9036;
double x9239 = p2_b_dot*x5692;
double x9240 = x5498*x964;
double x9241 = 6*x5531;
double x9242 = p2_b_dot*x0;
double x9243 = x5161*x9242;
double x9244 = x1955 + x3955 + x9044 + x9045 + x9046 + x9047 + x9063 - x9079 - x9081 - x9082 - x9085 + x9088 - x9101 - x9103 - x9105;
double x9245 = 16*x9053;
double x9246 = 16*x9055;
double x9247 = x3976*x5178;
double x9248 = p1_b_dt*p2_i;
double x9249 = p1_i*p2_b_dt;
double x9250 = x5911*x9086;
double x9251 = x158*x9070;
double x9252 = p1_i_dot*x9064;
double x9253 = p2_b*x5616;
double x9254 = x158*x5498;
double x9255 = p2_i_dot*x5531;
double x9256 = p1_i_dot*x9060;
double x9257 = x158*x9038;
double x9258 = 4*x5531;
double x9259 = 16*x8994;
double x9260 = x2030 + x3985 + x5168*x9259 + x5178*x9259 - x5334*x9000 - x5336*x9104 + x5337*x8993 - x5590*x8995 + x5597*x8995 + x5611*x8993 - x5613*x8997 - x5615*x9173 + 8*x8992 - 16*x8996 - x9253*x964;
double x9261 = 36*x9053;
double x9262 = 36*x9055;
double x9263 = x6047*x9086;
double x9264 = p2_b_dot*x3999;
double x9265 = 12*x1961;
double x9266 = p1_b_dot*x5516;
double x9267 = p1_b_dot*x9228;
double x9268 = p2_b*x5663;
double x9269 = x5641*x9199;
double x9270 = x5641*x9135;
double x9271 = p1_i_dot*p2_b_dot;
double x9272 = 36*x8994;
double x9273 = p2_b_dot*x5667 - p2_i_dot*x5665 + p2_i_dot*x5666 + x1957*x5271 + x2023 + x2099*x5275 + x4010 - x4011 + x5168*x9272 + x5178*x9272 + x5419*x9064 - x5427*x9000 - x5429*x9104 + x5441*x8993 - x5460*x9064 + x5461*x9060 - x5466*x9060 + x5655*x8993 - x5657*x8997 - x5658*x9173 - x5659*x8995 - x5660*x9060 + x5661*x9060 + x5662*x8995 + 18*x8992 - 36*x8996 + 2*x9050 - x9268*x964;
double x9274 = p3_i*x5164;
double x9275 = p3_i*x5229;
double x9276 = p3_b*x9275;
double x9277 = p3_b*p3_b_dt;
double x9278 = p3_i*x458;
double x9279 = L*p3_b;
double x9280 = x5306*x9279;
double x9281 = p3_b_dt*x5179;
double x9282 = 12*x9281;
double x9283 = p3_b_dt*x5175;
double x9284 = pow(p3_b, 2);
double x9285 = x5151*x9284;
double x9286 = p3_b*x458;
double x9287 = p3_b_dt*x5278;
double x9288 = x57*x9284;
double x9289 = p3_b_dt*x5172;
double x9290 = p3_b*x20;
double x9291 = x5198*x9290;
double x9292 = p3_i*x4;
double x9293 = p3_b*p3_i;
double x9294 = x5189*x9290;
double x9295 = p3_i_dot*x5229;
double x9296 = p3_b*x9295;
double x9297 = p3_b_dot*x9275;
double x9298 = x458*x5282;
double x9299 = p3_b*p3_b_dot_dt;
double x9300 = p3_b_dot*p3_b_dt;
double x9301 = p3_i*x452;
double x9302 = p3_i_dot*x458;
double x9303 = p3_b*x452;
double x9304 = x5234*x9303;
double x9305 = x4021*x5234;
double x9306 = p3_b_dot_dt*x5186;
double x9307 = x2047*x5241;
double x9308 = p3_i*x5205;
double x9309 = x509*x5169;
double x9310 = x129*x5150;
double x9311 = p3_b*p3_i_dot;
double x9312 = p3_b_dot*p3_i;
double x9313 = p3_b_dot*x5202;
double x9314 = x1018*x9313;
double x9315 = p3_b*p3_b_dot;
double x9316 = p3_b_dot*x6368;
double x9317 = p3_i_dot*x4;
double x9318 = x57*x9315;
double x9319 = 3*x510;
double x9320 = p3_b_dot*x2;
double x9321 = x5553*x9277;
double x9322 = x5298*x9278;
double x9323 = x5556*x9278;
double x9324 = 12*x9276;
double x9325 = p2_b*x9275;
double x9326 = p3_b*x8991;
double x9327 = p2_b*p3_b_dt;
double x9328 = p2_b_dt*p3_b;
double x9329 = p2_i*x458;
double x9330 = 12*x9329;
double x9331 = p3_i*x429;
double x9332 = 12*x9331;
double x9333 = p3_i_dot*x5408;
double x9334 = x6047*x9003;
double x9335 = x6047*x9279;
double x9336 = p3_b_dot*x70;
double x9337 = 28*x9336;
double x9338 = 18*x1968;
double x9339 = p3_b_dot_dt*x70;
double x9340 = 14*x9339;
double x9341 = x5306*x9060;
double x9342 = x5399*x9284;
double x9343 = 6*x9064;
double x9344 = p3_b_dt*x5394;
double x9345 = p3_b*x5234;
double x9346 = p2_b_dot*p3_b_dt;
double x9347 = p2_b_dot_dt*p3_b;
double x9348 = p2_i_dot*x458;
double x9349 = p3_i*x423;
double x9350 = p2_b_dot*x9275;
double x9351 = p3_b*x9025;
double x9352 = x5559*x9286;
double x9353 = p3_i*x5241;
double x9354 = x2061*x9353;
double x9355 = x5404*x9284;
double x9356 = x20*x2204;
double x9357 = 24*x9285;
double x9358 = x2064*x5150;
double x9359 = L*x9281;
double x9360 = x0*x9359;
double x9361 = p2_b*p3_b;
double x9362 = x5151*x9361;
double x9363 = x5573*x9277;
double x9364 = 18*p2_b;
double x9365 = 18*p3_b;
double x9366 = 14*p3_i_dot;
double x9367 = p2_b*p3_i;
double x9368 = p2_i*p3_b;
double x9369 = p3_b*x5785;
double x9370 = x2084*x5278;
double x9371 = p3_b*x3978;
double x9372 = x5565*x9293;
double x9373 = p3_b*x5567;
double x9374 = x1018*x9373;
double x9375 = x5161*x9284;
double x9376 = x5322*x9375;
double x9377 = x20*x9336;
double x9378 = x5161*x9361;
double x9379 = p3_b*x479;
double x9380 = p3_i*x479;
double x9381 = p3_i*x5285;
double x9382 = x5153*x9381;
double x9383 = p3_b*x57;
double x9384 = x5282*x9383;
double x9385 = p3_b*x480;
double x9386 = p2_b_dot*p3_b;
double x9387 = p3_b_dot*x5703;
double x9388 = p3_b*x5396;
double x9389 = p3_b*x2188;
double x9390 = x5339*x9389;
double x9391 = p3_b_dt*x509;
double x9392 = x5339*x9391;
double x9393 = p3_i*x4060;
double x9394 = x5342*x9393;
double x9395 = x5345*x9393;
double x9396 = x458*x510;
double x9397 = x5342*x9396;
double x9398 = x5345*x9396;
double x9399 = x158*x9296;
double x9400 = x158*x9297;
double x9401 = x158*x9304;
double x9402 = x158*x9305;
double x9403 = L*x9306;
double x9404 = 4*x9403;
double x9405 = x1018*x9404;
double x9406 = x158*x9307;
double x9407 = p3_b*x509;
double x9408 = x5597*x9407;
double x9409 = x5359*x9389;
double x9410 = x5359*x9391;
double x9411 = x5362*x9311;
double x9412 = x5593*x9311;
double x9413 = x5362*x9312;
double x9414 = x158*x9314;
double x9415 = x5590*x9407;
double x9416 = x5369*x9315;
double x9417 = x5601*x9407;
double x9418 = x3108*x9295;
double x9419 = p3_b_dot_dt*x9336;
double x9420 = p3_i_dot*x4038;
double x9421 = pow(p3_b_dot, 2);
double x9422 = p3_b_dot*x4038;
double x9423 = p3_i_dot*x9339;
double x9424 = p3_i_dot*x9336;
double x9425 = p3_b_dot*x9418 + x2069 + x4040 + x5264*x9419 + x5267*x9420 + x5269*x9420 - x5272*x9421 - x5274*x9421 - x5276*x9422 - x5279*x9423 + x5281*x9421 - x5283*x9424 - x5286*x9424 - x5289*x9421 + x5291*x9419;
double x9426 = -x9390 - x9392 - x9394 - x9395 - x9397 - x9398 - x9399 - x9400 + x9401 + x9402 + x9405 + x9406 - x9408 - x9409 - x9410 + x9411 + x9412 + x9413 + x9414 + x9415 + x9416 + x9417 + x9425;
double x9427 = x70*x9295;
double x9428 = p2_b_dot*x9427;
double x9429 = x9025*x9336;
double x9430 = p2_b*x4023;
double x9431 = 18*x9006;
double x9432 = p3_b*x4023;
double x9433 = 9*x1968;
double x9434 = p2_b*p3_b_dot_dt;
double x9435 = p3_b_dot*x1968;
double x9436 = p2_i*x452;
double x9437 = x444*x510;
double x9438 = x5413*x9284;
double x9439 = p2_b*x9295;
double x9440 = p3_b_dot*x8991;
double x9441 = p3_b_dt*x479;
double x9442 = p3_b*x2084;
double x9443 = x458*x480;
double x9444 = p3_i*x3978;
double x9445 = p2_b*x458;
double x9446 = p3_b*x429;
double x9447 = p3_b_dot_dt*x9060;
double x9448 = p2_b_dot_dt*x9336;
double x9449 = p2_i_dot*x4038;
double x9450 = p3_i_dot*x3957;
double x9451 = p3_b_dt*p3_i;
double x9452 = 18*x9281;
double x9453 = p2_b_dot*x458;
double x9454 = x1018*x9130;
double x9455 = p3_b_dt*x480;
double x9456 = p3_b*x5516;
double x9457 = x4038*x5234;
double x9458 = p2_b_dot*x9457;
double x9459 = x2068*x9035;
double x9460 = x1961*x9306;
double x9461 = p3_b_dot*x5234;
double x9462 = x3957*x9461;
double x9463 = p2_b*x7424;
double x9464 = p3_b*x7424;
double x9465 = x452*x5516;
double x9466 = p2_b*x9465;
double x9467 = x1968*x5241;
double x9468 = x9403*x964;
double x9469 = x2000*x9461;
double x9470 = p2_b_dot*p3_i;
double x9471 = L*x9038;
double x9472 = p2_i_dot*p3_b;
double x9473 = x2068*x9038;
double x9474 = p3_b_dot*x5853;
double x9475 = p2_i_dot*x9474;
double x9476 = x1961*x9313;
double x9477 = p2_b*x9309;
double x9478 = p2_b_dot*p3_b_dot;
double x9479 = x479*x9383;
double x9480 = p3_b*x510;
double x9481 = p3_i*x509;
double x9482 = p2_b_dot*x9336;
double x9483 = x57*x9482;
double x9484 = p2_b*p3_i_dot;
double x9485 = x0*x9484;
double x9486 = p2_i*p3_b_dot;
double x9487 = x9313*x964;
double x9488 = p2_b*p3_b_dot;
double x9489 = x5244*x9336;
double x9490 = 5*x9339;
double x9491 = 10*x5150;
double x9492 = 5*x9336;
double x9493 = 5*p3_i_dot;
double x9494 = x20*x5198;
double x9495 = x2064*x9491 - x4051 - x5168*x9489 - x5172*x9490 + x5175*x9490 + x5178*x9489 - x5698*x9493 - x6693*x9492 + x7460*x9317 + 5*x9333 + 5*x9356 + 20*x9387 + x9492*x9494;
double x9496 = x9295*x9336;
double x9497 = p3_i_dot*x5897;
double x9498 = x70*x9421;
double x9499 = p3_b_dot*p3_i_dot;
double x9500 = x362*x9499;
double x9501 = x5339*x9419 + x5342*x9420 + x5345*x9420 + x5359*x9419 - x5537*x9421 - x5538*x9422 - x5543*x9498 + x5545*x9498 - x5547*x9500 - x5550*x9421 - x9306*x9497 - x9313*x9497 + 4*x9496;
double x9502 = p2_b*x2188;
double x9503 = p2_i*x4060;
double x9504 = p3_i_dot*x2000;
double x9505 = 6*x9449;
double x9506 = p3_i_dot*x5168;
double x9507 = x1059*x480;
double x9508 = x5996*x9361;
double x9509 = x1018*x9403;
double x9510 = p2_i_dot*p3_b_dt;
double x9511 = x154*x5241;
double x9512 = x423*x9345;
double x9513 = p2_b*x509;
double x9514 = x0*x9311;
double x9515 = x2062 + x4036 + x9321 + x9322 + x9323 + x9324 + x9342 - x9352 - x9354 - x9355 - x9357 + x9363 - x9372 - x9374 - x9376;
double x9516 = 16*x9329;
double x9517 = 16*x9331;
double x9518 = p2_b_dt*p3_i;
double x9519 = p2_i*p3_b_dt;
double x9520 = x5911*x9361;
double x9521 = p3_b_dt*x5241;
double x9522 = x158*x9345;
double x9523 = p2_b_dot*x4038;
double x9524 = p3_i_dot*x9064;
double x9525 = p2_i_dot*x9339;
double x9526 = p3_b_dot*x3957;
double x9527 = p3_i_dot*x1968;
double x9528 = p3_b_dot*x2000;
double x9529 = p3_b*x5616;
double x9530 = p3_i_dot*x9060;
double x9531 = p2_i_dot*x9336;
double x9532 = x158*x9313;
double x9533 = x5161*x5680;
double x9534 = 16*x9278;
double x9535 = -x1018*x9529 + x2131 + x4067 + x5168*x9534 + x5178*x9534 - x5334*x9293 - x5336*x9375 + x5337*x9277 - x5590*x9284 + x5597*x9284 + x5611*x9277 - x5613*x9286 - x5615*x9451 + 8*x9276 - 16*x9285;
double x9536 = 36*x9329;
double x9537 = 36*x9331;
double x9538 = x158*x9274;
double x9539 = 32*x9503;
double x9540 = 32*x2000;
double x9541 = x5330*x9279;
double x9542 = x5168*x9541;
double x9543 = x158*x9289;
double x9544 = x158*x9283;
double x9545 = x158*x9298;
double x9546 = x5178*x9541;
double x9547 = 8*x9281;
double x9548 = x323*x9547;
double x9549 = x4083*x5168;
double x9550 = x6047*x9361;
double x9551 = 12*x2068;
double x9552 = p2_b_dot*x5516;
double x9553 = x158*x9294;
double x9554 = x158*x9308;
double x9555 = x158*x9291;
double x9556 = p3_i*x5389;
double x9557 = 16*p3_i_dot;
double x9558 = p3_b*x5663;
double x9559 = x5641*x9513;
double x9560 = x5641*x9407;
double x9561 = x129*x9038;
double x9562 = p2_b_dot*p3_i_dot;
double x9563 = p2_i_dot*p3_b_dot;
double x9564 = p3_b*x5649;
double x9565 = 36*x9278;
double x9566 = p3_b_dot*x5667 - p3_i_dot*x5665 + p3_i_dot*x5666 - x1018*x9558 + x2064*x5271 + x2124 + x2204*x5275 + x4094 - x4095 + x5168*x9565 + x5178*x9565 + x5419*x9339 - x5427*x9293 - x5429*x9375 + x5441*x9277 - x5460*x9339 + x5461*x9336 - x5466*x9336 + x5655*x9277 - x5657*x9286 - x5658*x9451 - x5659*x9284 - x5660*x9336 + x5661*x9336 + x5662*x9284 + 18*x9276 - 36*x9285 + 2*x9333;
double x9567 = p4_i*x5164;
double x9568 = L*x9567;
double x9569 = p4_i*x5229;
double x9570 = p4_b*x9569;
double x9571 = p4_b*p4_b_dt;
double x9572 = p4_i*x488;
double x9573 = L*p4_b;
double x9574 = x5911*x9573;
double x9575 = p4_b_dt*x5179;
double x9576 = L*x9575;
double x9577 = 16*x9576;
double x9578 = 8*x2175;
double x9579 = x2206*x5282;
double x9580 = pow(p4_b, 2);
double x9581 = x5151*x9580;
double x9582 = p4_b*x488;
double x9583 = p4_b_dt*x5278;
double x9584 = x57*x9580;
double x9585 = p4_b*x5184;
double x9586 = p4_i*x4;
double x9587 = p4_b*p4_i;
double x9588 = p4_i*x197;
double x9589 = p4_i_dot*x5229;
double x9590 = p4_b*x9589;
double x9591 = p4_b_dot*x9569;
double x9592 = p4_b*p4_b_dot_dt;
double x9593 = p4_b_dot*p4_b_dt;
double x9594 = p4_i*x482;
double x9595 = p4_i_dot*x488;
double x9596 = p4_b*x20;
double x9597 = x5198*x9596;
double x9598 = p4_b*x482;
double x9599 = x5234*x9598;
double x9600 = x5189*x9596;
double x9601 = x4105*x5234;
double x9602 = p4_b_dot_dt*x5186;
double x9603 = p4_i*x5205;
double x9604 = x5330*x539;
double x9605 = p4_b*p4_i_dot;
double x9606 = p4_b_dot*p4_i;
double x9607 = p4_b_dot*x5202;
double x9608 = x1066*x9607;
double x9609 = p4_b*p4_b_dot;
double x9610 = x57*x9609;
double x9611 = p4_b_dot*x158;
double x9612 = p4_i_dot*x158;
double x9613 = p4_b_dot*x2;
double x9614 = x5287*x9613;
double x9615 = L*x9274;
double x9616 = x5553*x9571;
double x9617 = x5298*x9572;
double x9618 = x5556*x9572;
double x9619 = 12*x9570;
double x9620 = p3_b*x9569;
double x9621 = p4_b*x9275;
double x9622 = p3_b*p4_b_dt;
double x9623 = p3_b_dt*p4_b;
double x9624 = p3_i*x488;
double x9625 = 12*x9624;
double x9626 = p4_i*x458;
double x9627 = 12*x9626;
double x9628 = p4_i_dot*x5408;
double x9629 = 48*x9279;
double x9630 = 48*x9573;
double x9631 = p4_b_dot*x70;
double x9632 = x6047*x9631;
double x9633 = 24*x2175;
double x9634 = p4_b_dot_dt*x70;
double x9635 = 18*x9634;
double x9636 = x5911*x9336;
double x9637 = x5399*x9580;
double x9638 = 8*x9339;
double x9639 = p4_b_dt*x5394;
double x9640 = p4_b*x5234;
double x9641 = p3_b_dot*x2175;
double x9642 = p3_b_dot_dt*p4_b;
double x9643 = p3_i_dot*x2206;
double x9644 = p4_i*x452;
double x9645 = p3_b_dot*x9569;
double x9646 = p4_b*x9295;
double x9647 = x5559*x9582;
double x9648 = p4_i*x5241;
double x9649 = x2161*x9648;
double x9650 = x5404*x9580;
double x9651 = x20*x2306;
double x9652 = 24*x9581;
double x9653 = x2164*x5150;
double x9654 = x0*x9576;
double x9655 = p3_b*x5184;
double x9656 = p3_b*p4_b;
double x9657 = x5151*x9656;
double x9658 = x5573*x9571;
double x9659 = p4_b_dot*x5695;
double x9660 = x5189*x9659;
double x9661 = p3_b*p4_i;
double x9662 = p3_i*p4_b;
double x9663 = p4_b*x5785;
double x9664 = x2188*x5278;
double x9665 = p4_b*x4060;
double x9666 = x5565*x9587;
double x9667 = p4_b*x5567;
double x9668 = x1066*x9667;
double x9669 = x5161*x9580;
double x9670 = x5322*x9669;
double x9671 = p4_i_dot*x4;
double x9672 = x5161*x9656;
double x9673 = p4_b*x509;
double x9674 = p4_i*x509;
double x9675 = p4_i*x5285;
double x9676 = x5153*x9675;
double x9677 = p4_b*x57;
double x9678 = x5282*x9677;
double x9679 = p4_b*x510;
double x9680 = p3_b_dot*p4_b;
double x9681 = p4_b_dot*x5703;
double x9682 = p4_b*x5396;
double x9683 = p4_b*x2291;
double x9684 = x5339*x9683;
double x9685 = p4_b_dot*x2175;
double x9686 = x5339*x9685;
double x9687 = p4_i*x4142;
double x9688 = x5342*x9687;
double x9689 = x5345*x9687;
double x9690 = p4_i_dot*x2206;
double x9691 = x5342*x9690;
double x9692 = x5345*x9690;
double x9693 = x158*x9590;
double x9694 = x158*x9591;
double x9695 = x158*x9599;
double x9696 = x158*x9601;
double x9697 = L*x9602;
double x9698 = 4*x9697;
double x9699 = x1066*x9698;
double x9700 = p4_i_dot*x2175;
double x9701 = x5674*x9700;
double x9702 = p4_b*x539;
double x9703 = x5597*x9702;
double x9704 = x5359*x9683;
double x9705 = x5359*x9685;
double x9706 = x5362*x9605;
double x9707 = x5593*x9605;
double x9708 = x5362*x9606;
double x9709 = x158*x9608;
double x9710 = x5590*x9702;
double x9711 = x5369*x9609;
double x9712 = x5601*x9702;
double x9713 = x3108*x9589;
double x9714 = p4_b_dot_dt*x9631;
double x9715 = p4_i_dot*x4140;
double x9716 = pow(p4_b_dot, 2);
double x9717 = p4_b_dot*x4121;
double x9718 = p4_i_dot*x9634;
double x9719 = p4_i_dot*x9631;
double x9720 = p4_b_dot*x5540;
double x9721 = x5290*x9720;
double x9722 = p4_b_dot*x9713 + p4_b_dot_dt*x9721 + x2169 + x4123 + x5168*x9715 + x5178*x9715 + x5264*x9714 - x5272*x9716 - x5274*x9716 - x5276*x9717 - x5279*x9718 + x5281*x9716 - x5283*x9719 - x5286*x9719 - x5289*x9716;
double x9723 = -x9684 - x9686 - x9688 - x9689 - x9691 - x9692 - x9693 - x9694 + x9695 + x9696 + x9699 + x9701 - x9703 - x9704 - x9705 + x9706 + x9707 + x9708 + x9709 + x9710 + x9711 + x9712 + x9722;
double x9724 = x9336*x9589;
double x9725 = p4_b_dot*x9427;
double x9726 = 22*x9279;
double x9727 = 22*x9573;
double x9728 = 11*x2175;
double x9729 = p3_b*p4_b_dot_dt;
double x9730 = p3_b_dt*p4_b_dot;
double x9731 = p3_i*x482;
double x9732 = x473*x540;
double x9733 = x5413*x9580;
double x9734 = p3_b*x9589;
double x9735 = p4_b_dot*x9275;
double x9736 = p4_b*x2188;
double x9737 = p4_i*x4060;
double x9738 = p3_b*x488;
double x9739 = p4_b*x458;
double x9740 = p4_b_dot_dt*x9336;
double x9741 = p3_b_dot_dt*x9631;
double x9742 = p3_i_dot*x4121;
double x9743 = p4_i_dot*x4038;
double x9744 = p4_b_dt*p4_i;
double x9745 = x4115*x5234;
double x9746 = x1066*x9403;
double x9747 = x2190*x5241;
double x9748 = x4121*x9461;
double x9749 = x2168*x9306;
double x9750 = x2068*x9602;
double x9751 = p4_b_dot*x9457;
double x9752 = 11*x5834;
double x9753 = 11*x5891;
double x9754 = x482*x9456;
double x9755 = p3_b_dt*x540;
double x9756 = x1018*x9697;
double x9757 = p4_b_dot*x458;
double x9758 = p3_b_dot*p4_i;
double x9759 = L*x9313;
double x9760 = p3_i_dot*p4_b;
double x9761 = p4_i_dot*x9474;
double x9762 = x2168*x9313;
double x9763 = p4_b_dot*x5853;
double x9764 = x2068*x9607;
double x9765 = p3_b*x539;
double x9766 = p3_b_dot*p4_b_dot;
double x9767 = x509*x9677;
double x9768 = p4_b*x540;
double x9769 = p4_i*x539;
double x9770 = p4_b_dot*x9336;
double x9771 = x57*x9770;
double x9772 = p3_b*p4_i_dot;
double x9773 = x0*x9772;
double x9774 = p3_i*p4_b_dot;
double x9775 = x1018*x9607;
double x9776 = p3_b*p4_b_dot;
double x9777 = p4_b*x0;
double x9778 = x5306*x9631;
double x9779 = 6*x9634;
double x9780 = -p4_i_dot*x5715 + x2164*x5712 + x2306*x5710 - x4133 - x5168*x9778 - x5172*x9779 + x5175*x9779 + x5178*x9778 + x5716*x9659 + x5717*x9671 + 6*x9628 - 6*x9660 + 24*x9681;
double x9781 = p4_i_dot*x4121;
double x9782 = x2211*x9631;
double x9783 = p4_i_dot*x5897;
double x9784 = x70*x9716;
double x9785 = p4_b_dot*p4_i_dot;
double x9786 = x362*x9785;
double x9787 = -x5234*x9782 + x5339*x9714 + x5342*x9781 + x5345*x9781 + x5359*x9714 - x5537*x9716 - x5543*x9784 + x5545*x9784 - x5547*x9786 - x5550*x9716 + x9589*x9720 - x9602*x9783 - x9607*x9783;
double x9788 = p3_b*x2291;
double x9789 = p3_b_dt*x539;
double x9790 = p3_i*x4142;
double x9791 = x458*x540;
double x9792 = x1059*x510;
double x9793 = 6*x9742;
double x9794 = 6*x9743;
double x9795 = x5996*x9656;
double x9796 = x1066*x9697;
double x9797 = x452*x9640;
double x9798 = x5521*x9765;
double x9799 = x5521*x9702;
double x9800 = x0*x9605;
double x9801 = x1066*x9313;
double x9802 = x2162 + x4119 + x9616 + x9617 + x9618 + x9619 + x9637 - x9647 - x9649 - x9650 - x9652 + x9658 - x9666 - x9668 - x9670;
double x9803 = 16*x9624;
double x9804 = 16*x9626;
double x9805 = x4140*x5178;
double x9806 = p3_b_dt*p4_i;
double x9807 = p3_i*p4_b_dt;
double x9808 = x5911*x9656;
double x9809 = x158*x9640;
double x9810 = p3_b_dot*x4121;
double x9811 = p4_i_dot*x9339;
double x9812 = p3_i_dot*x9634;
double x9813 = p4_b_dot*x4038;
double x9814 = x458*x9611;
double x9815 = p4_b*x5616;
double x9816 = p4_i_dot*x9336;
double x9817 = p3_i_dot*x9631;
double x9818 = x158*x9607;
double x9819 = 16*x9572;
double x9820 = -x1066*x9815 + x2236 + x4149 + x5168*x9819 + x5178*x9819 - x5334*x9587 - x5336*x9669 + x5337*x9571 - x5590*x9580 + x5597*x9580 + x5611*x9571 - x5613*x9582 - x5615*x9744 + 8*x9570 - 16*x9581;
double x9821 = 36*x9624;
double x9822 = 36*x9626;
double x9823 = x158*x9567;
double x9824 = 32*x9790;
double x9825 = 32*x9791;
double x9826 = x5330*x9573;
double x9827 = x5168*x9826;
double x9828 = 4*x2175;
double x9829 = x5172*x9828;
double x9830 = x5175*x9828;
double x9831 = 4*x9579;
double x9832 = x5178*x9826;
double x9833 = 8*x9575;
double x9834 = x323*x9833;
double x9835 = 12*x9631;
double x9836 = 32*x9687;
double x9837 = 32*x9690;
double x9838 = x6047*x9656;
double x9839 = p4_b_dot*x4166;
double x9840 = 12*x2168;
double x9841 = p3_b_dot*x5516;
double x9842 = x158*x9600;
double x9843 = x158*x9603;
double x9844 = x158*x9597;
double x9845 = p4_i*x5389;
double x9846 = p4_b*x5663;
double x9847 = x5641*x9765;
double x9848 = x5641*x9702;
double x9849 = p3_b_dot*p4_i_dot;
double x9850 = p3_i_dot*p4_b_dot;
double x9851 = 16*x9682;
double x9852 = 36*x9572;
double x9853 = p4_b_dot*x5667 - p4_i_dot*x5665 + p4_i_dot*x5666 - x1066*x9846 + x2164*x5271 + x2229 + x2306*x5275 + x4177 - x4178 + x5168*x9852 + x5178*x9852 + x5419*x9634 - x5427*x9587 - x5429*x9669 + x5441*x9571 - x5460*x9634 + x5461*x9631 - x5466*x9631 + x5655*x9571 - x5657*x9582 - x5658*x9744 - x5659*x9580 - x5660*x9631 + x5661*x9631 + x5662*x9580 + 18*x9570 - 36*x9581 + 2*x9628;
double x9854 = p5_i*x5164;
double x9855 = L*x9854;
double x9856 = p5_i*x5229;
double x9857 = p5_b*x9856;
double x9858 = p5_b*p5_b_dt;
double x9859 = p5_i*x518;
double x9860 = L*p5_b;
double x9861 = x6387*x9860;
double x9862 = p5_b_dt*x5179;
double x9863 = L*x9862;
double x9864 = x0*x9863;
double x9865 = p5_b_dt*x5175;
double x9866 = x518*x5282;
double x9867 = pow(p5_b, 2);
double x9868 = x5151*x9867;
double x9869 = p5_b*x518;
double x9870 = p5_b_dt*x5278;
double x9871 = x57*x9867;
double x9872 = p5_b_dt*x5172;
double x9873 = p5_i*x4;
double x9874 = p5_b*p5_i;
double x9875 = p5_i*x5891;
double x9876 = p5_i_dot*x5229;
double x9877 = p5_b*x9876;
double x9878 = p5_b_dot*x9856;
double x9879 = p5_b*p5_b_dot_dt;
double x9880 = p5_b_dot*p5_b_dt;
double x9881 = p5_i*x512;
double x9882 = p5_i_dot*x518;
double x9883 = p5_b*x20;
double x9884 = x5198*x9883;
double x9885 = p5_b*x512;
double x9886 = x5234*x9885;
double x9887 = x5189*x9883;
double x9888 = x4189*x5234;
double x9889 = p5_b_dot_dt*x5186;
double x9890 = x2254*x5241;
double x9891 = p5_i*x5205;
double x9892 = x5244*x569;
double x9893 = p5_b_dot_dt*x154;
double x9894 = p5_b*p5_i_dot;
double x9895 = p5_b_dot*p5_i;
double x9896 = p5_b_dot*x5202;
double x9897 = x1119*x9896;
double x9898 = p5_b_dot*x7012;
double x9899 = p5_i_dot*x4;
double x9900 = p5_b*p5_b_dot;
double x9901 = x57*x9900;
double x9902 = p5_i_dot*x154;
double x9903 = p5_b_dot*x2;
double x9904 = x5553*x9858;
double x9905 = x5298*x9859;
double x9906 = x5556*x9859;
double x9907 = 12*x9857;
double x9908 = p4_b*x9856;
double x9909 = p5_b*x9569;
double x9910 = p4_b*p5_b_dt;
double x9911 = p4_b_dt*p5_b;
double x9912 = p4_i*x518;
double x9913 = 12*x9912;
double x9914 = p5_i*x488;
double x9915 = 12*x9914;
double x9916 = p5_i_dot*x5408;
double x9917 = 60*x9573;
double x9918 = 60*x9860;
double x9919 = p5_b_dot*x70;
double x9920 = 44*x9919;
double x9921 = 30*x2175;
double x9922 = p5_b_dot_dt*x70;
double x9923 = 22*x9922;
double x9924 = x6387*x9631;
double x9925 = x5399*x9867;
double x9926 = 10*x9634;
double x9927 = p5_b_dt*x5394;
double x9928 = p5_b*x5234;
double x9929 = p4_b_dot*p5_b_dt;
double x9930 = p5_b*x2240;
double x9931 = p4_i_dot*x518;
double x9932 = p5_i*x482;
double x9933 = p4_b_dot*x9856;
double x9934 = p5_b*x9589;
double x9935 = x5559*x9869;
double x9936 = p5_i*x5241;
double x9937 = x2268*x9936;
double x9938 = x5404*x9867;
double x9939 = x20*x2410;
double x9940 = 24*x9868;
double x9941 = x2271*x5150;
double x9942 = 30*p4_b;
double x9943 = 30*p5_b;
double x9944 = p4_b*p5_b;
double x9945 = x5151*x9944;
double x9946 = x5573*x9858;
double x9947 = 22*x9919;
double x9948 = 22*p5_i_dot;
double x9949 = 10*p4_i_dot;
double x9950 = p4_b*p5_i;
double x9951 = p4_i*p5_b;
double x9952 = p5_b*x5785;
double x9953 = x2291*x5278;
double x9954 = p5_b*x4142;
double x9955 = x5565*x9874;
double x9956 = p5_b*x5567;
double x9957 = x1119*x9956;
double x9958 = x5161*x9867;
double x9959 = x5322*x9958;
double x9960 = x5161*x9944;
double x9961 = p5_b*x539;
double x9962 = p5_i*x539;
double x9963 = p5_i*x5285;
double x9964 = x5153*x9963;
double x9965 = p5_b*x57;
double x9966 = x5282*x9965;
double x9967 = p5_b*x540;
double x9968 = p4_b_dot*p5_b;
double x9969 = p5_b_dot*x5703;
double x9970 = p5_b*x5396;
double x9971 = p5_b*x0;
double x9972 = x5161*x9971;
double x9973 = p5_b*x2394;
double x9974 = x5339*x9973;
double x9975 = p5_b_dt*x569;
double x9976 = x5339*x9975;
double x9977 = p5_i*x4226;
double x9978 = x5342*x9977;
double x9979 = x5345*x9977;
double x9980 = x518*x570;
double x9981 = x5342*x9980;
double x9982 = x5345*x9980;
double x9983 = x158*x9877;
double x9984 = x158*x9878;
double x9985 = x158*x9886;
double x9986 = x158*x9888;
double x9987 = L*x9889;
double x9988 = 4*x9987;
double x9989 = x1119*x9988;
double x9990 = x158*x9890;
double x9991 = p5_b*x569;
double x9992 = x5597*x9991;
double x9993 = x5359*x9973;
double x9994 = x5359*x9975;
double x9995 = x5362*x9894;
double x9996 = x5593*x9894;
double x9997 = x5362*x9895;
double x9998 = x158*x9897;
double x9999 = x5590*x9991;
double x10000 = x5369*x9900;
double x10001 = x5601*x9991;
double x10002 = x3108*x9876;
double x10003 = p5_b_dot_dt*x9919;
double x10004 = p5_i_dot*x4205;
double x10005 = pow(p5_b_dot, 2);
double x10006 = p5_b_dot*x4205;
double x10007 = p5_i_dot*x9922;
double x10008 = p5_i_dot*x9919;
double x10009 = p5_b_dot*x10002 + x10003*x5264 + x10003*x5291 + x10004*x5267 + x10004*x5269 - x10005*x5272 - x10005*x5274 + x10005*x5281 - x10005*x5289 - x10006*x5276 - x10007*x5279 - x10008*x5283 - x10008*x5286 + x2276 + x4207;
double x10010 = x10000 + x10001 + x10009 - x9974 - x9976 - x9978 - x9979 - x9981 - x9982 - x9983 - x9984 + x9985 + x9986 + x9989 + x9990 - x9992 - x9993 - x9994 + x9995 + x9996 + x9997 + x9998 + x9999;
double x10011 = x70*x9876;
double x10012 = p4_b_dot*x10011;
double x10013 = x9589*x9919;
double x10014 = 26*x9573;
double x10015 = 26*x9860;
double x10016 = 13*x2175;
double x10017 = p4_b*p5_b_dot_dt;
double x10018 = p5_b_dot*x2175;
double x10019 = p4_i*x512;
double x10020 = x503*x570;
double x10021 = x5413*x9867;
double x10022 = p4_b*x9876;
double x10023 = p5_b_dot*x9569;
double x10024 = p5_b_dt*x539;
double x10025 = p5_b*x2291;
double x10026 = x518*x540;
double x10027 = p5_i*x4142;
double x10028 = p4_b*x518;
double x10029 = p5_b*x488;
double x10030 = p5_b_dot_dt*x9631;
double x10031 = p4_b_dot_dt*x9919;
double x10032 = p4_i_dot*x4205;
double x10033 = p5_i_dot*x4121;
double x10034 = p5_b_dt*p5_i;
double x10035 = p4_b_dot*x518;
double x10036 = x1119*x9697;
double x10037 = p5_b_dt*x540;
double x10038 = p5_b*x5516;
double x10039 = x4205*x5234;
double x10040 = p4_b_dot*x10039;
double x10041 = x2275*x9602;
double x10042 = x2168*x9889;
double x10043 = p5_b_dot*x5234;
double x10044 = x10043*x4121;
double x10045 = 13*p4_b;
double x10046 = 13*p5_b;
double x10047 = x512*x5516;
double x10048 = p4_b*x10047;
double x10049 = x2175*x2301;
double x10050 = x1066*x9987;
double x10051 = x10043*x2206;
double x10052 = p4_b_dot*p5_i;
double x10053 = L*x9607;
double x10054 = p4_i_dot*p5_b;
double x10055 = x2275*x9607;
double x10056 = p5_b_dot*x5853;
double x10057 = p4_i_dot*x10056;
double x10058 = x2168*x9896;
double x10059 = p4_b*x569;
double x10060 = p4_b_dot*p5_b_dot;
double x10061 = x539*x9965;
double x10062 = p5_b*x570;
double x10063 = p5_i*x569;
double x10064 = p4_b_dot*x9919;
double x10065 = x10064*x57;
double x10066 = p4_b*p5_i_dot;
double x10067 = x0*x10066;
double x10068 = p4_i*p5_b_dot;
double x10069 = x1066*x9896;
double x10070 = p4_b*p5_b_dot;
double x10071 = x5521*x9919;
double x10072 = 7*x9922;
double x10073 = 14*x5150;
double x10074 = 7*x9919;
double x10075 = 7*p5_i_dot;
double x10076 = -x10071*x5168 + x10071*x5178 - x10072*x5172 + x10072*x5175 + x10073*x2271 - x10074*x6693 + x10074*x9494 - x10075*x5698 - x4217 + x8093*x9899 + 7*x9916 + 7*x9939 + 28*x9969;
double x10077 = x9876*x9919;
double x10078 = p5_i_dot*x5897;
double x10079 = x10005*x70;
double x10080 = p5_b_dot*p5_i_dot;
double x10081 = x10080*x362;
double x10082 = x10003*x5339 + x10003*x5359 + x10004*x5342 + x10004*x5345 - x10005*x5537 - x10005*x5550 - x10006*x5538 + 4*x10077 - x10078*x9889 - x10078*x9896 - x10079*x5543 + x10079*x5545 - x10081*x5547;
double x10083 = p4_b*x2394;
double x10084 = p4_i*x4226;
double x10085 = p5_i_dot*x2206;
double x10086 = 6*x10032;
double x10087 = 6*x10033;
double x10088 = x1160*x540;
double x10089 = x5996*x9944;
double x10090 = x1119*x9987;
double x10091 = p4_i_dot*p5_b_dt;
double x10092 = x482*x9928;
double x10093 = p5_i_dot*x2175;
double x10094 = x10059*x5521;
double x10095 = x5521*x9991;
double x10096 = x0*x9894;
double x10097 = x1119*x9607;
double x10098 = p4_b_dot*x0;
double x10099 = 6*x9919;
double x10100 = x10099*x5161;
double x10101 = x2269 + x4203 + x9904 + x9905 + x9906 + x9907 + x9925 - x9935 - x9937 - x9938 - x9940 + x9946 - x9955 - x9957 - x9959;
double x10102 = 16*x9912;
double x10103 = 16*x9914;
double x10104 = p5_i_dot*x5168;
double x10105 = p4_b_dt*p5_i;
double x10106 = p4_i*p5_b_dt;
double x10107 = x5911*x9944;
double x10108 = p5_b_dt*x5241;
double x10109 = x158*x9928;
double x10110 = p4_b_dot*x4205;
double x10111 = p5_i_dot*x9634;
double x10112 = p4_i_dot*x9922;
double x10113 = p5_b_dot*x4121;
double x10114 = p5_b_dot*x2206;
double x10115 = p5_b*x5616;
double x10116 = p5_i_dot*x9631;
double x10117 = p4_i_dot*x9919;
double x10118 = x158*x9896;
double x10119 = 16*x9859;
double x10120 = -x10034*x5615 - x10115*x1119 + x10119*x5168 + x10119*x5178 + x2337 + x4233 - x5334*x9874 - x5336*x9958 + x5337*x9858 - x5590*x9867 + x5597*x9867 + x5611*x9858 - x5613*x9869 + 8*x9857 - 16*x9868;
double x10121 = 36*x9912;
double x10122 = 36*x9914;
double x10123 = x158*x9854;
double x10124 = 32*x10084;
double x10125 = 32*x10085;
double x10126 = x5330*x9860;
double x10127 = x10126*x5168;
double x10128 = x158*x9872;
double x10129 = x158*x9865;
double x10130 = x158*x9866;
double x10131 = x10126*x5178;
double x10132 = 8*x9862;
double x10133 = x10132*x323;
double x10134 = p4_b_dot_dt*p5_b;
double x10135 = x4250*x5168;
double x10136 = 32*x9977;
double x10137 = 32*x9980;
double x10138 = x6047*x9944;
double x10139 = 12*x2275;
double x10140 = p4_b_dot*x5516;
double x10141 = x158*x9887;
double x10142 = x158*x9891;
double x10143 = x158*x9884;
double x10144 = p5_i*x5389;
double x10145 = p5_b*x5663;
double x10146 = x10059*x5641;
double x10147 = x5641*x9991;
double x10148 = p4_b_dot*p5_i_dot;
double x10149 = p4_i_dot*p5_b_dot;
double x10150 = 16*x9970;
double x10151 = 36*x9859;
double x10152 = p5_b_dot*x5667 - p5_i_dot*x5665 + p5_i_dot*x5666 - x10034*x5658 - x10145*x1119 + x10151*x5168 + x10151*x5178 + x2271*x5271 + x2330 + x2410*x5275 + x4261 - x4262 + x5419*x9922 - x5427*x9874 - x5429*x9958 + x5441*x9858 - x5460*x9922 + x5461*x9919 - x5466*x9919 + x5655*x9858 - x5657*x9869 - x5659*x9867 - x5660*x9919 + x5661*x9919 + x5662*x9867 + 18*x9857 - 36*x9868 + 2*x9916;
double x10153 = p6_i*x5164;
double x10154 = p6_i*x5229;
double x10155 = p6_b*x10154;
double x10156 = p6_b*p6_b_dt;
double x10157 = p6_i*x548;
double x10158 = L*p6_b;
double x10159 = x10158*x5996;
double x10160 = p6_b_dt*x5179;
double x10161 = L*x10160;
double x10162 = x0*x10161;
double x10163 = 12*x2381;
double x10164 = x2412*x5282;
double x10165 = pow(p6_b, 2);
double x10166 = x10165*x5151;
double x10167 = p6_b*x548;
double x10168 = p6_b_dt*x5278;
double x10169 = x10165*x57;
double x10170 = p6_b*x5184;
double x10171 = p6_i*x4;
double x10172 = p6_b*p6_i;
double x10173 = p6_b*x5834;
double x10174 = p6_i*x5205;
double x10175 = p6_b*x5396;
double x10176 = p6_i_dot*x5229;
double x10177 = p6_b*x10176;
double x10178 = p6_b_dot*x10154;
double x10179 = p6_b*p6_b_dot_dt;
double x10180 = p6_b_dot*p6_b_dt;
double x10181 = p6_i*x542;
double x10182 = p6_i_dot*x548;
double x10183 = p6_b*x20;
double x10184 = x10183*x5198;
double x10185 = p6_b*x542;
double x10186 = x10185*x5234;
double x10187 = x10183*x5189;
double x10188 = x4272*x5234;
double x10189 = p6_b_dot_dt*x5186;
double x10190 = x5306*x599;
double x10191 = p6_b_dot_dt*x129;
double x10192 = p6_b*p6_i_dot;
double x10193 = p6_b_dot*p6_i;
double x10194 = p6_b_dot*x5202;
double x10195 = x10194*x1167;
double x10196 = p6_i_dot*x4;
double x10197 = p6_b*p6_b_dot;
double x10198 = x10197*x57;
double x10199 = p6_b_dot*x129;
double x10200 = p6_b_dot*x2;
double x10201 = x10200*x5287;
double x10202 = x10156*x5553;
double x10203 = x10157*x5298;
double x10204 = x10157*x5556;
double x10205 = 12*x10155;
double x10206 = p5_b*x10154;
double x10207 = p6_b*x9856;
double x10208 = p5_b*p6_b_dt;
double x10209 = p5_b_dt*p6_b;
double x10210 = p5_i*x548;
double x10211 = 12*x10210;
double x10212 = p6_i*x518;
double x10213 = 12*x10212;
double x10214 = p6_i_dot*x5408;
double x10215 = L*x10153;
double x10216 = 72*x9860;
double x10217 = 72*x10158;
double x10218 = p6_b_dot*x70;
double x10219 = 52*x10218;
double x10220 = 36*x2381;
double x10221 = p6_b_dot_dt*x70;
double x10222 = 26*x10221;
double x10223 = x5996*x9919;
double x10224 = 12*x9922;
double x10225 = x10165*x5399;
double x10226 = p6_b_dt*x5394;
double x10227 = p6_b*x5234;
double x10228 = p5_b_dot*x2381;
double x10229 = p5_b_dot_dt*p6_b;
double x10230 = p5_i_dot*x2412;
double x10231 = p6_i*x512;
double x10232 = p5_b_dot*x10154;
double x10233 = p6_b*x9876;
double x10234 = x10167*x5559;
double x10235 = p6_i*x5241;
double x10236 = x10235*x2367;
double x10237 = x10165*x5404;
double x10238 = 24*x10166;
double x10239 = x20*x2510;
double x10240 = x2370*x5150;
double x10241 = p5_b*x5184;
double x10242 = p6_b_dot*x5695;
double x10243 = x10242*x5189;
double x10244 = p5_b*p6_b;
double x10245 = x10244*x5151;
double x10246 = x10156*x5573;
double x10247 = 12*x9919;
double x10248 = p5_b*p6_i;
double x10249 = p5_i*p6_b;
double x10250 = p6_b*x5785;
double x10251 = x2394*x5278;
double x10252 = p6_b*x4226;
double x10253 = x20*x9919;
double x10254 = x10172*x5565;
double x10255 = p6_b*x5567;
double x10256 = x10255*x1167;
double x10257 = x10165*x5161;
double x10258 = x10257*x5322;
double x10259 = x10244*x5161;
double x10260 = p6_b*x569;
double x10261 = p6_i*x569;
double x10262 = p6_i*x5285;
double x10263 = x10262*x5153;
double x10264 = p6_b*x57;
double x10265 = x10264*x5282;
double x10266 = p6_b*x570;
double x10267 = p5_b_dot*p6_b;
double x10268 = p6_b_dot*x5703;
double x10269 = p6_b*x2495;
double x10270 = x10269*x5339;
double x10271 = p6_b_dot*x2381;
double x10272 = x10271*x5339;
double x10273 = p6_i*x4309;
double x10274 = x10273*x5342;
double x10275 = x10273*x5345;
double x10276 = p6_i_dot*x2412;
double x10277 = x10276*x5342;
double x10278 = x10276*x5345;
double x10279 = x10177*x158;
double x10280 = x10178*x158;
double x10281 = x10186*x158;
double x10282 = x10188*x158;
double x10283 = L*x10189;
double x10284 = 4*x10283;
double x10285 = x10284*x1167;
double x10286 = p6_i_dot*x2381;
double x10287 = x10286*x5674;
double x10288 = p6_b*x599;
double x10289 = x10288*x5597;
double x10290 = x10269*x5359;
double x10291 = x10271*x5359;
double x10292 = x10192*x5362;
double x10293 = x10192*x5593;
double x10294 = x10193*x5362;
double x10295 = x10195*x158;
double x10296 = x10288*x5590;
double x10297 = x10197*x5369;
double x10298 = x10288*x5601;
double x10299 = x10176*x3108;
double x10300 = p6_b_dot_dt*x10218;
double x10301 = p6_i_dot*x4288;
double x10302 = pow(p6_b_dot, 2);
double x10303 = p6_b_dot*x4288;
double x10304 = p6_i_dot*x10221;
double x10305 = p6_i_dot*x10218;
double x10306 = p6_b_dot*x5540;
double x10307 = x10306*x5290;
double x10308 = p6_b_dot*x10299 + p6_b_dot_dt*x10307 + x10300*x5264 + x10301*x5267 + x10301*x5269 - x10302*x5272 - x10302*x5274 + x10302*x5281 - x10302*x5289 - x10303*x5276 - x10304*x5279 - x10305*x5283 - x10305*x5286 + x2375 + x4290;
double x10309 = -x10270 - x10272 - x10274 - x10275 - x10277 - x10278 - x10279 - x10280 + x10281 + x10282 + x10285 + x10287 - x10289 - x10290 - x10291 + x10292 + x10293 + x10294 + x10295 + x10296 + x10297 + x10298 + x10308;
double x10310 = x10176*x9919;
double x10311 = p6_b_dot*x10011;
double x10312 = 30*x9860;
double x10313 = 30*x10158;
double x10314 = 15*x2381;
double x10315 = p5_b_dt*p6_b_dot;
double x10316 = p5_i*x542;
double x10317 = x533*x600;
double x10318 = x10165*x5413;
double x10319 = p5_b*x10176;
double x10320 = p6_b_dot*x9856;
double x10321 = p6_b*x2394;
double x10322 = p6_i*x4226;
double x10323 = p5_b*x548;
double x10324 = p6_b*x518;
double x10325 = p6_b_dot_dt*x9919;
double x10326 = p5_b_dot_dt*x10218;
double x10327 = p5_i_dot*x4288;
double x10328 = p6_i_dot*x4205;
double x10329 = p6_b_dt*p6_i;
double x10330 = x4282*x5234;
double x10331 = x1167*x9987;
double x10332 = x2396*x5241;
double x10333 = x10043*x4288;
double x10334 = x2374*x9889;
double x10335 = x10189*x2275;
double x10336 = p6_b_dot*x10039;
double x10337 = 15*p5_b;
double x10338 = x10038*x542;
double x10339 = p5_b_dt*x600;
double x10340 = x10283*x1119;
double x10341 = p6_b_dot*x518;
double x10342 = p6_b*x1167;
double x10343 = p5_b_dot*p6_i;
double x10344 = L*x9896;
double x10345 = p5_i_dot*p6_b;
double x10346 = p6_i_dot*x10056;
double x10347 = x2374*x9896;
double x10348 = p6_b_dot*x5853;
double x10349 = x10194*x2275;
double x10350 = p5_b*x599;
double x10351 = p5_b*x10191;
double x10352 = p5_b_dot*p6_b_dot;
double x10353 = x10264*x569;
double x10354 = p6_b*x600;
double x10355 = p6_i*x599;
double x10356 = p6_b_dot*x9919;
double x10357 = x10356*x57;
double x10358 = p5_b*p6_i_dot;
double x10359 = x0*x10358;
double x10360 = p5_i*p6_b_dot;
double x10361 = x10194*x1119;
double x10362 = p5_b*p6_b_dot;
double x10363 = x10218*x5911;
double x10364 = 8*x10221;
double x10365 = -p6_i_dot*x6758 + x10196*x6750 + 8*x10214 + 16*x10240 + x10242*x5339 - x10242*x6677 + 32*x10268 - x10363*x5168 + x10363*x5178 - x10364*x5172 + x10364*x5175 + x2510*x7943 - x4300;
double x10366 = p6_i_dot*x5897;
double x10367 = x10302*x70;
double x10368 = p6_b_dot*p6_i_dot;
double x10369 = x10368*x362;
double x10370 = x10176*x10306 - x10189*x10366 - x10194*x10366 + x10300*x5339 + x10300*x5359 + x10301*x5342 + x10301*x5345 - x10302*x5537 - x10302*x5550 - x10303*x5538 - x10367*x5543 + x10367*x5545 - x10369*x5547;
double x10371 = p5_b*x2495;
double x10372 = p5_b_dt*x599;
double x10373 = p5_i*x4309;
double x10374 = x518*x600;
double x10375 = x1160*x570;
double x10376 = 6*x10327;
double x10377 = 6*x10328;
double x10378 = x10244*x5996;
double x10379 = x10283*x1167;
double x10380 = x10227*x512;
double x10381 = x10350*x5521;
double x10382 = x10288*x5521;
double x10383 = p5_b*x9892;
double x10384 = p6_b*x9892;
double x10385 = x0*x10192;
double x10386 = x1167*x9896;
double x10387 = p6_b_dot*x0;
double x10388 = x10202 + x10203 + x10204 + x10205 + x10225 - x10234 - x10236 - x10237 - x10238 + x10246 - x10254 - x10256 - x10258 + x2368 + x4286;
double x10389 = 16*x10210;
double x10390 = 16*x10212;
double x10391 = p5_b_dt*p6_i;
double x10392 = p5_i*p6_b_dt;
double x10393 = x10244*x5911;
double x10394 = x10227*x158;
double x10395 = p5_b_dot*x4288;
double x10396 = p6_i_dot*x9922;
double x10397 = p5_i_dot*x10221;
double x10398 = p6_b_dot*x4205;
double x10399 = p6_i_dot*x158;
double x10400 = p6_b*x1119;
double x10401 = p6_i_dot*x9919;
double x10402 = p5_i_dot*x10218;
double x10403 = x10194*x158;
double x10404 = 16*x10157;
double x10405 = 8*x10155 + x10156*x5337 + x10156*x5611 - x10165*x5590 + x10165*x5597 - 16*x10166 - x10167*x5613 - x10172*x5334 - x10257*x5336 - x10329*x5615 - x10342*x5616 + x10404*x5168 + x10404*x5178 + x2441 + x4316;
double x10406 = 36*x10210;
double x10407 = 36*x10212;
double x10408 = x10153*x158;
double x10409 = 32*x10373;
double x10410 = 32*x10374;
double x10411 = x10158*x5330;
double x10412 = x10411*x5168;
double x10413 = 4*x2381;
double x10414 = x10413*x5172;
double x10415 = x10413*x5175;
double x10416 = 4*x10164;
double x10417 = x10411*x5178;
double x10418 = 8*x10160;
double x10419 = x10418*x323;
double x10420 = 12*x10218;
double x10421 = 32*x10273;
double x10422 = 32*x10276;
double x10423 = x10244*x6047;
double x10424 = 12*x2374;
double x10425 = p5_b_dot*x5516;
double x10426 = x10187*x158;
double x10427 = x10174*x158;
double x10428 = x10184*x158;
double x10429 = p6_i*x5389;
double x10430 = x10350*x5641;
double x10431 = x10288*x5641;
double x10432 = p5_b_dot*p6_i_dot;
double x10433 = p5_i_dot*p6_b_dot;
double x10434 = 16*x10175;
double x10435 = 36*x10157;
double x10436 = p6_b_dot*x5667 - p6_i_dot*x5665 + p6_i_dot*x5666 + 18*x10155 + x10156*x5441 + x10156*x5655 - x10165*x5659 + x10165*x5662 - 36*x10166 - x10167*x5657 - x10172*x5427 + 2*x10214 + x10218*x5461 - x10218*x5466 - x10218*x5660 + x10218*x5661 + x10221*x5419 - x10221*x5460 - x10257*x5429 - x10329*x5658 - x10342*x5663 + x10435*x5168 + x10435*x5178 + x2370*x5271 + x2434 + x2510*x5275 + x4343 - x4344;
double x10437 = p7_i*x5164;
double x10438 = L*x10437;
double x10439 = p7_i*x5229;
double x10440 = p7_b*x10439;
double x10441 = p7_b*p7_b_dt;
double x10442 = p7_i*x578;
double x10443 = L*p7_b;
double x10444 = 28*x10443;
double x10445 = p7_b_dt*x5179;
double x10446 = L*x10445;
double x10447 = x0*x10446;
double x10448 = p7_b_dt*x5175;
double x10449 = x5282*x578;
double x10450 = pow(p7_b, 2);
double x10451 = x10450*x5151;
double x10452 = p7_b*x578;
double x10453 = p7_b_dt*x5278;
double x10454 = x10450*x57;
double x10455 = p7_b_dt*x5172;
double x10456 = p7_i*x4;
double x10457 = p7_b*p7_i;
double x10458 = p7_b*x5834;
double x10459 = p7_i*x5891;
double x10460 = p7_b*x5396;
double x10461 = p7_i_dot*x5229;
double x10462 = p7_b*x10461;
double x10463 = p7_b_dot*x10439;
double x10464 = p7_b*p7_b_dot_dt;
double x10465 = p7_b_dot*p7_b_dt;
double x10466 = p7_i*x572;
double x10467 = p7_i_dot*x578;
double x10468 = p7_b*x20;
double x10469 = x10468*x5198;
double x10470 = p7_b*x572;
double x10471 = x10470*x5234;
double x10472 = x10468*x5189;
double x10473 = x4355*x5234;
double x10474 = p7_b_dot_dt*x5186;
double x10475 = x2458*x5241;
double x10476 = p7_i*x5205;
double x10477 = x5521*x629;
double x10478 = p7_b*p7_i_dot;
double x10479 = p7_b_dot*p7_i;
double x10480 = p7_b_dot*x5202;
double x10481 = x10480*x1220;
double x10482 = p7_b_dot*x7114;
double x10483 = p7_i_dot*x4;
double x10484 = p7_b*p7_b_dot;
double x10485 = x10484*x57;
double x10486 = 7*x630;
double x10487 = p7_b_dot*x2;
double x10488 = x10441*x5553;
double x10489 = x10442*x5298;
double x10490 = x10442*x5556;
double x10491 = 12*x10440;
double x10492 = p6_b*x10439;
double x10493 = p7_b*x10154;
double x10494 = p6_b*p7_b_dt;
double x10495 = p6_b_dt*p7_b;
double x10496 = p6_i*x578;
double x10497 = 12*x10496;
double x10498 = p7_i*x548;
double x10499 = 12*x10498;
double x10500 = p7_i_dot*x5408;
double x10501 = 84*x10158;
double x10502 = 84*x10443;
double x10503 = p7_b_dot*x70;
double x10504 = 60*x10503;
double x10505 = 42*x2381;
double x10506 = p7_b_dot_dt*x70;
double x10507 = 30*x10506;
double x10508 = 28*x10218;
double x10509 = 14*x10221;
double x10510 = x10450*x5399;
double x10511 = p7_b_dt*x5394;
double x10512 = p7_b*x5234;
double x10513 = p6_b_dot*p7_b_dt;
double x10514 = p6_b_dot_dt*p7_b;
double x10515 = p6_i_dot*x578;
double x10516 = p7_i*x542;
double x10517 = p6_b_dot*x10439;
double x10518 = p7_b*x10176;
double x10519 = x10452*x5559;
double x10520 = p7_i*x5241;
double x10521 = x10520*x2472;
double x10522 = x10450*x5404;
double x10523 = 24*x10451;
double x10524 = x20*x2615;
double x10525 = x2475*x5150;
double x10526 = 42*p6_b;
double x10527 = 30*x10503;
double x10528 = 30*p7_i_dot;
double x10529 = p6_b*p7_b;
double x10530 = x10529*x5151;
double x10531 = x10441*x5573;
double x10532 = 14*p6_i_dot;
double x10533 = p6_b*p7_i;
double x10534 = p6_i*p7_b;
double x10535 = p7_b*x5785;
double x10536 = x2495*x5278;
double x10537 = p7_b*x4309;
double x10538 = x10457*x5565;
double x10539 = p7_b*x5202;
double x10540 = 12*x10539;
double x10541 = x10540*x1220;
double x10542 = x10450*x5161;
double x10543 = x10542*x5322;
double x10544 = p6_i*x5891;
double x10545 = p7_b*x6424;
double x10546 = x10529*x5161;
double x10547 = p7_b*x599;
double x10548 = p7_i*x599;
double x10549 = p7_i*x5285;
double x10550 = x10549*x5153;
double x10551 = p7_b*x57;
double x10552 = x10551*x5282;
double x10553 = p7_b*x600;
double x10554 = p6_b_dot*p7_b;
double x10555 = p7_b_dot*x5703;
double x10556 = p7_b*x2599;
double x10557 = x10556*x5339;
double x10558 = p7_b_dt*x629;
double x10559 = x10558*x5339;
double x10560 = p7_i*x4391;
double x10561 = x10560*x5342;
double x10562 = x10560*x5345;
double x10563 = x578*x630;
double x10564 = x10563*x5342;
double x10565 = x10563*x5345;
double x10566 = x10462*x158;
double x10567 = x10463*x158;
double x10568 = x10471*x158;
double x10569 = x10473*x158;
double x10570 = L*x10474;
double x10571 = 4*x10570;
double x10572 = x10571*x1220;
double x10573 = x10475*x158;
double x10574 = p7_b*x629;
double x10575 = x10574*x5597;
double x10576 = x10556*x5359;
double x10577 = x10558*x5359;
double x10578 = x10478*x5362;
double x10579 = x10478*x5593;
double x10580 = x10479*x5362;
double x10581 = x10481*x158;
double x10582 = x10574*x5590;
double x10583 = x10484*x5369;
double x10584 = x10574*x5601;
double x10585 = x10461*x3108;
double x10586 = p7_b_dot_dt*x10503;
double x10587 = p7_i_dot*x4370;
double x10588 = pow(p7_b_dot, 2);
double x10589 = p7_b_dot*x4370;
double x10590 = p7_i_dot*x10506;
double x10591 = p7_i_dot*x10503;
double x10592 = p7_b_dot*x10585 + x10586*x5264 + x10586*x5291 + x10587*x5267 + x10587*x5269 - x10588*x5272 - x10588*x5274 + x10588*x5281 - x10588*x5289 - x10589*x5276 - x10590*x5279 - x10591*x5283 - x10591*x5286 + x2480 + x4372;
double x10593 = -x10557 - x10559 - x10561 - x10562 - x10564 - x10565 - x10566 - x10567 + x10568 + x10569 + x10572 + x10573 - x10575 - x10576 - x10577 + x10578 + x10579 + x10580 + x10581 + x10582 + x10583 + x10584 + x10592;
double x10594 = x10461*x70;
double x10595 = p6_b_dot*x10594;
double x10596 = x10176*x10503;
double x10597 = 34*x10158;
double x10598 = 34*x10443;
double x10599 = 17*x2381;
double x10600 = 17*L;
double x10601 = p6_b*p7_b_dot_dt;
double x10602 = p7_b_dot*x2381;
double x10603 = p6_i*x572;
double x10604 = x563*x630;
double x10605 = x10450*x5413;
double x10606 = p6_b*x10461;
double x10607 = p7_b_dot*x10154;
double x10608 = p7_b_dt*x599;
double x10609 = p7_b*x2495;
double x10610 = x578*x600;
double x10611 = p7_i*x4309;
double x10612 = p6_b*x578;
double x10613 = p7_b*x548;
double x10614 = p7_b_dot_dt*x10218;
double x10615 = p6_b_dot_dt*x10503;
double x10616 = p6_i_dot*x4370;
double x10617 = p7_i_dot*x4288;
double x10618 = p7_b_dt*p7_i;
double x10619 = p6_b_dot*x578;
double x10620 = x10283*x1220;
double x10621 = p7_b_dt*x600;
double x10622 = p7_b*x5516;
double x10623 = x4370*x5234;
double x10624 = p6_b_dot*x10623;
double x10625 = x10189*x2479;
double x10626 = x10474*x2374;
double x10627 = p7_b_dot*x5234;
double x10628 = x10627*x4288;
double x10629 = 17*p6_b;
double x10630 = 17*x5210;
double x10631 = x5516*x572;
double x10632 = p6_b*x10631;
double x10633 = x2381*x2505;
double x10634 = x10570*x1167;
double x10635 = x10627*x2412;
double x10636 = p6_b_dot*p7_i;
double x10637 = L*x10194;
double x10638 = p6_i_dot*p7_b;
double x10639 = x10194*x2479;
double x10640 = p7_b_dot*x5853;
double x10641 = p6_i_dot*x10640;
double x10642 = x10480*x2374;
double x10643 = p6_b*x629;
double x10644 = p6_b_dot*p7_b_dot;
double x10645 = x10551*x599;
double x10646 = p7_b*x630;
double x10647 = p7_i*x629;
double x10648 = p6_b_dot*x10503;
double x10649 = x10648*x57;
double x10650 = p6_b*p7_i_dot;
double x10651 = x0*x10650;
double x10652 = p6_i*p7_b_dot;
double x10653 = x10480*x1167;
double x10654 = p6_b*p7_b_dot;
double x10655 = x10503*x5411;
double x10656 = 9*x10506;
double x10657 = 9*x20;
double x10658 = 18*x5150;
double x10659 = x10503*x10657;
double x10660 = 9*p7_i_dot;
double x10661 = 9*x5700;
double x10662 = x10483*x10661 + 9*x10500 + 36*x10555 - x10655*x5168 + x10655*x5178 - x10656*x5172 + x10656*x5175 + x10657*x2615 + x10658*x2475 - x10659*x5189 + x10659*x5198 - x10660*x5698 - x4382;
double x10663 = x10461*x10503;
double x10664 = p7_i_dot*x5897;
double x10665 = x10588*x70;
double x10666 = p7_b_dot*p7_i_dot;
double x10667 = x10666*x362;
double x10668 = -x10474*x10664 - x10480*x10664 + x10586*x5339 + x10586*x5359 + x10587*x5342 + x10587*x5345 - x10588*x5537 - x10588*x5550 - x10589*x5538 + 4*x10663 - x10665*x5543 + x10665*x5545 - x10667*x5547;
double x10669 = p6_b*x2599;
double x10670 = p6_i*x4391;
double x10671 = p7_i_dot*x2412;
double x10672 = 6*x10616;
double x10673 = 6*x10617;
double x10674 = x1261*x600;
double x10675 = x10529*x5996;
double x10676 = x10570*x1220;
double x10677 = p6_i_dot*p7_b_dt;
double x10678 = x10512*x542;
double x10679 = p7_i_dot*x2381;
double x10680 = p6_b*x10477;
double x10681 = p7_b*x10477;
double x10682 = x0*x10478;
double x10683 = x10194*x1220;
double x10684 = x10488 + x10489 + x10490 + x10491 + x10510 - x10519 - x10521 - x10522 - x10523 + x10531 - x10538 - x10541 - x10543 + x2473 + x4368;
double x10685 = 16*x10496;
double x10686 = 16*x10498;
double x10687 = p6_b_dt*p7_i;
double x10688 = p6_i*p7_b_dt;
double x10689 = x10529*x5911;
double x10690 = p7_b_dt*x5241;
double x10691 = x10512*x158;
double x10692 = p6_b_dot*x4370;
double x10693 = p7_i_dot*x10221;
double x10694 = p6_i_dot*x10506;
double x10695 = p7_b_dot*x4288;
double x10696 = p7_b_dot*x2412;
double x10697 = p6_b*x1220;
double x10698 = 8*x10539;
double x10699 = p7_i_dot*x10218;
double x10700 = p6_i_dot*x10503;
double x10701 = x10480*x158;
double x10702 = p7_b_dot_dt*x5290;
double x10703 = 16*x10442;
double x10704 = 8*x10440 + x10441*x5337 + x10441*x5611 - x10450*x5590 + x10450*x5597 - 16*x10451 - x10452*x5613 - x10457*x5334 - x10542*x5336 - x10618*x5615 - x10698*x1220 + x10703*x5168 + x10703*x5178 + x2541 + x4398;
double x10705 = 36*x10496;
double x10706 = 36*x10498;
double x10707 = x10437*x158;
double x10708 = 32*x10670;
double x10709 = 32*x10671;
double x10710 = x10443*x5330;
double x10711 = x10710*x5168;
double x10712 = x10455*x158;
double x10713 = x10448*x158;
double x10714 = x10449*x158;
double x10715 = x10710*x5178;
double x10716 = 8*x10445;
double x10717 = x10716*x323;
double x10718 = x4414*x5168;
double x10719 = 32*x10560;
double x10720 = 32*x10563;
double x10721 = x10529*x6047;
double x10722 = 12*x2479;
double x10723 = p6_b_dot*x5516;
double x10724 = x10472*x158;
double x10725 = x10476*x158;
double x10726 = x10469*x158;
double x10727 = p7_i*x5389;
double x10728 = 18*x10539;
double x10729 = x10643*x5641;
double x10730 = x10574*x5641;
double x10731 = p6_b_dot*p7_i_dot;
double x10732 = p6_i_dot*p7_b_dot;
double x10733 = 16*x10460;
double x10734 = 36*x10442;
double x10735 = p7_b_dot*x5667 - p7_i_dot*x5665 + p7_i_dot*x5666 + 18*x10440 + x10441*x5441 + x10441*x5655 - x10450*x5659 + x10450*x5662 - 36*x10451 - x10452*x5657 - x10457*x5427 + 2*x10500 + x10503*x5461 - x10503*x5466 - x10503*x5660 + x10503*x5661 + x10506*x5419 - x10506*x5460 - x10542*x5429 - x10618*x5658 - x10728*x1220 + x10734*x5168 + x10734*x5178 + x2475*x5271 + x2534 + x2615*x5275 + x4425 - x4426;
double x10736 = p8_i*x5164;
double x10737 = p8_i*x5229;
double x10738 = p8_b*x10737;
double x10739 = p8_b*p8_b_dt;
double x10740 = p8_i*x608;
double x10741 = x10740*x5168;
double x10742 = L*p8_b;
double x10743 = x10742*x5641;
double x10744 = p8_b_dt*x5179;
double x10745 = L*x10744;
double x10746 = x0*x10745;
double x10747 = 16*x2586;
double x10748 = x2617*x5282;
double x10749 = pow(p8_b, 2);
double x10750 = x10749*x5151;
double x10751 = p8_b*x608;
double x10752 = p8_b_dt*x5278;
double x10753 = x10749*x57;
double x10754 = p8_b*x5184;
double x10755 = p8_i*x4;
double x10756 = p8_b*p8_i;
double x10757 = p8_i*x5205;
double x10758 = p8_b*x5396;
double x10759 = p8_i_dot*x5229;
double x10760 = p8_b*x10759;
double x10761 = p8_b_dot*x10737;
double x10762 = p8_b*p8_b_dot_dt;
double x10763 = p8_b_dot*p8_b_dt;
double x10764 = p8_i*x602;
double x10765 = p8_i_dot*x608;
double x10766 = p8_b*x20;
double x10767 = x10766*x5198;
double x10768 = p8_b*x602;
double x10769 = x10768*x5234;
double x10770 = x10766*x5189;
double x10771 = x4436*x5234;
double x10772 = p8_b_dot_dt*x5186;
double x10773 = x5911*x633;
double x10774 = x327*x5150;
double x10775 = 8*x2675;
double x10776 = 8*x5184;
double x10777 = p8_b*p8_i_dot;
double x10778 = p8_b_dot*p8_i;
double x10779 = p8_b_dot*x5202;
double x10780 = x10779*x1268;
double x10781 = p8_b_dot*x5184;
double x10782 = p8_i_dot*x4;
double x10783 = p8_b*p8_b_dot;
double x10784 = x10783*x57;
double x10785 = 8*x634;
double x10786 = p8_b_dot*x2;
double x10787 = x10786*x5287;
double x10788 = x10739*x5553;
double x10789 = x10740*x5298;
double x10790 = x10740*x5556;
double x10791 = 12*x10738;
double x10792 = p7_b*x10737;
double x10793 = p8_b*x10439;
double x10794 = p7_b*p8_b_dt;
double x10795 = p7_b_dt*p8_b;
double x10796 = p7_i*x608;
double x10797 = 12*x10796;
double x10798 = p8_i*x578;
double x10799 = 12*x10798;
double x10800 = p8_i_dot*x5408;
double x10801 = L*x10736;
double x10802 = 96*x10443;
double x10803 = 96*x10742;
double x10804 = p8_b_dot*x70;
double x10805 = 68*x10804;
double x10806 = 48*x2586;
double x10807 = p8_b_dot_dt*x70;
double x10808 = 34*x10807;
double x10809 = x10503*x5641;
double x10810 = 16*x10506;
double x10811 = x10749*x5399;
double x10812 = p8_b_dt*x5394;
double x10813 = p8_b*x5234;
double x10814 = p7_b_dot*x2586;
double x10815 = p7_b_dot_dt*p8_b;
double x10816 = p7_i_dot*x2617;
double x10817 = p8_i*x572;
double x10818 = p7_b_dot*x10737;
double x10819 = p8_b*x10461;
double x10820 = x10751*x5559;
double x10821 = p8_i*x5241;
double x10822 = x10821*x2572;
double x10823 = x10749*x5404;
double x10824 = 24*x10750;
double x10825 = x1276*x5695;
double x10826 = x2555*x8628;
double x10827 = 48*p7_b;
double x10828 = 48*p8_b;
double x10829 = p8_i*x5891;
double x10830 = p8_b_dot*x5695;
double x10831 = 34*x10830;
double x10832 = 34*p8_i_dot;
double x10833 = p7_b*p8_b;
double x10834 = x10833*x5151;
double x10835 = x10739*x5573;
double x10836 = x10503*x20;
double x10837 = p7_b*p8_i;
double x10838 = p7_i*p8_b;
double x10839 = p8_b*x5785;
double x10840 = x2599*x5278;
double x10841 = p8_b*x4391;
double x10842 = x10756*x5565;
double x10843 = p8_b*x5202;
double x10844 = 12*x10843;
double x10845 = x10844*x1268;
double x10846 = x10749*x5161;
double x10847 = x10846*x5322;
double x10848 = x10833*x5161;
double x10849 = p8_b*x629;
double x10850 = p8_i*x629;
double x10851 = p8_i*x5285;
double x10852 = p8_b*x57;
double x10853 = x10852*x5282;
double x10854 = p8_b*x630;
double x10855 = p7_b_dot*p8_b;
double x10856 = p8_b_dot*x5703;
double x10857 = p8_b*x0;
double x10858 = p7_b_dot*x10857;
double x10859 = p8_b*x2675;
double x10860 = x10859*x5339;
double x10861 = p8_b_dot*x2586;
double x10862 = x10861*x5339;
double x10863 = p8_i*x4472;
double x10864 = x10863*x5342;
double x10865 = x10863*x5345;
double x10866 = p8_i_dot*x2617;
double x10867 = x10866*x5342;
double x10868 = x10866*x5345;
double x10869 = x10760*x158;
double x10870 = x10761*x158;
double x10871 = x10769*x158;
double x10872 = x10771*x158;
double x10873 = L*x10772;
double x10874 = 4*x10873;
double x10875 = x10874*x1268;
double x10876 = 4*x2586;
double x10877 = p8_i_dot*x5241;
double x10878 = x10876*x10877;
double x10879 = p8_b*x633;
double x10880 = x10879*x5597;
double x10881 = x10859*x5359;
double x10882 = x10861*x5359;
double x10883 = x10777*x5362;
double x10884 = x10777*x5593;
double x10885 = x10778*x5362;
double x10886 = x10780*x158;
double x10887 = x10879*x5590;
double x10888 = x10783*x5369;
double x10889 = x10879*x5601;
double x10890 = x10759*x3108;
double x10891 = p8_b_dot_dt*x10804;
double x10892 = p8_i_dot*x2575;
double x10893 = pow(p8_b_dot, 2);
double x10894 = p8_b_dot*x2575;
double x10895 = p8_i_dot*x10807;
double x10896 = p8_i_dot*x10804;
double x10897 = p8_b_dot*x5540;
double x10898 = p8_b_dot_dt*x5290;
double x10899 = p8_b_dot*x10890 + x10891*x5264 + x10892*x5267 + x10892*x5269 - x10893*x5272 - x10893*x5274 + x10893*x5281 - x10893*x5289 - x10894*x5276 - x10895*x5279 - x10896*x5283 - x10896*x5286 + x10897*x10898 + x2580 + x4453;
double x10900 = -x10860 - x10862 - x10864 - x10865 - x10867 - x10868 - x10869 - x10870 + x10871 + x10872 + x10875 + x10878 - x10880 - x10881 - x10882 + x10883 + x10884 + x10885 + x10886 + x10887 + x10888 + x10889 + x10899;
double x10901 = x10503*x10759;
double x10902 = p8_b_dot*x10594;
double x10903 = 38*x10443;
double x10904 = 38*x10742;
double x10905 = 19*L;
double x10906 = 19*x2586;
double x10907 = p7_b*p8_b_dot_dt;
double x10908 = p7_b_dt*p8_b_dot;
double x10909 = p7_i*x602;
double x10910 = x593*x634;
double x10911 = x10749*x5413;
double x10912 = p7_b*x10759;
double x10913 = p8_b_dot*x10439;
double x10914 = p8_b*x2599;
double x10915 = p8_i*x4391;
double x10916 = p7_b*x608;
double x10917 = p8_b*x578;
double x10918 = p8_b_dot_dt*x10503;
double x10919 = p7_b_dot_dt*x10804;
double x10920 = p7_i_dot*x2575;
double x10921 = p8_i_dot*x4370;
double x10922 = p8_b_dt*p8_i;
double x10923 = x4446*x5234;
double x10924 = x10570*x1268;
double x10925 = x2601*x5241;
double x10926 = x10627*x2575;
double x10927 = x10474*x2579;
double x10928 = x10772*x2479;
double x10929 = p8_b_dot*x10623;
double x10930 = 19*p7_b;
double x10931 = 19*x5210;
double x10932 = 19*p8_b;
double x10933 = p8_i_dot*x2586;
double x10934 = x10622*x602;
double x10935 = p7_b_dt*x634;
double x10936 = x10873*x1220;
double x10937 = p8_b_dot*x5516;
double x10938 = p7_b_dot*p8_i;
double x10939 = L*x10480;
double x10940 = p7_i_dot*p8_b;
double x10941 = p7_i_dot*x10857;
double x10942 = p8_i_dot*x10640;
double x10943 = x10480*x2579;
double x10944 = p8_b_dot*x5853;
double x10945 = x10779*x2479;
double x10946 = p7_b*x633;
double x10947 = p7_b_dot*p8_b_dot;
double x10948 = x10852*x629;
double x10949 = p8_b*x634;
double x10950 = p8_i*x633;
double x10951 = x5153*x633;
double x10952 = p8_b_dot*x10503;
double x10953 = x10952*x57;
double x10954 = p7_b*p8_i_dot;
double x10955 = x0*x10954;
double x10956 = p7_i*p8_b_dot;
double x10957 = x10779*x1220;
double x10958 = p7_b*p8_b_dot;
double x10959 = x10804*x6387;
double x10960 = 10*x10807;
double x10961 = 10*p8_i_dot;
double x10962 = x10782*x6414 + 10*x10800 + 10*x10825 + 20*x10826 + x10830*x5219 - x10830*x6423 + 40*x10856 - x10959*x5168 + x10959*x5178 - x10960*x5172 + x10960*x5175 - x10961*x5698 - x4463;
double x10963 = p8_i_dot*x5897;
double x10964 = x10893*x70;
double x10965 = p8_b_dot*p8_i_dot;
double x10966 = x10965*x362;
double x10967 = x10759*x10897 - x10772*x10963 - x10779*x10963 + x10891*x5339 + x10891*x5359 + x10892*x5342 + x10892*x5345 - x10893*x5537 - x10893*x5550 - x10894*x5538 - x10964*x5543 + x10964*x5545 - x10966*x5547;
double x10968 = p7_b*x2675;
double x10969 = p7_b_dt*x633;
double x10970 = p7_i*x4472;
double x10971 = x578*x634;
double x10972 = x1261*x630;
double x10973 = 6*x10920;
double x10974 = 6*x10921;
double x10975 = x10833*x5996;
double x10976 = x10873*x1268;
double x10977 = x10933*x5241;
double x10978 = x10813*x572;
double x10979 = p8_b_dot*x578;
double x10980 = x10946*x5521;
double x10981 = x10879*x5521;
double x10982 = x0*x10777;
double x10983 = x10480*x1268;
double x10984 = x10788 + x10789 + x10790 + x10791 + x10811 - x10820 - x10822 - x10823 - x10824 + x10835 - x10842 - x10845 - x10847 + x2573 + x4450;
double x10985 = 16*x10796;
double x10986 = 16*x10798;
double x10987 = p7_b_dt*p8_i;
double x10988 = p7_i*p8_b_dt;
double x10989 = x10833*x5911;
double x10990 = p7_b_dot*x2575;
double x10991 = p8_i_dot*x10506;
double x10992 = p7_i_dot*x10807;
double x10993 = p8_b_dot*x4370;
double x10994 = p8_i_dot*x158;
double x10995 = 8*x10843;
double x10996 = p7_b*x10775;
double x10997 = p8_i_dot*x10503;
double x10998 = p7_i_dot*x10804;
double x10999 = x10779*x158;
double x11000 = 16*x10740;
double x11001 = 8*x10738 + x10739*x5337 + x10739*x5611 - x10749*x5590 + x10749*x5597 - 16*x10750 - x10751*x5613 - x10756*x5334 - x10846*x5336 - x10922*x5615 - x10995*x1268 + x11000*x5168 + x11000*x5178 + x2647 + x4478;
double x11002 = 36*x10796;
double x11003 = 36*x10798;
double x11004 = x10736*x158;
double x11005 = 32*x10970;
double x11006 = 32*x10971;
double x11007 = x10742*x5330;
double x11008 = x11007*x5168;
double x11009 = x10876*x5172;
double x11010 = x10876*x5175;
double x11011 = 4*x10748;
double x11012 = p8_b*x129;
double x11013 = x11007*x5178;
double x11014 = 8*x10744;
double x11015 = x11014*x323;
double x11016 = 12*x10804;
double x11017 = 32*x10863;
double x11018 = 32*x10866;
double x11019 = x10833*x6047;
double x11020 = 12*x2579;
double x11021 = p7_b_dot*x5516;
double x11022 = x11012*x572;
double x11023 = x10770*x158;
double x11024 = x10757*x158;
double x11025 = x10767*x158;
double x11026 = p8_i*x5389;
double x11027 = 18*x10843;
double x11028 = x10946*x5641;
double x11029 = x10879*x5641;
double x11030 = p7_b_dot*p8_i_dot;
double x11031 = p7_i_dot*p8_b_dot;
double x11032 = 16*x10758;
double x11033 = 32*x10857;
double x11034 = x11033*x5161;
double x11035 = 36*x10740;
double x11036 = p8_b_dot*x5667 - p8_i_dot*x5665 + p8_i_dot*x5666 + 18*x10738 + x10739*x5441 + x10739*x5655 - x10749*x5659 + x10749*x5662 - 36*x10750 - x10751*x5657 - x10756*x5427 + 2*x10800 + x10804*x5461 - x10804*x5466 - x10804*x5660 + x10804*x5661 + x10807*x5419 - x10807*x5460 - x10846*x5429 - x10922*x5658 - x11027*x1268 + x11035*x5168 + x11035*x5178 + x1276*x6354 + x2555*x8989 + x2639 + x4504 - x4505;
double x11037 = p9_i*x933;
double x11038 = x6047*x8582;
double x11039 = 18*x1847;
double x11040 = x390*x5276;
double x11041 = x57*x8874;
double x11042 = p9_b_dot*p9_b_dt;
double x11043 = p9_i*x403;
double x11044 = p9_i_dot*x390;
double x11045 = p9_b_dot*x4023;
double x11046 = p9_b_dot_dt*x4046;
double x11047 = p9_b_dot*x7424;
double x11048 = p9_b_dot*x8780;
double x11049 = x57*x8855;
double x11050 = 9*x421;
double x11051 = p8_b*x8570;
double x11052 = p9_b*x10737;
double x11053 = p8_b*p9_b_dt;
double x11054 = p8_b_dt*p9_b;
double x11055 = p8_i*x1896;
double x11056 = p9_i*x608;
double x11057 = x11056*x5178;
double x11058 = x11056*x5168;
double x11059 = 108*x10742;
double x11060 = 108*x8582;
double x11061 = 76*x8594;
double x11062 = 54*x2586;
double x11063 = 54*x1847;
double x11064 = 38*x1842;
double x11065 = x10804*x6047;
double x11066 = 18*x10807;
double x11067 = p8_b_dot*x1847;
double x11068 = p8_b_dot_dt*p9_b;
double x11069 = x634*x933;
double x11070 = p9_i*x602;
double x11071 = x11070*x5168;
double x11072 = p8_b_dot*x8570;
double x11073 = p9_b*x10759;
double x11074 = 54*p8_b;
double x11075 = 54*p9_b;
double x11076 = 38*x8594;
double x11077 = x11076*x20;
double x11078 = 38*p9_i_dot;
double x11079 = p8_b*p9_b;
double x11080 = x11079*x5151;
double x11081 = 18*x10830;
double x11082 = p8_b*p9_i;
double x11083 = p8_i*p9_b;
double x11084 = x2675*x5278;
double x11085 = p9_b*x4472;
double x11086 = 38*x5700;
double x11087 = x11079*x5161;
double x11088 = p9_b*x633;
double x11089 = p9_i*x633;
double x11090 = p9_b*x634;
double x11091 = p8_b_dot*p9_b;
double x11092 = p8_b_dot*x0;
double x11093 = x11092*x5161;
double x11094 = p9_i*x1921;
double x11095 = p8_i*x933;
double x11096 = p8_b_dot*x8714;
double x11097 = x10759*x8594;
double x11098 = 42*x10742;
double x11099 = 42*x8582;
double x11100 = 21*x2586;
double x11101 = 21*x1847;
double x11102 = p9_b_dot*x2586;
double x11103 = p8_i*x403;
double x11104 = x421*x623;
double x11105 = x5413*x8874;
double x11106 = p8_b*x8618;
double x11107 = p9_b_dot*x10737;
double x11108 = p9_b*x2675;
double x11109 = p8_i_dot*x1845;
double x11110 = p9_i*x4472;
double x11111 = p9_b*x608;
double x11112 = p8_b_dot*x1842;
double x11113 = p8_b_dot_dt*x8594;
double x11114 = p8_i_dot*x1840;
double x11115 = p9_i_dot*x2575;
double x11116 = x11043*x158;
double x11117 = x421*x933;
double x11118 = x4517*x5234;
double x11119 = x10873*x1313;
double x11120 = x2677*x5241;
double x11121 = p9_b*x602;
double x11122 = p8_b_dot*x8749;
double x11123 = x10772*x1910;
double x11124 = x2579*x8745;
double x11125 = x2575*x8754;
double x11126 = 21*p8_b;
double x11127 = 21*x5210;
double x11128 = 21*p9_b;
double x11129 = p9_b*x3867;
double x11130 = x10857*x8743;
double x11131 = x2586*x2685;
double x11132 = x1268*x8746;
double x11133 = x2617*x8754;
double x11134 = p8_b_dot*p9_i;
double x11135 = L*x10779;
double x11136 = p8_i_dot*p9_b;
double x11137 = x10779*x1910;
double x11138 = p8_i_dot*x8777;
double x11139 = x2579*x8773;
double x11140 = p8_b*x420;
double x11141 = p8_b_dot*p9_b_dot;
double x11142 = x633*x8762;
double x11143 = p9_i*x420;
double x11144 = p8_b_dot*x8594;
double x11145 = x11144*x57;
double x11146 = p8_b*p9_i_dot;
double x11147 = p9_i_dot*x10857;
double x11148 = p8_i*p9_b_dot;
double x11149 = x1268*x8773;
double x11150 = p8_b*p9_b_dot;
double x11151 = p9_b_dot*x0;
double x11152 = x11151*x5161;
double x11153 = p9_b_dot*x8714;
double x11154 = p9_b_dot*x8749;
double x11155 = p9_i_dot*x5897;
double x11156 = x70*x8860;
double x11157 = p9_b_dot*p9_i_dot;
double x11158 = x11157*x362;
double x11159 = 4*x11153 - 4*x11154 - x11155*x8745 - x11155*x8773 - x11156*x5543 + x11156*x5545 - x11158*x5547 + x5339*x8858 + x5342*x8859 + x5345*x8859 + x5359*x8858 - x5537*x8860 - x5550*x8860;
double x11160 = p8_i*x390;
double x11161 = p8_b*x1857;
double x11162 = p8_i*x3867;
double x11163 = p9_i_dot*x2617;
double x11164 = 6*x11114;
double x11165 = 6*x11115;
double x11166 = x11079*x5996;
double x11167 = p9_i_dot*x2586;
double x11168 = x11140*x5521;
double x11169 = x5521*x8848;
double x11170 = x10779*x1313;
double x11171 = 16*x11160;
double x11172 = x1921*x634;
double x11173 = p8_b_dt*p9_i;
double x11174 = p8_i*p9_b_dt;
double x11175 = x11079*x5911;
double x11176 = p8_b_dot*x1840;
double x11177 = p9_i_dot*x10807;
double x11178 = p8_i_dot*x1842;
double x11179 = p9_b_dot*x2575;
double x11180 = p9_i_dot*x5241;
double x11181 = p9_i_dot*x10804;
double x11182 = p8_i_dot*x8594;
double x11183 = 36*x11160;
double x11184 = 32*x11162;
double x11185 = 32*x11163;
double x11186 = x10764*x3943;
double x11187 = x1896*x634;
double x11188 = 32*x8815;
double x11189 = 32*x8816;
double x11190 = x11079*x6047;
double x11191 = 12*x1910;
double x11192 = x602*x8726;
double x11193 = x11140*x5641;
double x11194 = x5641*x8848;
double x11195 = p8_b_dot*p9_i_dot;
double x11196 = p8_i_dot*p9_b_dot;
double x11197 = q1_b_dt*x114;
double x11198 = q1_b_dot_dt*x102;
double x11199 = 2*x11198;
double x11200 = x74*x86;
double x11201 = -x11198;
double x11202 = 2*x102;
double x11203 = x70*x86;
double x11204 = p1_b_dt*x114;
double x11205 = p1_b_dot_dt*x102;
double x11206 = 4*x11205;
double x11207 = 2*x86;
double x11208 = p1_b_dt*x11207;
double x11209 = -x11205;
double x11210 = p10_b_dt*x114;
double x11211 = p9_b_dt*x114;
double x11212 = p10_b_dot_dt*x102;
double x11213 = 4*x11212;
double x11214 = p9_b_dot_dt*x102;
double x11215 = 2*x11214;
double x11216 = p10_b_dt*x11207;
double x11217 = p9_b_dt*x11207;
double x11218 = -x11214;
double x11219 = p2_b_dt*x114;
double x11220 = 2*x11205;
double x11221 = p2_b_dot_dt*x102;
double x11222 = 4*x11221;
double x11223 = p2_b_dt*x11207;
double x11224 = -x11221;
double x11225 = p3_b_dt*x114;
double x11226 = 2*x11221;
double x11227 = p3_b_dot_dt*x102;
double x11228 = 4*x11227;
double x11229 = p3_b_dt*x11207;
double x11230 = -x11227;
double x11231 = p4_b_dt*x114;
double x11232 = 2*x11227;
double x11233 = p4_b_dot_dt*x102;
double x11234 = 4*x11233;
double x11235 = p4_b_dt*x11207;
double x11236 = -x11233;
double x11237 = p5_b_dt*x114;
double x11238 = 2*x11233;
double x11239 = p5_b_dot_dt*x102;
double x11240 = 4*x11239;
double x11241 = p5_b_dt*x11207;
double x11242 = -x11239;
double x11243 = p6_b_dt*x114;
double x11244 = 2*x11239;
double x11245 = p6_b_dot_dt*x102;
double x11246 = 4*x11245;
double x11247 = p6_b_dt*x11207;
double x11248 = -x11245;
double x11249 = p7_b_dt*x114;
double x11250 = 2*x11245;
double x11251 = p7_b_dot_dt*x102;
double x11252 = 4*x11251;
double x11253 = p7_b_dt*x11207;
double x11254 = -x11251;
double x11255 = p8_b_dt*x114;
double x11256 = 2*x11251;
double x11257 = p8_b_dot_dt*x102;
double x11258 = 4*x11257;
double x11259 = p8_b_dt*x11207;
double x11260 = -x11257;
double x11261 = 2*x11257;
double x11262 = 4*x11214;
double x11263 = q2_b_dt*x114;
double x11264 = 4*x11198;
double x11265 = q2_b_dot_dt*x102;
double x11266 = 2*x11265;
double x11267 = q2_b_dt*x11207;
double x11268 = -x11265;
double x11269 = q3_b_dt*x114;
double x11270 = 4*x11265;
double x11271 = q3_b_dot_dt*x102;
double x11272 = 2*x11271;
double x11273 = q3_b_dt*x11207;
double x11274 = -x11271;
double x11275 = q4_b_dt*x114;
double x11276 = 4*x11271;
double x11277 = q4_b_dot_dt*x102;
double x11278 = 2*x11277;
double x11279 = q4_b_dt*x11207;
double x11280 = -x11277;
double x11281 = q5_b_dt*x114;
double x11282 = 4*x11277;
double x11283 = q5_b_dot_dt*x102;
double x11284 = 2*x11283;
double x11285 = q5_b_dt*x11207;
double x11286 = -x11283;
double x11287 = q6_b_dt*x114;
double x11288 = 4*x11283;
double x11289 = q6_b_dot_dt*x102;
double x11290 = 2*x11289;
double x11291 = q6_b_dt*x11207;
double x11292 = -x11289;
double x11293 = q7_b_dt*x114;
double x11294 = 4*x11289;
double x11295 = q7_b_dot_dt*x102;
double x11296 = 2*x11295;
double x11297 = q7_b_dt*x11207;
double x11298 = -x11295;
double x11299 = q8_b_dt*x114;
double x11300 = 4*x11295;
double x11301 = q8_b_dot_dt*x102;
double x11302 = 2*x11301;
double x11303 = q8_b_dt*x11207;
double x11304 = -x11301;
double x11305 = q9_b_dt*x114;
double x11306 = 4*x11301;
double x11307 = q9_b_dot_dt*x102;
double x11308 = 2*x11307;
double x11309 = q9_b_dt*x11207;
double x11310 = -x11307;
double x11311 = q10_b_dt*x114;
double x11312 = q10_b_dot_dt*x102;
double x11313 = 2*x11312;
double x11314 = 4*x11307;
double x11315 = q10_b_dt*x11207;
double x11316 = x5148*x5202;
double x11317 = theta_dt*x38;
double x11318 = 3*x11317;
double x11319 = theta_dt*x52;
double x11320 = L*x11319;
double x11321 = x5188*x64;
double x11322 = x37*x5214;
double x11323 = x13*x5188;
double x11324 = q1_i_dot*x11323;
double x11325 = L*x11324;
double x11326 = x51*x5214;
double x11327 = L*x11326;
double x11328 = x5*x8;
double x11329 = x11328*x5160;
double x11330 = q1_i*x11329;
double x11331 = x19*x5149;
double x11332 = x11331*x5160;
double x11333 = q1_i*x11332;
double x11334 = x11329*x49;
double x11335 = x11332*x49;
double x11336 = q1_b_dot_dt*x5154;
double x11337 = L*x11336;
double x11338 = q1_b*x11337;
double x11339 = 10*x11338;
double x11340 = x5222*x5244;
double x11341 = x51*x5149;
double x11342 = q1_b*x11341;
double x11343 = x183*x5149;
double x11344 = x127*x5150;
double x11345 = x131*x5150;
double x11346 = q1_b*x5239;
double x11347 = 10*x5186;
double x11348 = x5188*x8;
double x11349 = q1_i_dot*x11348;
double x11350 = q1_b*x11349;
double x11351 = L*x11348;
double x11352 = 5*x11351;
double x11353 = x51*x8675;
double x11354 = q1_b*x11353;
double x11355 = x183*x8675;
double x11356 = x127*x5247;
double x11357 = x131*x5247;
double x11358 = q1_b*x5255;
double x11359 = x13*x5;
double x11360 = x11359*x5160;
double x11361 = x11360*x49;
double x11362 = 5*q1_b;
double x11363 = x11360*x5252;
double x11364 = x49*x5161;
double x11365 = x5161*x5252;
double x11366 = q1_b_dot*x11336;
double x11367 = x11366*x5540;
double x11368 = q1_b_dot*x5540;
double x11369 = x1*x5153;
double x11370 = c*x11369;
double x11371 = x11370*x70;
double x11372 = x2*x5277;
double x11373 = x5280*x5285;
double x11374 = c*x16;
double x11375 = x5214*x57;
double x11376 = x70*x9;
double x11377 = x11376*x5186;
double x11378 = x11367 - x11368*x5238 - x11371*x5270 + x11372 + x11373 + x11374*x5284 + x11375*x5284 + x11377*x5899 - x5277*x7 - x5280*x5505;
double x11379 = x5294*x5996;
double x11380 = x5186*x5295;
double x11381 = x5202*x5302;
double x11382 = 12*x11381;
double x11383 = 12*x5149;
double x11384 = x11383*x5309;
double x11385 = q1_b_dt*x5150;
double x11386 = x11385*x151;
double x11387 = x5309*x8675;
double x11388 = 12*x11387;
double x11389 = 12*x5160;
double x11390 = q1_i*x6;
double x11391 = q1_b_dt*x11390;
double x11392 = x11389*x11391;
double x11393 = q1_b*x11348;
double x11394 = x11393*x151;
double x11395 = x11360*x5318;
double x11396 = x5161*x5318;
double x11397 = x11379 - x11380 - x11382 + x11384 + x11386 - x11388 - x11392 + x11394 + x11395 + x11396;
double x11398 = x5154*x5294;
double x11399 = 16*x11398;
double x11400 = x5186*x5294;
double x11401 = 8*x11381;
double x11402 = x5149*x5309;
double x11403 = q1_i*x11385;
double x11404 = x11391*x5160;
double x11405 = q1_i*x11393;
double x11406 = q1_i*x5335;
double x11407 = x11360*x11406 + x11378 - 8*x11387 + x11399 - 16*x11400 - x11401 + 8*x11402 + 8*x11403 - 8*x11404 + 8*x11405 + x11406*x5161;
double x11408 = 8*x11338;
double x11409 = x5222*x5330;
double x11410 = x11342*x158;
double x11411 = x11343*x158;
double x11412 = x11344*x158;
double x11413 = x11345*x158;
double x11414 = 8*x11346;
double x11415 = x5222*x5332;
double x11416 = x11350*x158;
double x11417 = 4*x11351;
double x11418 = x11417*x5252;
double x11419 = x11354*x158;
double x11420 = x11355*x158;
double x11421 = x11356*x158;
double x11422 = x11357*x158;
double x11423 = L*x5255;
double x11424 = x11423*x5335;
double x11425 = x11361*x5737;
double x11426 = x11363*x158;
double x11427 = x11364*x5737;
double x11428 = x11365*x158;
double x11429 = -x11408 - x11409 - x11410 - x11411 - x11412 - x11413 + x11414 + x11415 - x11416 - x11418 + x11419 + x11420 + x11421 + x11422 + x11424 - x11425 - x11426 - x11427 - x11428;
double x11430 = 12*x11338;
double x11431 = x5222*x5306;
double x11432 = x109*x5149;
double x11433 = x3943*x5186;
double x11434 = 6*x11351;
double x11435 = x109*x8675;
double x11436 = 6*q1_b;
double x11437 = x11376*x51;
double x11438 = x11*x70;
double x11439 = x11438*x51;
double x11440 = c*x22;
double x11441 = x11440*x138;
double x11442 = x57*x8675;
double x11443 = x11442*x138;
double x11444 = x2*x5186;
double x11445 = x11444*x138;
double x11446 = -x11437 - x11439 + x11441 - x11443 + x11445;
double x11447 = L*x11317;
double x11448 = 4*x11447;
double x11449 = x11321*x158;
double x11450 = x11322*x158;
double x11451 = x11333*x158;
double x11452 = x11330*x158;
double x11453 = x11448 - x11449 + x11450 - x11451 + x11452;
double x11454 = x11446 + x11453;
double x11455 = 36*x11398;
double x11456 = q1_i*x5428;
double x11457 = x11360*x11456 - 18*x11381 - 18*x11387 - 36*x11400 + 18*x11402 + 18*x11403 - 18*x11404 + 18*x11405 + x11455 + x11456*x5161;
double x11458 = x5413*x5448;
double x11459 = x210*x9;
double x11460 = L*x11459;
double x11461 = x2*x210;
double x11462 = p1_b*x11461;
double x11463 = x5285*x5614;
double x11464 = p1_i*x11440;
double x11465 = L*x11464;
double x11466 = p1_i*x11374;
double x11467 = -x11371;
double x11468 = x11*x332;
double x11469 = p1_i*x6;
double x11470 = psi_dt*x5491;
double x11471 = x11469*x11470;
double x11472 = x5186*x5502;
double x11473 = p1_i*x11472;
double x11474 = x5186*x9;
double x11475 = L*x11370;
double x11476 = p1_b*x312;
double x11477 = p1_b_dot*x276;
double x11478 = theta_dt*x244;
double x11479 = L*x11478;
double x11480 = x202*x5149;
double x11481 = p1_b*x11480;
double x11482 = x340*x5149;
double x11483 = x281*x5150;
double x11484 = x283*x5150;
double x11485 = x202*x5214;
double x11486 = L*x11485;
double x11487 = p1_i_dot*x11348;
double x11488 = p1_b*x11487;
double x11489 = p1_i_dot*x11323;
double x11490 = L*x11489;
double x11491 = x202*x8675;
double x11492 = p1_b*x11491;
double x11493 = x340*x8675;
double x11494 = x281*x5247;
double x11495 = x283*x5247;
double x11496 = p1_b*x11370;
double x11497 = x11329*x249;
double x11498 = x11360*x5495;
double x11499 = x5161*x5495;
double x11500 = x11360*x5497;
double x11501 = x5161*x5497;
double x11502 = x11332*x249;
double x11503 = x210*x5158;
double x11504 = p1_i*x11323;
double x11505 = x210*x5214;
double x11506 = p1_i*x11332;
double x11507 = p1_i*x11329;
double x11508 = -x11503 + x11504 - x11505 + x11506 - x11507;
double x11509 = p1_b_dot_dt*x5154;
double x11510 = L*x11509;
double x11511 = p1_b*x11510;
double x11512 = 14*x11511;
double x11513 = x5511*x5521;
double x11514 = p1_b*x5518;
double x11515 = 14*x5186;
double x11516 = p1_b*x9192;
double x11517 = 7*x11351;
double x11518 = x11360*x249;
double x11519 = 7*p1_b;
double x11520 = x249*x5161;
double x11521 = x11509*x5531;
double x11522 = 8*x11521;
double x11523 = x5487*x5531;
double x11524 = x5535*x6128;
double x11525 = x11480*x5531;
double x11526 = p1_i_dot*x5247;
double x11527 = p1_i_dot*x11360;
double x11528 = p1_i_dot*x5161;
double x11529 = x11487*x9258 - x11491*x9258 + x11522 - 8*x11523 - x11524 + 4*x11525 - x11526*x9075 + x11527*x9258 + x11528*x9258 + x291*x8989;
double x11530 = x5448*x5996;
double x11531 = x5448*x6741;
double x11532 = x5202*x5454;
double x11533 = 12*x11532;
double x11534 = x11383*x5457;
double x11535 = x299*x5150;
double x11536 = p1_i*x11535;
double x11537 = 12*x8675;
double x11538 = x11537*x5457;
double x11539 = x11469*x5160;
double x11540 = x11539*x299;
double x11541 = x11348*x5464;
double x11542 = 12*x11541;
double x11543 = 12*x5464;
double x11544 = x11360*x11543;
double x11545 = x11543*x5161;
double x11546 = x11530 - x11531 - x11533 + x11534 + x11536 - x11538 - x11540 + x11542 + x11544 + x11545;
double x11547 = 8*x11511;
double x11548 = x5330*x5511;
double x11549 = 8*x11514;
double x11550 = x5332*x5511;
double x11551 = x11481*x158;
double x11552 = x11482*x158;
double x11553 = x11483*x158;
double x11554 = x11484*x158;
double x11555 = 8*x11516;
double x11556 = x11492*x158;
double x11557 = x11493*x158;
double x11558 = x11494*x158;
double x11559 = x11495*x158;
double x11560 = x11488*x158;
double x11561 = x11417*x5497;
double x11562 = x11498*x158;
double x11563 = x11499*x158;
double x11564 = x11500*x158;
double x11565 = x11501*x158;
double x11566 = x5448*x5911;
double x11567 = 8*x11532;
double x11568 = x5149*x5457;
double x11569 = x5150*x5614;
double x11570 = x5457*x8675;
double x11571 = p1_b_dt*x11539;
double x11572 = 8*x5464;
double x11573 = 4*x11521;
double x11574 = x2*x5539;
double x11575 = x5604*x5607;
double x11576 = -x11371*x5535 + x11374*x5606 + x11375*x5606 + x11474*x5606 - 4*x11523 + x11573 + x11574 + x11575 - x5505*x5605 - x5539*x7;
double x11577 = x11360*x11572 + 8*x11541 + x11566 - x11567 + 8*x11568 + 8*x11569 - 8*x11570 - 8*x11571 + x11572*x5161 + x11576 - x5448*x5643;
double x11578 = 4*x11503;
double x11579 = L*x11578;
double x11580 = 24*x11521;
double x11581 = 32*x11511;
double x11582 = x5511*x5641;
double x11583 = 32*x5186;
double x11584 = x11505*x158;
double x11585 = x11504*x158;
double x11586 = 12*x8628;
double x11587 = 12*x5531;
double x11588 = 12*x5247;
double x11589 = x11507*x158;
double x11590 = x11506*x158;
double x11591 = 16*x11351;
double x11592 = 16*p1_b;
double x11593 = x345*x9;
double x11594 = x11*x345;
double x11595 = x11440*x70;
double x11596 = p1_i_dot*x11595;
double x11597 = x5273*x8675;
double x11598 = p1_i_dot*x11597;
double x11599 = x5186*x5288;
double x11600 = p1_i_dot*x11599;
double x11601 = -x11593 - x11594 + x11596 - x11598 + x11600;
double x11602 = x5448*x6047;
double x11603 = 18*x5464;
double x11604 = x11360*x11603 - 18*x11532 + 18*x11541 + 18*x11568 + 18*x11569 - 18*x11570 - 18*x11571 + x11602 + x11603*x5161 - x5448*x7357;
double x11605 = x5330*x5448;
double x11606 = x11503*x154;
double x11607 = 4*x5149;
double x11608 = 4*x11510;
double x11609 = p1_b*x11608;
double x11610 = x5413*x5511;
double x11611 = 4*x11532;
double x11612 = x11505*x154;
double x11613 = x158*x5186;
double x11614 = 4*x11348;
double x11615 = x2*x368;
double x11616 = p1_b*x11615;
double x11617 = x340*x5502;
double x11618 = x281*x5869;
double x11619 = x283*x5869;
double x11620 = x11504*x154;
double x11621 = x11507*x154;
double x11622 = 4*x5464;
double x11623 = x368*x7;
double x11624 = L*x7;
double x11625 = L*x5505;
double x11626 = x11374*x249;
double x11627 = x11506*x154;
double x11628 = p1_i*x11375;
double x11629 = p1_i*x11474;
double x11630 = x11478*x70;
double x11631 = 3*x11630;
double x11632 = x11485*x70;
double x11633 = x11489*x70;
double x11634 = p1_i_dot*x11329;
double x11635 = x11634*x70;
double x11636 = p1_i_dot*x11332;
double x11637 = x11636*x70;
double x11638 = -x11631 - 3*x11632 + 3*x11633 - 3*x11635 + 3*x11637;
double x11639 = 6*x11630;
double x11640 = 6*x11632;
double x11641 = 6*x11633;
double x11642 = 6*x11635;
double x11643 = 6*x11637;
double x11644 = 6*x11503;
double x11645 = x226*x5214;
double x11646 = -L*x11644 - L*x11645 + x11504*x129 + x11506*x129 - x11507*x129;
double x11647 = -x11547 - x11548 + x11549 + x11550 - x11551 - x11552 - x11553 - x11554 + x11555 + x11556 + x11557 + x11558 + x11559 - x11560 - x11561 - x11562 - x11563 - x11564 - x11565;
double x11648 = 4*x11398;
double x11649 = x2*x37;
double x11650 = q1_b*x11649;
double x11651 = q1_b_dt*x5285;
double x11652 = q1_i*x11651;
double x11653 = q1_b_dt*x5505;
double x11654 = q1_i*x11374;
double x11655 = x5214*x5727;
double x11656 = q1_i*x11474;
double x11657 = x37*x9;
double x11658 = L*x11657;
double x11659 = x11*x37;
double x11660 = q1_i*x11440;
double x11661 = -L*x11659 + L*x11660 + q1_i*x11472 - x11390*x11470 - x11658;
double x11662 = x11467 + x11661;
double x11663 = -x11475;
double x11664 = q1_b*x137;
double x11665 = q1_b_dot*x2719;
double x11666 = q1_b*x11370;
double x11667 = -x11317 + x11321 - x11322 - x11330 + x11333;
double x11668 = -x11320 + x11325 - x11327 - x11334 + x11335;
double x11669 = x5306*x5745;
double x11670 = x5306*x5746;
double x11671 = q2_b_dot_dt*x5154;
double x11672 = L*x11671;
double x11673 = 4*x11672;
double x11674 = q1_b*x11673;
double x11675 = x5413*x5816;
double x11676 = 6*x11447;
double x11677 = x5149*x656;
double x11678 = q2_i*x11385;
double x11679 = q1_i*q2_b_dt;
double x11680 = x5202*x5778;
double x11681 = x11321*x129;
double x11682 = x656*x8675;
double x11683 = q2_i*x6;
double x11684 = x11683*x5160;
double x11685 = q1_b_dt*x11684;
double x11686 = x11390*x5160;
double x11687 = 6*q2_b_dt;
double x11688 = x2*x3685;
double x11689 = q1_b*x11688;
double x11690 = x11651*x663;
double x11691 = q1_i*x2727;
double x11692 = x11691*x5285;
double x11693 = x11649*x662;
double x11694 = x109*x5214;
double x11695 = L*x11694;
double x11696 = 6*x11348;
double x11697 = q2_i*x11696;
double x11698 = q1_i*x11696;
double x11699 = x11333*x129;
double x11700 = q1_b*x5924;
double x11701 = x11330*x129;
double x11702 = 6*x11360;
double x11703 = q1_i*x11375;
double x11704 = x11437 + x11439 - x11441 + x11443 - x11445;
double x11705 = x11467 + x11704;
double x11706 = x11376*x646;
double x11707 = x11440*x2797;
double x11708 = x11438*x646;
double x11709 = x11444*x2797;
double x11710 = x11442*x2797;
double x11711 = x11706 - x11707 + x11708 - x11709 + x11710;
double x11712 = theta_dt*x1344;
double x11713 = L*x11712;
double x11714 = 6*x11713;
double x11715 = x5214*x656;
double x11716 = L*x11715;
double x11717 = q2_i*x11323;
double x11718 = x11717*x129;
double x11719 = q2_i*x11329;
double x11720 = x11719*x129;
double x11721 = q2_i*x11332;
double x11722 = x11721*x129;
double x11723 = -x11714 - x11716 + x11718 - x11720 + x11722;
double x11724 = 8*x11398;
double x11725 = x5413*x5745;
double x11726 = x5413*x5746;
double x11727 = q2_b_dt*x5169;
double x11728 = x11727*x120;
double x11729 = q2_b*x11337;
double x11730 = 6*x11729;
double x11731 = q1_b*x2728;
double x11732 = x2719*x662;
double x11733 = q1_b_dot*x2779;
double x11734 = x137*x3726;
double x11735 = x2*x637;
double x11736 = q1_b*x11735;
double x11737 = q2_i*x11651;
double x11738 = x11679*x5285;
double x11739 = q2_b*x11649;
double x11740 = 4*x11337;
double x11741 = q1_b*x11740;
double x11742 = x5222*x5413;
double x11743 = 4*x11381;
double x11744 = L*x11321;
double x11745 = x5149*x646;
double x11746 = x11745*x174;
double x11747 = x2747*x8628;
double x11748 = x2749*x5150;
double x11749 = x11341*x3726;
double x11750 = L*x11322;
double x11751 = L*x11745;
double x11752 = q1_b*x11751;
double x11753 = x2727*x5150;
double x11754 = q1_i*x11753;
double x11755 = L*x5149;
double x11756 = x3699*x5149;
double x11757 = q2_i*x5150;
double x11758 = x11757*x2741;
double x11759 = q1_i_dot*x5150;
double x11760 = L*x11341;
double x11761 = q2_b*x11760;
double x11762 = x637*x7;
double x11763 = x5235*x5502;
double x11764 = x183*x5502;
double x11765 = x127*x5869;
double x11766 = x131*x5869;
double x11767 = q2_i*x11374;
double x11768 = q2_b*x5239;
double x11769 = x646*x8675;
double x11770 = L*x11769;
double x11771 = x11686*x2727;
double x11772 = L*x11333;
double x11773 = L*x8675;
double x11774 = q2_i_dot*x11348;
double x11775 = x11774*x174;
double x11776 = x11349*x3726;
double x11777 = L*x11330;
double x11778 = L*x11774;
double x11779 = x11769*x174;
double x11780 = x2747*x70;
double x11781 = x11780*x5247;
double x11782 = x2749*x5247;
double x11783 = x11353*x3726;
double x11784 = q1_i*x5737;
double x11785 = 3*x11348;
double x11786 = q2_i*x120;
double x11787 = q2_b*x1858;
double x11788 = q2_b_dot*x11371;
double x11789 = x11374*x49;
double x11790 = L*x11374;
double x11791 = q2_b_dot*x11475;
double x11792 = x3699*x8675;
double x11793 = x11684*x2741;
double x11794 = q1_i_dot*x5247;
double x11795 = q2_b*x129;
double x11796 = q1_i_dot*x11360;
double x11797 = x11796*x3726;
double x11798 = q1_i_dot*x5161;
double x11799 = x11798*x3726;
double x11800 = x11360*x1858;
double x11801 = 3*x11360;
double x11802 = q2_b*x49;
double x11803 = x1858*x5161;
double x11804 = 3*x5161;
double x11805 = x5214*x5491;
double x11806 = L*x9;
double x11807 = x11806*x5186;
double x11808 = x11319*x70;
double x11809 = x11324*x70;
double x11810 = x11326*x70;
double x11811 = x11332*x138;
double x11812 = x11329*x138;
double x11813 = -x11808 + x11809 - x11810 + x11811 - x11812;
double x11814 = x5214*x637;
double x11815 = L*x11814;
double x11816 = L*x11717;
double x11817 = L*x11719;
double x11818 = L*x11721;
double x11819 = x11713 + x11815 - x11816 + x11817 - x11818;
double x11820 = x11366*x70;
double x11821 = 8*x11820;
double x11822 = x174*x5238;
double x11823 = x5270*x6128;
double x11824 = 4*x5247;
double x11825 = x11341*x11368 + x11349*x11368 - x11353*x11368 + x11368*x11796 + x11368*x11798 + x11821 - 8*x11822 - x11823 - x11824*x5280 + x5271*x5280;
double x11826 = x5745*x5911;
double x11827 = x5746*x5911;
double x11828 = x5330*x5807;
double x11829 = 8*x11729;
double x11830 = x3733*x5149;
double x11831 = 8*x5149;
double x11832 = x11671*x5540;
double x11833 = q1_b_dot*x11832;
double x11834 = x11336*x5929;
double x11835 = 8*x11672;
double x11836 = q1_b*x11835;
double x11837 = x5330*x5816;
double x11838 = 8*x5830;
double x11839 = q2_i*x11393;
double x11840 = 8*x11348;
double x11841 = 4*x11760;
double x11842 = x3695*x5288;
double x11843 = x11780*x5285;
double x11844 = x2749*x5285;
double x11845 = x2*x5839;
double x11846 = x3687*x5149;
double x11847 = x3733*x8675;
double x11848 = 8*q2_b_dt;
double x11849 = x5335*x5852;
double x11850 = q2_i*x5335;
double x11851 = 8*x5784;
double x11852 = x11349*x158;
double x11853 = x11769*x158;
double x11854 = q1_b_dt*x5247;
double x11855 = x3687*x8675;
double x11856 = x5255*x5929;
double x11857 = x11774*x158;
double x11858 = x11353*x158;
double x11859 = 8*q2_b;
double x11860 = x11360*x158;
double x11861 = 4*x11361;
double x11862 = 4*x11364;
double x11863 = q2_i_dot*x11360;
double x11864 = x11863*x158;
double x11865 = q2_i_dot*x5161;
double x11866 = x11865*x158;
double x11867 = q2_b*x11835;
double x11868 = x5330*x5934;
double x11869 = q2_b*x11745;
double x11870 = x11869*x158;
double x11871 = x3720*x5149;
double x11872 = x11871*x158;
double x11873 = q2_i*x2727;
double x11874 = x11873*x5271;
double x11875 = x5271*x5952;
double x11876 = q2_b*x11838;
double x11877 = x5332*x5934;
double x11878 = q2_b*x11774;
double x11879 = x11878*x158;
double x11880 = x11417*x5960;
double x11881 = q2_b*x11769;
double x11882 = x11881*x158;
double x11883 = x3720*x8675;
double x11884 = x11883*x158;
double x11885 = x11684*x2727;
double x11886 = 4*x11885;
double x11887 = x2807*x5247;
double x11888 = x11887*x2743;
double x11889 = x11859*x5852;
double x11890 = x11360*x5958;
double x11891 = x11890*x158;
double x11892 = x11360*x5960;
double x11893 = x11892*x158;
double x11894 = x5161*x5958;
double x11895 = x11894*x158;
double x11896 = x5161*x5960;
double x11897 = x11896*x158;
double x11898 = q2_b_dot*x11832;
double x11899 = x5884*x646;
double x11900 = x5285*x5973;
double x11901 = -x11371*x5971 + x11374*x5974 + x11375*x5974 + x11474*x5974 + x11898 + x11899 + x11900 - x5505*x5973 - x5829*x5929 - x5972*x7;
double x11902 = -x11867 - x11868 - x11870 - x11872 - x11874 - x11875 + x11876 + x11877 - x11879 - x11880 + x11882 + x11884 + x11886 + x11888 + x11889 - x11891 - x11893 - x11895 - x11897 + x11901;
double x11903 = x5911*x5979;
double x11904 = x5202*x5982;
double x11905 = 8*x11904;
double x11906 = q2_b_dt*q2_i;
double x11907 = 8*x5984;
double x11908 = q2_b*x11830 - q2_b*x11847 + x11360*x11907 - x11684*x11848 + x11840*x5984 + x11903 - x11905 + x11906*x5536 + x11907*x5161 - x5643*x5979;
double x11909 = x5745*x5996;
double x11910 = x5746*x5996;
double x11911 = x5521*x5807;
double x11912 = 14*x11729;
double x11913 = x3706*x5149;
double x11914 = 10*x11672;
double x11915 = q2_b*x11914;
double x11916 = x5244*x5934;
double x11917 = x11671*x174;
double x11918 = 6*x11917;
double x11919 = x11336*x3726;
double x11920 = 6*x11919;
double x11921 = q1_b*x11914;
double x11922 = x5244*x5816;
double x11923 = 14*x11338;
double x11924 = x5222*x5521;
double x11925 = 10*x5830;
double x11926 = x174*x5829;
double x11927 = x3726*x5238;
double x11928 = q2_i*x11753;
double x11929 = 5*x5150;
double x11930 = x3706*x8675;
double x11931 = q1_b_dt*x11683;
double x11932 = 14*x11423;
double x11933 = 12*x5782;
double x11934 = x5224*x5851;
double x11935 = q2_b*x286;
double x11936 = q1_b*x154;
double x11937 = x5247*x5952;
double x11938 = x11360*x286;
double x11939 = 7*q2_b;
double x11940 = x286*x5161;
double x11941 = x11360*x154;
double x11942 = x154*x5161;
double x11943 = 7*q1_b;
double x11944 = x5979*x5996;
double x11945 = x5979*x6741;
double x11946 = 12*x11904;
double x11947 = q2_b*x11913;
double x11948 = x11757*x2788;
double x11949 = q2_b*x11930;
double x11950 = x11684*x2788;
double x11951 = 12*x11348;
double x11952 = x11951*x5984;
double x11953 = 12*x5984;
double x11954 = x11360*x11953;
double x11955 = x11953*x5161;
double x11956 = x11944 - x11945 - x11946 + x11947 + x11948 - x11949 - x11950 + x11952 + x11954 + x11955;
double x11957 = x5745*x6047;
double x11958 = x5746*x6047;
double x11959 = x5641*x5807;
double x11960 = 32*x11729;
double x11961 = x3749*x5149;
double x11962 = 18*x5149;
double x11963 = 12*x11672;
double x11964 = q2_b*x11963;
double x11965 = x5306*x5934;
double x11966 = q1_b*x11963;
double x11967 = x5306*x5816;
double x11968 = 12*x11917;
double x11969 = 12*x11919;
double x11970 = 24*x11820;
double x11971 = 32*x11338;
double x11972 = x5222*x5641;
double x11973 = 18*x11348;
double x11974 = 12*x5830;
double x11975 = 12*x174;
double x11976 = x3749*x8675;
double x11977 = 18*x8675;
double x11978 = 32*x11423;
double x11979 = q2_i*x5428;
double x11980 = 18*x5784;
double x11981 = q2_b*x327;
double x11982 = x3943*x5851;
double x11983 = 12*x3726;
double x11984 = x11983*x5255;
double x11985 = q1_b*x129;
double x11986 = x11360*x327;
double x11987 = 16*q2_b;
double x11988 = x11360*x129;
double x11989 = 6*x2797;
double x11990 = q1_b_dot*x11989;
double x11991 = -x11448 + x11449 - x11450 + x11451 - x11452;
double x11992 = 4*x11713;
double x11993 = x11717*x158;
double x11994 = x11814*x158;
double x11995 = x11721*x158;
double x11996 = x11719*x158;
double x11997 = x11992 - x11993 + x11994 - x11995 + x11996;
double x11998 = x5979*x6047;
double x11999 = 18*x5984;
double x12000 = -x11706 + x11707 - x11708 + x11709 - x11710;
double x12001 = q2_b*x11961 - q2_b*x11976 + x10658*x11906 + x11360*x11999 - x11684*x6045 - 18*x11904 + x11973*x5984 + x11998 + x11999*x5161 + x12000 - x5979*x7357;
double x12002 = -x6750;
double x12003 = x5413*x5979;
double x12004 = q2_b*x11735;
double x12005 = x11906*x5285;
double x12006 = -x11992 + x11993 - x11994 + x11995 - x11996;
double x12007 = -x5365;
double x12008 = x57*x6073;
double x12009 = q2_b_dot*x2746;
double x12010 = q2_b*x11370;
double x12011 = -x11712 + x11717 - x11719 + x11721 - x11814;
double x12012 = x3685*x9;
double x12013 = x11*x3685;
double x12014 = x11440*x663;
double x12015 = x11442*x663;
double x12016 = x11444*x663;
double x12017 = -x12012 - x12013 + x12014 - x12015 + x12016;
double x12018 = x5306*x6089;
double x12019 = x5306*x6090;
double x12020 = theta_dt*x1397;
double x12021 = L*x12020;
double x12022 = 12*x12021;
double x12023 = q3_b_dot_dt*x5154;
double x12024 = L*x12023;
double x12025 = 4*x12024;
double x12026 = q2_b*x12025;
double x12027 = x5413*x6104;
double x12028 = x5149*x685;
double x12029 = q2_i*q3_b_dt;
double x12030 = theta_dt*x1351;
double x12031 = x12030*x70;
double x12032 = 6*x12031;
double x12033 = 12*x11713;
double x12034 = x5214*x666;
double x12035 = x5202*x6117;
double x12036 = q2_i_dot*x11323;
double x12037 = x12036*x70;
double x12038 = 6*x12037;
double x12039 = x685*x8675;
double x12040 = q3_i*x6;
double x12041 = x12040*x5160;
double x12042 = q3_b_dt*x11684;
double x12043 = x2*x3768;
double x12044 = q2_b*x12043;
double x12045 = x5285*x6131;
double x12046 = q2_i*x2839;
double x12047 = x12046*x5285;
double x12048 = x11735*x691;
double x12049 = q3_i*x11696;
double x12050 = x5214*x646;
double x12051 = x12050*x70;
double x12052 = 6*x12051;
double x12053 = q3_i*x11323;
double x12054 = q3_i*x11329;
double x12055 = x11332*x11989;
double x12056 = q2_b*x6236;
double x12057 = x11329*x11989;
double x12058 = q3_i*x11332;
double x12059 = x5214*x6081;
double x12060 = theta_dt*x1404;
double x12061 = x12060*x70;
double x12062 = 4*x12061;
double x12063 = q3_i_dot*x11323;
double x12064 = x5214*x675;
double x12065 = q3_i_dot*x11332;
double x12066 = q3_i_dot*x11329;
double x12067 = x12062 - x12063*x5540 + x12064*x5540 - x12065*x5540 + x12066*x5540;
double x12068 = x5330*x5979;
double x12069 = x5413*x6089;
double x12070 = x5413*x6090;
double x12071 = q3_b_dt*x5169;
double x12072 = x12071*x662;
double x12073 = q3_b*x11672;
double x12074 = 6*x12073;
double x12075 = q2_b*x5149;
double x12076 = q2_b*x2840;
double x12077 = x2746*x691;
double x12078 = q2_b_dot*x2891;
double x12079 = q3_b_dot*x2779;
double x12080 = x2*x666;
double x12081 = q2_b*x12080;
double x12082 = x5285*x6224;
double x12083 = x12029*x5285;
double x12084 = q3_b*x11735;
double x12085 = q2_b*x11673;
double x12086 = x5413*x5934;
double x12087 = 4*x11904;
double x12088 = x5149*x675;
double x12089 = x12088*x3726;
double x12090 = q3_i_dot*x5150;
double x12091 = x12090*x2738;
double x12092 = x2856*x5150;
double x12093 = q2_i_dot*x12092;
double x12094 = x11745*x3811;
double x12095 = L*x12088;
double x12096 = q2_b*x12095;
double x12097 = x12090*x2743;
double x12098 = x11757*x2839;
double x12099 = x3785*x5149;
double x12100 = q3_i*x11753;
double x12101 = q3_b_dt*x5150;
double x12102 = q3_b*x11751;
double x12103 = x666*x7;
double x12104 = q2_b*x11688;
double x12105 = x3720*x5502;
double x12106 = x11873*x5285;
double x12107 = x5285*x5952;
double x12108 = q3_i*x11374;
double x12109 = q2_b*x8675;
double x12110 = q3_b*x5830;
double x12111 = x675*x8675;
double x12112 = L*x12111;
double x12113 = x5247*x6131;
double x12114 = x11684*x2839;
double x12115 = q3_i_dot*x11348;
double x12116 = x12115*x3726;
double x12117 = x11774*x3811;
double x12118 = L*x12115;
double x12119 = x12111*x3726;
double x12120 = x5247*x6230;
double x12121 = x5247*x6231;
double x12122 = x11769*x3811;
double x12123 = 4*x5984;
double x12124 = q3_i*x662;
double x12125 = q3_b*x1858;
double x12126 = x3685*x7;
double x12127 = x11374*x663;
double x12128 = q3_b_dot*x11475;
double x12129 = x3785*x8675;
double x12130 = x12041*x2727;
double x12131 = q3_b_dt*x5247;
double x12132 = q3_b*x129;
double x12133 = q3_i_dot*x11360;
double x12134 = x12133*x3726;
double x12135 = q3_i_dot*x5161;
double x12136 = x12135*x3726;
double x12137 = q3_b*x663;
double x12138 = q2_i*x11375;
double x12139 = q2_i*x11474;
double x12140 = x12064*x70;
double x12141 = x12063*x70;
double x12142 = x11329*x6167;
double x12143 = x11332*x6167;
double x12144 = x12061 + x12140 - x12141 + x12142 - x12143;
double x12145 = -L*x12034 + L*x12053 - L*x12054 + L*x12058 - x12021 + x12144;
double x12146 = x11671*x3726;
double x12147 = 8*x12146;
double x12148 = x3726*x5829;
double x12149 = x5971*x6128;
double x12150 = 4*x5974;
double x12151 = x11360*x12150 + x11745*x5929 - x11769*x5929 + x11774*x5929 - x11887*x2738 + x12147 - 8*x12148 - x12149 + x12150*x5161 + x5271*x5973;
double x12152 = x5911*x6089;
double x12153 = x5911*x6090;
double x12154 = x5330*x6218;
double x12155 = q3_b*x11835;
double x12156 = x12023*x5929;
double x12157 = q3_b_dot*x11832;
double x12158 = 8*x12024;
double x12159 = q2_b*x12158;
double x12160 = x5330*x6104;
double x12161 = 8*x6172;
double x12162 = q3_i*x11840;
double x12163 = 4*x11751;
double x12164 = x5884*x675;
double x12165 = x5285*x6230;
double x12166 = x5285*x6231;
double x12167 = x646*x6504;
double x12168 = x3770*x5149;
double x12169 = x11859*x6189;
double x12170 = 8*x11360;
double x12171 = 8*x5161;
double x12172 = x11351*x2910;
double x12173 = x12111*x158;
double x12174 = x2968*x5247;
double x12175 = x3770*x8675;
double x12176 = x5851*x6520;
double x12177 = x12115*x158;
double x12178 = 8*q3_b;
double x12179 = x12133*x158;
double x12180 = x12135*x158;
double x12181 = q3_b*x12158;
double x12182 = x5330*x6244;
double x12183 = q3_b*x12088;
double x12184 = x12183*x158;
double x12185 = x3805*x5149;
double x12186 = x12185*x158;
double x12187 = x2910*x5150;
double x12188 = x12187*x2839;
double x12189 = x2883*x5150;
double x12190 = x12189*x158;
double x12191 = q3_b*x12161;
double x12192 = x5332*x6244;
double x12193 = q3_b*x12115;
double x12194 = x12193*x158;
double x12195 = q3_b_dot*x12172;
double x12196 = q3_b*x12111;
double x12197 = x12196*x158;
double x12198 = x3805*x8675;
double x12199 = x12198*x158;
double x12200 = x12041*x3017;
double x12201 = x2883*x5247;
double x12202 = x12201*x158;
double x12203 = x12178*x6189;
double x12204 = x11360*x6268;
double x12205 = x12204*x158;
double x12206 = x11360*x6270;
double x12207 = x12206*x158;
double x12208 = x5161*x6268;
double x12209 = x12208*x158;
double x12210 = x5161*x6270;
double x12211 = x12210*x158;
double x12212 = x12023*x6520;
double x12213 = x6504*x675;
double x12214 = x5285*x6284;
double x12215 = -x11371*x6282 + x11374*x6285 + x11375*x6285 + x11377*x6523 + x12212 + x12213 + x12214 - x5505*x6284 - x6171*x6520 - x6283*x7;
double x12216 = -x12181 - x12182 - x12184 - x12186 - x12188 - x12190 + x12191 + x12192 - x12194 - x12195 + x12197 + x12199 + x12200 + x12202 + x12203 - x12205 - x12207 - x12209 - x12211 + x12215;
double x12217 = x5911*x6290;
double x12218 = x5202*x6293;
double x12219 = 8*x12218;
double x12220 = q3_b*x5149;
double x12221 = q3_b*x8675;
double x12222 = q3_b_dt*x12041;
double x12223 = q3_b*x12162 + x12170*x6296 + x12171*x6296 + x12217 - x12219 + x12220*x3818 - x12221*x3818 - 8*x12222 + x5536*x6295 - x5643*x6290;
double x12224 = x5996*x6089;
double x12225 = x5996*x6090;
double x12226 = x5521*x6218;
double x12227 = 14*x12073;
double x12228 = q3_i*x5150;
double x12229 = 10*x12024;
double x12230 = q3_b*x12229;
double x12231 = x5244*x6244;
double x12232 = x12023*x3726;
double x12233 = 6*x12232;
double x12234 = x11671*x3811;
double x12235 = 6*x12234;
double x12236 = q2_b*x12229;
double x12237 = x5244*x6104;
double x12238 = q2_b*x11672;
double x12239 = 14*x12238;
double x12240 = x5521*x5934;
double x12241 = q2_b*x5830;
double x12242 = q3_i*x11951;
double x12243 = 10*x6172;
double x12244 = x3726*x6171;
double x12245 = x3811*x5829;
double x12246 = 5*x2839;
double x12247 = 14*x5852;
double x12248 = 12*x11360;
double x12249 = 12*x5161;
double x12250 = x5224*x6188;
double x12251 = q3_b*x286;
double x12252 = 6*x3811;
double x12253 = q2_b*x154;
double x12254 = q3_b*x2887;
double x12255 = q2_b*x2887;
double x12256 = x5996*x6290;
double x12257 = x6290*x6741;
double x12258 = 12*x12218;
double x12259 = x12220*x3792;
double x12260 = x12228*x6316;
double x12261 = x12221*x3792;
double x12262 = x12041*x6316;
double x12263 = q3_b*x12242;
double x12264 = x12248*x6296;
double x12265 = x12249*x6296;
double x12266 = x12256 - x12257 - x12258 + x12259 + x12260 - x12261 - x12262 + x12263 + x12264 + x12265;
double x12267 = x6047*x6089;
double x12268 = x6047*x6090;
double x12269 = x5641*x6218;
double x12270 = 32*x12073;
double x12271 = 12*x12024;
double x12272 = q3_b*x12271;
double x12273 = x5306*x6244;
double x12274 = q2_b*x12271;
double x12275 = x5306*x6104;
double x12276 = 12*x12232;
double x12277 = 12*x12234;
double x12278 = 24*x12146;
double x12279 = 32*x12238;
double x12280 = x5641*x5934;
double x12281 = q3_i*x11973;
double x12282 = 12*x6172;
double x12283 = q3_i*x2839;
double x12284 = 16*x5150;
double x12285 = 32*x5852;
double x12286 = 18*x11360;
double x12287 = 18*x5161;
double x12288 = q3_b*x327;
double x12289 = x3943*x6188;
double x12290 = 12*x3811;
double x12291 = x12290*x5851;
double x12292 = q2_i_dot*x2931;
double x12293 = q3_i_dot*x5247;
double x12294 = 6*x2839;
double x12295 = q3_b*x2930;
double x12296 = q2_b*x2930;
double x12297 = 4*x12021;
double x12298 = x12053*x158;
double x12299 = x12034*x158;
double x12300 = x12058*x158;
double x12301 = x12054*x158;
double x12302 = x12297 - x12298 + x12299 - x12300 + x12301;
double x12303 = x6047*x6290;
double x12304 = x11376*x675;
double x12305 = x11*x6280;
double x12306 = x11440*x6167;
double x12307 = x11442*x6167;
double x12308 = x11444*x6167;
double x12309 = -x12304 - x12305 + x12306 - x12307 + x12308;
double x12310 = q3_b*x12281 + x10658*x6295 - 18*x12218 + x12220*x3836 - x12221*x3836 - 18*x12222 + x12286*x6296 + x12287*x6296 + x12303 + x12309 - x6290*x7357;
double x12311 = -x7063;
double x12312 = x5413*x6290;
double x12313 = q3_b*x12080;
double x12314 = x5285*x6295;
double x12315 = 6*x12021;
double x12316 = x5214*x685;
double x12317 = L*x12316;
double x12318 = x12053*x129;
double x12319 = x12054*x129;
double x12320 = x12058*x129;
double x12321 = -x12315 - x12317 + x12318 - x12319 + x12320;
double x12322 = -x5403;
double x12323 = x57*x6362;
double x12324 = q3_b_dot*x2848;
double x12325 = q3_b*x11370;
double x12326 = -x12020 - x12034 + x12053 - x12054 + x12058;
double x12327 = L*x12060;
double x12328 = 3*x12327;
double x12329 = -x11329*x6372 + x11332*x6372 + x12063*x1858 - x12064*x1858 - x12328;
double x12330 = x5306*x6381;
double x12331 = x5306*x6382;
double x12332 = theta_dt*x1448;
double x12333 = 18*x12332;
double x12334 = q4_b_dot_dt*x5154;
double x12335 = L*x12334;
double x12336 = 4*x12335;
double x12337 = q3_b*x12336;
double x12338 = x5413*x6454;
double x12339 = x5149*x714;
double x12340 = theta_dt*x1456;
double x12341 = x12340*x70;
double x12342 = 6*x12341;
double x12343 = 10*x12061;
double x12344 = 18*x12021;
double x12345 = x5214*x695;
double x12346 = x5202*x6409;
double x12347 = q4_i_dot*x11323;
double x12348 = x12347*x70;
double x12349 = 6*x12348;
double x12350 = x714*x8675;
double x12351 = q4_i*x6;
double x12352 = x12351*x5160;
double x12353 = q3_b_dt*x12352;
double x12354 = 6*q4_b_dt;
double x12355 = x2*x4570;
double x12356 = q3_b*x12355;
double x12357 = q3_b_dt*x721;
double x12358 = x12357*x5285;
double x12359 = q3_i*x2943;
double x12360 = x12359*x5285;
double x12361 = x12080*x720;
double x12362 = q4_i*x11696;
double x12363 = x5214*x704;
double x12364 = x12363*x70;
double x12365 = 6*x12364;
double x12366 = q4_i*x11323;
double x12367 = q4_i*x11329;
double x12368 = q4_i_dot*x11332;
double x12369 = x12368*x70;
double x12370 = 6*x12369;
double x12371 = q3_b*x6549;
double x12372 = q4_i_dot*x11329;
double x12373 = x12372*x70;
double x12374 = 6*x12373;
double x12375 = q4_i*x11332;
double x12376 = x5214*x6374;
double x12377 = x5330*x6290;
double x12378 = x5413*x6381;
double x12379 = x5413*x6382;
double x12380 = q4_b_dt*x5169;
double x12381 = x12380*x691;
double x12382 = q4_b*x12024;
double x12383 = 6*x12382;
double x12384 = q3_b*x2944;
double x12385 = x2848*x720;
double x12386 = q3_b_dot*x2998;
double x12387 = q4_b_dot*x2891;
double x12388 = x2*x695;
double x12389 = q3_b*x12388;
double x12390 = x5285*x6534;
double x12391 = x5285*x6535;
double x12392 = q4_b*x12080;
double x12393 = 3*x12021;
double x12394 = q3_b*x12025;
double x12395 = x5413*x6244;
double x12396 = 4*x12218;
double x12397 = x5149*x704;
double x12398 = x12397*x3811;
double x12399 = q4_i_dot*x12092;
double x12400 = x12090*x2958;
double x12401 = x12088*x4616;
double x12402 = L*x12397;
double x12403 = q3_b*x12402;
double x12404 = x12228*x2943;
double x12405 = x12053*x1858;
double x12406 = x4590*x5149;
double x12407 = q4_i*x5150;
double x12408 = q4_b*x12095;
double x12409 = x695*x7;
double x12410 = q3_b*x12043;
double x12411 = x3805*x5502;
double x12412 = x12283*x5285;
double x12413 = x2883*x5869;
double x12414 = q4_i*x11374;
double x12415 = x12034*x1858;
double x12416 = q4_b*x6172;
double x12417 = x704*x8675;
double x12418 = L*x12417;
double x12419 = x12041*x2943;
double x12420 = q4_i_dot*x11348;
double x12421 = x12420*x3811;
double x12422 = x12115*x4616;
double x12423 = L*x12420;
double x12424 = x12417*x3811;
double x12425 = x5247*x6541;
double x12426 = x5247*x6542;
double x12427 = x12111*x4616;
double x12428 = q4_i*x691;
double x12429 = q4_b*x1858;
double x12430 = x12058*x1858;
double x12431 = x3768*x7;
double x12432 = q4_b_dot*x11371;
double x12433 = x11374*x692;
double x12434 = q4_b_dot*x11475;
double x12435 = x5214*x6476;
double x12436 = x12054*x1858;
double x12437 = x4590*x8675;
double x12438 = q4_b*x129;
double x12439 = q4_i_dot*x11360;
double x12440 = x12439*x3811;
double x12441 = x12133*x4616;
double x12442 = q4_i_dot*x5161;
double x12443 = x12442*x3811;
double x12444 = x12135*x4616;
double x12445 = q3_b_dot*x1858;
double x12446 = q4_i*x12445;
double x12447 = q4_b*x692;
double x12448 = q3_i*x11375;
double x12449 = q3_i*x11474;
double x12450 = x11376*x704;
double x12451 = q4_i_dot*x11595;
double x12452 = x11*x6593;
double x12453 = q4_i_dot*x11599;
double x12454 = q4_i_dot*x11597;
double x12455 = x12450 - x12451 + x12452 - x12453 + x12454;
double x12456 = L*x12332;
double x12457 = -x12345*x1858 + x12366*x1858 - x12367*x1858 + x12375*x1858 - 3*x12456;
double x12458 = x12023*x3811;
double x12459 = 8*x12458;
double x12460 = x3811*x6171;
double x12461 = x6128*x6282;
double x12462 = x12088*x6520 - x12111*x6520 + x12115*x6520 + x12133*x6520 + x12135*x6520 - x12174*x2856 + x12459 - 8*x12460 - x12461 + x5271*x6284;
double x12463 = x5911*x6381;
double x12464 = x5911*x6382;
double x12465 = x5330*x6445;
double x12466 = q4_b*x12158;
double x12467 = q4_b*x5149;
double x12468 = x12334*x6520;
double x12469 = x12023*x6836;
double x12470 = 8*x12335;
double x12471 = q3_b*x12470;
double x12472 = x5330*x6454;
double x12473 = 8*x6467;
double x12474 = q4_i*x11840;
double x12475 = q4_i*x5271;
double x12476 = 4*x12095;
double x12477 = x6504*x704;
double x12478 = x5285*x6541;
double x12479 = x5285*x6542;
double x12480 = x675*x6828;
double x12481 = x4572*x5149;
double x12482 = 8*q4_b_dt;
double x12483 = q4_b*x8675;
double x12484 = x12178*x6485;
double x12485 = x12417*x158;
double x12486 = x4572*x8675;
double x12487 = x6188*x6836;
double x12488 = x12420*x158;
double x12489 = 8*q4_b;
double x12490 = x12439*x158;
double x12491 = x12442*x158;
double x12492 = q4_b*x12470;
double x12493 = x5330*x6557;
double x12494 = q4_b*x12397;
double x12495 = x12494*x158;
double x12496 = x4610*x5149;
double x12497 = x12496*x158;
double x12498 = q4_i*x2943;
double x12499 = x12498*x5271;
double x12500 = x5271*x6575;
double x12501 = q4_b*x12473;
double x12502 = x5332*x6557;
double x12503 = q4_b*x12420;
double x12504 = x12503*x158;
double x12505 = x11417*x6583;
double x12506 = q4_b*x12417;
double x12507 = x12506*x158;
double x12508 = x4610*x8675;
double x12509 = x12508*x158;
double x12510 = x12352*x3021;
double x12511 = x3023*x5247;
double x12512 = x12511*x2964;
double x12513 = x12489*x6485;
double x12514 = x11360*x6581;
double x12515 = x12514*x158;
double x12516 = x11360*x6583;
double x12517 = x12516*x158;
double x12518 = x5161*x6581;
double x12519 = x12518*x158;
double x12520 = x5161*x6583;
double x12521 = x12520*x158;
double x12522 = x12334*x6836;
double x12523 = x6828*x704;
double x12524 = x2958*x6553;
double x12525 = -x11371*x6595 + x11374*x6598 + x11375*x6598 + x11377*x6839 + x12522 + x12523 + x12524 - x5505*x6597 - x6466*x6836 - x6596*x7;
double x12526 = -x12492 - x12493 - x12495 - x12497 - x12499 - x12500 + x12501 + x12502 - x12504 - x12505 + x12507 + x12509 + x12510 + x12512 + x12513 - x12515 - x12517 - x12519 - x12521 + x12525;
double x12527 = x5911*x6603;
double x12528 = x5202*x6606;
double x12529 = 8*x12528;
double x12530 = q4_b*x12474 + x12170*x6609 + x12171*x6609 - x12352*x12482 + x12467*x4623 - x12483*x4623 + x12527 - x12529 + x5536*x6608 - x5643*x6603;
double x12531 = x5996*x6381;
double x12532 = x5996*x6382;
double x12533 = x5521*x6445;
double x12534 = 14*x12382;
double x12535 = 10*x12335;
double x12536 = q4_b*x12535;
double x12537 = x5244*x6557;
double x12538 = x12334*x3811;
double x12539 = 6*x12538;
double x12540 = x12023*x4616;
double x12541 = 6*x12540;
double x12542 = q3_b*x12535;
double x12543 = x5244*x6454;
double x12544 = q3_b*x12024;
double x12545 = 14*x12544;
double x12546 = x5521*x6244;
double x12547 = q3_b*x6172;
double x12548 = q4_i*x11951;
double x12549 = 10*x6467;
double x12550 = x3811*x6466;
double x12551 = x4616*x6171;
double x12552 = x12407*x2943;
double x12553 = q4_i_dot*x5150;
double x12554 = 14*x6189;
double x12555 = x5224*x6484;
double x12556 = q4_b*x286;
double x12557 = q3_b*x154;
double x12558 = x12352*x2943;
double x12559 = q4_i_dot*x5247;
double x12560 = x11360*x692;
double x12561 = 7*q4_b;
double x12562 = x5161*x692;
double x12563 = 7*q3_b;
double x12564 = x5996*x6603;
double x12565 = x6603*x6741;
double x12566 = 12*x12528;
double x12567 = x12467*x4597;
double x12568 = x12407*x2978;
double x12569 = x12483*x4597;
double x12570 = x12352*x2978;
double x12571 = q4_b*x12548;
double x12572 = x12248*x6609;
double x12573 = x12249*x6609;
double x12574 = x12564 - x12565 - x12566 + x12567 + x12568 - x12569 - x12570 + x12571 + x12572 + x12573;
double x12575 = x6047*x6381;
double x12576 = x6047*x6382;
double x12577 = x5641*x6445;
double x12578 = 32*x12382;
double x12579 = 12*x12335;
double x12580 = q4_b*x12579;
double x12581 = x5306*x6557;
double x12582 = q3_b*x12579;
double x12583 = x5306*x6454;
double x12584 = 12*x12538;
double x12585 = 12*x12540;
double x12586 = 24*x12458;
double x12587 = 32*x12544;
double x12588 = x5641*x6244;
double x12589 = q4_i*x11973;
double x12590 = 12*x6467;
double x12591 = 12*x2856;
double x12592 = 18*q4_b_dt;
double x12593 = 32*x6189;
double x12594 = q4_b*x327;
double x12595 = x3943*x6484;
double x12596 = 12*x4616;
double x12597 = x12596*x6188;
double x12598 = x2856*x3045;
double x12599 = 16*q4_b;
double x12600 = 16*q3_b;
double x12601 = -x12297 + x12298 - x12299 + x12300 - x12301;
double x12602 = 4*x12332;
double x12603 = L*x12602;
double x12604 = x12366*x158;
double x12605 = x12345*x158;
double x12606 = x12375*x158;
double x12607 = x12367*x158;
double x12608 = x12603 - x12604 + x12605 - x12606 + x12607;
double x12609 = x6047*x6603;
double x12610 = -x12450 + x12451 - x12452 + x12453 - x12454;
double x12611 = q4_b*x12589 + x10658*x6608 + x12286*x6609 + x12287*x6609 - x12352*x12592 + x12467*x4639 - x12483*x4639 - 18*x12528 + x12609 + x12610 - x6603*x7357;
double x12612 = x5413*x8501;
double x12613 = x385*x5158;
double x12614 = L*x12613;
double x12615 = x2*x385;
double x12616 = p10_b*x12615;
double x12617 = p10_b_dt*x5285;
double x12618 = p10_i*x12617;
double x12619 = x1803*x5188;
double x12620 = L*x12619;
double x12621 = p10_i*x11374;
double x12622 = x1838*x5214;
double x12623 = x385*x7;
double x12624 = p10_b_dt*p10_i;
double x12625 = p10_i*x11329;
double x12626 = x387*x5188;
double x12627 = x12626*x5184;
double x12628 = x5214*x8521;
double x12629 = p10_i*x11474;
double x12630 = p10_b_dot_dt*x8521;
double x12631 = p10_b_dot*x1797;
double x12632 = x379*x5149;
double x12633 = p10_b*x12632;
double x12634 = x3851*x5149;
double x12635 = p10_b_dot_dt*x12626;
double x12636 = x1805*x5150;
double x12637 = theta_dt*x892;
double x12638 = L*x12637;
double x12639 = 10*x12638;
double x12640 = x379*x8675;
double x12641 = p10_b*x12640;
double x12642 = x3851*x8675;
double x12643 = p10_i*x6;
double x12644 = psi_dt*x1802;
double x12645 = x12643*x12644;
double x12646 = x1805*x5247;
double x12647 = p10_i_dot*x11323;
double x12648 = p10_b*x11370;
double x12649 = x379*x5214;
double x12650 = x11360*x8534;
double x12651 = x5161*x8534;
double x12652 = x11360*x8556;
double x12653 = x5161*x8556;
double x12654 = x385*x5214;
double x12655 = x12626*x20;
double x12656 = -x12613 + x12619 - x12625 - x12654 + x12655;
double x12657 = x5996*x8501;
double x12658 = x5306*x8573;
double x12659 = x5306*x8574;
double x12660 = x12637*x70;
double x12661 = 42*x12660;
double x12662 = theta_dt*x912;
double x12663 = x12662*x70;
double x12664 = 20*x12663;
double x12665 = x11383*x385;
double x12666 = p10_b*x12665;
double x12667 = p10_b_dt*x12626;
double x12668 = 12*x12667;
double x12669 = p10_b_dot_dt*x5154;
double x12670 = L*x12669;
double x12671 = p10_b*x12670;
double x12672 = 8*x12671;
double x12673 = x5330*x8600;
double x12674 = p9_b_dot_dt*x5154;
double x12675 = L*x12674;
double x12676 = 4*x12675;
double x12677 = p10_b*x12676;
double x12678 = x5413*x8733;
double x12679 = x414*x5149;
double x12680 = p10_b_dt*x5150;
double x12681 = p9_i*x12680;
double x12682 = p9_b_dt*x12626;
double x12683 = 6*x12682;
double x12684 = x413*x5149;
double x12685 = x5202*x8528;
double x12686 = 12*x12685;
double x12687 = x5186*x8501;
double x12688 = 24*x12687;
double x12689 = x390*x5158;
double x12690 = L*x12689;
double x12691 = p9_i*x11323;
double x12692 = L*x12691;
double x12693 = x12649*x70;
double x12694 = x1840*x5214;
double x12695 = p10_b*x11348;
double x12696 = 12*x12695;
double x12697 = p10_i*x12696;
double x12698 = x5202*x8640;
double x12699 = x414*x8675;
double x12700 = p9_i*x6;
double x12701 = x12700*x5160;
double x12702 = p10_b_dt*x12701;
double x12703 = x12643*x5160;
double x12704 = p9_b_dt*x12703;
double x12705 = x413*x8675;
double x12706 = x12633*x158;
double x12707 = x12634*x158;
double x12708 = x12635*x158;
double x12709 = x12636*x158;
double x12710 = x2*x3867;
double x12711 = p10_b*x12710;
double x12712 = x12617*x421;
double x12713 = x1857*x8523;
double x12714 = x2*x3868;
double x12715 = p9_i*x11696;
double x12716 = p10_i*x11696;
double x12717 = p10_b*x8652;
double x12718 = 8*x12717;
double x12719 = x5332*x8600;
double x12720 = p10_b*x8675;
double x12721 = x12720*x8621;
double x12722 = p10_b_dt*x11389;
double x12723 = x12643*x12722;
double x12724 = p9_i_dot*x11323;
double x12725 = x12724*x70;
double x12726 = x12647*x70;
double x12727 = x1845*x5214;
double x12728 = p9_i*x11332;
double x12729 = p10_i_dot*x11329;
double x12730 = x12729*x70;
double x12731 = p9_i_dot*x11329;
double x12732 = x12731*x70;
double x12733 = p10_i*x8658;
double x12734 = x11360*x12733;
double x12735 = x12733*x5161;
double x12736 = x11417*x8534;
double x12737 = x11351*x1850;
double x12738 = p10_b_dot*x12737;
double x12739 = p10_b*x3867;
double x12740 = p10_b_dt*x421;
double x12741 = x12641*x158;
double x12742 = x8612*x8773;
double x12743 = x12642*x158;
double x12744 = x12645*x158;
double x12745 = x12646*x158;
double x12746 = 6*p10_b;
double x12747 = p9_i*x12746;
double x12748 = 6*p9_b;
double x12749 = p10_i*x12748;
double x12750 = x8514*x8557;
double x12751 = 8*x12750;
double x12752 = p9_i_dot*x11332;
double x12753 = x12752*x70;
double x12754 = p10_i_dot*x11332;
double x12755 = x12754*x70;
double x12756 = p9_i*x11329;
double x12757 = x12650*x158;
double x12758 = x12651*x158;
double x12759 = x12652*x158;
double x12760 = x12653*x158;
double x12761 = p10_i*x11375;
double x12762 = x12669*x8708;
double x12763 = x2*x8705;
double x12764 = x2*x8706;
double x12765 = -x11371*x8704 + x11374*x8707 + x11375*x8707 + x11377*x8804 + x12762 + x12763 + x12764 - x7*x8705 - x7*x8706 - x8549*x8708;
double x12766 = x5154*x8501;
double x12767 = 8*x12766;
double x12768 = x5413*x8573;
double x12769 = x5413*x8574;
double x12770 = p9_b_dt*x5169;
double x12771 = x12770*x8551;
double x12772 = p9_b*x12670;
double x12773 = 6*x12772;
double x12774 = p10_b*x5149;
double x12775 = 4*x12667;
double x12776 = x1857*x8521;
double x12777 = x1797*x420;
double x12778 = x2*x390;
double x12779 = p10_b*x12778;
double x12780 = p10_b_dot*x1892;
double x12781 = x1834*x8594;
double x12782 = p9_i*x12617;
double x12783 = p9_b_dt*x5285;
double x12784 = p10_i*x12783;
double x12785 = p9_b*x12615;
double x12786 = 4*x12670;
double x12787 = p10_b*x12786;
double x12788 = x5413*x8600;
double x12789 = 4*x12685;
double x12790 = x403*x5149;
double x12791 = x12790*x8587;
double x12792 = x5149*x8900;
double x12793 = x1842*x5150;
double x12794 = p10_i_dot*x12793;
double x12795 = x12632*x8594;
double x12796 = L*x12790;
double x12797 = p10_b*x12796;
double x12798 = x12626*x1857;
double x12799 = x3868*x5149;
double x12800 = p10_b_dot*x5149;
double x12801 = x1860*x5149;
double x12802 = x1847*x5150;
double x12803 = L*x12632;
double x12804 = x390*x7;
double x12805 = p9_i*x5505;
double x12806 = p10_i*p9_b_dt;
double x12807 = x2*x8759;
double x12808 = x3851*x5502;
double x12809 = p10_i*x1802;
double x12810 = x12809*x5502;
double x12811 = x1805*x5869;
double x12812 = p9_i*x11374;
double x12813 = p10_b_dt*x12703;
double x12814 = p9_b*x8652;
double x12815 = x403*x8675;
double x12816 = x3868*x8675;
double x12817 = p9_i_dot*x11348;
double x12818 = x12817*x8587;
double x12819 = p10_i_dot*x11348;
double x12820 = x12819*x8594;
double x12821 = x8675*x8899;
double x12822 = x8675*x8900;
double x12823 = x5247*x8901;
double x12824 = x12640*x8594;
double x12825 = p9_i*x8551;
double x12826 = p9_b*x1858;
double x12827 = x11370*x8594;
double x12828 = p9_i*x11474;
double x12829 = x5214*x8762;
double x12830 = p10_b_dot*x8675;
double x12831 = x12644*x12700;
double x12832 = p9_i_dot*x11360;
double x12833 = x12832*x8587;
double x12834 = p9_i_dot*x5161;
double x12835 = x12834*x8587;
double x12836 = p10_i_dot*x11360;
double x12837 = x12836*x8594;
double x12838 = p10_i_dot*x5161;
double x12839 = x12838*x8594;
double x12840 = p9_b*x898;
double x12841 = 12*x12660;
double x12842 = -12*x12693 + 12*x12726 - 12*x12730 + 12*x12755 - x12841;
double x12843 = 11*x12663;
double x12844 = -11*x12694 + 11*x12725 - 11*x12732 + 11*x12753 - x12843;
double x12845 = x12669*x8587;
double x12846 = 8*x12845;
double x12847 = x8549*x8587;
double x12848 = x6128*x8704;
double x12849 = x1865*x5540;
double x12850 = x12632*x8708 - x12640*x8708 + x12819*x8708 + x12836*x8708 + x12838*x8708 + x12846 - 8*x12847 - x12848 + x12849*x5149 - x12849*x8675;
double x12851 = x5996*x8573;
double x12852 = x5996*x8574;
double x12853 = x5521*x8723;
double x12854 = 14*x12772;
double x12855 = x12626*x1868;
double x12856 = 10*x12675;
double x12857 = p9_b*x12856;
double x12858 = x5244*x8814;
double x12859 = x12674*x8587;
double x12860 = 6*x12859;
double x12861 = x12669*x8594;
double x12862 = 6*x12861;
double x12863 = p10_b*x12856;
double x12864 = x5244*x8733;
double x12865 = 14*x12671;
double x12866 = x5521*x8600;
double x12867 = x11348*x8670;
double x12868 = 10*x8746;
double x12869 = x12800*x1845;
double x12870 = p10_i_dot*x12802;
double x12871 = p9_b*x12803;
double x12872 = 6*x8745;
double x12873 = p9_b*x12790;
double x12874 = x3901*x5149;
double x12875 = x1881*x5150;
double x12876 = p9_i_dot*x12802;
double x12877 = p9_i_dot*x12680;
double x12878 = p9_b_dot_dt*x12626;
double x12879 = x12878*x154;
double x12880 = 14*x8557;
double x12881 = p9_i*x8658;
double x12882 = p10_i*x8670;
double x12883 = 10*x8773;
double x12884 = p9_b*x286;
double x12885 = p10_b*x154;
double x12886 = p9_i_dot*x5247;
double x12887 = p10_b_dt*x12886;
double x12888 = p9_b_dot_dt*x12703;
double x12889 = p9_b*x12817;
double x12890 = x1842*x1862;
double x12891 = p9_b*x12815;
double x12892 = x3901*x8675;
double x12893 = x1881*x5247;
double x12894 = x5247*x8837;
double x12895 = x12830*x1845;
double x12896 = x5247*x8840;
double x12897 = x11360*x898;
double x12898 = 7*p9_b;
double x12899 = x5161*x898;
double x12900 = x11360*x8850;
double x12901 = x5161*x8850;
double x12902 = x11360*x8852;
double x12903 = x5161*x8852;
double x12904 = x12674*x8916;
double x12905 = x1840*x8791;
double x12906 = x1842*x8864;
double x12907 = -x11371*x8860 + x11374*x8863 + x11375*x8863 + x11474*x8863 + x12904 + x12905 + x12906 - x5505*x8862 - x7*x8861 - x8745*x8916;
double x12908 = x5996*x8869;
double x12909 = x6741*x8869;
double x12910 = x5202*x8874;
double x12911 = 12*x12910;
double x12912 = p9_b*x5149;
double x12913 = x12912*x1896;
double x12914 = p9_i*x5150;
double x12915 = x12914*x1868;
double x12916 = p9_b*x8675;
double x12917 = x12916*x1896;
double x12918 = x12701*x1868;
double x12919 = p9_i*x12867;
double x12920 = p9_i*x8670;
double x12921 = x11360*x12920;
double x12922 = x12920*x5161;
double x12923 = x12908 - x12909 - x12911 + x12913 + x12915 - x12917 - x12918 + x12919 + x12921 + x12922;
double x12924 = x5911*x8573;
double x12925 = x5911*x8574;
double x12926 = 16*x12766;
double x12927 = x5330*x8723;
double x12928 = 8*x12772;
double x12929 = 8*x12682;
double x12930 = 8*x12685;
double x12931 = x12674*x8708;
double x12932 = x12669*x8916;
double x12933 = 8*x12675;
double x12934 = p10_b*x12933;
double x12935 = x5330*x8733;
double x12936 = 8*x12667;
double x12937 = p10_b*x8746;
double x12938 = 8*x12695;
double x12939 = p9_b*x11348;
double x12940 = 8*x12939;
double x12941 = 4*x12803;
double x12942 = x2*x8899;
double x12943 = x2*x8900;
double x12944 = x5285*x8901;
double x12945 = x1822*x8791;
double x12946 = x12878*x158;
double x12947 = 8*x8773;
double x12948 = x12947*x8514;
double x12949 = p9_i*x8896;
double x12950 = p10_i*x8907;
double x12951 = x8557*x8916;
double x12952 = p10_i_dot*x8904;
double x12953 = x8557*x8582;
double x12954 = p10_i*x8896;
double x12955 = p9_b*x12933;
double x12956 = x5330*x8814;
double x12957 = x12873*x158;
double x12958 = x12874*x158;
double x12959 = x12875*x158;
double x12960 = x5271*x8837;
double x12961 = p9_b*x8746;
double x12962 = 8*x12961;
double x12963 = x5332*x8814;
double x12964 = x12889*x158;
double x12965 = x11417*x8852;
double x12966 = x12891*x158;
double x12967 = x12892*x158;
double x12968 = x12893*x158;
double x12969 = x12886*x8904;
double x12970 = x12947*x8582;
double x12971 = x12900*x158;
double x12972 = x12901*x158;
double x12973 = x12902*x158;
double x12974 = x12903*x158;
double x12975 = x12907 - x12955 - x12956 - x12957 - x12958 - x12959 - x12960 + x12962 + x12963 - x12964 - x12965 + x12966 + x12967 + x12968 + x12969 + x12970 - x12971 - x12972 - x12973 - x12974;
double x12976 = x5911*x8869;
double x12977 = 8*x12910;
double x12978 = p9_b_dt*x12914;
double x12979 = p9_b_dt*x12701;
double x12980 = p9_i*x12939;
double x12981 = p9_i*x8907;
double x12982 = x11360*x12981 + x12912*x1921 - x12916*x1921 + x12976 - x12977 + 8*x12978 - 8*x12979 + 8*x12980 + x12981*x5161 - x5643*x8869;
double x12983 = x6047*x8573;
double x12984 = x6047*x8574;
double x12985 = 36*x12766;
double x12986 = x5641*x8723;
double x12987 = 32*x12772;
double x12988 = 18*x12682;
double x12989 = 12*x12675;
double x12990 = p9_b*x12989;
double x12991 = x5306*x8814;
double x12992 = 4*x12613;
double x12993 = L*x12992;
double x12994 = 4*x12689;
double x12995 = L*x12994;
double x12996 = p10_b*x12989;
double x12997 = x5306*x8733;
double x12998 = 12*x12859;
double x12999 = 12*x12861;
double x13000 = 18*x12667;
double x13001 = 24*x12845;
double x13002 = 32*x12671;
double x13003 = x5641*x8600;
double x13004 = 18*x12695;
double x13005 = 18*p10_i;
double x13006 = 12*x8594;
double x13007 = 4*x12622;
double x13008 = x12691*x158;
double x13009 = x12619*x158;
double x13010 = x1923*x5214;
double x13011 = x12878*x129;
double x13012 = p9_i*x8968;
double x13013 = p9_b*x13005;
double x13014 = p9_b*x327;
double x13015 = x3943*x8773;
double x13016 = x13006*x8557;
double x13017 = p10_i_dot*x8675;
double x13018 = p10_b*x129;
double x13019 = x12625*x158;
double x13020 = x12728*x158;
double x13021 = x12655*x158;
double x13022 = x12756*x158;
double x13023 = p10_b*x13005;
double x13024 = 16*p9_b;
double x13025 = x1822*x9;
double x13026 = x11*x1822;
double x13027 = p10_i_dot*x11595;
double x13028 = x13017*x5273;
double x13029 = p10_i_dot*x11599;
double x13030 = -x13025 - x13026 + x13027 - x13028 + x13029;
double x13031 = x1840*x9;
double x13032 = x11*x1840;
double x13033 = p9_i_dot*x11595;
double x13034 = p9_i_dot*x11597;
double x13035 = p9_i_dot*x11599;
double x13036 = -x13031 - x13032 + x13033 - x13034 + x13035;
double x13037 = x6047*x8869;
double x13038 = p9_i*x8980;
double x13039 = x11360*x13038 - 18*x12910 + x12912*x1927 - x12916*x1927 + 18*x12978 - 18*x12979 + 18*x12980 + x13037 + x13038*x5161 - x7357*x8869;
double x13040 = x5413*x8993;
double x13041 = x2*x429;
double x13042 = p2_b*x13041;
double x13043 = x5285*x9173;
double x13044 = p2_i*x11374;
double x13045 = x429*x5158;
double x13046 = 4*x13045;
double x13047 = L*x13046;
double x13048 = p2_i*x11323;
double x13049 = x13048*x158;
double x13050 = x2000*x5214;
double x13051 = 4*x13050;
double x13052 = p2_i*x11332;
double x13053 = x13052*x158;
double x13054 = p2_i*x11329;
double x13055 = x13054*x158;
double x13056 = x13047 - x13049 + x13051 - x13053 + x13055;
double x13057 = p2_b*x1960;
double x13058 = p2_b_dot*x1935;
double x13059 = x423*x5149;
double x13060 = p2_b*x13059;
double x13061 = x3941*x5149;
double x13062 = x1940*x5150;
double x13063 = p2_i_dot*x11348;
double x13064 = p2_b*x13063;
double x13065 = x423*x8675;
double x13066 = p2_b*x13065;
double x13067 = x3941*x8675;
double x13068 = x1940*x5247;
double x13069 = p2_b*x11370;
double x13070 = x11360*x9036;
double x13071 = x5161*x9036;
double x13072 = x11360*x9037;
double x13073 = x5161*x9037;
double x13074 = x429*x5214;
double x13075 = -x13045 + x13048 + x13052 - x13054 - x13074;
double x13076 = x3978*x9;
double x13077 = x11440*x480;
double x13078 = x11*x3978;
double x13079 = x11444*x480;
double x13080 = x11442*x480;
double x13081 = x13076 - x13077 + x13078 - x13079 + x13080;
double x13082 = x5996*x8993;
double x13083 = x5306*x9051;
double x13084 = x5306*x9052;
double x13085 = 12*x13045;
double x13086 = x11383*x8997;
double x13087 = p2_i*x5150;
double x13088 = x13087*x1954;
double x13089 = theta_dt*x972;
double x13090 = x13089*x70;
double x13091 = 10*x13090;
double x13092 = x5413*x9071;
double x13093 = p2_b*x11608;
double x13094 = x444*x5149;
double x13095 = x226*x5149;
double x13096 = 12*x11503;
double x13097 = x5202*x8995;
double x13098 = 12*x13097;
double x13099 = x6741*x8993;
double x13100 = x5202*x9086;
double x13101 = x11951*x9000;
double x13102 = x423*x5214;
double x13103 = x13102*x70;
double x13104 = x444*x8675;
double x13105 = p2_i*x6;
double x13106 = x13105*x5160;
double x13107 = p1_b_dt*x13106;
double x13108 = p2_b_dt*x11539;
double x13109 = x226*x8675;
double x13110 = x2*x3951;
double x13111 = x1981*x9109;
double x13112 = x1983*x5285;
double x13113 = p2_b*x11615;
double x13114 = p2_i*x11696;
double x13115 = p1_i*x11696;
double x13116 = p2_i_dot*x11323;
double x13117 = x13116*x70;
double x13118 = x11537*x8997;
double x13119 = x13106*x1954;
double x13120 = 12*x9000;
double x13121 = x11360*x13120;
double x13122 = x13120*x5161;
double x13123 = p2_i_dot*x11329;
double x13124 = x13123*x70;
double x13125 = p2_i*x1981;
double x13126 = p2_b*x9254;
double x13127 = 6*x9093;
double x13128 = 6*x9095;
double x13129 = p2_i_dot*x11332;
double x13130 = x13129*x70;
double x13131 = x5214*x9111;
double x13132 = 4*x11630;
double x13133 = x11485*x5540;
double x13134 = x11489*x5540;
double x13135 = x11634*x5540;
double x13136 = x11636*x5540;
double x13137 = -x13132 - x13133 + x13134 - x13135 + x13136;
double x13138 = p2_b_dot_dt*x5154;
double x13139 = L*x13138;
double x13140 = p2_b*x13139;
double x13141 = 8*x13140;
double x13142 = x5330*x9118;
double x13143 = x13060*x158;
double x13144 = x13061*x158;
double x13145 = x13062*x158;
double x13146 = x5271*x9133;
double x13147 = p2_b*x9130;
double x13148 = 8*x13147;
double x13149 = x5332*x9118;
double x13150 = x13064*x158;
double x13151 = x11417*x9037;
double x13152 = x13066*x158;
double x13153 = x13067*x158;
double x13154 = x13068*x158;
double x13155 = p2_i_dot*x5247;
double x13156 = x13155*x9009;
double x13157 = x9003*x9038;
double x13158 = 8*x13157;
double x13159 = x13070*x158;
double x13160 = x13071*x158;
double x13161 = x13072*x158;
double x13162 = x13073*x158;
double x13163 = x13138*x9060;
double x13164 = 4*x13163;
double x13165 = x9035*x9060;
double x13166 = x3957*x9042;
double x13167 = x5285*x9064;
double x13168 = p2_i_dot*x13167;
double x13169 = -x11371*x9149 + x11374*x9152 + x11375*x9152 + x11474*x9152 + x13164 - 4*x13165 + x13166 + x13168 - x5505*x9151 - x7*x9150;
double x13170 = -x13141 - x13142 - x13143 - x13144 - x13145 - x13146 + x13148 + x13149 - x13150 - x13151 + x13152 + x13153 + x13154 + x13156 + x13158 - x13159 - x13160 - x13161 - x13162 + x13169;
double x13171 = x5330*x8993;
double x13172 = x5413*x9051;
double x13173 = x5413*x9052;
double x13174 = p1_b*x13139;
double x13175 = 6*x13174;
double x13176 = p1_b_dt*x5169;
double x13177 = x13176*x479;
double x13178 = x5150*x9173;
double x13179 = x1935*x450;
double x13180 = p2_b*x1948;
double x13181 = p1_b*x13041;
double x13182 = x1960*x5531;
double x13183 = x312*x9060;
double x13184 = x5285*x9248;
double x13185 = x5285*x9249;
double x13186 = p2_b*x11461;
double x13187 = 4*x13139;
double x13188 = p2_b*x13187;
double x13189 = x5413*x9118;
double x13190 = 4*x13097;
double x13191 = x13059*x5531;
double x13192 = x1985*x8628;
double x13193 = p2_b_dot_dt*x8628;
double x13194 = p1_i_dot*x13193;
double x13195 = x11480*x9060;
double x13196 = x3951*x5149;
double x13197 = x13087*x1981;
double x13198 = x1983*x5150;
double x13199 = L*x11480;
double x13200 = p2_b*x13199;
double x13201 = L*x13059;
double x13202 = p1_b*x13201;
double x13203 = p1_b_dt*x5150;
double x13204 = p1_i*p2_b_dot_dt;
double x13205 = x13204*x5150;
double x13206 = p2_b_dot*x5149;
double x13207 = x2*x3978;
double x13208 = p2_b*x13207;
double x13209 = x3941*x5502;
double x13210 = x1940*x5869;
double x13211 = x5285*x9133;
double x13212 = x8675*x8997;
double x13213 = p2_b_dt*x13106;
double x13214 = p1_b*x9130;
double x13215 = x3951*x8675;
double x13216 = x13106*x1981;
double x13217 = x1983*x5247;
double x13218 = x13063*x5531;
double x13219 = x11487*x9060;
double x13220 = x13065*x5531;
double x13221 = x1985*x70;
double x13222 = x13221*x5247;
double x13223 = x5247*x9064;
double x13224 = p1_i_dot*x13223;
double x13225 = x11491*x9060;
double x13226 = 4*x9000;
double x13227 = p1_b*x1858;
double x13228 = p1_i*x479;
double x13229 = x3978*x7;
double x13230 = p2_b_dot*x11370;
double x13231 = x11374*x480;
double x13232 = p1_b_dt*x5247;
double x13233 = p2_b_dot_dt*x11539;
double x13234 = p2_b_dot*x3983;
double x13235 = p2_i_dot*x11360;
double x13236 = p2_i_dot*x5161;
double x13237 = x11527*x9060;
double x13238 = x11528*x9060;
double x13239 = p1_b*x480;
double x13240 = p2_i*x11375;
double x13241 = p2_i*x11474;
double x13242 = L*x13045;
double x13243 = 7*x13242;
double x13244 = 7*x13050;
double x13245 = x13048*x286;
double x13246 = x13054*x286;
double x13247 = x13052*x286;
double x13248 = x11503*x286 - x11504*x286 + x11505*x286 - x11506*x286 + x11507*x286;
double x13249 = 4*x13090;
double x13250 = x13102*x5540;
double x13251 = x13116*x5540;
double x13252 = x13123*x5540;
double x13253 = x13129*x5540;
double x13254 = -x13249 - x13250 + x13251 - x13252 + x13253;
double x13255 = x11638 - x13243 - x13244 + x13245 - x13246 + x13247 + x13248 + x13254;
double x13256 = 8*x13163;
double x13257 = x6128*x9149;
double x13258 = x13059*x9060;
double x13259 = p2_i_dot*x8989;
double x13260 = 4*x9060;
double x13261 = p2_b_dot_dt*x13259 + x13063*x13260 - x13065*x13260 - x13155*x9212 - 8*x13165 + x13235*x13260 + x13236*x13260 + x13256 - x13257 + 4*x13258;
double x13262 = x5996*x9051;
double x13263 = x5996*x9052;
double x13264 = 14*x13174;
double x13265 = x5521*x9224;
double x13266 = x1954*x5150;
double x13267 = 10*x11511;
double x13268 = x5244*x5511;
double x13269 = x13138*x5531;
double x13270 = 6*x13269;
double x13271 = x11509*x9060;
double x13272 = 6*x13271;
double x13273 = x5244*x9071;
double x13274 = p2_b*x11510;
double x13275 = 10*x13274;
double x13276 = 14*x13140;
double x13277 = x5521*x9118;
double x13278 = p2_b*x5518;
double x13279 = x13203*x480;
double x13280 = x13206*x210;
double x13281 = x5531*x9035;
double x13282 = x5487*x9060;
double x13283 = x5150*x9158;
double x13284 = 12*x9093;
double x13285 = 12*x9095;
double x13286 = x5498*x9003;
double x13287 = p1_b*x286;
double x13288 = 6*x9060;
double x13289 = p2_b*x154;
double x13290 = x5247*x9235;
double x13291 = x8675*x9190;
double x13292 = p1_b*x5498;
double x13293 = p1_b*x9471;
double x13294 = x11360*x480;
double x13295 = x480*x5161;
double x13296 = 3*x5531;
double x13297 = 7*p2_b;
double x13298 = x13082 + x13086 + x13088 - x13098 - x13099 + x13101 - x13118 - x13119 + x13121 + x13122;
double x13299 = x5911*x9051;
double x13300 = x5911*x9052;
double x13301 = 8*x13174;
double x13302 = x5330*x9224;
double x13303 = 4*x13269;
double x13304 = 4*x13271;
double x13305 = x5330*x9071;
double x13306 = 8*x13274;
double x13307 = 4*x13201;
double x13308 = x2*x9178;
double x13309 = x13221*x5285;
double x13310 = x5607*x9064;
double x13311 = x2*x9182;
double x13312 = 8*x13286;
double x13313 = 8*x9093;
double x13314 = 8*x9095;
double x13315 = x13063*x158;
double x13316 = x11491*x158;
double x13317 = x13260*x5498;
double x13318 = x13065*x158;
double x13319 = x11487*x158;
double x13320 = x13235*x158;
double x13321 = x13236*x158;
double x13322 = x11527*x158;
double x13323 = x11528*x158;
double x13324 = x5911*x8993;
double x13325 = 8*x13097;
double x13326 = 8*x9000;
double x13327 = x11360*x13326 + x11831*x8997 + x11840*x9000 + 8*x13178 - 8*x13212 - 8*x13213 + x13324 - x13325 + x13326*x5161 - x5643*x8993;
double x13328 = x6047*x9051;
double x13329 = x6047*x9052;
double x13330 = 32*x13174;
double x13331 = x5641*x9224;
double x13332 = 12*x11511;
double x13333 = x5306*x5511;
double x13334 = x5306*x9071;
double x13335 = 12*x13274;
double x13336 = 12*x13269;
double x13337 = 12*x13271;
double x13338 = 24*x13163;
double x13339 = 32*x13140;
double x13340 = x5641*x9118;
double x13341 = 12*p2_i_dot;
double x13342 = x5150*x9133;
double x13343 = 18*x9093;
double x13344 = 18*x9095;
double x13345 = p1_b*x327;
double x13346 = x5247*x9133;
double x13347 = p2_b*x3943;
double x13348 = 12*x9060;
double x13349 = x13348*x5498;
double x13350 = p2_b*x129;
double x13351 = 16*p2_b;
double x13352 = -x13047 + x13049 - x13051 + x13053 - x13055;
double x13353 = x11579 + x11584 - x11585 + x11589 - x11590;
double x13354 = x11601 + x13353;
double x13355 = x3957*x9;
double x13356 = x11*x3957;
double x13357 = p2_i_dot*x11595;
double x13358 = p2_i_dot*x11597;
double x13359 = p2_i_dot*x11599;
double x13360 = -x13355 - x13356 + x13357 - x13358 + x13359;
double x13361 = x13352 + x13354 + x13360;
double x13362 = x6047*x8993;
double x13363 = 18*x9000;
double x13364 = x11360*x13363 + x11962*x8997 + x11973*x9000 - 18*x13097 + 18*x13178 - 18*x13212 - 18*x13213 + x13362 + x13363*x5161 - x7357*x8993;
double x13365 = x5413*x9277;
double x13366 = x2*x458;
double x13367 = p3_b*x13366;
double x13368 = x5285*x9451;
double x13369 = p3_i*x11374;
double x13370 = x458*x5158;
double x13371 = 6*x13370;
double x13372 = L*x13371;
double x13373 = p3_i*x11323;
double x13374 = x129*x13373;
double x13375 = x473*x5214;
double x13376 = L*x13375;
double x13377 = p3_i*x11332;
double x13378 = x129*x13377;
double x13379 = p3_i*x11329;
double x13380 = x129*x13379;
double x13381 = x13372 - x13374 + x13376 - x13378 + x13380;
double x13382 = p3_b*x2067;
double x13383 = p3_b_dot*x2040;
double x13384 = x452*x5149;
double x13385 = p3_b*x13384;
double x13386 = x4021*x5149;
double x13387 = x2045*x5150;
double x13388 = x2047*x5150;
double x13389 = theta_dt*x1026;
double x13390 = L*x13389;
double x13391 = 3*x13390;
double x13392 = p3_i_dot*x11348;
double x13393 = p3_b*x13392;
double x13394 = x452*x8675;
double x13395 = p3_b*x13394;
double x13396 = x4021*x8675;
double x13397 = x2045*x5247;
double x13398 = x2047*x5247;
double x13399 = p3_i_dot*x11323;
double x13400 = x13399*x1858;
double x13401 = p3_b*x11370;
double x13402 = x452*x5214;
double x13403 = x13402*x1858;
double x13404 = x11360*x9311;
double x13405 = x5161*x9311;
double x13406 = x11360*x9312;
double x13407 = x5161*x9312;
double x13408 = x11332*x9319;
double x13409 = x11329*x9319;
double x13410 = x458*x5214;
double x13411 = -x13370 + x13373 + x13377 - x13379 - x13410;
double x13412 = x5996*x9277;
double x13413 = x5306*x9327;
double x13414 = x5306*x9328;
double x13415 = 18*x13370;
double x13416 = x13389*x70;
double x13417 = 14*x13416;
double x13418 = x11383*x9286;
double x13419 = p3_i*x5150;
double x13420 = x13419*x2061;
double x13421 = 6*x13090;
double x13422 = x5413*x9441;
double x13423 = p3_b*x13187;
double x13424 = x473*x5149;
double x13425 = p3_b_dt*x13087;
double x13426 = x5202*x9284;
double x13427 = 12*x13426;
double x13428 = 18*x13045;
double x13429 = x6741*x9277;
double x13430 = x13402*x70;
double x13431 = x5202*x9361;
double x13432 = x11951*x9293;
double x13433 = x473*x8675;
double x13434 = p3_i*x6;
double x13435 = x13434*x5160;
double x13436 = p2_b_dt*x13435;
double x13437 = p3_b_dt*x13106;
double x13438 = 6*x13103;
double x13439 = x13366*x479;
double x13440 = x2084*x9381;
double x13441 = p3_b_dt*x5285;
double x13442 = x13441*x480;
double x13443 = p3_b*x13207;
double x13444 = p3_i*x11696;
double x13445 = 6*x13117;
double x13446 = x11537*x9286;
double x13447 = x13435*x2061;
double x13448 = x13399*x70;
double x13449 = p3_i_dot*x11329;
double x13450 = x13449*x70;
double x13451 = 12*x9293;
double x13452 = x11360*x13451;
double x13453 = x13451*x5161;
double x13454 = 6*x13124;
double x13455 = p3_i*x2084;
double x13456 = p3_b*x9257;
double x13457 = 6*x9367;
double x13458 = 6*x9368;
double x13459 = 6*x13130;
double x13460 = p3_i_dot*x11332;
double x13461 = x13460*x70;
double x13462 = x5214*x9383;
double x13463 = p3_b_dot_dt*x5154;
double x13464 = L*x13463;
double x13465 = p3_b*x13464;
double x13466 = 8*x13465;
double x13467 = x5330*x9391;
double x13468 = x13385*x158;
double x13469 = x13386*x158;
double x13470 = x13387*x158;
double x13471 = x13388*x158;
double x13472 = p3_b*x9403;
double x13473 = 8*x13472;
double x13474 = x5332*x9391;
double x13475 = x13393*x158;
double x13476 = x11417*x9312;
double x13477 = x13395*x158;
double x13478 = x13396*x158;
double x13479 = x13397*x158;
double x13480 = x13398*x158;
double x13481 = x9279*x9313;
double x13482 = 8*x13481;
double x13483 = x13404*x158;
double x13484 = x13405*x158;
double x13485 = x13406*x158;
double x13486 = x13407*x158;
double x13487 = x13463*x9336;
double x13488 = 4*x13487;
double x13489 = x9306*x9336;
double x13490 = x4038*x9320;
double x13491 = x5285*x9339;
double x13492 = p3_i_dot*x13491;
double x13493 = -x11371*x9421 + x11374*x9424 + x11375*x9424 + x11474*x9424 + x13488 - 4*x13489 + x13490 + x13492 - x5505*x9423 - x7*x9422;
double x13494 = -x13466 - x13467 - x13468 - x13469 - x13470 - x13471 + x13473 + x13474 - x13475 - x13476 + x13477 + x13478 + x13479 + x13480 + x13482 - x13483 - x13484 - x13485 - x13486 + x13493;
double x13495 = x5330*x9277;
double x13496 = x5413*x9327;
double x13497 = x5413*x9328;
double x13498 = L*x13370;
double x13499 = p2_b*x13464;
double x13500 = 6*x13499;
double x13501 = p2_b_dt*x5169;
double x13502 = x13501*x509;
double x13503 = x2040*x479;
double x13504 = p3_b*x2055;
double x13505 = p2_b*x13366;
double x13506 = x2067*x9060;
double x13507 = x1960*x9336;
double x13508 = x5285*x9518;
double x13509 = p2_i*x13441;
double x13510 = p3_b*x13041;
double x13511 = 4*x13464;
double x13512 = p3_b*x13511;
double x13513 = x5413*x9391;
double x13514 = 4*x13426;
double x13515 = x13384*x9060;
double x13516 = p3_i_dot*x13193;
double x13517 = p3_b_dot_dt*x8628;
double x13518 = p2_i_dot*x13517;
double x13519 = x13059*x9336;
double x13520 = p3_b*x13201;
double x13521 = L*x13384;
double x13522 = p2_b*x13521;
double x13523 = x1968*x5150;
double x13524 = 3*x5149;
double x13525 = x2*x4060;
double x13526 = p3_b*x13525;
double x13527 = x4021*x5502;
double x13528 = x2045*x5869;
double x13529 = x2047*x5869;
double x13530 = 4*x8675;
double x13531 = p3_b_dt*x13435;
double x13532 = p2_b*x9403;
double x13533 = x13392*x9060;
double x13534 = x13063*x9336;
double x13535 = x13394*x9060;
double x13536 = x5247*x9525;
double x13537 = x13065*x9336;
double x13538 = 4*x9293;
double x13539 = p2_b*x1858;
double x13540 = p2_i*x509;
double x13541 = x4060*x7;
double x13542 = x11374*x510;
double x13543 = x1968*x5247;
double x13544 = x8675*x9528;
double x13545 = p3_i_dot*x11360;
double x13546 = x13545*x9060;
double x13547 = p3_i_dot*x5161;
double x13548 = x13547*x9060;
double x13549 = x13235*x9336;
double x13550 = x13236*x9336;
double x13551 = p2_b*x510;
double x13552 = p3_b_dot*x1858;
double x13553 = p2_i*x13552;
double x13554 = p3_i*x11375;
double x13555 = p3_i*x11474;
double x13556 = 5*x13416;
double x13557 = -5*x13430 + 5*x13448 - 5*x13450 + 5*x13461 - x13556;
double x13558 = 8*x13487;
double x13559 = x6128*x9421;
double x13560 = x13384*x9336;
double x13561 = p3_b_dot_dt*p3_i_dot;
double x13562 = 4*x9336;
double x13563 = x5247*x5540;
double x13564 = x13392*x13562 - x13394*x13562 - 8*x13489 + x13545*x13562 + x13547*x13562 + x13558 - x13559 + 4*x13560 - x13561*x13563 + x13561*x8989;
double x13565 = x5996*x9327;
double x13566 = x5996*x9328;
double x13567 = 14*x13499;
double x13568 = x5521*x9435;
double x13569 = 10*x13140;
double x13570 = x5244*x9118;
double x13571 = x13463*x9060;
double x13572 = 6*x13571;
double x13573 = x13138*x9336;
double x13574 = 6*x13573;
double x13575 = x5244*x9441;
double x13576 = p3_b*x13139;
double x13577 = 10*x13576;
double x13578 = 14*x13465;
double x13579 = x5521*x9391;
double x13580 = p3_b*x9130;
double x13581 = p3_b_dot_dt*x13087;
double x13582 = x5149*x9528;
double x13583 = x9060*x9306;
double x13584 = x9035*x9336;
double x13585 = x5149*x9453;
double x13586 = p2_b_dot_dt*x13419;
double x13587 = x154*x5150;
double x13588 = 14*x9313;
double x13589 = 12*x9367;
double x13590 = 12*x9368;
double x13591 = x9038*x9279;
double x13592 = p2_b*x286;
double x13593 = x9038*x9336;
double x13594 = x8675*x9453;
double x13595 = p2_b_dot_dt*x13435;
double x13596 = x5247*x9510;
double x13597 = p3_b*x154;
double x13598 = p3_i_dot*x5247;
double x13599 = p3_b_dot_dt*x13106;
double x13600 = x11360*x510;
double x13601 = x510*x5161;
double x13602 = 7*p3_b;
double x13603 = x13412 + x13418 + x13420 - x13427 - x13429 + x13432 - x13446 - x13447 + x13452 + x13453;
double x13604 = x5911*x9327;
double x13605 = x5911*x9328;
double x13606 = 8*x13499;
double x13607 = x5330*x9435;
double x13608 = 4*x13571;
double x13609 = 4*x13573;
double x13610 = x5330*x9441;
double x13611 = 8*x13576;
double x13612 = 4*x13521;
double x13613 = x4038*x9042;
double x13614 = p3_i_dot*x13167;
double x13615 = x5285*x9525;
double x13616 = x3957*x9320;
double x13617 = p3_b_dt*x5150;
double x13618 = 8*x13591;
double x13619 = 8*x9367;
double x13620 = 8*x9368;
double x13621 = x13392*x158;
double x13622 = p3_b_dt*x2034;
double x13623 = x13562*x9038;
double x13624 = x13394*x158;
double x13625 = x9003*x9313;
double x13626 = x13545*x158;
double x13627 = x13547*x158;
double x13628 = x5911*x9277;
double x13629 = 8*x13426;
double x13630 = 8*x9293;
double x13631 = x11360*x13630 + x11831*x9286 + x11840*x9293 - 8*x13531 + x13628 - x13629 + x13630*x5161 + x5536*x9451 - x5643*x9277 - x8676*x9286;
double x13632 = x6047*x9327;
double x13633 = x6047*x9328;
double x13634 = 32*x13499;
double x13635 = x5641*x9435;
double x13636 = 12*x13140;
double x13637 = x5306*x9118;
double x13638 = x5306*x9441;
double x13639 = 12*x13576;
double x13640 = 12*x13571;
double x13641 = 12*x13573;
double x13642 = 24*x13487;
double x13643 = 32*x13465;
double x13644 = x5641*x9391;
double x13645 = 12*p3_i_dot;
double x13646 = 18*x9367;
double x13647 = 18*x9368;
double x13648 = p2_b*x327;
double x13649 = p3_b*x3943;
double x13650 = 12*x13593;
double x13651 = 12*x9336;
double x13652 = x13645*x9339;
double x13653 = p3_b*x129;
double x13654 = 16*p3_b;
double x13655 = 4*x13370;
double x13656 = L*x13655;
double x13657 = x13410*x158;
double x13658 = x13373*x158;
double x13659 = x13379*x158;
double x13660 = x13377*x158;
double x13661 = -x13656 - x13657 + x13658 - x13659 + x13660;
double x13662 = x4038*x9;
double x13663 = x11*x4038;
double x13664 = p3_i_dot*x11595;
double x13665 = p3_i_dot*x11597;
double x13666 = p3_i_dot*x11599;
double x13667 = -x13662 - x13663 + x13664 - x13665 + x13666;
double x13668 = x13056 + x13360 + x13661 + x13667;
double x13669 = x6047*x9277;
double x13670 = 18*x9293;
double x13671 = x10658*x9451 + x11360*x13670 + x11962*x9286 + x11973*x9293 - x11977*x9286 - 18*x13426 - 18*x13531 + x13669 + x13670*x5161 - x7357*x9277;
double x13672 = x5413*x9571;
double x13673 = x488*x5158;
double x13674 = 8*x13673;
double x13675 = x2*x488;
double x13676 = p4_b*x13675;
double x13677 = x5285*x9744;
double x13678 = p4_i*x11323;
double x13679 = 8*x13678;
double x13680 = p4_i*x11374;
double x13681 = 32*x5700;
double x13682 = -x13681;
double x13683 = x2206*x5214;
double x13684 = p4_i*x11329;
double x13685 = p4_i*x11332;
double x13686 = p4_b*x2167;
double x13687 = p4_b_dot*x2142;
double x13688 = x482*x5149;
double x13689 = p4_b*x13688;
double x13690 = x4105*x5149;
double x13691 = x2147*x5150;
double x13692 = p4_i_dot*x11348;
double x13693 = p4_b*x13692;
double x13694 = x482*x8675;
double x13695 = p4_b*x13694;
double x13696 = x4105*x8675;
double x13697 = x2147*x5247;
double x13698 = p4_b*x11370;
double x13699 = x11360*x9605;
double x13700 = x5161*x9605;
double x13701 = x11360*x9606;
double x13702 = x5161*x9606;
double x13703 = x488*x5214;
double x13704 = -x13673 + x13678 - x13684 + x13685 - x13703;
double x13705 = theta_dt*x1074;
double x13706 = L*x13705;
double x13707 = 4*x13706;
double x13708 = p4_i_dot*x11323;
double x13709 = x13708*x158;
double x13710 = x482*x5214;
double x13711 = x13710*x158;
double x13712 = p4_i_dot*x11332;
double x13713 = x13712*x158;
double x13714 = p4_i_dot*x11329;
double x13715 = x13714*x158;
double x13716 = x13707 - x13709 + x13711 - x13713 + x13715;
double x13717 = x5996*x9571;
double x13718 = x5306*x9622;
double x13719 = x5306*x9623;
double x13720 = L*x13673;
double x13721 = x13705*x70;
double x13722 = 18*x13721;
double x13723 = x11383*x9582;
double x13724 = p4_i*x5150;
double x13725 = x13724*x2161;
double x13726 = 8*x13416;
double x13727 = x5413*x9641;
double x13728 = p4_b*x13511;
double x13729 = x503*x5149;
double x13730 = x5202*x9580;
double x13731 = 12*x13730;
double x13732 = x6741*x9571;
double x13733 = L*x13373;
double x13734 = x13710*x70;
double x13735 = x5202*x9656;
double x13736 = x11951*x9587;
double x13737 = x503*x8675;
double x13738 = p4_i*x6;
double x13739 = x13738*x5160;
double x13740 = p3_b_dt*x13739;
double x13741 = p4_b_dt*x13435;
double x13742 = x2*x4115;
double x13743 = x2188*x9675;
double x13744 = x2190*x5285;
double x13745 = p4_b*x13525;
double x13746 = p4_i*x11696;
double x13747 = x11537*x9582;
double x13748 = x13739*x2161;
double x13749 = x13708*x70;
double x13750 = L*x13410;
double x13751 = L*x13678;
double x13752 = x13714*x70;
double x13753 = 12*x9587;
double x13754 = x11360*x13753;
double x13755 = x13753*x5161;
double x13756 = p4_i*x2188;
double x13757 = p4_b*x9532;
double x13758 = 6*x9661;
double x13759 = 6*x9662;
double x13760 = x13712*x70;
double x13761 = x5214*x9677;
double x13762 = p4_b_dot_dt*x5154;
double x13763 = L*x13762;
double x13764 = p4_b*x13763;
double x13765 = 8*x13764;
double x13766 = x5330*x9685;
double x13767 = x13689*x158;
double x13768 = x13690*x158;
double x13769 = x13691*x158;
double x13770 = x5271*x9700;
double x13771 = p4_b*x9697;
double x13772 = 8*x13771;
double x13773 = x5332*x9685;
double x13774 = x13693*x158;
double x13775 = x11417*x9606;
double x13776 = x13695*x158;
double x13777 = x13696*x158;
double x13778 = x13697*x158;
double x13779 = p4_i_dot*x5247;
double x13780 = x13779*x9828;
double x13781 = x9573*x9607;
double x13782 = 8*x13781;
double x13783 = x13699*x158;
double x13784 = x13700*x158;
double x13785 = x13701*x158;
double x13786 = x13702*x158;
double x13787 = x13762*x9720;
double x13788 = x4121*x9613;
double x13789 = x5285*x9634;
double x13790 = p4_i_dot*x13789;
double x13791 = -x11371*x9716 + x11374*x9719 + x11375*x9719 + x11377*x9785 + x13787 + x13788 + x13790 - x5505*x9718 - x7*x9717 - x9602*x9720;
double x13792 = -x13765 - x13766 - x13767 - x13768 - x13769 - x13770 + x13772 + x13773 - x13774 - x13775 + x13776 + x13777 + x13778 + x13780 + x13782 - x13783 - x13784 - x13785 - x13786 + x13791;
double x13793 = x5330*x9571;
double x13794 = x5413*x9622;
double x13795 = x5413*x9623;
double x13796 = p3_b*x13763;
double x13797 = 6*x13796;
double x13798 = p3_b_dt*x5169;
double x13799 = x13798*x539;
double x13800 = x2142*x509;
double x13801 = p4_b*x2155;
double x13802 = p3_b*x13675;
double x13803 = x2167*x9336;
double x13804 = x2067*x9631;
double x13805 = p4_i*x13441;
double x13806 = x5285*x9807;
double x13807 = p4_b*x13366;
double x13808 = 4*x13763;
double x13809 = p4_b*x13808;
double x13810 = x5413*x9685;
double x13811 = 4*x13730;
double x13812 = x13688*x9336;
double x13813 = p4_i_dot*x13517;
double x13814 = p4_b_dot_dt*x8628;
double x13815 = p3_i_dot*x13814;
double x13816 = x13384*x9631;
double x13817 = x4115*x5149;
double x13818 = x2190*x5150;
double x13819 = p4_b*x13521;
double x13820 = L*x13688;
double x13821 = p3_b*x13820;
double x13822 = x13617*x540;
double x13823 = p4_b_dot_dt*x13419;
double x13824 = p4_b_dot*x5149;
double x13825 = x2*x4142;
double x13826 = p4_b*x13825;
double x13827 = x4105*x5502;
double x13828 = x2147*x5869;
double x13829 = x5285*x9700;
double x13830 = p4_b_dt*x13739;
double x13831 = p3_b*x9697;
double x13832 = x4115*x8675;
double x13833 = x2190*x5247;
double x13834 = x13692*x9336;
double x13835 = x13392*x9631;
double x13836 = x13694*x9336;
double x13837 = x13779*x9339;
double x13838 = x13394*x9631;
double x13839 = 4*x9587;
double x13840 = p3_b*x1858;
double x13841 = p3_i*x539;
double x13842 = x4142*x7;
double x13843 = p4_b_dot*x11370;
double x13844 = x11374*x540;
double x13845 = x5247*x9755;
double x13846 = p4_b_dot_dt*x13435;
double x13847 = p4_b_dot*x4147;
double x13848 = p4_i_dot*x11360;
double x13849 = x13848*x9336;
double x13850 = p4_i_dot*x5161;
double x13851 = x13850*x9336;
double x13852 = x13545*x9631;
double x13853 = x13547*x9631;
double x13854 = p3_b*x540;
double x13855 = p4_i*x11375;
double x13856 = p4_i*x11474;
double x13857 = 6*x13721;
double x13858 = 6*x13734;
double x13859 = 6*x13749;
double x13860 = 6*x13752;
double x13861 = 6*x13760;
double x13862 = -x13857 - x13858 + x13859 - x13860 + x13861;
double x13863 = x13762*x9631;
double x13864 = 8*x13863;
double x13865 = x9602*x9631;
double x13866 = x6128*x9716;
double x13867 = p4_b_dot_dt*p4_i_dot;
double x13868 = -x13563*x13867 + x13688*x9720 + x13692*x9720 - x13694*x9720 + x13848*x9720 + x13850*x9720 + x13864 - 8*x13865 - x13866 + x13867*x8989;
double x13869 = x5996*x9622;
double x13870 = x5996*x9623;
double x13871 = 14*x13796;
double x13872 = x5521*x9789;
double x13873 = 10*x13465;
double x13874 = x5244*x9391;
double x13875 = x13762*x9336;
double x13876 = 6*x13875;
double x13877 = x13463*x9631;
double x13878 = 6*x13877;
double x13879 = x5244*x9641;
double x13880 = p4_b*x13464;
double x13881 = 10*x13880;
double x13882 = 14*x13764;
double x13883 = x5521*x9685;
double x13884 = p4_b*x9403;
double x13885 = x13824*x458;
double x13886 = x9336*x9602;
double x13887 = 6*x9631;
double x13888 = p3_b_dot_dt*x13724;
double x13889 = x5150*x9700;
double x13890 = 14*x9607;
double x13891 = 12*x9661;
double x13892 = 12*x9662;
double x13893 = x9313*x9573;
double x13894 = p3_b*x286;
double x13895 = x5247*x9700;
double x13896 = p3_b_dot_dt*x13739;
double x13897 = p4_b*x154;
double x13898 = x5247*x9634;
double x13899 = x8675*x9757;
double x13900 = x11360*x540;
double x13901 = x5161*x540;
double x13902 = 7*p4_b;
double x13903 = x13717 + x13723 + x13725 - x13731 - x13732 + x13736 - x13747 - x13748 + x13754 + x13755;
double x13904 = x5911*x9622;
double x13905 = x5911*x9623;
double x13906 = 8*x13796;
double x13907 = x5330*x9789;
double x13908 = 4*x13875;
double x13909 = x13463*x9720;
double x13910 = x5330*x9641;
double x13911 = 8*x13880;
double x13912 = 4*x13820;
double x13913 = x4121*x9320;
double x13914 = p4_i_dot*x13491;
double x13915 = x5285*x9812;
double x13916 = x4038*x9613;
double x13917 = 8*x13893;
double x13918 = 8*x9661;
double x13919 = 8*x9662;
double x13920 = x13692*x158;
double x13921 = x9313*x9720;
double x13922 = x13694*x158;
double x13923 = x13779*x158;
double x13924 = x9279*x9607;
double x13925 = x13848*x158;
double x13926 = x13850*x158;
double x13927 = p3_i*x9611;
double x13928 = x5911*x9571;
double x13929 = 8*x13730;
double x13930 = 8*x9587;
double x13931 = x11360*x13930 + x11831*x9582 + x11840*x9587 - 8*x13830 + x13928 - x13929 + x13930*x5161 + x5536*x9744 - x5643*x9571 - x8676*x9582;
double x13932 = x6047*x9622;
double x13933 = x6047*x9623;
double x13934 = 32*x13796;
double x13935 = x5641*x9789;
double x13936 = 12*x13465;
double x13937 = x5306*x9391;
double x13938 = x5306*x9641;
double x13939 = 12*x13880;
double x13940 = 12*x13875;
double x13941 = 12*x13877;
double x13942 = 24*x13863;
double x13943 = 32*x13764;
double x13944 = x5641*x9685;
double x13945 = 12*p4_i_dot;
double x13946 = 18*x9661;
double x13947 = 18*x9662;
double x13948 = p3_b*x327;
double x13949 = p4_b*x3943;
double x13950 = x9313*x9835;
double x13951 = p4_b*x129;
double x13952 = 16*p4_b;
double x13953 = 4*x13673;
double x13954 = L*x13953;
double x13955 = 4*x13683;
double x13956 = x13678*x158;
double x13957 = x13684*x158;
double x13958 = x13685*x158;
double x13959 = -x13954 - x13955 + x13956 - x13957 + x13958;
double x13960 = x4121*x9;
double x13961 = x11*x4121;
double x13962 = p4_i_dot*x11595;
double x13963 = p4_i_dot*x11597;
double x13964 = p4_i_dot*x11599;
double x13965 = -x13960 - x13961 + x13962 - x13963 + x13964;
double x13966 = x13656 + x13657 - x13658 + x13659 - x13660 + x13667 + x13959 + x13965;
double x13967 = x6047*x9571;
double x13968 = 18*x9587;
double x13969 = x10658*x9744 + x11360*x13968 + x11962*x9582 + x11973*x9587 - x11977*x9582 - 18*x13730 - 18*x13830 + x13967 + x13968*x5161 - x7357*x9571;
double x13970 = x5413*x9858;
double x13971 = x5158*x518;
double x13972 = L*x13971;
double x13973 = x2*x518;
double x13974 = p5_b*x13973;
double x13975 = x10034*x5285;
double x13976 = p5_i*x11323;
double x13977 = p5_i*x11374;
double x13978 = -50*x5700;
double x13979 = x518*x5214;
double x13980 = p5_i*x11329;
double x13981 = p5_i*x11332;
double x13982 = p5_b*x2274;
double x13983 = p5_b_dot*x2247;
double x13984 = x512*x5149;
double x13985 = p5_b*x13984;
double x13986 = x4189*x5149;
double x13987 = x2252*x5150;
double x13988 = x2254*x5150;
double x13989 = p5_i_dot*x11348;
double x13990 = p5_b*x13989;
double x13991 = x512*x8675;
double x13992 = p5_b*x13991;
double x13993 = x4189*x8675;
double x13994 = x2252*x5247;
double x13995 = x2254*x5247;
double x13996 = p5_b*x11370;
double x13997 = x11360*x9894;
double x13998 = x5161*x9894;
double x13999 = x11360*x9895;
double x14000 = x5161*x9895;
double x14001 = -x13971 + x13976 - x13979 - x13980 + x13981;
double x14002 = theta_dt*x1127;
double x14003 = L*x14002;
double x14004 = 5*x14003;
double x14005 = p5_i_dot*x11323;
double x14006 = x14005*x154;
double x14007 = x512*x5214;
double x14008 = x14007*x154;
double x14009 = p5_i_dot*x11332;
double x14010 = x14009*x154;
double x14011 = p5_i_dot*x11329;
double x14012 = x14011*x154;
double x14013 = x14004 - x14006 + x14008 - x14010 + x14012;
double x14014 = x5996*x9858;
double x14015 = x5306*x9910;
double x14016 = x5306*x9911;
double x14017 = x14002*x70;
double x14018 = 22*x14017;
double x14019 = x11383*x9869;
double x14020 = p5_i*x5150;
double x14021 = x14020*x2268;
double x14022 = 10*x13721;
double x14023 = x10024*x5413;
double x14024 = p5_b*x13808;
double x14025 = x5149*x533;
double x14026 = x5202*x9867;
double x14027 = 12*x14026;
double x14028 = x6741*x9858;
double x14029 = L*x13979;
double x14030 = x14007*x70;
double x14031 = x5202*x9944;
double x14032 = x11951*x9874;
double x14033 = x533*x8675;
double x14034 = p5_i*x6;
double x14035 = x14034*x5160;
double x14036 = p4_b_dt*x14035;
double x14037 = p5_b_dt*x13739;
double x14038 = x13973*x539;
double x14039 = x2291*x9963;
double x14040 = x10037*x5285;
double x14041 = p5_b*x13825;
double x14042 = p5_i*x11696;
double x14043 = x11537*x9869;
double x14044 = x14035*x2268;
double x14045 = x14005*x70;
double x14046 = L*x13976;
double x14047 = x14011*x70;
double x14048 = 12*x9874;
double x14049 = x11360*x14048;
double x14050 = x14048*x5161;
double x14051 = p5_i*x2291;
double x14052 = p5_b*x9818;
double x14053 = 6*x9950;
double x14054 = 6*x9951;
double x14055 = x14009*x70;
double x14056 = x5214*x9965;
double x14057 = p5_b_dot_dt*x5154;
double x14058 = L*x14057;
double x14059 = p5_b*x14058;
double x14060 = 8*x14059;
double x14061 = x5330*x9975;
double x14062 = x13985*x158;
double x14063 = x13986*x158;
double x14064 = x13987*x158;
double x14065 = x13988*x158;
double x14066 = p5_b*x9987;
double x14067 = 8*x14066;
double x14068 = x5332*x9975;
double x14069 = x13990*x158;
double x14070 = x11417*x9895;
double x14071 = x13992*x158;
double x14072 = x13993*x158;
double x14073 = x13994*x158;
double x14074 = x13995*x158;
double x14075 = x9860*x9896;
double x14076 = 8*x14075;
double x14077 = x13997*x158;
double x14078 = x13998*x158;
double x14079 = x13999*x158;
double x14080 = x14000*x158;
double x14081 = x14057*x9919;
double x14082 = 4*x14081;
double x14083 = x9889*x9919;
double x14084 = x4205*x9903;
double x14085 = x5285*x9922;
double x14086 = p5_i_dot*x14085;
double x14087 = -x10005*x11371 - x10006*x7 - x10007*x5505 + x10008*x11374 + x10008*x11375 + x10008*x11474 + x14082 - 4*x14083 + x14084 + x14086;
double x14088 = -x14060 - x14061 - x14062 - x14063 - x14064 - x14065 + x14067 + x14068 - x14069 - x14070 + x14071 + x14072 + x14073 + x14074 + x14076 - x14077 - x14078 - x14079 - x14080 + x14087;
double x14089 = x5330*x9858;
double x14090 = x5413*x9910;
double x14091 = x5413*x9911;
double x14092 = p4_b*x14058;
double x14093 = 6*x14092;
double x14094 = p4_b_dt*x5169;
double x14095 = x14094*x569;
double x14096 = x2247*x539;
double x14097 = p5_b*x2262;
double x14098 = p4_b*x13973;
double x14099 = x2274*x9631;
double x14100 = x2167*x9919;
double x14101 = x10105*x5285;
double x14102 = x10106*x5285;
double x14103 = p5_b*x13675;
double x14104 = 4*x14058;
double x14105 = p5_b*x14104;
double x14106 = x5413*x9975;
double x14107 = 4*x14026;
double x14108 = x13984*x9631;
double x14109 = p5_i_dot*x13814;
double x14110 = p5_b_dot_dt*x8628;
double x14111 = p4_i_dot*x14110;
double x14112 = x13688*x9919;
double x14113 = p5_b*x13820;
double x14114 = L*x13984;
double x14115 = p4_b*x14114;
double x14116 = x2175*x5150;
double x14117 = p5_b_dot_dt*x13724;
double x14118 = x2*x4226;
double x14119 = p5_b*x14118;
double x14120 = x4189*x5502;
double x14121 = x2252*x5869;
double x14122 = x2254*x5869;
double x14123 = p5_b_dt*x14035;
double x14124 = p4_b*x9987;
double x14125 = x13989*x9631;
double x14126 = x13692*x9919;
double x14127 = x13991*x9631;
double x14128 = p5_i_dot*x5247;
double x14129 = x13779*x9922;
double x14130 = x13694*x9919;
double x14131 = 4*x9874;
double x14132 = p4_b*x1858;
double x14133 = p4_i*x569;
double x14134 = x4226*x7;
double x14135 = x11374*x570;
double x14136 = p5_b_dot_dt*x13739;
double x14137 = x10114*x8675;
double x14138 = p5_i_dot*x11360;
double x14139 = x14138*x9631;
double x14140 = p5_i_dot*x5161;
double x14141 = x14140*x9631;
double x14142 = x13848*x9919;
double x14143 = x13850*x9919;
double x14144 = p4_b*x570;
double x14145 = p5_i*x11375;
double x14146 = p5_i*x11474;
double x14147 = 7*x14017;
double x14148 = -7*x14030 + 7*x14045 - 7*x14047 + 7*x14055 - x14147;
double x14149 = 8*x14081;
double x14150 = x10005*x6128;
double x14151 = x13984*x9919;
double x14152 = p5_b_dot_dt*p5_i_dot;
double x14153 = 4*x9919;
double x14154 = -x13563*x14152 + x13989*x14153 - x13991*x14153 - 8*x14083 + x14138*x14153 + x14140*x14153 + x14149 - x14150 + 4*x14151 + x14152*x8989;
double x14155 = x5996*x9910;
double x14156 = x5996*x9911;
double x14157 = 14*x14092;
double x14158 = x10018*x5521;
double x14159 = 10*x13764;
double x14160 = x5244*x9685;
double x14161 = x14057*x9631;
double x14162 = 6*x14161;
double x14163 = x13762*x9919;
double x14164 = 6*x14163;
double x14165 = x10024*x5244;
double x14166 = p5_b*x13763;
double x14167 = 10*x14166;
double x14168 = 14*x14059;
double x14169 = x5521*x9975;
double x14170 = p5_b*x9697;
double x14171 = p5_i_dot*x14116;
double x14172 = x10114*x5149;
double x14173 = x9602*x9919;
double x14174 = x10035*x5149;
double x14175 = p4_b_dot_dt*x14020;
double x14176 = 14*x9896;
double x14177 = 12*x9950;
double x14178 = 12*x9951;
double x14179 = x9607*x9860;
double x14180 = p4_b*x286;
double x14181 = x10035*x8675;
double x14182 = p4_b_dot_dt*x154;
double x14183 = p5_b_dt*x13779;
double x14184 = p5_b*x154;
double x14185 = x14128*x2175;
double x14186 = x11360*x570;
double x14187 = x5161*x570;
double x14188 = 7*p5_b;
double x14189 = x14014 + x14019 + x14021 - x14027 - x14028 + x14032 - x14043 - x14044 + x14049 + x14050;
double x14190 = x5911*x9910;
double x14191 = x5911*x9911;
double x14192 = 8*x14092;
double x14193 = x10018*x5330;
double x14194 = x14057*x9720;
double x14195 = 4*x14163;
double x14196 = x10024*x5330;
double x14197 = 8*x14166;
double x14198 = 4*x14114;
double x14199 = x4205*x9613;
double x14200 = p5_i_dot*x13789;
double x14201 = p4_i_dot*x14085;
double x14202 = x4121*x9903;
double x14203 = p5_b_dt*x5150;
double x14204 = 8*x14179;
double x14205 = 8*x9950;
double x14206 = 8*x9951;
double x14207 = x13989*x158;
double x14208 = x14153*x9607;
double x14209 = x13991*x158;
double x14210 = x9573*x9896;
double x14211 = x14138*x158;
double x14212 = x14140*x158;
double x14213 = x5911*x9858;
double x14214 = 8*x14026;
double x14215 = 8*x9874;
double x14216 = x10034*x5536 + x11360*x14215 + x11831*x9869 + x11840*x9874 - 8*x14123 + x14213 - x14214 + x14215*x5161 - x5643*x9858 - x8676*x9869;
double x14217 = x6047*x9910;
double x14218 = x6047*x9911;
double x14219 = 32*x14092;
double x14220 = x10018*x5641;
double x14221 = 12*x13764;
double x14222 = x5306*x9685;
double x14223 = x10024*x5306;
double x14224 = 12*x14166;
double x14225 = 12*x14161;
double x14226 = 12*x14163;
double x14227 = 24*x14081;
double x14228 = 32*x14059;
double x14229 = x5641*x9975;
double x14230 = 12*p5_i_dot;
double x14231 = 18*x9950;
double x14232 = 18*x9951;
double x14233 = p4_b*x327;
double x14234 = p5_b*x3943;
double x14235 = x10247*x9607;
double x14236 = p4_b_dot_dt*x129;
double x14237 = p5_b*x129;
double x14238 = 16*p5_b;
double x14239 = 4*x13971;
double x14240 = L*x14239;
double x14241 = x13979*x158;
double x14242 = x13976*x158;
double x14243 = x13980*x158;
double x14244 = x13981*x158;
double x14245 = -x14240 - x14241 + x14242 - x14243 + x14244;
double x14246 = x4205*x9;
double x14247 = x11*x4205;
double x14248 = p5_i_dot*x11595;
double x14249 = p5_i_dot*x11597;
double x14250 = p5_i_dot*x11599;
double x14251 = -x14246 - x14247 + x14248 - x14249 + x14250;
double x14252 = x13954 + x13955 - x13956 + x13957 - x13958 + x13965 + x14245 + x14251;
double x14253 = x6047*x9858;
double x14254 = 18*x9874;
double x14255 = x10034*x10658 + x11360*x14254 + x11962*x9869 + x11973*x9874 - x11977*x9869 - 18*x14026 - 18*x14123 + x14253 + x14254*x5161 - x7357*x9858;
double x14256 = x10156*x5413;
double x14257 = x5158*x548;
double x14258 = 12*x14257;
double x14259 = x2*x548;
double x14260 = p6_b*x14259;
double x14261 = x10329*x5285;
double x14262 = p6_i*x11323;
double x14263 = p6_i*x11374;
double x14264 = 72*x5700;
double x14265 = -x14264;
double x14266 = x2412*x5214;
double x14267 = p6_i*x11329;
double x14268 = p6_i*x11332;
double x14269 = p6_b*x2373;
double x14270 = p6_b_dot*x2348;
double x14271 = x5149*x542;
double x14272 = p6_b*x14271;
double x14273 = x4272*x5149;
double x14274 = x2353*x5150;
double x14275 = p6_i_dot*x11348;
double x14276 = p6_b*x14275;
double x14277 = x542*x8675;
double x14278 = p6_b*x14277;
double x14279 = x4272*x8675;
double x14280 = x2353*x5247;
double x14281 = p6_b*x11370;
double x14282 = x10192*x11360;
double x14283 = x10192*x5161;
double x14284 = x10193*x11360;
double x14285 = x10193*x5161;
double x14286 = x5214*x548;
double x14287 = -x14257 + x14262 - x14267 + x14268 - x14286;
double x14288 = theta_dt*x1175;
double x14289 = L*x14288;
double x14290 = 6*x14289;
double x14291 = p6_i_dot*x11323;
double x14292 = x129*x14291;
double x14293 = x5214*x542;
double x14294 = x129*x14293;
double x14295 = p6_i_dot*x11332;
double x14296 = x129*x14295;
double x14297 = p6_i_dot*x11329;
double x14298 = x129*x14297;
double x14299 = x14290 - x14292 + x14294 - x14296 + x14298;
double x14300 = x10156*x5996;
double x14301 = x10208*x5306;
double x14302 = x10209*x5306;
double x14303 = L*x14257;
double x14304 = x14288*x70;
double x14305 = 26*x14304;
double x14306 = 12*x14017;
double x14307 = x10167*x11383;
double x14308 = p6_i*x5150;
double x14309 = x14308*x2367;
double x14310 = x10228*x5413;
double x14311 = p6_b*x14104;
double x14312 = x5149*x563;
double x14313 = x10165*x5202;
double x14314 = 12*x14313;
double x14315 = x10156*x6741;
double x14316 = 26*x70;
double x14317 = x10244*x5202;
double x14318 = 12*x14030;
double x14319 = x10172*x11951;
double x14320 = x563*x8675;
double x14321 = p6_i*x6;
double x14322 = x14321*x5160;
double x14323 = p5_b_dt*x14322;
double x14324 = p6_b_dt*x14035;
double x14325 = x2*x4282;
double x14326 = x10262*x2394;
double x14327 = x2396*x5285;
double x14328 = p6_b*x14118;
double x14329 = p6_i*x11696;
double x14330 = 12*x14045;
double x14331 = x10167*x11537;
double x14332 = x14322*x2367;
double x14333 = L*x14262;
double x14334 = 12*x14047;
double x14335 = 12*x10172;
double x14336 = x11360*x14335;
double x14337 = x14335*x5161;
double x14338 = p6_i*x2394;
double x14339 = p6_b*x10118;
double x14340 = 6*x10248;
double x14341 = 6*x10249;
double x14342 = 12*x14055;
double x14343 = x10264*x5214;
double x14344 = p6_b_dot_dt*x5154;
double x14345 = L*x14344;
double x14346 = p6_b*x14345;
double x14347 = 8*x14346;
double x14348 = x10271*x5330;
double x14349 = x14272*x158;
double x14350 = x14273*x158;
double x14351 = x14274*x158;
double x14352 = x10286*x5271;
double x14353 = p6_b*x10283;
double x14354 = 8*x14353;
double x14355 = x10271*x5332;
double x14356 = x14276*x158;
double x14357 = x10193*x11417;
double x14358 = x14278*x158;
double x14359 = x14279*x158;
double x14360 = x14280*x158;
double x14361 = p6_i_dot*x5247;
double x14362 = x10413*x14361;
double x14363 = x10158*x10194;
double x14364 = 8*x14363;
double x14365 = x14282*x158;
double x14366 = x14283*x158;
double x14367 = x14284*x158;
double x14368 = x14285*x158;
double x14369 = x10306*x14344;
double x14370 = x10200*x4288;
double x14371 = x10221*x5285;
double x14372 = p6_i_dot*x14371;
double x14373 = -x10189*x10306 - x10302*x11371 - x10303*x7 - x10304*x5505 + x10305*x11374 + x10305*x11375 + x10368*x11377 + x14369 + x14370 + x14372;
double x14374 = -x14347 - x14348 - x14349 - x14350 - x14351 - x14352 + x14354 + x14355 - x14356 - x14357 + x14358 + x14359 + x14360 + x14362 + x14364 - x14365 - x14366 - x14367 - x14368 + x14373;
double x14375 = x10156*x5330;
double x14376 = x10208*x5413;
double x14377 = x10209*x5413;
double x14378 = p5_b*x14345;
double x14379 = 6*x14378;
double x14380 = p5_b_dt*x5169;
double x14381 = x14380*x599;
double x14382 = x2348*x569;
double x14383 = p6_b*x2361;
double x14384 = p5_b*x14259;
double x14385 = x2373*x9919;
double x14386 = x10218*x2274;
double x14387 = x10391*x5285;
double x14388 = x10392*x5285;
double x14389 = p6_b*x13973;
double x14390 = 4*x14345;
double x14391 = p6_b*x14390;
double x14392 = x10271*x5413;
double x14393 = 4*x14313;
double x14394 = x14271*x9919;
double x14395 = p6_i_dot*x14110;
double x14396 = p6_b_dot_dt*x8628;
double x14397 = p5_i_dot*x14396;
double x14398 = x10218*x13984;
double x14399 = x4282*x5149;
double x14400 = x2396*x5150;
double x14401 = p6_b*x14114;
double x14402 = L*x14271;
double x14403 = p5_b*x14402;
double x14404 = x14203*x600;
double x14405 = p6_b_dot_dt*x14020;
double x14406 = p6_b_dot*x5149;
double x14407 = x2*x4309;
double x14408 = p6_b*x14407;
double x14409 = x4272*x5502;
double x14410 = x2353*x5869;
double x14411 = x10286*x5285;
double x14412 = p6_b_dt*x14322;
double x14413 = p5_b*x10283;
double x14414 = x4282*x8675;
double x14415 = x2396*x5247;
double x14416 = x14275*x9919;
double x14417 = x10218*x13989;
double x14418 = x14277*x9919;
double x14419 = x14361*x9922;
double x14420 = x10221*x14128;
double x14421 = x10218*x13991;
double x14422 = 4*x10172;
double x14423 = p5_b*x1858;
double x14424 = p5_i*x599;
double x14425 = x4309*x7;
double x14426 = p6_b_dot*x11370;
double x14427 = x11374*x600;
double x14428 = x10339*x5247;
double x14429 = p6_b_dot_dt*x14035;
double x14430 = p6_b_dot*x4314;
double x14431 = p6_i_dot*x11360;
double x14432 = x14431*x9919;
double x14433 = p6_i_dot*x5161;
double x14434 = x14433*x9919;
double x14435 = x10218*x14138;
double x14436 = x10218*x14140;
double x14437 = p5_b*x600;
double x14438 = p6_i*x11375;
double x14439 = p6_i*x11474;
double x14440 = 8*x14304;
double x14441 = x14293*x70;
double x14442 = x14291*x70;
double x14443 = x14297*x70;
double x14444 = x14295*x70;
double x14445 = -x14440 - 8*x14441 + 8*x14442 - 8*x14443 + 8*x14444;
double x14446 = x10218*x14344;
double x14447 = 8*x14446;
double x14448 = x10189*x10218;
double x14449 = x10302*x6128;
double x14450 = p6_b_dot_dt*p6_i_dot;
double x14451 = x10306*x14271 + x10306*x14275 - x10306*x14277 + x10306*x14431 + x10306*x14433 - x13563*x14450 + x14447 - 8*x14448 - x14449 + x14450*x8989;
double x14452 = x10208*x5996;
double x14453 = x10209*x5996;
double x14454 = 14*x14378;
double x14455 = x10372*x5521;
double x14456 = 10*x14059;
double x14457 = x5244*x9975;
double x14458 = x14344*x9919;
double x14459 = 6*x14458;
double x14460 = x10218*x14057;
double x14461 = 6*x14460;
double x14462 = x10228*x5244;
double x14463 = p6_b*x14058;
double x14464 = 10*x14463;
double x14465 = 14*x14346;
double x14466 = x10271*x5521;
double x14467 = p6_b*x9987;
double x14468 = x14406*x518;
double x14469 = x10189*x9919;
double x14470 = 6*x10218;
double x14471 = x10286*x5150;
double x14472 = 14*x10194;
double x14473 = 12*x10248;
double x14474 = 12*x10249;
double x14475 = x10158*x9896;
double x14476 = p5_b*x286;
double x14477 = x10286*x5247;
double x14478 = p6_b*x154;
double x14479 = x10221*x5247;
double x14480 = x10341*x8675;
double x14481 = x11360*x600;
double x14482 = x5161*x600;
double x14483 = 7*p6_b;
double x14484 = x14300 + x14307 + x14309 - x14314 - x14315 + x14319 - x14331 - x14332 + x14336 + x14337;
double x14485 = x10208*x5911;
double x14486 = x10209*x5911;
double x14487 = 8*x14378;
double x14488 = x10372*x5330;
double x14489 = 4*x14458;
double x14490 = x10306*x14057;
double x14491 = x10228*x5330;
double x14492 = 8*x14463;
double x14493 = 4*x14402;
double x14494 = x4288*x9903;
double x14495 = p6_i_dot*x14085;
double x14496 = p5_i_dot*x14371;
double x14497 = x10200*x4205;
double x14498 = p5_b_dot_dt*x14308;
double x14499 = 8*x14475;
double x14500 = 8*x10248;
double x14501 = 8*x10249;
double x14502 = x14275*x158;
double x14503 = p5_b_dot_dt*x14322;
double x14504 = x10306*x9896;
double x14505 = x14277*x158;
double x14506 = x14361*x158;
double x14507 = x10194*x9860;
double x14508 = x14431*x158;
double x14509 = x14433*x158;
double x14510 = p6_b*x158;
double x14511 = x10156*x5911;
double x14512 = 8*x14313;
double x14513 = 8*x10172;
double x14514 = -x10156*x5643 + x10167*x11831 - x10167*x8676 + x10172*x11840 + x10329*x5536 + x11360*x14513 - 8*x14412 + x14511 - x14512 + x14513*x5161;
double x14515 = x10208*x6047;
double x14516 = x10209*x6047;
double x14517 = 32*x14378;
double x14518 = x10372*x5641;
double x14519 = 12*x14059;
double x14520 = x5306*x9975;
double x14521 = x10228*x5306;
double x14522 = 12*x14463;
double x14523 = 12*x14458;
double x14524 = 12*x14460;
double x14525 = 24*x14446;
double x14526 = 32*x14346;
double x14527 = x10271*x5641;
double x14528 = 12*p6_i_dot;
double x14529 = 18*x10248;
double x14530 = 18*x10249;
double x14531 = p5_b*x327;
double x14532 = p6_b*x3943;
double x14533 = x10420*x9896;
double x14534 = p6_b*x129;
double x14535 = 16*p6_b;
double x14536 = 4*x14257;
double x14537 = L*x14536;
double x14538 = 4*x14266;
double x14539 = x14262*x158;
double x14540 = x14267*x158;
double x14541 = x14268*x158;
double x14542 = -x14537 - x14538 + x14539 - x14540 + x14541;
double x14543 = x4288*x9;
double x14544 = x11*x4288;
double x14545 = p6_i_dot*x11595;
double x14546 = p6_i_dot*x11597;
double x14547 = p6_i_dot*x11599;
double x14548 = -x14543 - x14544 + x14545 - x14546 + x14547;
double x14549 = x14240 + x14241 - x14242 + x14243 - x14244 + x14251 + x14542 + x14548;
double x14550 = x10156*x6047;
double x14551 = 18*x10172;
double x14552 = -x10156*x7357 + x10167*x11962 - x10167*x11977 + x10172*x11973 + x10329*x10658 + x11360*x14551 - 18*x14313 - 18*x14412 + x14550 + x14551*x5161;
double x14553 = x10441*x5413;
double x14554 = x5158*x578;
double x14555 = L*x14554;
double x14556 = x2*x578;
double x14557 = p7_b*x14556;
double x14558 = x10618*x5285;
double x14559 = p7_i*x11323;
double x14560 = L*x14559;
double x14561 = p7_i*x11374;
double x14562 = -98*x5700;
double x14563 = x5214*x578;
double x14564 = L*x14563;
double x14565 = p7_i*x11329;
double x14566 = p7_i*x11332;
double x14567 = p7_b*x2478;
double x14568 = p7_b_dot*x2451;
double x14569 = x5149*x572;
double x14570 = p7_b*x14569;
double x14571 = x4355*x5149;
double x14572 = x2456*x5150;
double x14573 = x2458*x5150;
double x14574 = p7_i_dot*x11348;
double x14575 = p7_b*x14574;
double x14576 = x572*x8675;
double x14577 = p7_b*x14576;
double x14578 = x4355*x8675;
double x14579 = x2456*x5247;
double x14580 = x2458*x5247;
double x14581 = p7_b*x11370;
double x14582 = x10478*x11360;
double x14583 = x10478*x5161;
double x14584 = x10479*x11360;
double x14585 = x10479*x5161;
double x14586 = -x14554 + x14559 - x14563 - x14565 + x14566;
double x14587 = theta_dt*x1228;
double x14588 = L*x14587;
double x14589 = 7*x14588;
double x14590 = p7_i_dot*x11323;
double x14591 = x14590*x286;
double x14592 = x5214*x572;
double x14593 = x14592*x286;
double x14594 = x10486*x11332;
double x14595 = x10486*x11329;
double x14596 = x14589 - x14591 + x14593 - x14594 + x14595;
double x14597 = x10441*x5996;
double x14598 = x10494*x5306;
double x14599 = x10495*x5306;
double x14600 = x14587*x70;
double x14601 = 30*x14600;
double x14602 = 14*x14304;
double x14603 = x10452*x11383;
double x14604 = p7_i*x5150;
double x14605 = x14604*x2472;
double x14606 = x10608*x5413;
double x14607 = p7_b*x14390;
double x14608 = x5149*x593;
double x14609 = x10450*x5202;
double x14610 = 12*x14609;
double x14611 = x10441*x6741;
double x14612 = x14592*x70;
double x14613 = x10529*x5202;
double x14614 = x10457*x11951;
double x14615 = x593*x8675;
double x14616 = p7_i*x6;
double x14617 = x14616*x5160;
double x14618 = p6_b_dt*x14617;
double x14619 = p7_b_dt*x14322;
double x14620 = x14556*x599;
double x14621 = x10549*x2495;
double x14622 = x10621*x5285;
double x14623 = p7_b*x14407;
double x14624 = p7_i*x11696;
double x14625 = x10452*x11537;
double x14626 = x14617*x2472;
double x14627 = x14590*x70;
double x14628 = p7_i_dot*x11329;
double x14629 = x14628*x70;
double x14630 = 12*x10457;
double x14631 = x11360*x14630;
double x14632 = x14630*x5161;
double x14633 = p7_i*x2495;
double x14634 = p7_b*x10403;
double x14635 = 6*x10533;
double x14636 = 6*x10534;
double x14637 = p7_i_dot*x11332;
double x14638 = x14637*x70;
double x14639 = x10551*x5214;
double x14640 = p7_b_dot_dt*x5154;
double x14641 = L*x14640;
double x14642 = p7_b*x14641;
double x14643 = 8*x14642;
double x14644 = x10558*x5330;
double x14645 = x14570*x158;
double x14646 = x14571*x158;
double x14647 = x14572*x158;
double x14648 = x14573*x158;
double x14649 = p7_b*x10570;
double x14650 = 8*x14649;
double x14651 = x10558*x5332;
double x14652 = x14575*x158;
double x14653 = x10479*x11417;
double x14654 = x14577*x158;
double x14655 = x14578*x158;
double x14656 = x14579*x158;
double x14657 = x14580*x158;
double x14658 = x10443*x10480;
double x14659 = 8*x14658;
double x14660 = x14582*x158;
double x14661 = x14583*x158;
double x14662 = x14584*x158;
double x14663 = x14585*x158;
double x14664 = x10503*x14640;
double x14665 = 4*x14664;
double x14666 = x10474*x10503;
double x14667 = x10487*x4370;
double x14668 = x10506*x5285;
double x14669 = p7_i_dot*x14668;
double x14670 = -x10588*x11371 - x10589*x7 - x10590*x5505 + x10591*x11374 + x10591*x11375 + x10591*x11474 + x14665 - 4*x14666 + x14667 + x14669;
double x14671 = -x14643 - x14644 - x14645 - x14646 - x14647 - x14648 + x14650 + x14651 - x14652 - x14653 + x14654 + x14655 + x14656 + x14657 + x14659 - x14660 - x14661 - x14662 - x14663 + x14670;
double x14672 = x10441*x5330;
double x14673 = x10494*x5413;
double x14674 = x10495*x5413;
double x14675 = p6_b*x14641;
double x14676 = 6*x14675;
double x14677 = p6_b_dt*x5169;
double x14678 = x14677*x629;
double x14679 = x2451*x599;
double x14680 = p7_b*x2466;
double x14681 = p6_b*x14556;
double x14682 = x10218*x2478;
double x14683 = x10503*x2373;
double x14684 = x10687*x5285;
double x14685 = x10688*x5285;
double x14686 = p7_b*x14259;
double x14687 = 4*x14641;
double x14688 = p7_b*x14687;
double x14689 = x10558*x5413;
double x14690 = 4*x14609;
double x14691 = x10218*x14569;
double x14692 = p7_i_dot*x14396;
double x14693 = p7_b_dot_dt*x8628;
double x14694 = p6_i_dot*x14693;
double x14695 = x10503*x14271;
double x14696 = p7_b*x14402;
double x14697 = L*x14569;
double x14698 = p6_b*x14697;
double x14699 = x2381*x5150;
double x14700 = p7_b_dot_dt*x14308;
double x14701 = x2*x4391;
double x14702 = p7_b*x14701;
double x14703 = x4355*x5502;
double x14704 = x2456*x5869;
double x14705 = x2458*x5869;
double x14706 = p7_b_dt*x14617;
double x14707 = p6_b*x10570;
double x14708 = x10218*x14574;
double x14709 = x10503*x14275;
double x14710 = x10218*x14576;
double x14711 = p7_i_dot*x5247;
double x14712 = x10221*x14711;
double x14713 = x10506*x14361;
double x14714 = x10503*x14277;
double x14715 = 4*x10457;
double x14716 = p6_b*x1858;
double x14717 = p6_i*x629;
double x14718 = x4391*x7;
double x14719 = x11374*x630;
double x14720 = p7_b_dot_dt*x14322;
double x14721 = x10696*x8675;
double x14722 = p7_i_dot*x11360;
double x14723 = x10218*x14722;
double x14724 = p7_i_dot*x5161;
double x14725 = x10218*x14724;
double x14726 = x10503*x14431;
double x14727 = x10503*x14433;
double x14728 = p6_b*x630;
double x14729 = p7_i*x11375;
double x14730 = p7_i*x11474;
double x14731 = 9*x14600;
double x14732 = -9*x14612 + 9*x14627 - 9*x14629 + 9*x14638 - x14731;
double x14733 = 8*x14664;
double x14734 = x10588*x6128;
double x14735 = x10503*x14569;
double x14736 = p7_b_dot_dt*p7_i_dot;
double x14737 = 4*x10503;
double x14738 = -x13563*x14736 + x14574*x14737 - x14576*x14737 - 8*x14666 + x14722*x14737 + x14724*x14737 + x14733 - x14734 + 4*x14735 + x14736*x8989;
double x14739 = x10494*x5996;
double x14740 = x10495*x5996;
double x14741 = 14*x14675;
double x14742 = x10602*x5521;
double x14743 = 10*x14346;
double x14744 = x10271*x5244;
double x14745 = x10218*x14640;
double x14746 = 6*x14745;
double x14747 = x10503*x14344;
double x14748 = 6*x14747;
double x14749 = x10608*x5244;
double x14750 = p7_b*x14345;
double x14751 = 10*x14750;
double x14752 = 14*x14642;
double x14753 = x10558*x5521;
double x14754 = p7_b*x10283;
double x14755 = p7_i_dot*x14699;
double x14756 = x10696*x5149;
double x14757 = x10189*x10503;
double x14758 = x10619*x5149;
double x14759 = p6_b_dot_dt*x14604;
double x14760 = 14*x10480;
double x14761 = 12*x10533;
double x14762 = 12*x10534;
double x14763 = x10194*x10443;
double x14764 = p6_b*x286;
double x14765 = x10194*x10503;
double x14766 = x10619*x8675;
double x14767 = p6_b_dot_dt*x14617;
double x14768 = p7_b_dt*x14361;
double x14769 = p7_b*x154;
double x14770 = x14711*x2381;
double x14771 = p6_b*x10486;
double x14772 = p7_b_dot*x286;
double x14773 = p6_i*x14772;
double x14774 = p7_b*x10486;
double x14775 = x14597 + x14603 + x14605 - x14610 - x14611 + x14614 - x14625 - x14626 + x14631 + x14632;
double x14776 = x10494*x5911;
double x14777 = x10495*x5911;
double x14778 = 8*x14675;
double x14779 = x10602*x5330;
double x14780 = x10306*x14640;
double x14781 = 4*x14747;
double x14782 = x10608*x5330;
double x14783 = 8*x14750;
double x14784 = 4*x14697;
double x14785 = x10200*x4370;
double x14786 = p7_i_dot*x14371;
double x14787 = p6_i_dot*x14668;
double x14788 = x10487*x4288;
double x14789 = p7_b_dt*x5150;
double x14790 = 8*x14763;
double x14791 = 8*x10533;
double x14792 = 8*x10534;
double x14793 = x14574*x158;
double x14794 = x10194*x14737;
double x14795 = x14576*x158;
double x14796 = x10158*x10480;
double x14797 = x10441*x5911;
double x14798 = 8*x14609;
double x14799 = 8*x10457;
double x14800 = -x10441*x5643 + x10452*x11831 - x10452*x8676 + x10457*x11840 + x10618*x5536 + x11360*x14799 - 8*x14706 + x14797 - x14798 + x14799*x5161;
double x14801 = x10494*x6047;
double x14802 = x10495*x6047;
double x14803 = 32*x14675;
double x14804 = x10602*x5641;
double x14805 = 12*x14346;
double x14806 = x10271*x5306;
double x14807 = x10608*x5306;
double x14808 = 12*x14750;
double x14809 = 12*x14745;
double x14810 = 12*x14747;
double x14811 = 24*x14664;
double x14812 = 32*x14642;
double x14813 = x10558*x5641;
double x14814 = 12*p7_i_dot;
double x14815 = 18*x10533;
double x14816 = 18*x10534;
double x14817 = p6_b*x327;
double x14818 = p7_b*x3943;
double x14819 = 12*x14765;
double x14820 = 12*x10503;
double x14821 = p7_b*x129;
double x14822 = x11360*x630;
double x14823 = x5161*x630;
double x14824 = 16*p7_b;
double x14825 = 4*x14554;
double x14826 = L*x14825;
double x14827 = x14563*x158;
double x14828 = x14559*x158;
double x14829 = x14565*x158;
double x14830 = x14566*x158;
double x14831 = -x14826 - x14827 + x14828 - x14829 + x14830;
double x14832 = x4370*x9;
double x14833 = x11*x4370;
double x14834 = p7_i_dot*x11595;
double x14835 = p7_i_dot*x11597;
double x14836 = p7_i_dot*x11599;
double x14837 = -x14832 - x14833 + x14834 - x14835 + x14836;
double x14838 = x14537 + x14538 - x14539 + x14540 - x14541 + x14548 + x14831 + x14837;
double x14839 = x10441*x6047;
double x14840 = 18*x10457;
double x14841 = -x10441*x7357 + x10452*x11962 - x10452*x11977 + x10457*x11973 + x10618*x10658 + x11360*x14840 - 18*x14609 - 18*x14706 + x14839 + x14840*x5161;
double x14842 = x10739*x5413;
double x14843 = -128*x5700;
double x14844 = x2*x608;
double x14845 = p8_b*x14844;
double x14846 = x10922*x5285;
double x14847 = p8_i*x11374;
double x14848 = x5158*x608;
double x14849 = L*x14848;
double x14850 = 16*x14849;
double x14851 = p8_i*x11323;
double x14852 = x14851*x327;
double x14853 = x2617*x5214;
double x14854 = 16*x14853;
double x14855 = p8_i*x11332;
double x14856 = x14855*x327;
double x14857 = p8_i*x11329;
double x14858 = x14857*x327;
double x14859 = x14850 - x14852 + x14854 - x14856 + x14858;
double x14860 = p8_b*x2578;
double x14861 = p8_b_dot*x2553;
double x14862 = x5149*x602;
double x14863 = p8_b*x14862;
double x14864 = x4436*x5149;
double x14865 = x2558*x5150;
double x14866 = theta_dt*x1276;
double x14867 = L*x14866;
double x14868 = 8*x14867;
double x14869 = p8_i_dot*x11348;
double x14870 = p8_b*x14869;
double x14871 = x602*x8675;
double x14872 = p8_b*x14871;
double x14873 = x4436*x8675;
double x14874 = x2558*x5247;
double x14875 = p8_i_dot*x11323;
double x14876 = L*x14875;
double x14877 = p8_b*x11370;
double x14878 = x5214*x602;
double x14879 = L*x14878;
double x14880 = x10777*x11360;
double x14881 = x10777*x5161;
double x14882 = x10778*x11360;
double x14883 = x10778*x5161;
double x14884 = x5214*x608;
double x14885 = -x14848 + x14851 + x14855 - x14857 - x14884;
double x14886 = x10739*x5996;
double x14887 = x10794*x5306;
double x14888 = x10795*x5306;
double x14889 = x14866*x70;
double x14890 = 34*x14889;
double x14891 = 16*x14600;
double x14892 = x10751*x11383;
double x14893 = p8_i*x5150;
double x14894 = x14893*x2572;
double x14895 = x10814*x5413;
double x14896 = p8_b*x14687;
double x14897 = x5149*x623;
double x14898 = x10749*x5202;
double x14899 = 12*x14898;
double x14900 = x10739*x6741;
double x14901 = x14878*x70;
double x14902 = x10833*x5202;
double x14903 = x10756*x11951;
double x14904 = x623*x8675;
double x14905 = p8_i*x6;
double x14906 = x14905*x5160;
double x14907 = p7_b_dt*x14906;
double x14908 = p8_b_dt*x14617;
double x14909 = x2*x4446;
double x14910 = x10851*x2599;
double x14911 = x2601*x5285;
double x14912 = p8_b*x14701;
double x14913 = p8_i*x11696;
double x14914 = x10751*x11537;
double x14915 = x14906*x2572;
double x14916 = x14875*x70;
double x14917 = p8_i_dot*x11329;
double x14918 = x14917*x70;
double x14919 = 12*x10756;
double x14920 = x11360*x14919;
double x14921 = x14919*x5161;
double x14922 = p8_i*x2599;
double x14923 = p8_b*x10701;
double x14924 = 6*x10837;
double x14925 = 6*x10838;
double x14926 = p8_i_dot*x11332;
double x14927 = x14926*x70;
double x14928 = x10852*x5214;
double x14929 = p8_b_dot_dt*x5154;
double x14930 = L*x14929;
double x14931 = p8_b*x14930;
double x14932 = 8*x14931;
double x14933 = x10861*x5330;
double x14934 = x14863*x158;
double x14935 = x14864*x158;
double x14936 = x14865*x158;
double x14937 = x10933*x5271;
double x14938 = p8_b*x10873;
double x14939 = 8*x14938;
double x14940 = x10861*x5332;
double x14941 = x14870*x158;
double x14942 = x10778*x11417;
double x14943 = x14872*x158;
double x14944 = x14873*x158;
double x14945 = x14874*x158;
double x14946 = p8_i_dot*x5247;
double x14947 = x10876*x14946;
double x14948 = x10742*x10779;
double x14949 = 8*x14948;
double x14950 = x14880*x158;
double x14951 = x14881*x158;
double x14952 = x14882*x158;
double x14953 = x14883*x158;
double x14954 = x10897*x14929;
double x14955 = x10786*x2575;
double x14956 = x10807*x5285;
double x14957 = p8_i_dot*x14956;
double x14958 = -x10772*x10897 - x10893*x11371 - x10894*x7 - x10895*x5505 + x10896*x11374 + x10896*x11375 + x10965*x11377 + x14954 + x14955 + x14957;
double x14959 = -x14932 - x14933 - x14934 - x14935 - x14936 - x14937 + x14939 + x14940 - x14941 - x14942 + x14943 + x14944 + x14945 + x14947 + x14949 - x14950 - x14951 - x14952 - x14953 + x14958;
double x14960 = x10739*x5330;
double x14961 = x10794*x5413;
double x14962 = x10795*x5413;
double x14963 = p7_b*x14930;
double x14964 = 6*x14963;
double x14965 = p7_b_dt*x5169;
double x14966 = x14965*x633;
double x14967 = x2553*x629;
double x14968 = p8_b*x2566;
double x14969 = p7_b*x14844;
double x14970 = x10503*x2578;
double x14971 = x10804*x2478;
double x14972 = x10987*x5285;
double x14973 = x10988*x5285;
double x14974 = p8_b*x14556;
double x14975 = 4*x14930;
double x14976 = p8_b*x14975;
double x14977 = x10861*x5413;
double x14978 = 4*x14898;
double x14979 = x10503*x14862;
double x14980 = p8_i_dot*x14693;
double x14981 = p8_b_dot_dt*x8628;
double x14982 = p7_i_dot*x14981;
double x14983 = x10804*x14569;
double x14984 = x4446*x5149;
double x14985 = x2601*x5150;
double x14986 = p8_b*x14697;
double x14987 = L*x14862;
double x14988 = p7_b*x14987;
double x14989 = x14789*x634;
double x14990 = p8_b_dot_dt*x14604;
double x14991 = p8_b_dot*x5149;
double x14992 = x2*x4472;
double x14993 = p8_b*x14992;
double x14994 = x4436*x5502;
double x14995 = x2558*x5869;
double x14996 = x10933*x5285;
double x14997 = p8_b_dt*x14906;
double x14998 = p7_b*x10873;
double x14999 = L*x14851;
double x15000 = x4446*x8675;
double x15001 = x2601*x5247;
double x15002 = x10503*x14869;
double x15003 = x10804*x14574;
double x15004 = x10503*x14871;
double x15005 = x10506*x14946;
double x15006 = x10807*x14711;
double x15007 = x10804*x14576;
double x15008 = 4*x10756;
double x15009 = p7_b*x1858;
double x15010 = p7_i*x633;
double x15011 = x4472*x7;
double x15012 = x11374*x634;
double x15013 = x10935*x5247;
double x15014 = p8_b_dot_dt*x14617;
double x15015 = p8_b_dot*x8675;
double x15016 = p8_i_dot*x11360;
double x15017 = x10503*x15016;
double x15018 = p8_i_dot*x5161;
double x15019 = x10503*x15018;
double x15020 = x10804*x14722;
double x15021 = x10804*x14724;
double x15022 = p7_b*x634;
double x15023 = p8_i*x11375;
double x15024 = p8_i*x11474;
double x15025 = 10*x14889;
double x15026 = -10*x14901 + 10*x14916 - 10*x14918 + 10*x14927 - x15025;
double x15027 = x10804*x14929;
double x15028 = 8*x15027;
double x15029 = x10772*x10804;
double x15030 = x10893*x6128;
double x15031 = p8_b_dot_dt*p8_i_dot;
double x15032 = x10897*x14862 + x10897*x14869 - x10897*x14871 + x10897*x15016 + x10897*x15018 - x13563*x15031 + x15028 - 8*x15029 - x15030 + x15031*x8989;
double x15033 = x10794*x5996;
double x15034 = x10795*x5996;
double x15035 = 14*x14963;
double x15036 = x10969*x5521;
double x15037 = 10*x14642;
double x15038 = x10558*x5244;
double x15039 = x10503*x14929;
double x15040 = 6*x15039;
double x15041 = x10804*x14640;
double x15042 = 6*x15041;
double x15043 = x10814*x5244;
double x15044 = p8_b*x14641;
double x15045 = 10*x15044;
double x15046 = 14*x14931;
double x15047 = x10861*x5521;
double x15048 = p8_b*x10570;
double x15049 = x14991*x578;
double x15050 = x10503*x10772;
double x15051 = 6*x10804;
double x15052 = p7_b_dot_dt*x14893;
double x15053 = 7*x5150;
double x15054 = 14*x10779;
double x15055 = 12*x10837;
double x15056 = 12*x10838;
double x15057 = x10480*x10742;
double x15058 = p7_b*x286;
double x15059 = x10933*x5247;
double x15060 = p7_b_dot_dt*x14906;
double x15061 = p8_b*x154;
double x15062 = x10807*x5247;
double x15063 = x10979*x8675;
double x15064 = x11360*x634;
double x15065 = 7*p7_b;
double x15066 = x5161*x634;
double x15067 = 7*p8_b;
double x15068 = x14886 + x14892 + x14894 - x14899 - x14900 + x14903 - x14914 - x14915 + x14920 + x14921;
double x15069 = x10794*x5911;
double x15070 = x10795*x5911;
double x15071 = 8*x14963;
double x15072 = x10969*x5330;
double x15073 = 4*x15039;
double x15074 = x10897*x14640;
double x15075 = x10814*x5330;
double x15076 = 8*x15044;
double x15077 = 4*x14987;
double x15078 = x10487*x2575;
double x15079 = p8_i_dot*x14668;
double x15080 = p7_i_dot*x14956;
double x15081 = x10786*x4370;
double x15082 = 8*x15057;
double x15083 = 8*x10837;
double x15084 = 8*x10838;
double x15085 = x14869*x158;
double x15086 = x10480*x10897;
double x15087 = x14871*x158;
double x15088 = x10443*x10779;
double x15089 = x15016*x158;
double x15090 = x15018*x158;
double x15091 = x14722*x158;
double x15092 = x14724*x158;
double x15093 = x10739*x5911;
double x15094 = 8*x14898;
double x15095 = 8*x10756;
double x15096 = -x10739*x5643 + x10751*x11831 - x10751*x8676 + x10756*x11840 + x10922*x5536 + x11360*x15095 - 8*x14997 + x15093 - x15094 + x15095*x5161;
double x15097 = x10794*x6047;
double x15098 = x10795*x6047;
double x15099 = 32*x14963;
double x15100 = x10969*x5641;
double x15101 = 12*x14642;
double x15102 = x10558*x5306;
double x15103 = x10814*x5306;
double x15104 = 12*x15044;
double x15105 = 12*x15039;
double x15106 = 12*x15041;
double x15107 = 24*x15027;
double x15108 = 32*x14931;
double x15109 = x10861*x5641;
double x15110 = 12*p8_i_dot;
double x15111 = x10747*x5150;
double x15112 = 18*x10837;
double x15113 = 18*x10838;
double x15114 = p7_b*x327;
double x15115 = p8_b*x3943;
double x15116 = x10480*x11016;
double x15117 = 16*p8_b;
double x15118 = 4*x14848;
double x15119 = L*x15118;
double x15120 = 4*x14853;
double x15121 = x14851*x158;
double x15122 = x14857*x158;
double x15123 = x14855*x158;
double x15124 = -x15119 - x15120 + x15121 - x15122 + x15123;
double x15125 = x2575*x9;
double x15126 = x11*x2575;
double x15127 = p8_i_dot*x11595;
double x15128 = p8_i_dot*x11597;
double x15129 = p8_i_dot*x11599;
double x15130 = -x15125 - x15126 + x15127 - x15128 + x15129;
double x15131 = x14826 + x14827 - x14828 + x14829 - x14830 + x14837 + x15124 + x15130;
double x15132 = x10739*x6047;
double x15133 = 18*x10756;
double x15134 = x10658*x10922 - x10739*x7357 + x10751*x11962 - x10751*x11977 + x10756*x11973 + x11360*x15133 - 18*x14898 - 18*x14997 + x15132 + x15133*x5161;
double x15135 = x5413*x8869;
double x15136 = 18*x12689;
double x15137 = p9_b*x12778;
double x15138 = p9_i*x12783;
double x15139 = -162*x5700;
double x15140 = x1927*x5214;
double x15141 = p9_b*x1832;
double x15142 = p9_b_dot*x1851;
double x15143 = L*x12662;
double x15144 = 9*x15143;
double x15145 = p9_b*x11370;
double x15146 = x403*x5214;
double x15147 = x390*x5214;
double x15148 = -x12689 + x12691 + x12728 - x12756 - x15147;
double x15149 = x11053*x5306;
double x15150 = x11054*x5306;
double x15151 = 38*x12663;
double x15152 = 18*x14889;
double x15153 = x11067*x5413;
double x15154 = p9_b*x14975;
double x15155 = p8_b_dt*x12914;
double x15156 = p8_b_dt*x12701;
double x15157 = p9_b_dt*x14906;
double x15158 = x2*x4517;
double x15159 = x2675*x8761;
double x15160 = x2677*x5285;
double x15161 = p9_b*x14992;
double x15162 = x10779*x8892;
double x15163 = 6*x11082;
double x15164 = p8_i*x12748;
double x15165 = p9_i*x11375;
double x15166 = x5330*x8869;
double x15167 = x11053*x5413;
double x15168 = x11054*x5413;
double x15169 = p8_b*x12675;
double x15170 = 6*x15169;
double x15171 = p8_b_dt*x5169;
double x15172 = x15171*x420;
double x15173 = x1851*x633;
double x15174 = p9_b*x2663;
double x15175 = p8_b*x12778;
double x15176 = p8_b_dot*x1892;
double x15177 = x2578*x8594;
double x15178 = x11173*x5285;
double x15179 = p8_i*x12783;
double x15180 = p9_b*x14844;
double x15181 = p9_b*x12676;
double x15182 = x5413*x8814;
double x15183 = 4*x12910;
double x15184 = x10804*x12790;
double x15185 = p9_i_dot*x14981;
double x15186 = p8_i_dot*x12793;
double x15187 = x14862*x8594;
double x15188 = x4517*x5149;
double x15189 = x2677*x5150;
double x15190 = p9_b*x14987;
double x15191 = p8_b*x12796;
double x15192 = p9_b_dot_dt*x14893;
double x15193 = p9_b_dot*x2617;
double x15194 = p9_b*x12710;
double x15195 = x3901*x5502;
double x15196 = x1881*x5869;
double x15197 = x1847*x8864;
double x15198 = p8_b*x8746;
double x15199 = x4517*x8675;
double x15200 = x2677*x5247;
double x15201 = x10804*x12817;
double x15202 = x14869*x8594;
double x15203 = x11176*x8675;
double x15204 = x11177*x5247;
double x15205 = x14946*x1842;
double x15206 = x14871*x8594;
double x15207 = 21*L;
double x15208 = p9_i*x8780;
double x15209 = p8_b*x1858;
double x15210 = p8_i*x420;
double x15211 = x3867*x7;
double x15212 = x11374*x421;
double x15213 = p9_b_dot_dt*x14906;
double x15214 = x15193*x8675;
double x15215 = x10804*x12832;
double x15216 = x10804*x12834;
double x15217 = x15016*x8594;
double x15218 = x15018*x8594;
double x15219 = p8_b*x421;
double x15220 = x11474*x421;
double x15221 = x12674*x8594;
double x15222 = 8*x15221;
double x15223 = x8594*x8745;
double x15224 = x6128*x8860;
double x15225 = p9_i_dot*x12793;
double x15226 = -x11824*x8862 + x12790*x8916 + x12817*x8916 + x12832*x8916 + x12834*x8916 - x13530*x8861 + x15222 - 8*x15223 - x15224 + 4*x15225;
double x15227 = x11053*x5996;
double x15228 = x11054*x5996;
double x15229 = 14*x15169;
double x15230 = x11102*x5521;
double x15231 = p8_b*x5149;
double x15232 = 10*x14931;
double x15233 = x10861*x5244;
double x15234 = x10804*x12674;
double x15235 = 6*x15234;
double x15236 = x14929*x8594;
double x15237 = 6*x15236;
double x15238 = x11067*x5244;
double x15239 = p9_b*x14930;
double x15240 = 10*x15239;
double x15241 = p9_b*x12675;
double x15242 = 14*x15241;
double x15243 = x5521*x8814;
double x15244 = p9_b*x10873;
double x15245 = x15193*x5149;
double x15246 = p8_b_dot_dt*x12914;
double x15247 = p8_b*x8675;
double x15248 = x11079*x5202;
double x15249 = 14*x8773;
double x15250 = 12*x11082;
double x15251 = p8_i*x8670;
double x15252 = x10779*x8582;
double x15253 = p8_b*x286;
double x15254 = p8_b_dot_dt*x12701;
double x15255 = p9_b*x154;
double x15256 = 7*x11167;
double x15257 = x11360*x421;
double x15258 = x421*x5161;
double x15259 = x11053*x5911;
double x15260 = x11054*x5911;
double x15261 = p8_b*x12933;
double x15262 = x11102*x5330;
double x15263 = x12912*x608;
double x15264 = x10897*x12674;
double x15265 = x14929*x8916;
double x15266 = x11067*x5330;
double x15267 = 8*x15239;
double x15268 = 4*x12796;
double x15269 = x10786*x1840;
double x15270 = x10807*x8864;
double x15271 = x11178*x5285;
double x15272 = x2575*x8791;
double x15273 = 8*x15252;
double x15274 = 8*x11082;
double x15275 = p8_i*x8907;
double x15276 = x12817*x158;
double x15277 = x10779*x8916;
double x15278 = x12815*x158;
double x15279 = x12832*x158;
double x15280 = x12834*x158;
double x15281 = x11053*x6047;
double x15282 = x11054*x6047;
double x15283 = 32*x15169;
double x15284 = x11102*x5641;
double x15285 = 12*x14931;
double x15286 = x10861*x5306;
double x15287 = x11067*x5306;
double x15288 = 12*x15239;
double x15289 = 12*x15234;
double x15290 = 12*x15236;
double x15291 = 24*x15221;
double x15292 = 32*x15241;
double x15293 = x5641*x8814;
double x15294 = 18*p8_i;
double x15295 = 32*x8773;
double x15296 = 18*x11082;
double x15297 = p9_b*x15294;
double x15298 = p8_b*x327;
double x15299 = p9_b*x3943;
double x15300 = x10779*x13006;
double x15301 = -x12995 + x13008 - x13010 + x13020 - x13022;
double x15302 = x13036 + x15119 + x15120 - x15121 + x15122 - x15123 + x15130 + x15301;
double x15303 = x5413*x6603;
double x15304 = 8*x12332;
double x15305 = q4_b*x12388;
double x15306 = x5285*x6608;
double x15307 = 8*x12366;
double x15308 = 8*x12345;
double x15309 = -x6679;
double x15310 = x57*x6684;
double x15311 = q4_b_dot*x2952;
double x15312 = q4_b*x11370;
double x15313 = -x12332 - x12345 + x12366 - x12367 + x12375;
double x15314 = L*x12340;
double x15315 = 4*x15314;
double x15316 = x12363*x158;
double x15317 = x12347*x158;
double x15318 = x12372*x158;
double x15319 = x12368*x158;
double x15320 = -x15315 - x15316 + x15317 - x15318 + x15319;
double x15321 = x5306*x6702;
double x15322 = x5306*x6703;
double x15323 = theta_dt*x1502;
double x15324 = L*x15323;
double x15325 = q5_b_dot_dt*x5154;
double x15326 = L*x15325;
double x15327 = 4*x15326;
double x15328 = q4_b*x15327;
double x15329 = x5413*x6730;
double x15330 = x5149*x743;
double x15331 = theta_dt*x1509;
double x15332 = x15331*x70;
double x15333 = 8*x15332;
double x15334 = 14*x12341;
double x15335 = L*x12366;
double x15336 = x5214*x724;
double x15337 = L*x15336;
double x15338 = x5202*x6746;
double x15339 = q5_i_dot*x11323;
double x15340 = x15339*x70;
double x15341 = x743*x8675;
double x15342 = q5_i*x6;
double x15343 = x15342*x5160;
double x15344 = q5_b_dt*x12352;
double x15345 = x2*x4661;
double x15346 = q4_b*x15345;
double x15347 = x5285*x6756;
double x15348 = q4_i*x3059;
double x15349 = x15348*x5285;
double x15350 = x12388*x749;
double x15351 = q5_i*x11696;
double x15352 = x5214*x733;
double x15353 = x15352*x70;
double x15354 = q5_i*x11323;
double x15355 = L*x15354;
double x15356 = L*x12345;
double x15357 = q5_i*x11329;
double x15358 = q5_i_dot*x11332;
double x15359 = x15358*x70;
double x15360 = q4_b*x6863;
double x15361 = q5_i_dot*x11329;
double x15362 = x15361*x70;
double x15363 = q5_i*x11332;
double x15364 = x5330*x6603;
double x15365 = x5413*x6702;
double x15366 = x5413*x6703;
double x15367 = q5_b_dt*x5169;
double x15368 = x15367*x720;
double x15369 = q5_b*x12335;
double x15370 = 6*x15369;
double x15371 = q4_b*x3060;
double x15372 = x2952*x749;
double x15373 = x3111*x4616;
double x15374 = q5_b_dot*x2998;
double x15375 = x2*x724;
double x15376 = q4_b*x15375;
double x15377 = x5285*x6852;
double x15378 = x5285*x6853;
double x15379 = q5_b*x12388;
double x15380 = q4_b*x12336;
double x15381 = x5413*x6557;
double x15382 = 4*x12528;
double x15383 = x5149*x733;
double x15384 = x15383*x4616;
double x15385 = q5_i_dot*x5150;
double x15386 = x15385*x2958;
double x15387 = q5_b_dot_dt*x8628;
double x15388 = q4_i_dot*x15387;
double x15389 = x12397*x4707;
double x15390 = L*x15383;
double x15391 = q4_b*x15390;
double x15392 = x15385*x2964;
double x15393 = x12407*x3059;
double x15394 = x4681*x5149;
double x15395 = q5_i*x5150;
double x15396 = x15395*x2943;
double x15397 = q5_b_dt*x5150;
double x15398 = q5_b*x12402;
double x15399 = x7*x724;
double x15400 = q4_b*x12355;
double x15401 = x4610*x5502;
double x15402 = x12498*x5285;
double x15403 = x2964*x6553;
double x15404 = q5_i*x11374;
double x15405 = q5_b*x6467;
double x15406 = x733*x8675;
double x15407 = L*x15406;
double x15408 = x5247*x6756;
double x15409 = x12352*x3059;
double x15410 = q5_i_dot*x11348;
double x15411 = x15410*x4616;
double x15412 = x12420*x4707;
double x15413 = L*x15410;
double x15414 = x15406*x4616;
double x15415 = x5247*x6858;
double x15416 = x5247*x6724;
double x15417 = q4_i_dot*x15416;
double x15418 = x12417*x4707;
double x15419 = 4*x6609;
double x15420 = q5_i*x720;
double x15421 = q5_b*x1858;
double x15422 = x4570*x7;
double x15423 = x11374*x721;
double x15424 = q5_b_dot*x11475;
double x15425 = x5214*x6803;
double x15426 = x4681*x8675;
double x15427 = x15343*x2943;
double x15428 = q5_b_dt*x5247;
double x15429 = q5_b*x129;
double x15430 = q5_i_dot*x11360;
double x15431 = x15430*x4616;
double x15432 = x12439*x4707;
double x15433 = q5_i_dot*x5161;
double x15434 = x15433*x4616;
double x15435 = x12442*x4707;
double x15436 = q5_b*x721;
double x15437 = q4_i*x11375;
double x15438 = q4_i*x11474;
double x15439 = 3*x15332;
double x15440 = -3*x15340 + 3*x15353 - 3*x15359 + 3*x15362 + x15439;
double x15441 = 5*x15324;
double x15442 = 5*x12456;
double x15443 = x12366*x154;
double x15444 = x15336*x154;
double x15445 = x15354*x154;
double x15446 = x12345*x154;
double x15447 = x15357*x154;
double x15448 = x12375*x154;
double x15449 = x12367*x154;
double x15450 = x15363*x154;
double x15451 = -x15441 + x15442 - x15443 - x15444 + x15445 + x15446 - x15447 - x15448 + x15449 + x15450;
double x15452 = x12334*x4616;
double x15453 = 8*x15452;
double x15454 = x4616*x6466;
double x15455 = x6128*x6595;
double x15456 = x12397*x6836 - x12417*x6836 + x12420*x6836 + x12439*x6836 + x12442*x6836 - x12511*x2958 + x15453 - 8*x15454 - x15455 + x5271*x6597;
double x15457 = x5911*x6702;
double x15458 = x5911*x6703;
double x15459 = x5330*x6846;
double x15460 = q5_b*x12470;
double x15461 = q5_b*x5149;
double x15462 = x15325*x6836;
double x15463 = x12334*x6912;
double x15464 = 8*x15326;
double x15465 = q4_b*x15464;
double x15466 = x5330*x6730;
double x15467 = 8*x6792;
double x15468 = q5_i*x11840;
double x15469 = x3131*x5150;
double x15470 = 4*x12402;
double x15471 = x6828*x733;
double x15472 = x5285*x6858;
double x15473 = x6553*x6724;
double x15474 = x704*x7146;
double x15475 = x4663*x5149;
double x15476 = q5_b*x8675;
double x15477 = x12489*x6812;
double x15478 = x11351*x3131;
double x15479 = x15406*x158;
double x15480 = x2964*x3191;
double x15481 = x4663*x8675;
double x15482 = x6484*x6912;
double x15483 = x15410*x158;
double x15484 = 8*q5_b;
double x15485 = q5_i*x6436;
double x15486 = x15430*x158;
double x15487 = x15433*x158;
double x15488 = q5_b*x15464;
double x15489 = x5330*x6871;
double x15490 = q5_b*x15383;
double x15491 = x15490*x158;
double x15492 = x4701*x5149;
double x15493 = x15492*x158;
double x15494 = x15469*x3059;
double x15495 = x3102*x5150;
double x15496 = x15495*x158;
double x15497 = q5_b*x15467;
double x15498 = x5332*x6871;
double x15499 = q5_b*x15410;
double x15500 = x15499*x158;
double x15501 = q5_b_dot*x15478;
double x15502 = q5_b*x15406;
double x15503 = x15502*x158;
double x15504 = x4701*x8675;
double x15505 = x15504*x158;
double x15506 = x15343*x3059;
double x15507 = 4*x15506;
double x15508 = x3102*x5247;
double x15509 = x15508*x158;
double x15510 = x15484*x6812;
double x15511 = x11360*x6895;
double x15512 = x15511*x158;
double x15513 = x11360*x6897;
double x15514 = x15513*x158;
double x15515 = x5161*x6895;
double x15516 = x15515*x158;
double x15517 = x5161*x6897;
double x15518 = x15517*x158;
double x15519 = x15325*x6912;
double x15520 = x7146*x733;
double x15521 = x5285*x6724;
double x15522 = q5_i_dot*x15521;
double x15523 = -x11371*x6908 + x11374*x6911 + x11375*x6911 + x11377*x7151 + x15519 + x15520 + x15522 - x5505*x6910 - x6791*x6912 - x6909*x7;
double x15524 = -x15488 - x15489 - x15491 - x15493 - x15494 - x15496 + x15497 + x15498 - x15500 - x15501 + x15503 + x15505 + x15507 + x15509 + x15510 - x15512 - x15514 - x15516 - x15518 + x15523;
double x15525 = x5911*x6917;
double x15526 = x5202*x6920;
double x15527 = 8*x15526;
double x15528 = q5_b_dt*x15343;
double x15529 = q5_b*x15468 + x12170*x6923 + x12171*x6923 + x15461*x4714 - x15476*x4714 + x15525 - x15527 - 8*x15528 + x5536*x6922 - x5643*x6917;
double x15530 = x5996*x6702;
double x15531 = x5996*x6703;
double x15532 = x5521*x6846;
double x15533 = 14*x15369;
double x15534 = 10*x15326;
double x15535 = q5_b*x15534;
double x15536 = x5244*x6871;
double x15537 = x15325*x4616;
double x15538 = 6*x15537;
double x15539 = x12334*x4707;
double x15540 = 6*x15539;
double x15541 = q4_b*x15534;
double x15542 = x5244*x6730;
double x15543 = q4_b*x12335;
double x15544 = 14*x15543;
double x15545 = x5521*x6557;
double x15546 = q4_b*x6467;
double x15547 = q5_i*x11951;
double x15548 = 10*x6792;
double x15549 = x4616*x6791;
double x15550 = x4707*x6466;
double x15551 = 14*x6485;
double x15552 = x5224*x6811;
double x15553 = q5_b*x286;
double x15554 = 6*x4707;
double x15555 = q4_b*x154;
double x15556 = q5_i_dot*x5247;
double x15557 = q5_b*x3106;
double x15558 = 3*x4707;
double x15559 = q4_b*x3106;
double x15560 = x5996*x6917;
double x15561 = x6741*x6917;
double x15562 = 12*x15526;
double x15563 = x15461*x4688;
double x15564 = x15395*x6953;
double x15565 = x15476*x4688;
double x15566 = x15343*x6953;
double x15567 = q5_b*x15547;
double x15568 = x12248*x6923;
double x15569 = x12249*x6923;
double x15570 = x15560 - x15561 - x15562 + x15563 + x15564 - x15565 - x15566 + x15567 + x15568 + x15569;
double x15571 = x6047*x6702;
double x15572 = x6047*x6703;
double x15573 = x5641*x6846;
double x15574 = 32*x15369;
double x15575 = 12*x15326;
double x15576 = q5_b*x15575;
double x15577 = x5306*x6871;
double x15578 = q4_b*x15575;
double x15579 = x5306*x6730;
double x15580 = 12*x15537;
double x15581 = 12*x15539;
double x15582 = 24*x15452;
double x15583 = 32*x15543;
double x15584 = x5641*x6557;
double x15585 = q5_i*x11973;
double x15586 = 12*x6792;
double x15587 = q5_i*x3059;
double x15588 = 32*x6485;
double x15589 = q5_b*x327;
double x15590 = x3943*x6811;
double x15591 = 12*x4707;
double x15592 = x15591*x6484;
double x15593 = q5_b*x3151;
double x15594 = q4_b*x3151;
double x15595 = -x12603 + x12604 - x12605 + x12606 - x12607;
double x15596 = 4*x15323;
double x15597 = L*x15596;
double x15598 = x15354*x158;
double x15599 = x15336*x158;
double x15600 = x15363*x158;
double x15601 = x15357*x158;
double x15602 = x15597 - x15598 + x15599 - x15600 + x15601;
double x15603 = x6047*x6917;
double x15604 = x11376*x733;
double x15605 = x11*x6787;
double x15606 = q5_i_dot*x11595;
double x15607 = q5_i_dot*x11597;
double x15608 = q5_i_dot*x11599;
double x15609 = -x15604 - x15605 + x15606 - x15607 + x15608;
double x15610 = q5_b*x15585 + x10658*x6922 + x12286*x6923 + x12287*x6923 + x15461*x4730 - x15476*x4730 - 18*x15526 - 18*x15528 + x15603 + x15609 - x6917*x7357;
double x15611 = x5413*x6917;
double x15612 = q5_b*x15375;
double x15613 = x5285*x6922;
double x15614 = -x7001;
double x15615 = x57*x7007;
double x15616 = q5_b_dot*x3068;
double x15617 = q5_b*x11370;
double x15618 = -x15323 - x15336 + x15354 - x15357 + x15363;
double x15619 = L*x15331;
double x15620 = 5*x15619;
double x15621 = x15352*x154;
double x15622 = x15339*x154;
double x15623 = x15361*x154;
double x15624 = x15358*x154;
double x15625 = -x15620 - x15621 + x15622 - x15623 + x15624;
double x15626 = x5306*x7023;
double x15627 = x5306*x7024;
double x15628 = theta_dt*x1553;
double x15629 = L*x15628;
double x15630 = q6_b_dot_dt*x5154;
double x15631 = L*x15630;
double x15632 = 4*x15631;
double x15633 = q5_b*x15632;
double x15634 = x5413*x7095;
double x15635 = x5149*x772;
double x15636 = theta_dt*x1560;
double x15637 = x15636*x70;
double x15638 = 10*x15637;
double x15639 = 18*x15332;
double x15640 = x5214*x753;
double x15641 = L*x15640;
double x15642 = x5202*x7060;
double x15643 = q6_i_dot*x11323;
double x15644 = x15643*x70;
double x15645 = x772*x8675;
double x15646 = q6_i*x6;
double x15647 = x15646*x5160;
double x15648 = q5_b_dt*x15647;
double x15649 = 6*q6_b_dt;
double x15650 = x2*x4749;
double x15651 = q5_b*x15650;
double x15652 = q5_b_dt*x779;
double x15653 = x15652*x5285;
double x15654 = q5_i*x3165;
double x15655 = x15654*x5285;
double x15656 = x15375*x778;
double x15657 = q6_i*x11696;
double x15658 = x5214*x762;
double x15659 = x15658*x70;
double x15660 = q6_i*x11323;
double x15661 = L*x15660;
double x15662 = q6_i*x11329;
double x15663 = q6_i_dot*x11332;
double x15664 = x15663*x70;
double x15665 = q5_b*x7174;
double x15666 = q6_i_dot*x11329;
double x15667 = x15666*x70;
double x15668 = q6_i*x11332;
double x15669 = x5330*x6917;
double x15670 = x5413*x7023;
double x15671 = x5413*x7024;
double x15672 = q6_b_dt*x5169;
double x15673 = x15672*x749;
double x15674 = q6_b*x15326;
double x15675 = 6*x15674;
double x15676 = q5_b*x3166;
double x15677 = x3068*x778;
double x15678 = q5_b_dot*x3220;
double x15679 = x3111*x4795;
double x15680 = x2*x753;
double x15681 = q5_b*x15680;
double x15682 = x5285*x7162;
double x15683 = x5285*x7163;
double x15684 = q6_b*x15375;
double x15685 = q5_b*x15327;
double x15686 = x5413*x6871;
double x15687 = 4*x15526;
double x15688 = x5149*x762;
double x15689 = x15688*x4707;
double x15690 = q6_i_dot*x15387;
double x15691 = x15385*x3180;
double x15692 = x15383*x4795;
double x15693 = L*x15688;
double x15694 = q5_b*x15693;
double x15695 = x15395*x3165;
double x15696 = x4769*x5149;
double x15697 = q6_i*x5150;
double x15698 = x15697*x3059;
double x15699 = x15385*x3186;
double x15700 = q6_b*x15390;
double x15701 = x7*x753;
double x15702 = q5_b*x15345;
double x15703 = x4701*x5502;
double x15704 = x15587*x5285;
double x15705 = x3102*x5869;
double x15706 = q6_i*x11374;
double x15707 = q6_b*x6792;
double x15708 = x762*x8675;
double x15709 = L*x15708;
double x15710 = x15343*x3165;
double x15711 = q6_i_dot*x11348;
double x15712 = x15711*x4707;
double x15713 = x15410*x4795;
double x15714 = L*x15711;
double x15715 = x15708*x4707;
double x15716 = q6_i_dot*x15416;
double x15717 = x5247*x7169;
double x15718 = x15406*x4795;
double x15719 = q6_i*x749;
double x15720 = q6_b*x1858;
double x15721 = x4661*x7;
double x15722 = q6_b_dot*x11371;
double x15723 = x11374*x750;
double x15724 = q6_b_dot*x11475;
double x15725 = x5214*x7117;
double x15726 = x4769*x8675;
double x15727 = x15647*x3059;
double x15728 = x5247*x7120;
double x15729 = q6_b*x129;
double x15730 = q6_i_dot*x11360;
double x15731 = x15430*x4795;
double x15732 = q6_i_dot*x5161;
double x15733 = x15433*x4795;
double x15734 = q6_b*x750;
double x15735 = q5_i*x11375;
double x15736 = q5_i*x11474;
double x15737 = 7*x15629;
double x15738 = 7*x15324;
double x15739 = x15354*x286;
double x15740 = x15640*x286;
double x15741 = x15660*x286;
double x15742 = x15336*x286;
double x15743 = x15662*x286;
double x15744 = x15363*x286;
double x15745 = x15357*x286;
double x15746 = x15668*x286;
double x15747 = -x15737 + x15738 - x15739 - x15740 + x15741 + x15742 - x15743 - x15744 + x15745 + x15746;
double x15748 = 4*x15637;
double x15749 = -x15643*x5540 + x15658*x5540 - x15663*x5540 + x15666*x5540 + x15748;
double x15750 = x15325*x4707;
double x15751 = 8*x15750;
double x15752 = x4707*x6791;
double x15753 = x6128*x6908;
double x15754 = q5_b_dot_dt*x5540;
double x15755 = x15383*x6912 + x15385*x15754 - x15406*x6912 + x15410*x6912 + x15430*x6912 + x15433*x6912 - x15556*x15754 + x15751 - 8*x15752 - x15753;
double x15756 = x5911*x7023;
double x15757 = x5911*x7024;
double x15758 = x5330*x7088;
double x15759 = q6_b*x15464;
double x15760 = q6_b*x5149;
double x15761 = x15630*x6912;
double x15762 = x15325*x7178;
double x15763 = 8*x15631;
double x15764 = q5_b*x15763;
double x15765 = x5330*x7095;
double x15766 = 8*x7107;
double x15767 = q6_i*x11840;
double x15768 = q6_i*x5271;
double x15769 = 4*x15390;
double x15770 = x7146*x762;
double x15771 = q6_i_dot*x15521;
double x15772 = x5285*x7169;
double x15773 = x733*x7455;
double x15774 = x4751*x5149;
double x15775 = 8*q6_b_dt;
double x15776 = q6_b*x8675;
double x15777 = x15484*x7127;
double x15778 = x15708*x158;
double x15779 = x4751*x8675;
double x15780 = x6811*x7178;
double x15781 = x15711*x158;
double x15782 = 8*q6_b;
double x15783 = x15730*x158;
double x15784 = x15732*x158;
double x15785 = q6_b*x15763;
double x15786 = x5330*x7181;
double x15787 = q6_b*x15688;
double x15788 = x15787*x158;
double x15789 = x4789*x5149;
double x15790 = x15789*x158;
double x15791 = q6_i*x3165;
double x15792 = x15791*x5271;
double x15793 = x5271*x7199;
double x15794 = q6_b*x15766;
double x15795 = x5332*x7181;
double x15796 = q6_b*x15711;
double x15797 = x15796*x158;
double x15798 = x11417*x7207;
double x15799 = q6_b*x15708;
double x15800 = x15799*x158;
double x15801 = x4789*x8675;
double x15802 = x158*x15801;
double x15803 = x15647*x3165;
double x15804 = 4*x15803;
double x15805 = q6_i_dot*x5247;
double x15806 = x15805*x3241;
double x15807 = x15782*x7127;
double x15808 = x11360*x7205;
double x15809 = x158*x15808;
double x15810 = x11360*x7207;
double x15811 = x158*x15810;
double x15812 = x5161*x7205;
double x15813 = x158*x15812;
double x15814 = x5161*x7207;
double x15815 = x158*x15814;
double x15816 = x15630*x7178;
double x15817 = x7455*x762;
double x15818 = x5285*x7220;
double x15819 = -x11371*x7218 + x11374*x7221 + x11375*x7221 + x11377*x7468 + x15816 + x15817 + x15818 - x5505*x7220 - x7*x7219 - x7106*x7178;
double x15820 = -x15785 - x15786 - x15788 - x15790 - x15792 - x15793 + x15794 + x15795 - x15797 - x15798 + x15800 + x15802 + x15804 + x15806 + x15807 - x15809 - x15811 - x15813 - x15815 + x15819;
double x15821 = x5911*x7226;
double x15822 = x5202*x7229;
double x15823 = 8*x15822;
double x15824 = q6_b*x15767 + x12170*x7232 + x12171*x7232 - x15647*x15775 + x15760*x4802 - x15776*x4802 + x15821 - x15823 + x5536*x7231 - x5643*x7226;
double x15825 = x5996*x7023;
double x15826 = x5996*x7024;
double x15827 = x5521*x7088;
double x15828 = 14*x15674;
double x15829 = 10*x15631;
double x15830 = q6_b*x15829;
double x15831 = x5244*x7181;
double x15832 = x15630*x4707;
double x15833 = 6*x15832;
double x15834 = x15325*x4795;
double x15835 = 6*x15834;
double x15836 = q5_b*x15829;
double x15837 = x5244*x7095;
double x15838 = q5_b*x15326;
double x15839 = 14*x15838;
double x15840 = x5521*x6871;
double x15841 = q5_b*x6792;
double x15842 = q6_i*x11951;
double x15843 = 10*x7107;
double x15844 = x4707*x7106;
double x15845 = x4795*x6791;
double x15846 = x15697*x3165;
double x15847 = x15395*x3059;
double x15848 = 14*x6812;
double x15849 = x5224*x7126;
double x15850 = q6_b*x286;
double x15851 = 6*x4795;
double x15852 = q5_b*x154;
double x15853 = x5247*x7199;
double x15854 = x11360*x750;
double x15855 = 7*q6_b;
double x15856 = x5161*x750;
double x15857 = 7*q5_b;
double x15858 = x5996*x7226;
double x15859 = x6741*x7226;
double x15860 = 12*x15822;
double x15861 = x15760*x4776;
double x15862 = x15697*x3201;
double x15863 = x15776*x4776;
double x15864 = x15647*x3201;
double x15865 = q6_b*x15842;
double x15866 = x12248*x7232;
double x15867 = x12249*x7232;
double x15868 = x15858 - x15859 - x15860 + x15861 + x15862 - x15863 - x15864 + x15865 + x15866 + x15867;
double x15869 = x6047*x7023;
double x15870 = x6047*x7024;
double x15871 = x5641*x7088;
double x15872 = 32*x15674;
double x15873 = 12*x15631;
double x15874 = q6_b*x15873;
double x15875 = x5306*x7181;
double x15876 = q5_b*x15873;
double x15877 = x5306*x7095;
double x15878 = 12*x15832;
double x15879 = 12*x15834;
double x15880 = 24*x15750;
double x15881 = 32*x15838;
double x15882 = x5641*x6871;
double x15883 = q6_i*x11973;
double x15884 = 12*x7107;
double x15885 = 18*q6_b_dt;
double x15886 = 32*x6812;
double x15887 = q6_b*x327;
double x15888 = x3943*x7126;
double x15889 = 12*x4795;
double x15890 = x15889*x6811;
double x15891 = 16*q6_b;
double x15892 = 16*q5_b;
double x15893 = -x15597 + x15598 - x15599 + x15600 - x15601;
double x15894 = 4*x15628;
double x15895 = L*x15894;
double x15896 = x15660*x158;
double x15897 = x15640*x158;
double x15898 = x15668*x158;
double x15899 = x15662*x158;
double x15900 = x15895 - x15896 + x15897 - x15898 + x15899;
double x15901 = x6047*x7226;
double x15902 = x11376*x762;
double x15903 = x11*x7102;
double x15904 = q6_i_dot*x11595;
double x15905 = q6_i_dot*x11597;
double x15906 = q6_i_dot*x11599;
double x15907 = -x15902 - x15903 + x15904 - x15905 + x15906;
double x15908 = q6_b*x15883 + x10658*x7231 + x12286*x7232 + x12287*x7232 - x15647*x15885 + x15760*x4818 - x15776*x4818 - 18*x15822 + x15901 + x15907 - x7226*x7357;
double x15909 = x5413*x7226;
double x15910 = 12*x15628;
double x15911 = q6_b*x15680;
double x15912 = x5285*x7231;
double x15913 = -x6120;
double x15914 = x57*x7306;
double x15915 = q6_b_dot*x3174;
double x15916 = q6_b*x11370;
double x15917 = -x15628 - x15640 + x15660 - x15662 + x15668;
double x15918 = L*x15636;
double x15919 = 6*x15918;
double x15920 = x129*x15658;
double x15921 = x129*x15643;
double x15922 = x129*x15666;
double x15923 = x129*x15663;
double x15924 = -x15919 - x15920 + x15921 - x15922 + x15923;
double x15925 = x5306*x7322;
double x15926 = x5306*x7323;
double x15927 = theta_dt*x1606;
double x15928 = L*x15927;
double x15929 = q7_b_dot_dt*x5154;
double x15930 = L*x15929;
double x15931 = 4*x15930;
double x15932 = q6_b*x15931;
double x15933 = x5413*x7346;
double x15934 = x5149*x801;
double x15935 = theta_dt*x1613;
double x15936 = x15935*x70;
double x15937 = 12*x15936;
double x15938 = 22*x15637;
double x15939 = x5214*x782;
double x15940 = L*x15939;
double x15941 = q7_i_dot*x11323;
double x15942 = x15941*x70;
double x15943 = 12*x15942;
double x15944 = x5202*x7362;
double x15945 = x801*x8675;
double x15946 = q7_i*x6;
double x15947 = x15946*x5160;
double x15948 = q7_b_dt*x15647;
double x15949 = x2*x4837;
double x15950 = q6_b*x15949;
double x15951 = x5285*x7373;
double x15952 = q6_i*x3276;
double x15953 = x15952*x5285;
double x15954 = x15680*x807;
double x15955 = q7_i*x11696;
double x15956 = x5214*x791;
double x15957 = x15956*x70;
double x15958 = 12*x15957;
double x15959 = q7_i*x11323;
double x15960 = L*x15959;
double x15961 = q7_i*x11329;
double x15962 = q7_i_dot*x11332;
double x15963 = x15962*x70;
double x15964 = 12*x15963;
double x15965 = q6_b*x7492;
double x15966 = q7_i_dot*x11329;
double x15967 = x15966*x70;
double x15968 = 12*x15967;
double x15969 = q7_i*x11332;
double x15970 = x5330*x7226;
double x15971 = x5413*x7322;
double x15972 = x5413*x7323;
double x15973 = q7_b_dt*x5169;
double x15974 = x15973*x778;
double x15975 = q7_b*x15631;
double x15976 = 6*x15975;
double x15977 = q6_b*x3277;
double x15978 = x3174*x807;
double x15979 = x3328*x4795;
double x15980 = q7_b_dot*x3220;
double x15981 = x2*x782;
double x15982 = q6_b*x15981;
double x15983 = x5285*x7481;
double x15984 = x5285*x7482;
double x15985 = q7_b*x15680;
double x15986 = q6_b*x15632;
double x15987 = x5413*x7181;
double x15988 = 4*x15822;
double x15989 = x5149*x791;
double x15990 = x15989*x4795;
double x15991 = q7_i_dot*x5150;
double x15992 = x15991*x3180;
double x15993 = q7_b_dot_dt*x8628;
double x15994 = q6_i_dot*x15993;
double x15995 = x15688*x4883;
double x15996 = L*x15989;
double x15997 = q6_b*x15996;
double x15998 = x15991*x3186;
double x15999 = x15697*x3276;
double x16000 = x4857*x5149;
double x16001 = q7_i*x5150;
double x16002 = x16001*x3165;
double x16003 = q7_b_dt*x5150;
double x16004 = q7_b*x15693;
double x16005 = x7*x782;
double x16006 = q6_b*x15650;
double x16007 = x4789*x5502;
double x16008 = x15791*x5285;
double x16009 = x5285*x7199;
double x16010 = q7_i*x11374;
double x16011 = q7_b*x7107;
double x16012 = x791*x8675;
double x16013 = L*x16012;
double x16014 = x5247*x7373;
double x16015 = x15647*x3276;
double x16016 = q7_i_dot*x11348;
double x16017 = x16016*x4795;
double x16018 = x15711*x4883;
double x16019 = L*x16016;
double x16020 = x16012*x4795;
double x16021 = x5247*x7487;
double x16022 = x5247*x7488;
double x16023 = x15708*x4883;
double x16024 = 4*x7232;
double x16025 = q7_i*x778;
double x16026 = q7_b*x1858;
double x16027 = x4749*x7;
double x16028 = x11374*x779;
double x16029 = q7_b_dot*x11475;
double x16030 = x5214*x7428;
double x16031 = x4857*x8675;
double x16032 = x15947*x3165;
double x16033 = q7_b_dt*x5247;
double x16034 = q7_b*x129;
double x16035 = q7_i_dot*x11360;
double x16036 = x16035*x4795;
double x16037 = x15730*x4883;
double x16038 = q7_i_dot*x5161;
double x16039 = x16038*x4795;
double x16040 = x15732*x4883;
double x16041 = q7_b*x779;
double x16042 = q6_i*x11375;
double x16043 = q6_i*x11474;
double x16044 = 5*x15936;
double x16045 = -5*x15942 + 5*x15957 - 5*x15963 + 5*x15967 + x16044;
double x16046 = x15630*x4795;
double x16047 = 8*x16046;
double x16048 = x4795*x7106;
double x16049 = x6128*x7218;
double x16050 = x15688*x7178 - x15708*x7178 + x15711*x7178 + x15730*x7178 + x15732*x7178 - x15805*x3302 + x16047 - 8*x16048 - x16049 + x5271*x7220;
double x16051 = x5911*x7322;
double x16052 = x5911*x7323;
double x16053 = x5330*x7475;
double x16054 = q7_b*x15763;
double x16055 = q7_b*x5149;
double x16056 = x15929*x7178;
double x16057 = x15630*x7541;
double x16058 = 8*x15930;
double x16059 = q6_b*x16058;
double x16060 = x5330*x7346;
double x16061 = 8*x7415;
double x16062 = q7_i*x11840;
double x16063 = x3347*x5150;
double x16064 = 4*x15693;
double x16065 = x7455*x791;
double x16066 = x5285*x7487;
double x16067 = x5285*x7488;
double x16068 = x762*x7770;
double x16069 = x4839*x5149;
double x16070 = q7_b*x8675;
double x16071 = x15782*x7436;
double x16072 = x11351*x3347;
double x16073 = x158*x16012;
double x16074 = x3186*x3406;
double x16075 = x4839*x8675;
double x16076 = x7126*x7541;
double x16077 = x158*x16016;
double x16078 = 8*q7_b;
double x16079 = x158*x16035;
double x16080 = x158*x16038;
double x16081 = q7_b*x16058;
double x16082 = x5330*x7500;
double x16083 = q7_b*x15989;
double x16084 = x158*x16083;
double x16085 = x4877*x5149;
double x16086 = x158*x16085;
double x16087 = x16063*x3276;
double x16088 = x3320*x5150;
double x16089 = x158*x16088;
double x16090 = q7_b*x16061;
double x16091 = x5332*x7500;
double x16092 = q7_b*x16016;
double x16093 = x158*x16092;
double x16094 = q7_b_dot*x16072;
double x16095 = q7_b*x16012;
double x16096 = x158*x16095;
double x16097 = x4877*x8675;
double x16098 = x158*x16097;
double x16099 = x15947*x3276;
double x16100 = 4*x16099;
double x16101 = x3320*x5247;
double x16102 = x158*x16101;
double x16103 = x16078*x7436;
double x16104 = x11360*x7524;
double x16105 = x158*x16104;
double x16106 = x11360*x7526;
double x16107 = x158*x16106;
double x16108 = x5161*x7524;
double x16109 = x158*x16108;
double x16110 = x5161*x7526;
double x16111 = x158*x16110;
double x16112 = x15929*x7541;
double x16113 = x7770*x791;
double x16114 = x5285*x7340;
double x16115 = q7_i_dot*x16114;
double x16116 = -x11371*x7537 + x11374*x7540 + x11375*x7540 + x11377*x7777 + x16112 + x16113 + x16115 - x5505*x7539 - x7*x7538 - x7414*x7541;
double x16117 = -x16081 - x16082 - x16084 - x16086 - x16087 - x16089 + x16090 + x16091 - x16093 - x16094 + x16096 + x16098 + x16100 + x16102 + x16103 - x16105 - x16107 - x16109 - x16111 + x16116;
double x16118 = x5911*x7546;
double x16119 = x5202*x7549;
double x16120 = 8*x16119;
double x16121 = q7_b_dt*x15947;
double x16122 = q7_b*x16062 + x12170*x7552 + x12171*x7552 + x16055*x4890 - x16070*x4890 + x16118 - x16120 - 8*x16121 + x5536*x7551 - x5643*x7546;
double x16123 = x5996*x7322;
double x16124 = x5996*x7323;
double x16125 = x5521*x7475;
double x16126 = 14*x15975;
double x16127 = 10*x15930;
double x16128 = q7_b*x16127;
double x16129 = x5244*x7500;
double x16130 = x15929*x4795;
double x16131 = 6*x16130;
double x16132 = x15630*x4883;
double x16133 = 6*x16132;
double x16134 = q6_b*x16127;
double x16135 = x5244*x7346;
double x16136 = q6_b*x15631;
double x16137 = 14*x16136;
double x16138 = x5521*x7181;
double x16139 = q6_b*x7107;
double x16140 = q7_i*x11951;
double x16141 = 10*x7415;
double x16142 = x4795*x7414;
double x16143 = x4883*x7106;
double x16144 = x16001*x3276;
double x16145 = 14*x7127;
double x16146 = x5224*x7435;
double x16147 = q7_b*x286;
double x16148 = 6*x4883;
double x16149 = q6_b*x154;
double x16150 = q7_b*x3324;
double x16151 = q6_b*x3324;
double x16152 = x5996*x7546;
double x16153 = x6741*x7546;
double x16154 = 12*x16119;
double x16155 = x16055*x4864;
double x16156 = x16001*x7577;
double x16157 = x16070*x4864;
double x16158 = x15947*x7577;
double x16159 = q7_b*x16140;
double x16160 = x12248*x7552;
double x16161 = x12249*x7552;
double x16162 = x16152 - x16153 - x16154 + x16155 + x16156 - x16157 - x16158 + x16159 + x16160 + x16161;
double x16163 = x6047*x7322;
double x16164 = x6047*x7323;
double x16165 = x5641*x7475;
double x16166 = 32*x15975;
double x16167 = 12*x15930;
double x16168 = q7_b*x16167;
double x16169 = x5306*x7500;
double x16170 = q6_b*x16167;
double x16171 = x5306*x7346;
double x16172 = 12*x16130;
double x16173 = 12*x16132;
double x16174 = 24*x16046;
double x16175 = 32*x16136;
double x16176 = x5641*x7181;
double x16177 = q7_i*x11973;
double x16178 = 12*x7415;
double x16179 = q7_i*x3276;
double x16180 = 32*x7127;
double x16181 = q7_b*x327;
double x16182 = x3943*x7435;
double x16183 = 12*x4883;
double x16184 = x16183*x7126;
double x16185 = q7_b*x3367;
double x16186 = q6_b*x3367;
double x16187 = -x15895 + x15896 - x15897 + x15898 - x15899;
double x16188 = 4*x15927;
double x16189 = L*x16188;
double x16190 = x158*x15959;
double x16191 = x158*x15939;
double x16192 = x158*x15969;
double x16193 = x158*x15961;
double x16194 = x16189 - x16190 + x16191 - x16192 + x16193;
double x16195 = x6047*x7546;
double x16196 = x11376*x791;
double x16197 = x11*x7408;
double x16198 = q7_i_dot*x11595;
double x16199 = q7_i_dot*x11597;
double x16200 = q7_i_dot*x11599;
double x16201 = -x16196 - x16197 + x16198 - x16199 + x16200;
double x16202 = q7_b*x16177 + x10658*x7551 + x12286*x7552 + x12287*x7552 + x16055*x4906 - x16070*x4906 - 18*x16119 - 18*x16121 + x16195 + x16201 - x7357*x7546;
double x16203 = x5413*x7546;
double x16204 = q7_b*x15981;
double x16205 = x5285*x7551;
double x16206 = -x7627;
double x16207 = x57*x7630;
double x16208 = q7_b_dot*x3285;
double x16209 = q7_b*x11370;
double x16210 = -x15927 - x15939 + x15959 - x15961 + x15969;
double x16211 = L*x15935;
double x16212 = 7*x16211;
double x16213 = x15956*x286;
double x16214 = x15941*x286;
double x16215 = x11329*x7638;
double x16216 = x11332*x7638;
double x16217 = -x16212 - x16213 + x16214 - x16215 + x16216;
double x16218 = x5306*x7646;
double x16219 = x5306*x7647;
double x16220 = theta_dt*x1657;
double x16221 = L*x16220;
double x16222 = q8_b_dot_dt*x5154;
double x16223 = L*x16222;
double x16224 = 4*x16223;
double x16225 = q7_b*x16224;
double x16226 = x5413*x7722;
double x16227 = x5149*x830;
double x16228 = theta_dt*x1664;
double x16229 = x16228*x70;
double x16230 = 14*x16229;
double x16231 = 26*x15936;
double x16232 = x5214*x811;
double x16233 = L*x16232;
double x16234 = q8_i_dot*x11323;
double x16235 = x16234*x70;
double x16236 = x5202*x7685;
double x16237 = x830*x8675;
double x16238 = q8_i*x6;
double x16239 = x16238*x5160;
double x16240 = q7_b_dt*x16239;
double x16241 = 6*q8_b_dt;
double x16242 = x2*x4924;
double x16243 = q7_b*x16242;
double x16244 = q7_b_dt*x837;
double x16245 = x16244*x5285;
double x16246 = q7_i*x3380;
double x16247 = x16246*x5285;
double x16248 = x15981*x836;
double x16249 = q8_i*x11696;
double x16250 = x5214*x820;
double x16251 = x16250*x70;
double x16252 = q8_i*x11323;
double x16253 = L*x16252;
double x16254 = q8_i*x11329;
double x16255 = q8_i_dot*x11332;
double x16256 = x16255*x70;
double x16257 = q7_b*x7802;
double x16258 = q8_i_dot*x11329;
double x16259 = x16258*x70;
double x16260 = q8_i*x11332;
double x16261 = x5330*x7546;
double x16262 = x5413*x7646;
double x16263 = x5413*x7647;
double x16264 = q8_b_dt*x5169;
double x16265 = x16264*x807;
double x16266 = q8_b*x15930;
double x16267 = 6*x16266;
double x16268 = q7_b*x3381;
double x16269 = x3285*x836;
double x16270 = q7_b_dot*x3436;
double x16271 = x3328*x4970;
double x16272 = x2*x811;
double x16273 = q7_b*x16272;
double x16274 = x5285*x7788;
double x16275 = x5285*x7789;
double x16276 = q8_b*x15981;
double x16277 = q7_b*x15931;
double x16278 = x5413*x7500;
double x16279 = 4*x16119;
double x16280 = x5149*x820;
double x16281 = x16280*x4883;
double x16282 = q8_i_dot*x15993;
double x16283 = x15991*x3395;
double x16284 = x15989*x4970;
double x16285 = L*x16280;
double x16286 = q7_b*x16285;
double x16287 = x16001*x3380;
double x16288 = x4944*x5149;
double x16289 = q8_i*x5150;
double x16290 = x16289*x3276;
double x16291 = q8_b*x15996;
double x16292 = x7*x811;
double x16293 = q7_b*x15949;
double x16294 = x4877*x5502;
double x16295 = x16179*x5285;
double x16296 = x3320*x5869;
double x16297 = q8_i*x11374;
double x16298 = q8_b*x7415;
double x16299 = x820*x8675;
double x16300 = L*x16299;
double x16301 = x15947*x3380;
double x16302 = q8_i_dot*x11348;
double x16303 = x16302*x4883;
double x16304 = x16016*x4970;
double x16305 = L*x16302;
double x16306 = x16299*x4883;
double x16307 = q8_i_dot*x5247;
double x16308 = x16307*x7340;
double x16309 = x5247*x7795;
double x16310 = x16012*x4970;
double x16311 = q8_i*x807;
double x16312 = q8_b*x1858;
double x16313 = x4837*x7;
double x16314 = q8_b_dot*x11371;
double x16315 = x11374*x808;
double x16316 = q8_b_dot*x11475;
double x16317 = x5214*x7742;
double x16318 = x4944*x8675;
double x16319 = x16239*x3276;
double x16320 = q7_i_dot*x5247;
double x16321 = q8_b*x129;
double x16322 = q8_i_dot*x11360;
double x16323 = x16322*x4883;
double x16324 = x16035*x4970;
double x16325 = q8_i_dot*x5161;
double x16326 = x16325*x4883;
double x16327 = x16038*x4970;
double x16328 = q8_b*x808;
double x16329 = q7_i*x11375;
double x16330 = q7_i*x11474;
double x16331 = 6*x16229;
double x16332 = 6*x16235;
double x16333 = 6*x16251;
double x16334 = 6*x16256;
double x16335 = 6*x16259;
double x16336 = x16331 - x16332 + x16333 - x16334 + x16335;
double x16337 = x15929*x4883;
double x16338 = 8*x16337;
double x16339 = x4883*x7414;
double x16340 = x6128*x7537;
double x16341 = q7_b_dot_dt*x5540;
double x16342 = x15989*x7541 + x15991*x16341 - x16012*x7541 + x16016*x7541 + x16035*x7541 + x16038*x7541 - x16320*x16341 + x16338 - 8*x16339 - x16340;
double x16343 = x5911*x7646;
double x16344 = x5911*x7647;
double x16345 = x5330*x7715;
double x16346 = q8_b*x16058;
double x16347 = q8_b*x5149;
double x16348 = x16222*x7541;
double x16349 = x15929*x7805;
double x16350 = 8*x16223;
double x16351 = q7_b*x16350;
double x16352 = x5330*x7722;
double x16353 = 8*x7734;
double x16354 = q8_i*x11840;
double x16355 = q8_i*x5271;
double x16356 = 4*x15996;
double x16357 = x7770*x820;
double x16358 = q8_i_dot*x16114;
double x16359 = x5285*x7795;
double x16360 = x791*x8088;
double x16361 = x4926*x5149;
double x16362 = 8*q8_b_dt;
double x16363 = q8_b*x8675;
double x16364 = x16078*x7751;
double x16365 = x158*x16299;
double x16366 = x4926*x8675;
double x16367 = x7435*x7805;
double x16368 = x158*x16302;
double x16369 = 8*q8_b;
double x16370 = x158*x16322;
double x16371 = x158*x16325;
double x16372 = q8_b*x16350;
double x16373 = x5330*x7810;
double x16374 = q8_b*x16280;
double x16375 = x158*x16374;
double x16376 = x4964*x5149;
double x16377 = x158*x16376;
double x16378 = q8_i*x3380;
double x16379 = x16378*x5271;
double x16380 = x5271*x7828;
double x16381 = q8_b*x16353;
double x16382 = x5332*x7810;
double x16383 = q8_b*x16302;
double x16384 = x158*x16383;
double x16385 = x11417*x7836;
double x16386 = q8_b*x16299;
double x16387 = x158*x16386;
double x16388 = x4964*x8675;
double x16389 = x158*x16388;
double x16390 = x16239*x3380;
double x16391 = 4*x16390;
double x16392 = x3460*x5247;
double x16393 = x16392*x3401;
double x16394 = x16369*x7751;
double x16395 = x11360*x7834;
double x16396 = x158*x16395;
double x16397 = x11360*x7836;
double x16398 = x158*x16397;
double x16399 = x5161*x7834;
double x16400 = x158*x16399;
double x16401 = x5161*x7836;
double x16402 = x158*x16401;
double x16403 = x16222*x7805;
double x16404 = x8088*x820;
double x16405 = x5285*x7849;
double x16406 = -x11371*x7847 + x11374*x7850 + x11375*x7850 + x11377*x8099 + x16403 + x16404 + x16405 - x5505*x7849 - x7*x7848 - x7733*x7805;
double x16407 = -x16372 - x16373 - x16375 - x16377 - x16379 - x16380 + x16381 + x16382 - x16384 - x16385 + x16387 + x16389 + x16391 + x16393 + x16394 - x16396 - x16398 - x16400 - x16402 + x16406;
double x16408 = x5911*x7855;
double x16409 = x5202*x7858;
double x16410 = 8*x16409;
double x16411 = q8_b*x16354 + x12170*x7861 + x12171*x7861 - x16239*x16362 + x16347*x4977 - x16363*x4977 + x16408 - x16410 + x5536*x7860 - x5643*x7855;
double x16412 = x5996*x7646;
double x16413 = x5996*x7647;
double x16414 = x5521*x7715;
double x16415 = 14*x16266;
double x16416 = 10*x16223;
double x16417 = q8_b*x16416;
double x16418 = x5244*x7810;
double x16419 = x16222*x4883;
double x16420 = 6*x16419;
double x16421 = x15929*x4970;
double x16422 = 6*x16421;
double x16423 = q7_b*x16416;
double x16424 = x5244*x7722;
double x16425 = q7_b*x15930;
double x16426 = 14*x16425;
double x16427 = x5521*x7500;
double x16428 = q7_b*x7415;
double x16429 = q8_i*x11951;
double x16430 = 10*x7734;
double x16431 = x4883*x7733;
double x16432 = x4970*x7414;
double x16433 = x16289*x3380;
double x16434 = 14*x7436;
double x16435 = x5224*x7750;
double x16436 = q8_b*x286;
double x16437 = q7_b*x154;
double x16438 = x16307*x3401;
double x16439 = q7_b_dot*x286;
double x16440 = q8_i*x16439;
double x16441 = q8_b*x7638;
double x16442 = q7_b*x7638;
double x16443 = x5996*x7855;
double x16444 = x6741*x7855;
double x16445 = 12*x16409;
double x16446 = x16347*x4951;
double x16447 = x16289*x3416;
double x16448 = x16363*x4951;
double x16449 = x16239*x3416;
double x16450 = q8_b*x16429;
double x16451 = x12248*x7861;
double x16452 = x12249*x7861;
double x16453 = x16443 - x16444 - x16445 + x16446 + x16447 - x16448 - x16449 + x16450 + x16451 + x16452;
double x16454 = x6047*x7646;
double x16455 = x6047*x7647;
double x16456 = x5641*x7715;
double x16457 = 32*x16266;
double x16458 = 12*x16223;
double x16459 = q8_b*x16458;
double x16460 = x5306*x7810;
double x16461 = q7_b*x16458;
double x16462 = x5306*x7722;
double x16463 = 12*x16419;
double x16464 = 12*x16421;
double x16465 = 24*x16337;
double x16466 = 32*x16425;
double x16467 = x5641*x7500;
double x16468 = q8_i*x11973;
double x16469 = 12*x7734;
double x16470 = 18*q8_b_dt;
double x16471 = 32*x7436;
double x16472 = q8_b*x327;
double x16473 = x3943*x7750;
double x16474 = 12*x4970;
double x16475 = x16474*x7435;
double x16476 = x3480*x7340;
double x16477 = x11360*x808;
double x16478 = 16*q8_b;
double x16479 = x5161*x808;
double x16480 = q7_i*x8034;
double x16481 = 16*q7_b;
double x16482 = -x16189 + x16190 - x16191 + x16192 - x16193;
double x16483 = 4*x16220;
double x16484 = L*x16483;
double x16485 = x158*x16252;
double x16486 = x158*x16232;
double x16487 = x158*x16260;
double x16488 = x158*x16254;
double x16489 = x16484 - x16485 + x16486 - x16487 + x16488;
double x16490 = x6047*x7855;
double x16491 = x11376*x820;
double x16492 = x11*x7729;
double x16493 = q8_i_dot*x11595;
double x16494 = q8_i_dot*x11597;
double x16495 = q8_i_dot*x11599;
double x16496 = -x16491 - x16492 + x16493 - x16494 + x16495;
double x16497 = q8_b*x16468 + x10658*x7860 + x12286*x7861 + x12287*x7861 - x16239*x16470 + x16347*x4993 - x16363*x4993 - 18*x16409 + x16490 + x16496 - x7357*x7855;
double x16498 = x5413*x7855;
double x16499 = q8_b*x16272;
double x16500 = x5285*x7860;
double x16501 = 16*x16221;
double x16502 = x16232*x327;
double x16503 = x16252*x327;
double x16504 = x16254*x327;
double x16505 = x16260*x327;
double x16506 = -x16501 - x16502 + x16503 - x16504 + x16505;
double x16507 = -x5645;
double x16508 = x57*x7936;
double x16509 = q8_b_dot*x3389;
double x16510 = L*x16228;
double x16511 = 8*x16510;
double x16512 = L*x16250;
double x16513 = q8_b*x11370;
double x16514 = L*x16234;
double x16515 = -x16220 - x16232 + x16252 - x16254 + x16260;
double x16516 = x5306*x7958;
double x16517 = x5306*x7959;
double x16518 = theta_dt*x1710;
double x16519 = L*x16518;
double x16520 = q9_b_dot_dt*x5154;
double x16521 = L*x16520;
double x16522 = 4*x16521;
double x16523 = q8_b*x16522;
double x16524 = x5413*x7981;
double x16525 = x5149*x859;
double x16526 = theta_dt*x1717;
double x16527 = x16526*x70;
double x16528 = 16*x16527;
double x16529 = 30*x16229;
double x16530 = x5214*x840;
double x16531 = q9_i_dot*x11323;
double x16532 = x16531*x70;
double x16533 = x5202*x7998;
double x16534 = x859*x8675;
double x16535 = q9_i*x6;
double x16536 = x16535*x5160;
double x16537 = q9_b_dt*x16239;
double x16538 = x2*x5013;
double x16539 = q8_b*x16538;
double x16540 = x5285*x8007;
double x16541 = q8_i*x3494;
double x16542 = x16541*x5285;
double x16543 = x16272*x865;
double x16544 = q9_i*x11696;
double x16545 = x5214*x849;
double x16546 = x16545*x70;
double x16547 = q9_i*x11323;
double x16548 = q9_i*x11329;
double x16549 = q9_i_dot*x11332;
double x16550 = x16549*x70;
double x16551 = q8_b*x8126;
double x16552 = q9_i_dot*x11329;
double x16553 = x16552*x70;
double x16554 = q9_i*x11332;
double x16555 = x5330*x7855;
double x16556 = x5413*x7958;
double x16557 = x5413*x7959;
double x16558 = q9_b_dt*x5169;
double x16559 = x16558*x836;
double x16560 = q9_b*x16223;
double x16561 = 6*x16560;
double x16562 = q8_b*x3495;
double x16563 = x3389*x865;
double x16564 = x3555*x4970;
double x16565 = q9_b_dot*x3436;
double x16566 = x2*x840;
double x16567 = q8_b*x16566;
double x16568 = x5285*x8113;
double x16569 = x5285*x8114;
double x16570 = q9_b*x16272;
double x16571 = q8_b*x16224;
double x16572 = x5413*x7810;
double x16573 = 4*x16409;
double x16574 = x5149*x849;
double x16575 = x16574*x4970;
double x16576 = q9_i_dot*x5150;
double x16577 = x16576*x3395;
double x16578 = q9_b_dot_dt*x8628;
double x16579 = q8_i_dot*x16578;
double x16580 = x16280*x5061;
double x16581 = L*x16574;
double x16582 = q8_b*x16581;
double x16583 = x16576*x3401;
double x16584 = x16289*x3494;
double x16585 = x5032*x5149;
double x16586 = q9_i*x5150;
double x16587 = x16586*x3380;
double x16588 = q9_b_dt*x5150;
double x16589 = q9_b*x16285;
double x16590 = x7*x840;
double x16591 = q8_b*x16242;
double x16592 = x4964*x5502;
double x16593 = x16378*x5285;
double x16594 = x5285*x7828;
double x16595 = q9_i*x11374;
double x16596 = q9_b*x7734;
double x16597 = x849*x8675;
double x16598 = L*x16597;
double x16599 = x5247*x8007;
double x16600 = x16239*x3494;
double x16601 = q9_i_dot*x11348;
double x16602 = x16601*x4970;
double x16603 = x16302*x5061;
double x16604 = L*x16601;
double x16605 = x16597*x4970;
double x16606 = x5247*x8120;
double x16607 = x16307*x7975;
double x16608 = x16299*x5061;
double x16609 = 4*x7861;
double x16610 = q9_i*x836;
double x16611 = q9_b*x1858;
double x16612 = x4924*x7;
double x16613 = x11374*x837;
double x16614 = x5098*x5214;
double x16615 = x5032*x8675;
double x16616 = x16536*x3380;
double x16617 = q9_i_dot*x11360;
double x16618 = x16617*x4970;
double x16619 = x16322*x5061;
double x16620 = q9_i_dot*x5161;
double x16621 = x16620*x4970;
double x16622 = x16325*x5061;
double x16623 = q9_b*x837;
double x16624 = q8_i*x11375;
double x16625 = q8_i*x11474;
double x16626 = 7*x16527;
double x16627 = -7*x16532 + 7*x16546 - 7*x16550 + 7*x16553 + x16626;
double x16628 = x16222*x4970;
double x16629 = 8*x16628;
double x16630 = x4970*x7733;
double x16631 = x6128*x7847;
double x16632 = x16280*x7805 - x16299*x7805 + x16302*x7805 + x16322*x7805 + x16325*x7805 - x16392*x3395 + x16629 - 8*x16630 - x16631 + x5271*x7849;
double x16633 = x5911*x7958;
double x16634 = x5911*x7959;
double x16635 = x5330*x8106;
double x16636 = q9_b*x16350;
double x16637 = q9_b*x5149;
double x16638 = x16520*x7805;
double x16639 = x16222*x8175;
double x16640 = 8*x16521;
double x16641 = q8_b*x16640;
double x16642 = x5330*x7981;
double x16643 = 8*x8052;
double x16644 = q9_i*x11840;
double x16645 = q9_i*x5271;
double x16646 = 4*x16285;
double x16647 = x8088*x849;
double x16648 = x5285*x8120;
double x16649 = x5285*x7975;
double x16650 = q8_i_dot*x16649;
double x16651 = x5028*x5288;
double x16652 = x5015*x5149;
double x16653 = q9_b*x8675;
double x16654 = x16369*x8069;
double x16655 = x158*x16597;
double x16656 = x5015*x8675;
double x16657 = x7750*x8175;
double x16658 = x158*x16601;
double x16659 = 8*q9_b;
double x16660 = x158*x16617;
double x16661 = x158*x16620;
double x16662 = q9_b*x16640;
double x16663 = x5330*x8134;
double x16664 = q9_b*x16574;
double x16665 = x158*x16664;
double x16666 = x5052*x5149;
double x16667 = x158*x16666;
double x16668 = q9_i*x3494;
double x16669 = x16668*x5271;
double x16670 = x3538*x5150;
double x16671 = x158*x16670;
double x16672 = q9_b*x16643;
double x16673 = x5332*x8134;
double x16674 = q9_b*x16601;
double x16675 = x158*x16674;
double x16676 = x11417*x8160;
double x16677 = q9_b*x16597;
double x16678 = x158*x16677;
double x16679 = x5052*x8675;
double x16680 = x158*x16679;
double x16681 = x16536*x3494;
double x16682 = 4*x16681;
double x16683 = x3538*x5247;
double x16684 = x158*x16683;
double x16685 = x16659*x8069;
double x16686 = x11360*x8158;
double x16687 = x158*x16686;
double x16688 = x11360*x8160;
double x16689 = x158*x16688;
double x16690 = x5161*x8158;
double x16691 = x158*x16690;
double x16692 = x5161*x8160;
double x16693 = x158*x16692;
double x16694 = x16520*x8175;
double x16695 = x2*x849;
double x16696 = x16695*x5061;
double x16697 = q9_i_dot*x16649;
double x16698 = -x11371*x8171 + x11374*x8174 + x11375*x8174 + x11377*x8395 + x16694 + x16696 + x16697 - x5505*x8173 - x7*x8172 - x8051*x8175;
double x16699 = -x16662 - x16663 - x16665 - x16667 - x16669 - x16671 + x16672 + x16673 - x16675 - x16676 + x16678 + x16680 + x16682 + x16684 + x16685 - x16687 - x16689 - x16691 - x16693 + x16698;
double x16700 = x5911*x8179;
double x16701 = x5202*x8182;
double x16702 = 8*x16701;
double x16703 = q9_b_dt*x16536;
double x16704 = q9_b*x16644 + x12170*x8185 + x12171*x8185 + x16637*x5065 - x16653*x5065 + x16700 - x16702 - 8*x16703 + x5536*x8184 - x5643*x8179;
double x16705 = x5996*x7958;
double x16706 = x5996*x7959;
double x16707 = x5521*x8106;
double x16708 = 14*x16560;
double x16709 = 10*x16521;
double x16710 = q9_b*x16709;
double x16711 = x5244*x8134;
double x16712 = x16520*x4970;
double x16713 = 6*x16712;
double x16714 = x16222*x5061;
double x16715 = 6*x16714;
double x16716 = q8_b*x16709;
double x16717 = x5244*x7981;
double x16718 = q8_b*x16223;
double x16719 = 14*x16718;
double x16720 = x5521*x7810;
double x16721 = q8_b*x7734;
double x16722 = q9_i*x11951;
double x16723 = 10*x8052;
double x16724 = x4970*x8051;
double x16725 = x5061*x7733;
double x16726 = x16586*x3494;
double x16727 = q8_i_dot*x5150;
double x16728 = 14*x7751;
double x16729 = x5224*x8068;
double x16730 = q9_b*x286;
double x16731 = 6*x5061;
double x16732 = q8_b*x154;
double x16733 = 5*x3494;
double x16734 = q9_b*x3542;
double x16735 = q8_b*x3542;
double x16736 = x5996*x8179;
double x16737 = x6741*x8179;
double x16738 = 12*x16701;
double x16739 = x16637*x5039;
double x16740 = x16586*x8211;
double x16741 = x16653*x5039;
double x16742 = x16536*x8211;
double x16743 = q9_b*x16722;
double x16744 = 12*x8185;
double x16745 = x11360*x16744;
double x16746 = x16744*x5161;
double x16747 = x16736 - x16737 - x16738 + x16739 + x16740 - x16741 - x16742 + x16743 + x16745 + x16746;
double x16748 = x6047*x7958;
double x16749 = x6047*x7959;
double x16750 = x5641*x8106;
double x16751 = 32*x16560;
double x16752 = 12*x16521;
double x16753 = q9_b*x16752;
double x16754 = x5306*x8134;
double x16755 = q8_b*x16752;
double x16756 = x5306*x7981;
double x16757 = 12*x16712;
double x16758 = 12*x16714;
double x16759 = 24*x16628;
double x16760 = 32*x16718;
double x16761 = x5641*x7810;
double x16762 = q9_i*x11973;
double x16763 = 12*x8052;
double x16764 = 32*x7751;
double x16765 = q9_b*x327;
double x16766 = x3943*x8068;
double x16767 = x7750*x8498;
double x16768 = q9_i_dot*x5247;
double x16769 = q9_b*x3583;
double x16770 = q8_b*x3583;
double x16771 = -x16484 + x16485 - x16486 + x16487 - x16488;
double x16772 = 4*x16518;
double x16773 = L*x16772;
double x16774 = x158*x16547;
double x16775 = x158*x16530;
double x16776 = x158*x16554;
double x16777 = x158*x16548;
double x16778 = x11376*x849;
double x16779 = x11*x8046;
double x16780 = q9_i_dot*x11595;
double x16781 = q9_i_dot*x11597;
double x16782 = q9_i_dot*x11599;
double x16783 = -x16778 - x16779 + x16780 - x16781 + x16782;
double x16784 = x16773 - x16774 + x16775 - x16776 + x16777 + x16783;
double x16785 = x6047*x8179;
double x16786 = q9_b*x16762 + x10658*x8184 + x12286*x8185 + x12287*x8185 + x16637*x5081 - x16653*x5081 - 18*x16701 - 18*x16703 + x16785 - x7357*x8179;
double x16787 = x5413*x8179;
double x16788 = 18*x16518;
double x16789 = q9_b*x16566;
double x16790 = x5285*x8184;
double x16791 = -x6412;
double x16792 = q9_b_dot_dt*x5098;
double x16793 = q9_b_dot*x3503;
double x16794 = L*x16526;
double x16795 = 9*x16794;
double x16796 = q9_b*x11370;
double x16797 = -x16518 - x16530 + x16547 - x16548 + x16554;
double x16798 = x5306*x8278;
double x16799 = x5306*x8279;
double x16800 = q10_i_dt*x5179;
double x16801 = x5413*x8351;
double x16802 = x5154*x871;
double x16803 = q9_b*x16802;
double x16804 = 4*x16803;
double x16805 = x5150*x877;
double x16806 = x3607*x5179;
double x16807 = 34*x16527;
double x16808 = q10_i_dt*x5215;
double x16809 = x11323*x3664;
double x16810 = x5202*x8313;
double x16811 = x5247*x8420;
double x16812 = x5247*x877;
double x16813 = x16566*x876;
double x16814 = q9_i*x871;
double x16815 = x16814*x5285;
double x16816 = q9_b_dt*x875;
double x16817 = x16816*x5285;
double x16818 = x5285*x872;
double x16819 = q9_b*x16818;
double x16820 = q9_b_dt*x5122;
double x16821 = q9_b*x8360;
double x16822 = q9_i*x8320;
double x16823 = q10_i*x11696;
double x16824 = x3607*x5215;
double x16825 = q10_i*x11323;
double x16826 = q10_i*x8287;
double x16827 = 18*x3664;
double x16828 = 6*x8319;
double x16829 = x5186*x876;
double x16830 = x5330*x8179;
double x16831 = x5413*x8278;
double x16832 = x5413*x8279;
double x16833 = q10_b*x16521;
double x16834 = 6*x16833;
double x16835 = q10_b_dt*x5169;
double x16836 = x16835*x865;
double x16837 = x3503*x876;
double x16838 = x5098*x871;
double x16839 = x3555*x5125;
double x16840 = x57*x8356;
double x16841 = q10_b*x16566;
double x16842 = q10_b_dt*q9_i;
double x16843 = x16842*x5285;
double x16844 = x5285*x8420;
double x16845 = x2*x5091;
double x16846 = q9_b*x16845;
double x16847 = q9_b*x16522;
double x16848 = x5413*x8134;
double x16849 = 4*x16701;
double x16850 = x16574*x5125;
double x16851 = x16576*x3605;
double x16852 = q10_i_dot*x16578;
double x16853 = x5109*x5150;
double x16854 = x16586*x871;
double x16855 = x5150*x872;
double x16856 = q9_b*x16855;
double x16857 = q10_b*x16581;
double x16858 = q10_b_dt*x5150;
double x16859 = x5091*x7;
double x16860 = q9_b*x16538;
double x16861 = x5052*x5502;
double x16862 = x16668*x5285;
double x16863 = x3538*x5869;
double x16864 = q10_i*x11374;
double x16865 = x16536*x871;
double x16866 = x5247*x872;
double x16867 = q9_b*x16866;
double x16868 = x16601*x5125;
double x16869 = x11348*x70;
double x16870 = q10_i_dot*x11351;
double x16871 = q9_b*x16870;
double x16872 = x16597*x5125;
double x16873 = x3663*x5247;
double x16874 = x5247*x8427;
double x16875 = x5109*x5247;
double x16876 = q10_i*x8342;
double x16877 = 8*x3664;
double x16878 = 4*x8185;
double x16879 = q10_b*x1858;
double x16880 = q10_i*x865;
double x16881 = x5013*x7;
double x16882 = x11374*x866;
double x16883 = q10_b_dt*x5247;
double x16884 = q10_b*x129;
double x16885 = x11360*x70;
double x16886 = q10_b*x866;
double x16887 = x1790*x865;
double x16888 = q9_i*x11375;
double x16889 = q9_i*x11474;
double x16890 = x16520*x5061;
double x16891 = 8*x16890;
double x16892 = x5061*x8051;
double x16893 = x6128*x8171;
double x16894 = q9_b_dot_dt*x5540;
double x16895 = x16574*x8175 + x16576*x16894 - x16597*x8175 + x16601*x8175 + x16617*x8175 + x16620*x8175 - x16768*x16894 + x16891 - 8*x16892 - x16893;
double x16896 = x5911*x8278;
double x16897 = x5911*x8279;
double x16898 = x5911*x8402;
double x16899 = q10_b*x16802;
double x16900 = 8*x16899;
double x16901 = q10_b*x16640;
double x16902 = x5330*x8408;
double x16903 = x5330*x8409;
double x16904 = x5202*x8404;
double x16905 = q10_b*x5149;
double x16906 = x3655*x5150;
double x16907 = x16520*x8447;
double x16908 = x5413*x8356;
double x16909 = x5330*x8351;
double x16910 = 8*x16803;
double x16911 = q10_i*x5150;
double x16912 = q10_i*x11840;
double x16913 = x3655*x5247;
double x16914 = q10_i*x5247;
double x16915 = q10_b*x16855;
double x16916 = 4*x16581;
double x16917 = q10_i_dt*x5150;
double x16918 = q10_i*x871;
double x16919 = q10_i*x3494;
double x16920 = x16695*x5125;
double x16921 = x3663*x5285;
double x16922 = q10_i_dot*x16649;
double x16923 = x5109*x5285;
double x16924 = x5149*x840;
double x16925 = q10_b*x8360;
double x16926 = q10_b*x8675;
double x16927 = x840*x8675;
double x16928 = x8068*x8447;
double x16929 = x11374*x70;
double x16930 = q10_i_dt*x5247;
double x16931 = 4*x871;
double x16932 = x5247*x8434;
double x16933 = q10_b*x3661;
double x16934 = q10_i*x11360;
double x16935 = q10_i*x5161;
double x16936 = x5214*x5273;
double x16937 = q9_i*x5122;
double x16938 = q9_b*x3661;
double x16939 = x5413*x8451;
double x16940 = q10_b_dot*x3607;
double x16941 = x16940*x5285;
double x16942 = x3636*x5285;
double x16943 = -x11371*x8453 + x11374*x8454 + x11375*x8454 + x11377*x8450 + x16939 - x16940*x5505 + x16941 + x16942 - x3636*x5505 - x5547*x8451;
double x16944 = x5996*x8278;
double x16945 = x5996*x8279;
double x16946 = x5996*x8402;
double x16947 = 14*x16833;
double x16948 = x5521*x8409;
double x16949 = x3667*x5150;
double x16950 = 10*x16802;
double x16951 = q10_b*x16950;
double x16952 = q10_b_dt*x8472;
double x16953 = x16520*x5125;
double x16954 = 6*x16953;
double x16955 = x5169*x8356;
double x16956 = q9_b_dt*x8472;
double x16957 = q9_b*x16950;
double x16958 = q9_b*x16521;
double x16959 = 14*x16958;
double x16960 = x5521*x8134;
double x16961 = 14*x8052;
double x16962 = x11348*x3670;
double x16963 = x3667*x5247;
double x16964 = 10*x8360;
double x16965 = x5125*x8051;
double x16966 = 5*x871;
double x16967 = 14*x8069;
double x16968 = 12*x8318;
double x16969 = q10_b_dot*x7001;
double x16970 = q10_b*x286;
double x16971 = x5125*x8068;
double x16972 = 5*q10_b;
double x16973 = x8466*x871;
double x16974 = q10_b*x3671;
double x16975 = q10_i*x8459;
double x16976 = q10_b*x3673;
double x16977 = q10_i*x5129;
double x16978 = q9_i*x5129;
double x16979 = q9_b*x3673;
double x16980 = q9_b*x3671;
double x16981 = x6047*x8278;
double x16982 = x6047*x8279;
double x16983 = x6047*x8402;
double x16984 = 32*x16833;
double x16985 = x5641*x8409;
double x16986 = x3646*x5150;
double x16987 = 12*x16899;
double x16988 = x5306*x8408;
double x16989 = x5306*x8351;
double x16990 = 12*x16803;
double x16991 = 12*x16953;
double x16992 = x5306*x8356;
double x16993 = 24*x16890;
double x16994 = 32*x16958;
double x16995 = x5641*x8134;
double x16996 = 32*x8052;
double x16997 = q10_i*x11973;
double x16998 = x3646*x5247;
double x16999 = 16*x3494;
double x17000 = 32*x8069;
double x17001 = q10_b*x327;
double x17002 = 12*x16971;
double x17003 = x3629*x7975;
double x17004 = 6*x16869;
double x17005 = q10_b*x3642;
double x17006 = q10_b*x3632;
double x17007 = q10_i*x8482;
double x17008 = q9_i*x8482;
double x17009 = q9_b*x3632;
double x17010 = 6*x16885;
double x17011 = 6*x5647;
double x17012 = q9_b*x3642;
double x17013 = -x16773 + x16774 - x16775 + x16776 - x16777;
double x17014 = x3607*x5437;
double x17015 = c*x11;
double x17016 = x17015*x3607;
double x17017 = x11440*x3664;
double x17018 = x11442*x3664;
double x17019 = x11444*x3664;
double x17020 = -x17014 - x17016 + x17017 - x17018 + x17019;
double x17021 = x11329*x8492 - x11332*x8492 + x158*x16800 + x158*x16808 - x158*x16825 + x16783 + x17013 + x17020;
double x17022 = x1*x5;
double x17023 = -x2 + x7;
double x17024 = c*x17022;
double x17025 = x17024*x58;
double x17026 = x33*x5200;
double x17027 = (1.0/3.0)*x70;
double x17028 = L*x10;
double x17029 = q1_i_dot_dt*x17028;
double x17030 = x17029*x33;
double x17031 = x33*x49;
double x17032 = x11328*x17031;
double x17033 = x11331*x17031;
double x17034 = x17028*x51;
double x17035 = x17034*x53;
double x17036 = q1_t_dt*x17035;
double x17037 = x49*x6;
double x17038 = x17037*x59;
double x17039 = x19*x5285;
double x17040 = x17039*x58;
double x17041 = x17040*x49;
double x17042 = x17030 + x17032 - x17033 - x17036 - x17038 + x17041;
double x17043 = q1_i_dt*x10;
double x17044 = x17043*x33;
double x17045 = q1_i*x33;
double x17046 = x11328*x17045;
double x17047 = x11331*x17045;
double x17048 = x10*x109;
double x17049 = c*x11331;
double x17050 = q1_i*x1360;
double x17051 = c*x11328;
double x17052 = -3*x17044 - 3*x17046 + 3*x17047 + x17048*x58 - x17049*x17050 + x17050*x17051;
double x17053 = 2*x17044;
double x17054 = x11390*x34;
double x17055 = x19*x2;
double x17056 = x17045*x17055;
double x17057 = x10*x37;
double x17058 = q1_t_dt*x17057;
double x17059 = x17058*x36;
double x17060 = q1_i*x1389;
double x17061 = x17049*x17060;
double x17062 = x17051*x17060;
double x17063 = c*x5200;
double x17064 = q1_b_dt*x17063;
double x17065 = 3*x17064;
double x17066 = q1_b_dot_dt*x17063;
double x17067 = L*x17066;
double x17068 = q1_b_dt*q1_i;
double x17069 = x11331*x5107;
double x17070 = x17068*x17069;
double x17071 = x10*x51;
double x17072 = q1_b_dot_dt*x3108;
double x17073 = x17071*x17072;
double x17074 = -x17073;
double x17075 = x11373*x19;
double x17076 = x17074 + x17075;
double x17077 = q1_b_dt*x17057;
double x17078 = 8*x17077;
double x17079 = q1_b_dot_dt*x17057;
double x17080 = x158*x17079;
double x17081 = q1_b_dt*x10;
double x17082 = x17081*x51;
double x17083 = x158*x17082;
double x17084 = x17080 + x17083;
double x17085 = -x17078 + x17084;
double x17086 = x137*x6;
double x17087 = x138*x17086;
double x17088 = -x17087;
double x17089 = x11328*x17068;
double x17090 = x17089*x5107;
double x17091 = -x17090;
double x17092 = x127*x17051;
double x17093 = x158*x17092;
double x17094 = x131*x17051;
double x17095 = x158*x17094;
double x17096 = x17093 + x17095;
double x17097 = x17088 + x17091 + x17096;
double x17098 = x127*x17049;
double x17099 = x158*x17098;
double x17100 = x131*x17049;
double x17101 = x158*x17100;
double x17102 = -x17099 - x17101;
double x17103 = x154*x17098;
double x17104 = x154*x17100;
double x17105 = q1_b_dt*x151;
double x17106 = x17049*x17105;
double x17107 = x17088 + x17106;
double x17108 = 12*x17077;
double x17109 = -x17108;
double x17110 = x17051*x17105;
double x17111 = -x17110;
double x17112 = x17109 + x17111;
double x17113 = x154*x17079 + x154*x17082;
double x17114 = x154*x17092 + x154*x17094;
double x17115 = L*x17064;
double x17116 = 4*x17115;
double x17117 = -x17116;
double x17118 = x17024*x5265;
double x17119 = x17089*x5096;
double x17120 = x129*x17092;
double x17121 = x129*x17094;
double x17122 = -x17075;
double x17123 = x17073 + x17087 + x17122;
double x17124 = 18*x17077;
double x17125 = -x129*x17082 - x17048*x2741 + x17124;
double x17126 = x11331*x5096;
double x17127 = x17068*x17126;
double x17128 = -x17127;
double x17129 = x129*x17098 + x129*x17100 + x17128;
double x17130 = Z_dt*x17063;
double x17131 = x11359*x71;
double x17132 = theta_dt*x19;
double x17133 = x17132*x73;
double x17134 = -x17130 + x17131 + x17133;
double x17135 = x11200*x19;
double x17136 = x10*x71;
double x17137 = x17136*x74;
double x17138 = x17022*x86;
double x17139 = q1_b*x17138;
double x17140 = Y_dt*x6;
double x17141 = x17140*x77;
double x17142 = Z_dt*x10;
double x17143 = x17142*x77;
double x17144 = x14*x6;
double x17145 = x17144*x84;
double x17146 = Z_dt*x19;
double x17147 = x17146*x5729;
double x17148 = x17055*x84;
double x17149 = x10*x14;
double x17150 = x17149*x86;
double x17151 = q1_i*x17150;
double x17152 = x19*x86;
double x17153 = x17152*x9;
double x17154 = q1_i*x17153;
double x17155 = x11390*x81;
double x17156 = q1_b_dot_dt*x17136;
double x17157 = x102*x5200;
double x17158 = q1_b_dot*x17157;
double x17159 = x17140*x51;
double x17160 = x17142*x51;
double x17161 = q1_b_dot*x5;
double x17162 = Z_dt*c;
double x17163 = x11331*x17162;
double x17164 = x17163*x49;
double x17165 = x11331*x71;
double x17166 = q1_i_dot*x102;
double x17167 = x11359*x17166;
double x17168 = x17166*x5159;
double x17169 = x11328*x17162;
double x17170 = x17169*x49;
double x17171 = L*x17156 + L*x17159 - L*x17160 + x11198*x19 - x120*x17165 + x17158 + x17161*x384 + x17164 - x17167 - x17168 - x17170;
double x17172 = x11197*x19;
double x17173 = x114*x5200;
double x17174 = q1_b*x17173;
double x17175 = 6*x17136;
double x17176 = q1_b_dt*x17175;
double x17177 = x109*x17140;
double x17178 = x109*x17142;
double x17179 = x102*x17022;
double x17180 = x5*x72;
double x17181 = 6*x17180;
double x17182 = q1_b*x17181;
double x17183 = 6*x11331;
double x17184 = x17183*x84;
double x17185 = q1_i*x114;
double x17186 = x11359*x17185;
double x17187 = x17185*x5159;
double x17188 = 6*q1_i;
double x17189 = x17169*x17188;
double x17190 = x17163*x17188;
double x17191 = x208*x6;
double x17192 = x17191*x71;
double x17193 = x17055*x71;
double x17194 = x19*x9;
double x17195 = x17146*x5285;
double x17196 = x11359*x37;
double x17197 = -3*x17196;
double x17198 = x11318*x19;
double x17199 = x11359*x51;
double x17200 = L*x17199;
double x17201 = x11320*x19;
double x17202 = x17200 + x17201;
double x17203 = x169*x5;
double x17204 = x17203*x5335;
double x17205 = -x17204;
double x17206 = x11331*x5309;
double x17207 = 8*x17206;
double x17208 = x3835*x6;
double x17209 = x17208*x3702;
double x17210 = -x17209;
double x17211 = x11372*x19;
double x17212 = x17074 + x17210 + x17211;
double x17213 = x11331*x5235;
double x17214 = x158*x17213;
double x17215 = -x17214;
double x17216 = x11331*x183;
double x17217 = x158*x17216;
double x17218 = -x17217;
double x17219 = x11328*x5235;
double x17220 = x158*x17219;
double x17221 = x17161*x193;
double x17222 = x17220 + x17221;
double x17223 = x17215 + x17218 + x17222;
double x17224 = x154*x17213;
double x17225 = x154*x17216;
double x17226 = q1_b*x17203;
double x17227 = 12*x17226;
double x17228 = -x17227;
double x17229 = 12*x17206;
double x17230 = x17109 + x17228 + x17229;
double x17231 = x17161*x192;
double x17232 = x154*x17219 + 5*x17231;
double x17233 = 18*x17226;
double x17234 = x129*x17219;
double x17235 = x17161*x3678;
double x17236 = x158*x17196;
double x17237 = -x17236;
double x17238 = x11448*x19;
double x17239 = -x17238;
double x17240 = x17237 + x17239;
double x17241 = x17071*x3835;
double x17242 = -x17211;
double x17243 = x17241 + x17242;
double x17244 = x17073 + x17209;
double x17245 = x109*x11331;
double x17246 = 18*x17206;
double x17247 = x11437*x19;
double x17248 = -x17246 + x17247;
double x17249 = x120*x17245 + x129*x17213 + x17248;
double x17250 = p1_b_dot_dt*x17136;
double x17251 = x5200*x86;
double x17252 = x17140*x202;
double x17253 = x17142*x202;
double x17254 = p1_i_dot*x17163;
double x17255 = p1_b_dot*x17165;
double x17256 = p1_i_dot*x86;
double x17257 = p1_i_dot*x17169;
double x17258 = L*x17024;
double x17259 = Z_dt*x17258;
double x17260 = x17136*x208;
double x17261 = x11806*x19*x71;
double x17262 = x11208*x19;
double x17263 = x17142*x211;
double x17264 = 2*x17136;
double x17265 = p1_b_dt*x17264;
double x17266 = p1_b*x17138;
double x17267 = x17140*x211;
double x17268 = p1_b*x71;
double x17269 = x17055*x17268;
double x17270 = p1_i*x17150;
double x17271 = p1_i*x17153;
double x17272 = x11469*x81;
double x17273 = x17144*x17268;
double x17274 = p1_i*x17195;
double x17275 = x17262 - x17263 + x17265 + x17266 + x17267 - x17269 - x17270 - x17271 - x17272 + x17273 + x17274;
double x17276 = p1_b_dot*x17157;
double x17277 = p1_b_dot*x5;
double x17278 = p1_i_dot*x102;
double x17279 = x11359*x17278;
double x17280 = x17278*x5159;
double x17281 = L*x17250 + L*x17252 - L*x17253 + x11205*x19 + x17163*x249 - x17165*x450 - x17169*x249 + x17276 + x17277*x384 - x17279 - x17280;
double x17282 = x11204*x19;
double x17283 = p1_b*x17173;
double x17284 = p1_b_dt*x17175;
double x17285 = x17140*x226;
double x17286 = x17142*x226;
double x17287 = p1_b*x17181;
double x17288 = 6*x17165;
double x17289 = p1_b*x17288;
double x17290 = p1_i*x114;
double x17291 = x11359*x17290;
double x17292 = x17290*x5159;
double x17293 = 6*x17169;
double x17294 = p1_i*x17293;
double x17295 = 6*x17163;
double x17296 = p1_i*x17295;
double x17297 = L*x5200;
double x17298 = x17297*x257;
double x17299 = p1_t_dt*x_f;
double x17300 = x17258*x17299;
double x17301 = x10*x17299;
double x17302 = x17301*x211;
double x17303 = x10*x257;
double x17304 = p1_i_dt*x17303;
double x17305 = p1_i*x257;
double x17306 = x11331*x17305;
double x17307 = x11469*x242;
double x17308 = x17039*x17299;
double x17309 = p1_i*x17308;
double x17310 = x11328*x17305;
double x17311 = 2*x17304;
double x17312 = x10*x210;
double x17313 = x1005*x17312;
double x17314 = x17055*x17305;
double x17315 = x11469*x14;
double x17316 = x17315*x257;
double x17317 = p1_i*x1005;
double x17318 = x17051*x17317;
double x17319 = x17049*x17317;
double x17320 = L*x17303;
double x17321 = p1_i_dot_dt*x17320;
double x17322 = x249*x257;
double x17323 = x11328*x17322;
double x17324 = x11331*x17322;
double x17325 = x10*x368;
double x17326 = p1_t_dt*x53;
double x17327 = x17325*x17326;
double x17328 = x249*x6;
double x17329 = x17328*x242;
double x17330 = x17308*x249;
double x17331 = x17321 + x17323 - x17324 - x17327 - x17329 + x17330;
double x17332 = p1_t_dt*x267;
double x17333 = x17325*x270;
double x17334 = p1_i*x17332;
double x17335 = p1_i_dot_dt*x1858;
double x17336 = x17303*x17335;
double x17337 = x249*x270;
double x17338 = x17051*x17337;
double x17339 = x17049*x17337;
double x17340 = 3*x17323;
double x17341 = 3*x17324;
double x17342 = L*x17022;
double x17343 = L*x17063;
double x17344 = x1005*x17343 - x17342*x257;
double x17345 = -x17298 + x17300;
double x17346 = p1_i*x270;
double x17347 = -x17049*x17346 + x17051*x17346 + x17301*x226 - 3*x17304 + 3*x17306 - 3*x17310;
double x17348 = p1_b_dt*x10;
double x17349 = x17348*x211;
double x17350 = -x11469*x276;
double x17351 = x11463*x19;
double x17352 = p1_b_dt*x17063;
double x17353 = x17063*x1981;
double x17354 = p1_b_dot_dt*x17312;
double x17355 = x17348*x202;
double x17356 = x17049*x281;
double x17357 = x17049*x283;
double x17358 = x17051*x281;
double x17359 = x17051*x283;
double x17360 = -x17358 - x17359;
double x17361 = x11328*x5107;
double x17362 = x17361*x5614;
double x17363 = p1_b_dot_dt*x10;
double x17364 = x17363*x345;
double x17365 = 2*x17364;
double x17366 = x11575*x19;
double x17367 = -x17366;
double x17368 = x6*x70;
double x17369 = x17368*x312;
double x17370 = p1_i_dot*x17369;
double x17371 = x17365 + x17367 + x17370;
double x17372 = x158*x17358;
double x17373 = x158*x17359;
double x17374 = x17372 + x17373;
double x17375 = p1_b_dt*x17312;
double x17376 = 8*x17375;
double x17377 = x17312*x1981;
double x17378 = x158*x17355 + 4*x17377;
double x17379 = x17376 + x17378;
double x17380 = x17069*x5614;
double x17381 = -x17380;
double x17382 = x158*x17356;
double x17383 = -x17382;
double x17384 = x158*x17357;
double x17385 = -x17384;
double x17386 = x17381 + x17383 + x17385;
double x17387 = p1_i_dot*x9075;
double x17388 = x17051*x17387;
double x17389 = x17358*x286;
double x17390 = x17359*x286;
double x17391 = x17312*x299;
double x17392 = p1_i*x299;
double x17393 = x17049*x17392;
double x17394 = -x17393;
double x17395 = x17051*x17392;
double x17396 = x17391 + x17394 + x17395;
double x17397 = 4*x17364;
double x17398 = x17355*x286 + 7*x17377 + x17397;
double x17399 = x17049*x17387;
double x17400 = -x17399;
double x17401 = -x17356*x286 - x17357*x286 + x17400;
double x17402 = x158*x17352;
double x17403 = -x17402;
double x17404 = x17024*x5604;
double x17405 = x17126*x5614;
double x17406 = 12*x17049;
double x17407 = x17406*x5605;
double x17408 = x17356*x327;
double x17409 = x17357*x327;
double x17410 = 18*x17375;
double x17411 = -x17355*x327 - 12*x17364 - 16*x17377 - x17410;
double x17412 = x11328*x5096;
double x17413 = x17412*x5614;
double x17414 = -x17413;
double x17415 = 12*x17051;
double x17416 = -x17358*x327 - x17359*x327 + x17414 - x17415*x5605;
double x17417 = 3*x17063;
double x17418 = x17417*x5604;
double x17419 = 4*x5614;
double x17420 = x17049*x17419;
double x17421 = x11618*x19;
double x17422 = x11619*x19;
double x17423 = x10*x1981;
double x17424 = -x17355*x321 + 4*x17375 - x17397 - x17423*x211;
double x17425 = -x17388;
double x17426 = x5491*x6;
double x17427 = x17051*x17419 - x17328*x276 + x17425 - x17426*x281;
double x17428 = x129*x17352;
double x17429 = 6*x17063;
double x17430 = x17429*x5604;
double x17431 = -x17365;
double x17432 = x17378 + x17431;
double x17433 = -x17370;
double x17434 = x17374 + x17433;
double x17435 = x17366 + x17383 + x17385 + x17432 + x17434;
double x17436 = x17312*x208;
double x17437 = x17144*x5457;
double x17438 = -x11460*x19 - x11462*x19;
double x17439 = x11359*x210;
double x17440 = x11328*x5483;
double x17441 = x17277*x336;
double x17442 = x11359*x368;
double x17443 = x11503*x19;
double x17444 = x11331*x5483;
double x17445 = x11331*x340;
double x17446 = -x11479*x19 + x17443 - x17444 - x17445;
double x17447 = x11331*x5457;
double x17448 = 8*x17447;
double x17449 = -x17448;
double x17450 = p1_b*x336;
double x17451 = x17450*x5;
double x17452 = 8*x17451;
double x17453 = x11574*x19;
double x17454 = -x17453;
double x17455 = p1_b_dot*x17208;
double x17456 = x17455*x202;
double x17457 = x17365 + x17454 + x17456;
double x17458 = x158*x17444;
double x17459 = -x17458;
double x17460 = x158*x17445;
double x17461 = -x17460;
double x17462 = x158*x17440;
double x17463 = x17277*x371;
double x17464 = x17462 + x17463;
double x17465 = x17459 + x17461 + x17464;
double x17466 = x11328*x5539;
double x17467 = 4*x17466;
double x17468 = x17440*x286;
double x17469 = x17277*x3965;
double x17470 = 12*x11331;
double x17471 = x17470*x5457;
double x17472 = -x17471;
double x17473 = 12*x17451;
double x17474 = x17391 + x17472 + x17473;
double x17475 = 4*x11331;
double x17476 = x17475*x5539;
double x17477 = -x17476;
double x17478 = -x17444*x286 - x17445*x286 + x17477;
double x17479 = x11593*x19;
double x17480 = 18*x17447;
double x17481 = x17470*x5539;
double x17482 = x17444*x327;
double x17483 = x17445*x327;
double x17484 = x158*x17439;
double x17485 = -x17484;
double x17486 = x158*x17443;
double x17487 = -x17486;
double x17488 = x17485 + x17487;
double x17489 = 18*x17451;
double x17490 = x10*x3835;
double x17491 = x17490*x202;
double x17492 = -x17489 - x17491;
double x17493 = -x17440*x327 - x17441*x327 - 12*x17466 + x17492;
double x17494 = x154*x17443;
double x17495 = 4*x17447;
double x17496 = x11631*x19;
double x17497 = x11616*x19;
double x17498 = x11617*x19;
double x17499 = x11359*x345;
double x17500 = 3*x17499;
double x17501 = -x17500;
double x17502 = 4*x5;
double x17503 = -x17467;
double x17504 = -x154*x17439 - x17191*x340 - x17191*x5483 + x17450*x17502 + x17501 + x17503;
double x17505 = x129*x17443;
double x17506 = x11639*x19;
double x17507 = L*x11359;
double x17508 = -6*x17499 - x17507*x226;
double x17509 = -x17456;
double x17510 = x17453 + x17509;
double x17511 = x17432 + x17465 + x17510;
double x17512 = p10_b_dot_dt*x17136;
double x17513 = x17140*x379;
double x17514 = x17142*x379;
double x17515 = p10_i_dot*x11331;
double x17516 = x17162*x17515;
double x17517 = p10_b_dot*x17165;
double x17518 = p10_i_dot*x86;
double x17519 = p10_i_dot*x17169;
double x17520 = L*x17130;
double x17521 = p10_b*x71;
double x17522 = p10_b*x17138 + p10_b_dt*x17264 - p10_i*x17150 - p10_i*x17153 + x11216*x19 - x12643*x81 - x17055*x17521 + x17140*x386 - x17142*x386 + x17144*x17521 + x17146*x8523;
double x17523 = x11217*x19;
double x17524 = p9_b_dt*x17264;
double x17525 = p9_b*x17138;
double x17526 = x17140*x391;
double x17527 = x17142*x391;
double x17528 = p10_b_dot*x17157;
double x17529 = p9_b*x71;
double x17530 = x17144*x17529;
double x17531 = x17146*x8761;
double x17532 = x17055*x17529;
double x17533 = p9_i*x17150;
double x17534 = p9_i*x17153;
double x17535 = x12700*x81;
double x17536 = p10_b_dot*x5;
double x17537 = p10_i_dot*x102;
double x17538 = x11359*x17537;
double x17539 = x17537*x5159;
double x17540 = p9_b_dot_dt*x17136;
double x17541 = p9_b_dot*x17157;
double x17542 = x17140*x403;
double x17543 = x17142*x403;
double x17544 = p9_b_dot*x5;
double x17545 = p9_i_dot*x102;
double x17546 = x11359*x17545;
double x17547 = x17545*x5159;
double x17548 = L*x17540 + L*x17542 - L*x17543 + x11214*x19 + x17163*x421 - x17165*x420 - x17169*x421 + x17541 + x17544*x384 - x17546 - x17547;
double x17549 = x11211*x19;
double x17550 = p9_b*x17173;
double x17551 = p9_b_dt*x17175;
double x17552 = x17140*x414;
double x17553 = x17142*x414;
double x17554 = p9_b*x17181;
double x17555 = p9_b*x17288;
double x17556 = p10_i*x114;
double x17557 = p9_i*x114;
double x17558 = x11359*x17557;
double x17559 = x17557*x5159;
double x17560 = p9_i*x17293;
double x17561 = p9_i*x17295;
double x17562 = x6*x81;
double x17563 = p2_b_dot_dt*x17136;
double x17564 = x17140*x423;
double x17565 = x17142*x423;
double x17566 = p2_i_dot*x17163;
double x17567 = p2_b_dot*x17165;
double x17568 = p2_i_dot*x86;
double x17569 = p2_i_dot*x17169;
double x17570 = x158*x17130;
double x17571 = x158*x17131;
double x17572 = x158*x17133;
double x17573 = x11223*x19;
double x17574 = x17142*x430;
double x17575 = p2_b_dt*x17264;
double x17576 = p2_b*x17138;
double x17577 = x17140*x430;
double x17578 = p2_b*x71;
double x17579 = x17055*x17578;
double x17580 = p2_i*x17150;
double x17581 = p2_i*x17153;
double x17582 = x13105*x81;
double x17583 = x17144*x17578;
double x17584 = x17146*x9109;
double x17585 = x17573 - x17574 + x17575 + x17576 + x17577 - x17579 - x17580 - x17581 - x17582 + x17583 + x17584;
double x17586 = p2_b_dot*x17157;
double x17587 = p2_b_dot*x5;
double x17588 = p2_i_dot*x102;
double x17589 = x11359*x17588;
double x17590 = x17588*x5159;
double x17591 = L*x17563 + L*x17564 - L*x17565 + x11221*x19 + x17163*x480 - x17165*x479 - x17169*x480 + x17586 + x17587*x384 - x17589 - x17590;
double x17592 = x11219*x19;
double x17593 = p2_b*x17173;
double x17594 = p2_b_dt*x17175;
double x17595 = x17140*x444;
double x17596 = x17142*x444;
double x17597 = p2_b*x17181;
double x17598 = p2_b*x17288;
double x17599 = p2_i*x114;
double x17600 = x11359*x17599;
double x17601 = x17599*x5159;
double x17602 = p2_i*x17293;
double x17603 = p2_i*x17295;
double x17604 = p3_b_dot_dt*x17136;
double x17605 = x17140*x452;
double x17606 = x17142*x452;
double x17607 = p3_i_dot*x17163;
double x17608 = p3_b_dot*x17165;
double x17609 = p3_i_dot*x86;
double x17610 = p3_i_dot*x17169;
double x17611 = x129*x17130;
double x17612 = x129*x17131;
double x17613 = L*x107*x17132;
double x17614 = x11229*x19;
double x17615 = x17142*x459;
double x17616 = p3_b_dt*x17264;
double x17617 = p3_b*x17138;
double x17618 = x17140*x459;
double x17619 = p3_b*x71;
double x17620 = x17055*x17619;
double x17621 = p3_i*x17150;
double x17622 = p3_i*x17153;
double x17623 = x13434*x81;
double x17624 = x17144*x17619;
double x17625 = x17146*x9381;
double x17626 = x17614 - x17615 + x17616 + x17617 + x17618 - x17620 - x17621 - x17622 - x17623 + x17624 + x17625;
double x17627 = p3_b_dot*x17157;
double x17628 = p3_b_dot*x5;
double x17629 = p3_i_dot*x102;
double x17630 = x11359*x17629;
double x17631 = x17629*x5159;
double x17632 = L*x17604 + L*x17605 - L*x17606 + x11227*x19 + x17163*x510 - x17165*x509 - x17169*x510 + x17627 + x17628*x384 - x17630 - x17631;
double x17633 = x11225*x19;
double x17634 = p3_b*x17173;
double x17635 = p3_b_dt*x17175;
double x17636 = x17140*x473;
double x17637 = x17142*x473;
double x17638 = p3_b*x17181;
double x17639 = p3_b*x17288;
double x17640 = p3_i*x114;
double x17641 = x11359*x17640;
double x17642 = x17640*x5159;
double x17643 = p3_i*x17293;
double x17644 = p3_i*x17295;
double x17645 = p4_b_dot_dt*x17136;
double x17646 = x17140*x482;
double x17647 = x17142*x482;
double x17648 = p4_i_dot*x17163;
double x17649 = p4_b_dot*x17165;
double x17650 = p4_i_dot*x86;
double x17651 = p4_i_dot*x17169;
double x17652 = 8*x17520;
double x17653 = x17131*x6674;
double x17654 = x17133*x6674;
double x17655 = x11235*x19;
double x17656 = x17142*x489;
double x17657 = p4_b_dt*x17264;
double x17658 = p4_b*x17138;
double x17659 = x17140*x489;
double x17660 = p4_b*x71;
double x17661 = x17055*x17660;
double x17662 = p4_i*x17150;
double x17663 = p4_i*x17153;
double x17664 = x13738*x81;
double x17665 = x17144*x17660;
double x17666 = x17146*x9675;
double x17667 = x17655 - x17656 + x17657 + x17658 + x17659 - x17661 - x17662 - x17663 - x17664 + x17665 + x17666;
double x17668 = p4_b_dot*x17157;
double x17669 = p4_b_dot*x5;
double x17670 = p4_i_dot*x102;
double x17671 = x11359*x17670;
double x17672 = x17670*x5159;
double x17673 = L*x17645 + L*x17646 - L*x17647 + x11233*x19 + x17163*x540 - x17165*x539 - x17169*x540 + x17668 + x17669*x384 - x17671 - x17672;
double x17674 = x11231*x19;
double x17675 = p4_b*x17173;
double x17676 = p4_b_dt*x17175;
double x17677 = x17140*x503;
double x17678 = x17142*x503;
double x17679 = p4_b*x17181;
double x17680 = p4_b*x17288;
double x17681 = p4_i*x114;
double x17682 = x11359*x17681;
double x17683 = x17681*x5159;
double x17684 = p4_i*x17293;
double x17685 = p4_i*x17295;
double x17686 = p5_b_dot_dt*x17136;
double x17687 = x17140*x512;
double x17688 = x17142*x512;
double x17689 = p5_i_dot*x17163;
double x17690 = p5_b_dot*x17165;
double x17691 = p5_i_dot*x86;
double x17692 = p5_i_dot*x17169;
double x17693 = 10*x17520;
double x17694 = x17131*x5224;
double x17695 = x17133*x5224;
double x17696 = x11241*x19;
double x17697 = x17142*x519;
double x17698 = p5_b_dt*x17264;
double x17699 = p5_b*x17138;
double x17700 = x17140*x519;
double x17701 = p5_b*x71;
double x17702 = x17055*x17701;
double x17703 = p5_i*x17150;
double x17704 = p5_i*x17153;
double x17705 = x14034*x81;
double x17706 = x17144*x17701;
double x17707 = x17146*x9963;
double x17708 = x17696 - x17697 + x17698 + x17699 + x17700 - x17702 - x17703 - x17704 - x17705 + x17706 + x17707;
double x17709 = p5_b_dot*x17157;
double x17710 = p5_b_dot*x5;
double x17711 = p5_i_dot*x102;
double x17712 = x11359*x17711;
double x17713 = x17711*x5159;
double x17714 = L*x17686 + L*x17687 - L*x17688 + x11239*x19 + x17163*x570 - x17165*x569 - x17169*x570 + x17709 + x17710*x384 - x17712 - x17713;
double x17715 = x11237*x19;
double x17716 = p5_b*x17173;
double x17717 = p5_b_dt*x17175;
double x17718 = x17140*x533;
double x17719 = x17142*x533;
double x17720 = p5_b*x17181;
double x17721 = p5_b*x17288;
double x17722 = p5_i*x114;
double x17723 = x11359*x17722;
double x17724 = x17722*x5159;
double x17725 = p5_i*x17293;
double x17726 = p5_i*x17295;
double x17727 = p6_b_dot_dt*x17136;
double x17728 = x17140*x542;
double x17729 = x17142*x542;
double x17730 = p6_i_dot*x17163;
double x17731 = p6_b_dot*x17165;
double x17732 = p6_i_dot*x86;
double x17733 = p6_i_dot*x17169;
double x17734 = x17130*x3943;
double x17735 = x17131*x3943;
double x17736 = x17133*x3943;
double x17737 = x11247*x19;
double x17738 = x17142*x549;
double x17739 = p6_b_dt*x17264;
double x17740 = p6_b*x17138;
double x17741 = x17140*x549;
double x17742 = p6_b*x71;
double x17743 = x17055*x17742;
double x17744 = p6_i*x17150;
double x17745 = p6_i*x17153;
double x17746 = x14321*x81;
double x17747 = x17144*x17742;
double x17748 = x10262*x17146;
double x17749 = x17737 - x17738 + x17739 + x17740 + x17741 - x17743 - x17744 - x17745 - x17746 + x17747 + x17748;
double x17750 = p6_b_dot*x17157;
double x17751 = p6_b_dot*x5;
double x17752 = p6_i_dot*x102;
double x17753 = x11359*x17752;
double x17754 = x17752*x5159;
double x17755 = L*x17727 + L*x17728 - L*x17729 + x11245*x19 + x17163*x600 - x17165*x599 - x17169*x600 + x17750 + x17751*x384 - x17753 - x17754;
double x17756 = x11243*x19;
double x17757 = p6_b*x17173;
double x17758 = p6_b_dt*x17175;
double x17759 = x17140*x563;
double x17760 = x17142*x563;
double x17761 = p6_b*x17181;
double x17762 = p6_b*x17288;
double x17763 = p6_i*x114;
double x17764 = x11359*x17763;
double x17765 = x17763*x5159;
double x17766 = p6_i*x17293;
double x17767 = p6_i*x17295;
double x17768 = p7_b_dot_dt*x17136;
double x17769 = x17140*x572;
double x17770 = x17142*x572;
double x17771 = p7_i_dot*x17163;
double x17772 = p7_b_dot*x17165;
double x17773 = p7_i_dot*x86;
double x17774 = p7_i_dot*x17169;
double x17775 = 14*x17520;
double x17776 = x17131*x7622;
double x17777 = x17133*x7622;
double x17778 = x11253*x19;
double x17779 = x17142*x579;
double x17780 = p7_b_dt*x17264;
double x17781 = p7_b*x17138;
double x17782 = x17140*x579;
double x17783 = p7_b*x71;
double x17784 = x17055*x17783;
double x17785 = p7_i*x17150;
double x17786 = p7_i*x17153;
double x17787 = x14616*x81;
double x17788 = x17144*x17783;
double x17789 = x10549*x17146;
double x17790 = x17778 - x17779 + x17780 + x17781 + x17782 - x17784 - x17785 - x17786 - x17787 + x17788 + x17789;
double x17791 = p7_b_dot*x17157;
double x17792 = p7_b_dot*x5;
double x17793 = p7_i_dot*x102;
double x17794 = x11359*x17793;
double x17795 = x17793*x5159;
double x17796 = L*x17768 + L*x17769 - L*x17770 + x11251*x19 + x17163*x630 - x17165*x629 - x17169*x630 + x17791 + x17792*x384 - x17794 - x17795;
double x17797 = x11249*x19;
double x17798 = p7_b*x17173;
double x17799 = p7_b_dt*x17175;
double x17800 = x17140*x593;
double x17801 = x17142*x593;
double x17802 = p7_b*x17181;
double x17803 = p7_b*x17288;
double x17804 = p7_i*x114;
double x17805 = x11359*x17804;
double x17806 = x17804*x5159;
double x17807 = p7_i*x17293;
double x17808 = p7_i*x17295;
double x17809 = p8_b_dot_dt*x17136;
double x17810 = x17140*x602;
double x17811 = x17142*x602;
double x17812 = p8_i_dot*x17163;
double x17813 = p8_b_dot*x17165;
double x17814 = p8_i_dot*x86;
double x17815 = p8_i_dot*x17169;
double x17816 = x17130*x327;
double x17817 = x17131*x327;
double x17818 = x17133*x327;
double x17819 = x11259*x19;
double x17820 = x17142*x609;
double x17821 = p8_b_dt*x17264;
double x17822 = p8_b*x17138;
double x17823 = x17140*x609;
double x17824 = p8_b*x71;
double x17825 = x17055*x17824;
double x17826 = p8_i*x17150;
double x17827 = p8_i*x17153;
double x17828 = x14905*x81;
double x17829 = x17144*x17824;
double x17830 = x10851*x17146;
double x17831 = x17819 - x17820 + x17821 + x17822 + x17823 - x17825 - x17826 - x17827 - x17828 + x17829 + x17830;
double x17832 = p8_b_dot*x17157;
double x17833 = p8_b_dot*x5;
double x17834 = p8_i_dot*x102;
double x17835 = x11359*x17834;
double x17836 = x17834*x5159;
double x17837 = L*x17809 + L*x17810 - L*x17811 + x11257*x19 + x17163*x634 - x17165*x633 - x17169*x634 + x17832 + x17833*x384 - x17835 - x17836;
double x17838 = x11255*x19;
double x17839 = p8_b*x17173;
double x17840 = p8_b_dt*x17175;
double x17841 = x17140*x623;
double x17842 = x17142*x623;
double x17843 = p8_b*x17181;
double x17844 = p8_b*x17288;
double x17845 = p8_i*x114;
double x17846 = x11359*x17845;
double x17847 = x17845*x5159;
double x17848 = p8_i*x17293;
double x17849 = p8_i*x17295;
double x17850 = p9_i_dot*x17163;
double x17851 = p9_b_dot*x17165;
double x17852 = p9_i_dot*x86;
double x17853 = p9_i_dot*x17169;
double x17854 = x17130*x4023;
double x17855 = x17131*x4023;
double x17856 = x17133*x4023;
double x17857 = x17523 + x17524 + x17525 + x17526 - x17527 + x17530 + x17531 - x17532 - x17533 - x17534 - x17535;
double x17858 = q1_b_dot*x17165;
double x17859 = q1_i_dot*x86;
double x17860 = x17135 + x17137 + x17139 + x17141 - x17143 + x17145 + x17147 - x17148 - x17151 - x17154 - x17155;
double x17861 = x11267*x19;
double x17862 = q2_b_dt*x17264;
double x17863 = q2_b*x17138;
double x17864 = x17140*x638;
double x17865 = x17142*x638;
double x17866 = q2_b*x71;
double x17867 = x17144*x17866;
double x17868 = q2_i*x17195;
double x17869 = x17055*x17866;
double x17870 = q2_i*x17150;
double x17871 = q2_i*x17153;
double x17872 = x11683*x81;
double x17873 = x17136*x2727;
double x17874 = q2_b_dot*x17157;
double x17875 = x17140*x646;
double x17876 = x17142*x646;
double x17877 = q2_b_dot*x5;
double x17878 = q2_i_dot*x102;
double x17879 = L*x17875 - L*x17876 + x11265*x19 - x11359*x17878 + x17163*x663 - x17165*x662 - x17169*x663 + x17873 + x17874 + x17877*x384 - x17878*x5159;
double x17880 = x11263*x19;
double x17881 = q2_b*x17173;
double x17882 = q2_b_dt*x17175;
double x17883 = x17140*x656;
double x17884 = x17142*x656;
double x17885 = q2_b*x17181;
double x17886 = q2_b*x17288;
double x17887 = q2_i*x114;
double x17888 = x11359*x17887;
double x17889 = x17887*x5159;
double x17890 = q2_i*x17293;
double x17891 = q2_i*x17295;
double x17892 = q2_i_dot*x17163;
double x17893 = q2_b_dot*x17165;
double x17894 = q2_i_dot*x86;
double x17895 = q2_i_dot*x17169;
double x17896 = x17861 + x17862 + x17863 + x17864 - x17865 + x17867 + x17868 - x17869 - x17870 - x17871 - x17872;
double x17897 = x11273*x19;
double x17898 = q3_b_dt*x17264;
double x17899 = q3_b*x17138;
double x17900 = x17140*x667;
double x17901 = x17142*x667;
double x17902 = q3_b*x71;
double x17903 = x17144*x17902;
double x17904 = q3_i*x17195;
double x17905 = x17055*x17902;
double x17906 = q3_i*x17150;
double x17907 = q3_i*x17153;
double x17908 = x12040*x81;
double x17909 = x17136*x2839;
double x17910 = q3_b_dot*x17157;
double x17911 = x17140*x675;
double x17912 = x17142*x675;
double x17913 = q3_b_dot*x5;
double x17914 = q3_i_dot*x102;
double x17915 = L*x17911 - L*x17912 + x11271*x19 - x11359*x17914 + x17163*x692 - x17165*x691 - x17169*x692 + x17909 + x17910 + x17913*x384 - x17914*x5159;
double x17916 = x11269*x19;
double x17917 = q3_b*x17173;
double x17918 = q3_b_dt*x17175;
double x17919 = x17140*x685;
double x17920 = x17142*x685;
double x17921 = q3_b*x17181;
double x17922 = q3_b*x17288;
double x17923 = q3_i*x114;
double x17924 = x11359*x17923;
double x17925 = x17923*x5159;
double x17926 = q3_i*x17293;
double x17927 = q3_i*x17295;
double x17928 = x102*x2807;
double x17929 = q3_i_dot*x17163;
double x17930 = q3_b_dot*x17165;
double x17931 = q3_i_dot*x86;
double x17932 = q3_i_dot*x17169;
double x17933 = x17897 + x17898 + x17899 + x17900 - x17901 + x17903 + x17904 - x17905 - x17906 - x17907 - x17908;
double x17934 = x11279*x19;
double x17935 = q4_b_dt*x17264;
double x17936 = q4_b*x17138;
double x17937 = x17140*x696;
double x17938 = x17142*x696;
double x17939 = q4_b*x71;
double x17940 = x17144*x17939;
double x17941 = q4_i*x17195;
double x17942 = x17055*x17939;
double x17943 = q4_i*x17150;
double x17944 = q4_i*x17153;
double x17945 = x12351*x81;
double x17946 = x17136*x2943;
double x17947 = q4_b_dot*x17157;
double x17948 = x17140*x704;
double x17949 = x17142*x704;
double x17950 = q4_b_dot*x5;
double x17951 = q4_i_dot*x102;
double x17952 = L*x17948 - L*x17949 + x11277*x19 - x11359*x17951 + x17163*x721 - x17165*x720 - x17169*x721 + x17946 + x17947 + x17950*x384 - x17951*x5159;
double x17953 = x11275*x19;
double x17954 = q4_b*x17173;
double x17955 = q4_b_dt*x17175;
double x17956 = x17140*x714;
double x17957 = x17142*x714;
double x17958 = q4_b*x17181;
double x17959 = q4_b*x17288;
double x17960 = q4_i*x114;
double x17961 = x11359*x17960;
double x17962 = x17960*x5159;
double x17963 = q4_i*x17293;
double x17964 = q4_i*x17295;
double x17965 = x102*x2968;
double x17966 = q4_i_dot*x17163;
double x17967 = q4_b_dot*x17165;
double x17968 = q4_i_dot*x86;
double x17969 = q4_i_dot*x17169;
double x17970 = x17934 + x17935 + x17936 + x17937 - x17938 + x17940 + x17941 - x17942 - x17943 - x17944 - x17945;
double x17971 = x11285*x19;
double x17972 = q5_b_dt*x17264;
double x17973 = q5_b*x17138;
double x17974 = x17140*x725;
double x17975 = x17142*x725;
double x17976 = q5_b*x71;
double x17977 = x17144*x17976;
double x17978 = q5_i*x17195;
double x17979 = x17055*x17976;
double x17980 = q5_i*x17150;
double x17981 = q5_i*x17153;
double x17982 = x15342*x81;
double x17983 = x17136*x3059;
double x17984 = q5_b_dot*x17157;
double x17985 = x17140*x733;
double x17986 = x17142*x733;
double x17987 = q5_b_dot*x5;
double x17988 = q5_i_dot*x102;
double x17989 = L*x17985 - L*x17986 + x11283*x19 - x11359*x17988 + x17163*x750 - x17165*x749 - x17169*x750 + x17983 + x17984 + x17987*x384 - x17988*x5159;
double x17990 = x11281*x19;
double x17991 = q5_b*x17173;
double x17992 = q5_b_dt*x17175;
double x17993 = x17140*x743;
double x17994 = x17142*x743;
double x17995 = q5_b*x17181;
double x17996 = q5_b*x17288;
double x17997 = q5_i*x114;
double x17998 = x11359*x17997;
double x17999 = x17997*x5159;
double x18000 = q5_i*x17293;
double x18001 = q5_i*x17295;
double x18002 = x102*x3023;
double x18003 = q5_i_dot*x17163;
double x18004 = q5_b_dot*x17165;
double x18005 = q5_i_dot*x86;
double x18006 = q5_i_dot*x17169;
double x18007 = x17971 + x17972 + x17973 + x17974 - x17975 + x17977 + x17978 - x17979 - x17980 - x17981 - x17982;
double x18008 = x11291*x19;
double x18009 = q6_b_dt*x17264;
double x18010 = q6_b*x17138;
double x18011 = x17140*x754;
double x18012 = x17142*x754;
double x18013 = q6_b*x71;
double x18014 = x17144*x18013;
double x18015 = q6_i*x17195;
double x18016 = x17055*x18013;
double x18017 = q6_i*x17150;
double x18018 = q6_i*x17153;
double x18019 = x15646*x81;
double x18020 = x17136*x3165;
double x18021 = q6_b_dot*x17157;
double x18022 = x17140*x762;
double x18023 = x17142*x762;
double x18024 = q6_b_dot*x5;
double x18025 = q6_i_dot*x102;
double x18026 = x11359*x18025;
double x18027 = x18025*x5159;
double x18028 = L*x18022 - L*x18023 + x11289*x19 + x17163*x779 - x17165*x778 - x17169*x779 + x18020 + x18021 + x18024*x384 - x18026 - x18027;
double x18029 = x11287*x19;
double x18030 = q6_b*x17173;
double x18031 = q6_b_dt*x17175;
double x18032 = x17140*x772;
double x18033 = x17142*x772;
double x18034 = q6_b*x17181;
double x18035 = q6_b*x17288;
double x18036 = q6_i*x114;
double x18037 = x11359*x18036;
double x18038 = x18036*x5159;
double x18039 = q6_i*x17293;
double x18040 = q6_i*x17295;
double x18041 = x102*x3191;
double x18042 = q6_i_dot*x17163;
double x18043 = q6_b_dot*x17165;
double x18044 = q6_i_dot*x86;
double x18045 = q6_i_dot*x17169;
double x18046 = x18008 + x18009 + x18010 + x18011 - x18012 + x18014 + x18015 - x18016 - x18017 - x18018 - x18019;
double x18047 = x11297*x19;
double x18048 = q7_b_dt*x17264;
double x18049 = q7_b*x17138;
double x18050 = x17140*x783;
double x18051 = x17142*x783;
double x18052 = q7_b*x71;
double x18053 = x17144*x18052;
double x18054 = q7_i*x17195;
double x18055 = x17055*x18052;
double x18056 = q7_i*x17150;
double x18057 = q7_i*x17153;
double x18058 = x15946*x81;
double x18059 = x17136*x3276;
double x18060 = q7_b_dot*x17157;
double x18061 = x17140*x791;
double x18062 = x17142*x791;
double x18063 = q7_b_dot*x5;
double x18064 = q7_i_dot*x102;
double x18065 = L*x18061 - L*x18062 + x11295*x19 - x11359*x18064 + x17163*x808 - x17165*x807 - x17169*x808 + x18059 + x18060 + x18063*x384 - x18064*x5159;
double x18066 = x11293*x19;
double x18067 = q7_b*x17173;
double x18068 = q7_b_dt*x17175;
double x18069 = x17140*x801;
double x18070 = x17142*x801;
double x18071 = q7_b*x17181;
double x18072 = q7_b*x17288;
double x18073 = q7_i*x114;
double x18074 = x11359*x18073;
double x18075 = x18073*x5159;
double x18076 = q7_i*x17293;
double x18077 = q7_i*x17295;
double x18078 = q7_i_dot*x17163;
double x18079 = q7_b_dot*x17165;
double x18080 = q7_i_dot*x86;
double x18081 = q7_i_dot*x17169;
double x18082 = x18047 + x18048 + x18049 + x18050 - x18051 + x18053 + x18054 - x18055 - x18056 - x18057 - x18058;
double x18083 = x11303*x19;
double x18084 = q8_b_dt*x17264;
double x18085 = q8_b*x17138;
double x18086 = x17140*x812;
double x18087 = x17142*x812;
double x18088 = q8_b*x71;
double x18089 = x17144*x18088;
double x18090 = q8_i*x17195;
double x18091 = x17055*x18088;
double x18092 = q8_i*x17150;
double x18093 = q8_i*x17153;
double x18094 = x16238*x81;
double x18095 = x17136*x3380;
double x18096 = q8_b_dot*x17157;
double x18097 = x17140*x820;
double x18098 = x17142*x820;
double x18099 = q8_b_dot*x5;
double x18100 = q8_i_dot*x102;
double x18101 = L*x18097 - L*x18098 + x11301*x19 - x11359*x18100 + x17163*x837 - x17165*x836 - x17169*x837 + x18095 + x18096 + x18099*x384 - x18100*x5159;
double x18102 = x11299*x19;
double x18103 = q8_b*x17173;
double x18104 = q8_b_dt*x17175;
double x18105 = x17140*x830;
double x18106 = x17142*x830;
double x18107 = q8_b*x17181;
double x18108 = q8_b*x17288;
double x18109 = q8_i*x114;
double x18110 = x11359*x18109;
double x18111 = x18109*x5159;
double x18112 = q8_i*x17293;
double x18113 = q8_i*x17295;
double x18114 = x102*x3406;
double x18115 = q8_i_dot*x17163;
double x18116 = q8_b_dot*x17165;
double x18117 = q8_i_dot*x86;
double x18118 = q8_i_dot*x17169;
double x18119 = x18083 + x18084 + x18085 + x18086 - x18087 + x18089 + x18090 - x18091 - x18092 - x18093 - x18094;
double x18120 = x11309*x19;
double x18121 = q9_b_dt*x17264;
double x18122 = q9_b*x17138;
double x18123 = x17140*x841;
double x18124 = x17142*x841;
double x18125 = q9_b*x71;
double x18126 = x17144*x18125;
double x18127 = q9_i*x17195;
double x18128 = x17055*x18125;
double x18129 = q9_i*x17150;
double x18130 = q9_i*x17153;
double x18131 = x16535*x81;
double x18132 = x17136*x3494;
double x18133 = q9_b_dot*x17157;
double x18134 = x17140*x849;
double x18135 = x17142*x849;
double x18136 = q9_b_dot*x5;
double x18137 = q9_i_dot*x102;
double x18138 = L*x18134 - L*x18135 + x11307*x19 - x11359*x18137 + x17163*x866 - x17165*x865 - x17169*x866 + x18132 + x18133 + x18136*x384 - x18137*x5159;
double x18139 = x11305*x19;
double x18140 = q9_b*x17173;
double x18141 = q9_b_dt*x17175;
double x18142 = x17140*x859;
double x18143 = x17142*x859;
double x18144 = q9_b*x17181;
double x18145 = q9_b*x17288;
double x18146 = q9_i*x114;
double x18147 = x11359*x18146;
double x18148 = x18146*x5159;
double x18149 = q9_i*x17293;
double x18150 = q9_i*x17295;
double x18151 = x102*x3460;
double x18152 = q9_i_dot*x17163;
double x18153 = q9_b_dot*x17165;
double x18154 = q9_i_dot*x86;
double x18155 = q9_i_dot*x17169;
double x18156 = x18120 + x18121 + x18122 + x18123 - x18124 + x18126 + x18127 - x18128 - x18129 - x18130 - x18131;
double x18157 = q10_i_dt*x6;
double x18158 = c*x17142;
double x18159 = q10_i_dot_dt*x6;
double x18160 = x18158*x872;
double x18161 = q10_b*x71;
double x18162 = q10_i*x6;
double x18163 = q10_b_dot*x5;
double x18164 = q10_i_dot*x102;
double x18165 = q10_i*x114;
double x18166 = x102*x3602;
double x18167 = x10*x77;
double x18168 = x18167*x58;
double x18169 = x19*x5729;
double x18170 = x18169*x58;
double x18171 = x11390*x59;
double x18172 = L*x17025 - L*x17026;
double x18173 = x1365*x17043;
double x18174 = q1_i*x1365;
double x18175 = x11331*x18174;
double x18176 = x11328*x18174;
double x18177 = q2_t_dt*x_f;
double x18178 = x1365*x17297;
double x18179 = x17258*x18177;
double x18180 = -x18178 + x18179;
double x18181 = q2_i_dt*x10;
double x18182 = x18181*x33;
double x18183 = x1365*x17029;
double x18184 = q2_i_dot_dt*x17028;
double x18185 = x18184*x33;
double x18186 = x10*x656;
double x18187 = x10*x33;
double x18188 = q1_i_dot_dt*x1858;
double x18189 = x18187*x18188;
double x18190 = x11331*x33;
double x18191 = 3*q2_i;
double x18192 = x11328*x33;
double x18193 = x1365*x49;
double x18194 = x11328*x18193;
double x18195 = x18190*x663;
double x18196 = x18192*x663;
double x18197 = x11331*x18193;
double x18198 = q2_i*x1360;
double x18199 = 3*x17032;
double x18200 = q2_t_dt*x17035;
double x18201 = x10*x3685;
double x18202 = x18201*x53;
double x18203 = q1_t_dt*x18202;
double x18204 = 3*x17033;
double x18205 = x1360*x17034;
double x18206 = x1360*x49;
double x18207 = x17049*x18206;
double x18208 = x1338*x17037;
double x18209 = x17040*x663;
double x18210 = x6*x663;
double x18211 = x18210*x59;
double x18212 = x17039*x18177;
double x18213 = x18212*x49;
double x18214 = x17051*x18206;
double x18215 = x17055*x33;
double x18216 = x10*x637;
double x18217 = q1_t_dt*x18216;
double x18218 = q1_i*x17049;
double x18219 = q2_i*x17049;
double x18220 = q1_i*x17051;
double x18221 = q2_i*x17051;
double x18222 = x1365*x18184;
double x18223 = x1365*x663;
double x18224 = x11331*x18223;
double x18225 = x11328*x18223;
double x18226 = q2_t_dt*x18202;
double x18227 = x18212*x663;
double x18228 = x1338*x18210;
double x18229 = -x18222 + x18224 - x18225 + x18226 - x18227 + x18228;
double x18230 = x1365*x18181;
double x18231 = q2_i*x1365;
double x18232 = x11683*x1366 - x1369*x18216 + x1369*x18219 - x1369*x18221 - x17055*x18231 + 2*x18230;
double x18233 = 3*x18230;
double x18234 = x18177*x18186;
double x18235 = 5*q2_i;
double x18236 = x11331*x18231;
double x18237 = 3*x18236;
double x18238 = x10*x1365;
double x18239 = x18238*x321;
double x18240 = q2_i_dot_dt*x321;
double x18241 = x11328*x18231;
double x18242 = 3*x18241;
double x18243 = q1_t_dt*x267;
double x18244 = x1384*x18221;
double x18245 = x1384*x18219;
double x18246 = x1389*x663;
double x18247 = x1369*x49;
double x18248 = x10*x27;
double x18249 = p2_t_dt*x18248;
double x18250 = p2_i_dt*x18249;
double x18251 = p2_i*x1002;
double x18252 = x11331*x18251;
double x18253 = x11328*x18251;
double x18254 = p2_t_dt*x_f;
double x18255 = x10*x430;
double x18256 = x19*x9109;
double x18257 = x13105*x965 - x18250 + x18252 - x18253 + x18254*x18255 - x18254*x18256;
double x18258 = p2_i_dt*x17303;
double x18259 = x17297*x27;
double x18260 = p2_t_dt*x18259;
double x18261 = 3*x18260;
double x18262 = p2_i*x257;
double x18263 = x11328*x18262;
double x18264 = x11331*x18262;
double x18265 = x17063*x265;
double x18266 = p2_t_dt*x18265;
double x18267 = L*x18249;
double x18268 = p2_i_dot_dt*x18267;
double x18269 = x1002*x480;
double x18270 = x11328*x18269;
double x18271 = x11331*x18269;
double x18272 = x10*x3978;
double x18273 = p2_t_dt*x53;
double x18274 = x18272*x18273;
double x18275 = x480*x6;
double x18276 = x18275*x965;
double x18277 = x17039*x18254;
double x18278 = x18277*x480;
double x18279 = x18268 + x18270 - x18271 - x18274 - x18276 + x18278;
double x18280 = p1_i_dt*x18249;
double x18281 = 3*x18250;
double x18282 = p1_i_dot_dt*x18267;
double x18283 = p2_i_dot_dt*x17320;
double x18284 = x10*x18254;
double x18285 = x18284*x444;
double x18286 = p1_i*x1002;
double x18287 = 3*x18286;
double x18288 = 3*x18252;
double x18289 = x17258*x18254;
double x18290 = p2_i_dot_dt*x1858;
double x18291 = x18249*x18290;
double x18292 = 3*x18253;
double x18293 = x1002*x249;
double x18294 = x11328*x18293;
double x18295 = x257*x480;
double x18296 = x11331*x18295;
double x18297 = x11331*x18293;
double x18298 = x11328*x18295;
double x18299 = x18272*x986;
double x18300 = p1_i*x986;
double x18301 = p2_i*x986;
double x18302 = x17051*x18301;
double x18303 = x1002*x1994;
double x18304 = x11331*x18303;
double x18305 = x17325*x18273;
double x18306 = x17326*x18272;
double x18307 = x11328*x18303;
double x18308 = x17049*x18301;
double x18309 = x480*x986;
double x18310 = x17051*x18309;
double x18311 = x17328*x965;
double x18312 = x17308*x480;
double x18313 = x18277*x249;
double x18314 = x18275*x242;
double x18315 = x17049*x18309;
double x18316 = x10*x429;
double x18317 = x13105*x14;
double x18318 = p1_i*x1004;
double x18319 = p2_i*x1005;
double x18320 = p2_i*x1004;
double x18321 = -x1002*x18317 + x1004*x18316 - x17049*x18320 + x17051*x18320 + x17055*x18251 - 2*x18250;
double x18322 = 5*x18286;
double x18323 = x18249*x321;
double x18324 = p2_i_dot_dt*x321;
double x18325 = p1_i*x1008;
double x18326 = p2_i*x17049;
double x18327 = p2_i*x17051;
double x18328 = x1002*x17191;
double x18329 = p2_i_dot*x17191;
double x18330 = x1004*x249;
double x18331 = x1005*x480;
double x18332 = p3_t_dt*x18259;
double x18333 = p3_t_dt*x18248;
double x18334 = p3_i_dt*x18333;
double x18335 = p3_i*x1055;
double x18336 = x11331*x18335;
double x18337 = x11328*x18335;
double x18338 = p3_t_dt*x_f;
double x18339 = x10*x459;
double x18340 = x19*x9381;
double x18341 = x1019*x13434 - x18334 + x18336 - x18337 + x18338*x18339 - x18338*x18340;
double x18342 = p3_i_dt*x18249;
double x18343 = 4*x18332;
double x18344 = p3_i*x1002;
double x18345 = x11328*x18344;
double x18346 = x11331*x18344;
double x18347 = 8*x17063;
double x18348 = L*x18347;
double x18349 = x18338*x18348;
double x18350 = L*x18333;
double x18351 = p3_i_dot_dt*x18350;
double x18352 = x1055*x510;
double x18353 = x11328*x18352;
double x18354 = x11331*x18352;
double x18355 = x10*x4060;
double x18356 = p3_t_dt*x53;
double x18357 = x18355*x18356;
double x18358 = x510*x6;
double x18359 = x1019*x18358;
double x18360 = x17039*x18338;
double x18361 = x18360*x510;
double x18362 = x18351 + x18353 - x18354 - x18357 - x18359 + x18361;
double x18363 = x17258*x18338;
double x18364 = x10*x18338;
double x18365 = x18364*x473;
double x18366 = p2_i_dt*x18333;
double x18367 = 3*x18334;
double x18368 = p2_i_dot_dt*x18350;
double x18369 = x18272*x18356;
double x18370 = x18273*x18355;
double x18371 = x1050*x18355;
double x18372 = p3_i*x1050;
double x18373 = x17051*x18372;
double x18374 = x17049*x18372;
double x18375 = p3_i_dot_dt*x18267;
double x18376 = p3_i_dot_dt*x1858;
double x18377 = x18333*x18376;
double x18378 = p2_i*x1055;
double x18379 = 3*x18378;
double x18380 = 3*x18337;
double x18381 = 3*x18336;
double x18382 = x1055*x480;
double x18383 = x11328*x18382;
double x18384 = x1002*x510;
double x18385 = x11331*x18384;
double x18386 = x1019*x18275;
double x18387 = x18360*x480;
double x18388 = x18358*x965;
double x18389 = x18277*x510;
double x18390 = x1050*x510;
double x18391 = x17051*x18390;
double x18392 = x17049*x18390;
double x18393 = x11331*x18382;
double x18394 = x11328*x18384;
double x18395 = 3*x18353;
double x18396 = 3*x18354;
double x18397 = x10*x458;
double x18398 = x13434*x14;
double x18399 = p3_i*x1004;
double x18400 = p3_i*x1057;
double x18401 = -x1055*x18398 + x1057*x18397 - x17049*x18400 + x17051*x18400 + x17055*x18335 - 2*x18334;
double x18402 = 5*x18378;
double x18403 = p3_i*x17049;
double x18404 = p3_i*x17051;
double x18405 = x1057*x480;
double x18406 = x1004*x510;
double x18407 = p4_t_dt*x18259;
double x18408 = p4_t_dt*x_f;
double x18409 = p4_t_dt*x18248;
double x18410 = p4_i_dt*x18409;
double x18411 = p4_i*x1104;
double x18412 = x11331*x18411;
double x18413 = x11328*x18411;
double x18414 = x10*x18408;
double x18415 = x19*x9675;
double x18416 = x1067*x13738 - x18408*x18415 - x18410 + x18412 - x18413 + x18414*x489;
double x18417 = p4_i_dt*x18333;
double x18418 = 5*x18407;
double x18419 = p4_i*x1055;
double x18420 = x11328*x18419;
double x18421 = x11331*x18419;
double x18422 = x1109*x17343;
double x18423 = L*x18409;
double x18424 = p4_i_dot_dt*x18423;
double x18425 = x1104*x540;
double x18426 = x11328*x18425;
double x18427 = x11331*x18425;
double x18428 = x10*x4142;
double x18429 = p4_t_dt*x53;
double x18430 = x18428*x18429;
double x18431 = x540*x6;
double x18432 = x1067*x18431;
double x18433 = x17039*x18408;
double x18434 = x18433*x540;
double x18435 = x18424 + x18426 - x18427 - x18430 - x18432 + x18434;
double x18436 = x17258*x18408;
double x18437 = x18414*x503;
double x18438 = p3_i_dt*x18409;
double x18439 = 3*x18410;
double x18440 = p3_i_dot_dt*x18423;
double x18441 = x18355*x18429;
double x18442 = x18356*x18428;
double x18443 = x1088*x18428;
double x18444 = p4_i*x1088;
double x18445 = x17051*x18444;
double x18446 = x17049*x18444;
double x18447 = p4_i_dot_dt*x18350;
double x18448 = p4_i_dot_dt*x1858;
double x18449 = x18409*x18448;
double x18450 = p3_i*x1104;
double x18451 = 3*x18450;
double x18452 = 3*x18413;
double x18453 = 3*x18412;
double x18454 = x1104*x510;
double x18455 = x11328*x18454;
double x18456 = x1055*x540;
double x18457 = x11331*x18456;
double x18458 = x1067*x18358;
double x18459 = x18433*x510;
double x18460 = x1019*x18431;
double x18461 = x18360*x540;
double x18462 = x1088*x540;
double x18463 = x17051*x18462;
double x18464 = x17049*x18462;
double x18465 = x11331*x18454;
double x18466 = x11328*x18456;
double x18467 = 3*x18426;
double x18468 = 3*x18427;
double x18469 = x10*x488;
double x18470 = x13738*x14;
double x18471 = p4_i*x1057;
double x18472 = p4_i*x1106;
double x18473 = -x1104*x18470 + x1106*x18469 - x17049*x18472 + x17051*x18472 + x17055*x18411 - 2*x18410;
double x18474 = 5*x18450;
double x18475 = x18409*x321;
double x18476 = p4_i_dot_dt*x321;
double x18477 = p4_i*x17049;
double x18478 = p4_i*x17051;
double x18479 = x1104*x17191;
double x18480 = p4_i_dot*x17191;
double x18481 = x1106*x510;
double x18482 = x1057*x540;
double x18483 = p5_t_dt*x18259;
double x18484 = p5_t_dt*x18248;
double x18485 = p5_i_dt*x18484;
double x18486 = p5_i*x1156;
double x18487 = x11331*x18486;
double x18488 = x11328*x18486;
double x18489 = p5_t_dt*x_f;
double x18490 = x10*x519;
double x18491 = x19*x9963;
double x18492 = x1120*x14034 - x18485 + x18487 - x18488 + x18489*x18490 - x18489*x18491;
double x18493 = p5_i_dt*x18409;
double x18494 = 6*x18483;
double x18495 = p5_i*x1104;
double x18496 = x11328*x18495;
double x18497 = x11331*x18495;
double x18498 = x17063*x3943;
double x18499 = x18489*x18498;
double x18500 = L*x18484;
double x18501 = p5_i_dot_dt*x18500;
double x18502 = x1156*x570;
double x18503 = x11328*x18502;
double x18504 = x11331*x18502;
double x18505 = x10*x4226;
double x18506 = p5_t_dt*x53;
double x18507 = x18505*x18506;
double x18508 = x570*x6;
double x18509 = x1120*x18508;
double x18510 = x17039*x18489;
double x18511 = x18510*x570;
double x18512 = x18501 + x18503 - x18504 - x18507 - x18509 + x18511;
double x18513 = x17258*x18489;
double x18514 = x10*x18489;
double x18515 = x18514*x533;
double x18516 = p4_i_dt*x18484;
double x18517 = 3*x18485;
double x18518 = p4_i_dot_dt*x18500;
double x18519 = x18428*x18506;
double x18520 = x18429*x18505;
double x18521 = x1151*x18505;
double x18522 = p5_i*x1151;
double x18523 = x17051*x18522;
double x18524 = x17049*x18522;
double x18525 = p5_i_dot_dt*x18423;
double x18526 = p5_i_dot_dt*x1858;
double x18527 = x18484*x18526;
double x18528 = p4_i*x1156;
double x18529 = 3*x18528;
double x18530 = 3*x18488;
double x18531 = 3*x18487;
double x18532 = x1156*x540;
double x18533 = x11328*x18532;
double x18534 = x1104*x570;
double x18535 = x11331*x18534;
double x18536 = x1120*x18431;
double x18537 = x18510*x540;
double x18538 = x1067*x18508;
double x18539 = x18433*x570;
double x18540 = x1151*x570;
double x18541 = x17051*x18540;
double x18542 = x17049*x18540;
double x18543 = x11331*x18532;
double x18544 = x11328*x18534;
double x18545 = 3*x18503;
double x18546 = 3*x18504;
double x18547 = x10*x518;
double x18548 = x14*x14034;
double x18549 = p5_i*x1106;
double x18550 = p5_i*x1158;
double x18551 = -x1156*x18548 + x1158*x18547 - x17049*x18550 + x17051*x18550 + x17055*x18486 - 2*x18485;
double x18552 = 5*x18528;
double x18553 = p5_i*x17049;
double x18554 = p5_i*x17051;
double x18555 = x1158*x540;
double x18556 = x1106*x570;
double x18557 = p6_t_dt*x18259;
double x18558 = p6_t_dt*x_f;
double x18559 = p6_t_dt*x18248;
double x18560 = p6_i_dt*x18559;
double x18561 = p6_i*x1205;
double x18562 = x11331*x18561;
double x18563 = x11328*x18561;
double x18564 = x10*x18558;
double x18565 = x10262*x19;
double x18566 = x1168*x14321 - x18558*x18565 - x18560 + x18562 - x18563 + x18564*x549;
double x18567 = p6_i_dt*x18484;
double x18568 = 7*x18557;
double x18569 = p6_i*x1156;
double x18570 = x11328*x18569;
double x18571 = x11331*x18569;
double x18572 = 14*x17063;
double x18573 = L*x18572;
double x18574 = x18558*x18573;
double x18575 = L*x18559;
double x18576 = p6_i_dot_dt*x18575;
double x18577 = x1205*x600;
double x18578 = x11328*x18577;
double x18579 = x11331*x18577;
double x18580 = x10*x4309;
double x18581 = p6_t_dt*x53;
double x18582 = x18580*x18581;
double x18583 = x6*x600;
double x18584 = x1168*x18583;
double x18585 = x17039*x18558;
double x18586 = x18585*x600;
double x18587 = x18576 + x18578 - x18579 - x18582 - x18584 + x18586;
double x18588 = x17258*x18558;
double x18589 = x18564*x563;
double x18590 = p5_i_dt*x18559;
double x18591 = 3*x18560;
double x18592 = p5_i_dot_dt*x18575;
double x18593 = x18505*x18581;
double x18594 = x18506*x18580;
double x18595 = x1189*x18580;
double x18596 = p6_i*x1189;
double x18597 = x17051*x18596;
double x18598 = x17049*x18596;
double x18599 = p6_i_dot_dt*x18500;
double x18600 = p6_i_dot_dt*x1858;
double x18601 = x18559*x18600;
double x18602 = p5_i*x1205;
double x18603 = 3*x18602;
double x18604 = 3*x18563;
double x18605 = 3*x18562;
double x18606 = x1205*x570;
double x18607 = x11328*x18606;
double x18608 = x1156*x600;
double x18609 = x11331*x18608;
double x18610 = x1168*x18508;
double x18611 = x18585*x570;
double x18612 = x1120*x18583;
double x18613 = x18510*x600;
double x18614 = x1189*x600;
double x18615 = x17051*x18614;
double x18616 = x17049*x18614;
double x18617 = x11331*x18606;
double x18618 = x11328*x18608;
double x18619 = 3*x18578;
double x18620 = 3*x18579;
double x18621 = x10*x548;
double x18622 = x14*x14321;
double x18623 = p6_i*x1158;
double x18624 = p6_i*x1207;
double x18625 = -x1205*x18622 + x1207*x18621 - x17049*x18624 + x17051*x18624 + x17055*x18561 - 2*x18560;
double x18626 = 5*x18602;
double x18627 = x18559*x321;
double x18628 = p6_i_dot_dt*x321;
double x18629 = p6_i*x17049;
double x18630 = p6_i*x17051;
double x18631 = x1205*x17191;
double x18632 = p6_i_dot*x17191;
double x18633 = x1207*x570;
double x18634 = x1158*x600;
double x18635 = p7_t_dt*x18259;
double x18636 = p7_t_dt*x_f;
double x18637 = p7_t_dt*x18248;
double x18638 = p7_i_dt*x18637;
double x18639 = p7_i*x1257;
double x18640 = x11331*x18639;
double x18641 = x11328*x18639;
double x18642 = x10*x18636;
double x18643 = x10549*x19;
double x18644 = x1221*x14616 - x18636*x18643 - x18638 + x18640 - x18641 + x18642*x579;
double x18645 = p7_i_dt*x18559;
double x18646 = 8*x18635;
double x18647 = p7_i*x1205;
double x18648 = x11328*x18647;
double x18649 = x11331*x18647;
double x18650 = x17063*x327;
double x18651 = x18636*x18650;
double x18652 = L*x18637;
double x18653 = p7_i_dot_dt*x18652;
double x18654 = x1257*x630;
double x18655 = x11328*x18654;
double x18656 = x11331*x18654;
double x18657 = x10*x4391;
double x18658 = p7_t_dt*x53;
double x18659 = x18657*x18658;
double x18660 = x6*x630;
double x18661 = x1221*x18660;
double x18662 = x17039*x18636;
double x18663 = x18662*x630;
double x18664 = x18653 + x18655 - x18656 - x18659 - x18661 + x18663;
double x18665 = x17258*x18636;
double x18666 = x18642*x593;
double x18667 = p6_i_dt*x18637;
double x18668 = 3*x18638;
double x18669 = p6_i_dot_dt*x18652;
double x18670 = x18580*x18658;
double x18671 = x18581*x18657;
double x18672 = x1251*x18657;
double x18673 = p7_i*x1251;
double x18674 = x17051*x18673;
double x18675 = x17049*x18673;
double x18676 = p7_i_dot_dt*x18575;
double x18677 = p7_i_dot_dt*x1858;
double x18678 = x18637*x18677;
double x18679 = p6_i*x1257;
double x18680 = 3*x18679;
double x18681 = 3*x18641;
double x18682 = 3*x18640;
double x18683 = x1257*x600;
double x18684 = x11328*x18683;
double x18685 = x1205*x630;
double x18686 = x11331*x18685;
double x18687 = x1221*x18583;
double x18688 = x18662*x600;
double x18689 = x1168*x18660;
double x18690 = x18585*x630;
double x18691 = x1251*x630;
double x18692 = x17051*x18691;
double x18693 = x17049*x18691;
double x18694 = x11331*x18683;
double x18695 = x11328*x18685;
double x18696 = 3*x18655;
double x18697 = 3*x18656;
double x18698 = x10*x578;
double x18699 = x14*x14616;
double x18700 = p7_i*x1207;
double x18701 = p7_i*x1259;
double x18702 = -x1257*x18699 + x1259*x18698 - x17049*x18701 + x17051*x18701 + x17055*x18639 - 2*x18638;
double x18703 = 5*x18679;
double x18704 = p7_i*x17049;
double x18705 = p7_i*x17051;
double x18706 = x1259*x600;
double x18707 = x1207*x630;
double x18708 = p8_t_dt*x18259;
double x18709 = p8_t_dt*x_f;
double x18710 = p8_t_dt*x18248;
double x18711 = p8_i_dt*x18710;
double x18712 = p8_i*x1304;
double x18713 = x11331*x18712;
double x18714 = x11328*x18712;
double x18715 = x10*x18709;
double x18716 = x10851*x19;
double x18717 = x1269*x14905 - x18709*x18716 - x18711 + x18713 - x18714 + x18715*x609;
double x18718 = p8_i_dt*x18637;
double x18719 = 9*x18708;
double x18720 = p8_i*x1257;
double x18721 = x11328*x18720;
double x18722 = x11331*x18720;
double x18723 = x17063*x4023;
double x18724 = x18709*x18723;
double x18725 = L*x18710;
double x18726 = p8_i_dot_dt*x18725;
double x18727 = x1304*x634;
double x18728 = x11328*x18727;
double x18729 = x11331*x18727;
double x18730 = x10*x4472;
double x18731 = p8_t_dt*x53;
double x18732 = x18730*x18731;
double x18733 = x6*x634;
double x18734 = x1269*x18733;
double x18735 = x17039*x18709;
double x18736 = x18735*x634;
double x18737 = x18726 + x18728 - x18729 - x18732 - x18734 + x18736;
double x18738 = x17258*x18709;
double x18739 = x18715*x623;
double x18740 = p7_i_dt*x18710;
double x18741 = 3*x18711;
double x18742 = p7_i_dot_dt*x18725;
double x18743 = x18657*x18731;
double x18744 = x18658*x18730;
double x18745 = x1289*x18730;
double x18746 = p8_i*x1289;
double x18747 = x17051*x18746;
double x18748 = x17049*x18746;
double x18749 = p8_i_dot_dt*x18652;
double x18750 = p8_i_dot_dt*x1858;
double x18751 = x18710*x18750;
double x18752 = p7_i*x1304;
double x18753 = 3*x18752;
double x18754 = 3*x18714;
double x18755 = 3*x18713;
double x18756 = x11328*x1312;
double x18757 = x11331*x1311;
double x18758 = x1269*x18660;
double x18759 = x18735*x630;
double x18760 = x1221*x18733;
double x18761 = x18662*x634;
double x18762 = x1289*x634;
double x18763 = x17051*x18762;
double x18764 = x17049*x18762;
double x18765 = x11331*x1312;
double x18766 = x11328*x1311;
double x18767 = 3*x18728;
double x18768 = 3*x18729;
double x18769 = x10*x608;
double x18770 = x14*x14905;
double x18771 = p8_i*x1259;
double x18772 = p8_i*x1306;
double x18773 = -x1304*x18770 + x1306*x18769 - x17049*x18772 + x17051*x18772 + x17055*x18712 - 2*x18711;
double x18774 = 5*x18752;
double x18775 = p8_i*x17049;
double x18776 = p8_i*x17051;
double x18777 = x1306*x630;
double x18778 = x1259*x634;
double x18779 = p9_t_dt*x18259;
double x18780 = p9_t_dt*x_f;
double x18781 = p9_t_dt*x18248;
double x18782 = p9_i_dt*x18781;
double x18783 = p9_i*x11331;
double x18784 = x18783*x937;
double x18785 = x11328*x937;
double x18786 = p9_i*x18785;
double x18787 = x10*x18780;
double x18788 = x18780*x19;
double x18789 = x12700*x924 - x18782 + x18784 - x18786 + x18787*x391 - x18788*x8761;
double x18790 = p9_i_dt*x18710;
double x18791 = L*p9_i_dot_dt;
double x18792 = x18781*x18791;
double x18793 = p9_i*x11328;
double x18794 = x1304*x18793;
double x18795 = x1304*x18783;
double x18796 = x18785*x421;
double x18797 = x11331*x937;
double x18798 = x18797*x421;
double x18799 = p9_t_dt*x53;
double x18800 = x10*x3867;
double x18801 = x18799*x18800;
double x18802 = x421*x6;
double x18803 = x18802*x924;
double x18804 = x17039*x18780;
double x18805 = x18804*x421;
double x18806 = x17063*x8518;
double x18807 = 10*x18779 - x18780*x18806;
double x18808 = p8_i_dt*x18781;
double x18809 = L*p8_i_dot_dt;
double x18810 = x18781*x18809;
double x18811 = x18710*x18791;
double x18812 = 3*p8_i;
double x18813 = p9_i_dot_dt*x1858;
double x18814 = x18781*x18813;
double x18815 = x18785*x634;
double x18816 = x1304*x421;
double x18817 = x11331*x18816;
double x18818 = x18797*x634;
double x18819 = x11328*x18816;
double x18820 = x18800*x952;
double x18821 = 3*x18798;
double x18822 = x18730*x18799;
double x18823 = x18731*x18800;
double x18824 = 3*x18796;
double x18825 = x421*x952;
double x18826 = x17051*x18825;
double x18827 = x18733*x924;
double x18828 = x18735*x421;
double x18829 = x18804*x634;
double x18830 = x1269*x18802;
double x18831 = x17049*x18825;
double x18832 = -x17258*x18780 + x18779;
double x18833 = c*x18793;
double x18834 = c*x18783;
double x18835 = 3*x18782 - 3*x18784 + 3*x18786 - x18787*x414 - x18833*x952 + x18834*x952;
double x18836 = 2*x18782;
double x18837 = x17055*x937;
double x18838 = p9_i*x17055;
double x18839 = x14*x937;
double x18840 = x12700*x18839;
double x18841 = x12700*x14;
double x18842 = p9_i*x18837;
double x18843 = x18787*x933;
double x18844 = x18834*x942;
double x18845 = x18833*x942;
double x18846 = -x18792 - x18796 + x18798 + x18801 + x18803 - x18805;
double x18847 = 5*p8_i;
double x18848 = x18781*x321;
double x18849 = p9_i_dot_dt*x321;
double x18850 = x10*x390;
double x18851 = x17191*x937;
double x18852 = p9_i_dot*x17191;
double x18853 = x634*x942;
double x18854 = x1306*x421;
double x18855 = x10*x638;
double x18856 = q2_i*x17039;
double x18857 = x11683*x1338 + x18177*x18855 - x18177*x18856 - x18230 + x18236 - x18241;
double x18858 = q3_t_dt*x18248;
double x18859 = q2_i_dt*x18858;
double x18860 = x1419*x17342;
double x18861 = q2_i*x1419;
double x18862 = x11328*x18861;
double x18863 = x11331*x18861;
double x18864 = x1422*x17343;
double x18865 = q3_t_dt*x_f;
double x18866 = x18222 - x18224 + x18225 - x18226 + x18227 - x18228;
double x18867 = q3_t_dt*x18259;
double x18868 = q3_i_dt*x18238;
double x18869 = L*x18858;
double x18870 = q2_i_dot_dt*x18869;
double x18871 = q3_i_dot_dt*x1365*x17028;
double x18872 = x10*x685;
double x18873 = q2_i_dot_dt*x1858;
double x18874 = x18238*x18873;
double x18875 = x11331*x1365;
double x18876 = 3*q3_i;
double x18877 = x17258*x18865;
double x18878 = x11328*x1365;
double x18879 = x1419*x663;
double x18880 = x11328*x18879;
double x18881 = x18875*x692;
double x18882 = x18878*x692;
double x18883 = x11331*x18879;
double x18884 = q3_i*x1384;
double x18885 = x18878*x2863;
double x18886 = q3_t_dt*x18202;
double x18887 = x10*x3768;
double x18888 = x18887*x53;
double x18889 = q2_t_dt*x18888;
double x18890 = x18875*x2863;
double x18891 = x1384*x18201;
double x18892 = x1384*x663;
double x18893 = x17049*x18892;
double x18894 = x1395*x18210;
double x18895 = x18212*x692;
double x18896 = x6*x692;
double x18897 = x1338*x18896;
double x18898 = x17039*x18865;
double x18899 = x18898*x663;
double x18900 = x17051*x18892;
double x18901 = x14*x1419;
double x18902 = x1365*x17055;
double x18903 = x10*x666;
double x18904 = q3_i*x17049;
double x18905 = q3_i*x17051;
double x18906 = q3_i_dot_dt*x18869;
double x18907 = x1419*x692;
double x18908 = x11331*x18907;
double x18909 = x11328*x18907;
double x18910 = q3_t_dt*x18888;
double x18911 = x18898*x692;
double x18912 = x1395*x18896;
double x18913 = -x18906 + x18908 - x18909 + x18910 - x18911 + x18912;
double x18914 = q3_i_dt*x18858;
double x18915 = q3_i*x1419;
double x18916 = x12040*x18901 - x1422*x18903 + x1422*x18904 - x1422*x18905 - x17055*x18915 + 2*x18914;
double x18917 = 3*x18914;
double x18918 = x18865*x18872;
double x18919 = 5*q3_i;
double x18920 = x11331*x18915;
double x18921 = 3*x18920;
double x18922 = x11328*x18915;
double x18923 = 3*x18922;
double x18924 = x1436*x18905;
double x18925 = x1419*x17191;
double x18926 = q3_i_dot*x17191;
double x18927 = x1436*x18904;
double x18928 = x1369*x692;
double x18929 = x1422*x663;
double x18930 = x10*x667;
double x18931 = q3_i*x17039;
double x18932 = x12040*x1395 + x18865*x18930 - x18865*x18931 - x18914 + x18920 - x18922;
double x18933 = q4_t_dt*x18248;
double x18934 = q3_i_dt*x18933;
double x18935 = q4_t_dt*x18259;
double x18936 = 3*x18935;
double x18937 = q3_i*x1472;
double x18938 = x11328*x18937;
double x18939 = x11331*x18937;
double x18940 = q4_t_dt*x18265;
double x18941 = q4_t_dt*x_f;
double x18942 = x18906 - x18908 + x18909 - x18910 + x18911 - x18912;
double x18943 = x17258*x18941;
double x18944 = x10*x714;
double x18945 = q4_i_dt*x18858;
double x18946 = L*x18933;
double x18947 = q3_i_dot_dt*x18946;
double x18948 = x1436*x18887;
double x18949 = q4_t_dt*x18888;
double x18950 = x10*x4570;
double x18951 = x18950*x53;
double x18952 = q3_t_dt*x18951;
double x18953 = q4_i*x1436;
double x18954 = q3_i_dot_dt*x1858;
double x18955 = x18858*x18954;
double x18956 = q4_i_dot_dt*x18869;
double x18957 = 3*q4_i;
double x18958 = x11328*x1419;
double x18959 = x11331*x1419;
double x18960 = x1472*x692;
double x18961 = x11328*x18960;
double x18962 = x18959*x721;
double x18963 = x1436*x692;
double x18964 = x17051*x18963;
double x18965 = x1446*x18896;
double x18966 = x6*x721;
double x18967 = x1395*x18966;
double x18968 = x17049*x18963;
double x18969 = x17039*x18941;
double x18970 = x18969*x692;
double x18971 = x18898*x721;
double x18972 = 3*x18909;
double x18973 = x18958*x721;
double x18974 = 3*x18908;
double x18975 = x11331*x18960;
double x18976 = x14*x1472;
double x18977 = x1419*x17055;
double x18978 = x10*x695;
double x18979 = q4_i*x17049;
double x18980 = q4_i*x17051;
double x18981 = q4_i_dot_dt*x18946;
double x18982 = x1472*x721;
double x18983 = x11331*x18982;
double x18984 = x11328*x18982;
double x18985 = q4_t_dt*x18951;
double x18986 = x18969*x721;
double x18987 = x1446*x18966;
double x18988 = -x18981 + x18983 - x18984 + x18985 - x18986 + x18987;
double x18989 = q4_i_dt*x18933;
double x18990 = q4_i*x1472;
double x18991 = x12351*x18976 - x1475*x18978 + x1475*x18979 - x1475*x18980 - x17055*x18990 + 2*x18989;
double x18992 = 3*x18989;
double x18993 = x18941*x18944;
double x18994 = 5*q4_i;
double x18995 = x11331*x18990;
double x18996 = 3*x18995;
double x18997 = x18933*x321;
double x18998 = q4_i_dot_dt*x321;
double x18999 = x11328*x18990;
double x19000 = 3*x18999;
double x19001 = x1489*x18980;
double x19002 = x1489*x18979;
double x19003 = x1422*x721;
double x19004 = x1475*x692;
double x19005 = x10*x696;
double x19006 = q4_i*x17039;
double x19007 = x12351*x1446 + x18941*x19005 - x18941*x19006 - x18989 + x18995 - x18999;
double x19008 = q5_t_dt*x18248;
double x19009 = q4_i_dt*x19008;
double x19010 = q5_t_dt*x18259;
double x19011 = 4*x19010;
double x19012 = q4_i*x1524;
double x19013 = x11328*x19012;
double x19014 = x11331*x19012;
double x19015 = q5_t_dt*x_f;
double x19016 = x18348*x19015;
double x19017 = x18981 - x18983 + x18984 - x18985 + x18986 - x18987;
double x19018 = x17258*x19015;
double x19019 = x10*x743;
double x19020 = q5_i_dt*x18933;
double x19021 = L*x19008;
double x19022 = q4_i_dot_dt*x19021;
double x19023 = x1489*x18950;
double x19024 = q5_t_dt*x18951;
double x19025 = x10*x4661;
double x19026 = x19025*x53;
double x19027 = q4_t_dt*x19026;
double x19028 = q5_i*x1489;
double x19029 = q4_i_dot_dt*x1858;
double x19030 = x18933*x19029;
double x19031 = q5_i_dot_dt*x18946;
double x19032 = 3*q5_i;
double x19033 = x11328*x1472;
double x19034 = x11331*x1472;
double x19035 = x1524*x721;
double x19036 = x11328*x19035;
double x19037 = x19034*x750;
double x19038 = x1489*x721;
double x19039 = x17051*x19038;
double x19040 = x1500*x18966;
double x19041 = x6*x750;
double x19042 = x1446*x19041;
double x19043 = x17049*x19038;
double x19044 = x17039*x19015;
double x19045 = x19044*x721;
double x19046 = x18969*x750;
double x19047 = x19033*x3082;
double x19048 = x19033*x750;
double x19049 = x19034*x3082;
double x19050 = x11331*x19035;
double x19051 = x14*x1524;
double x19052 = x1472*x17055;
double x19053 = x10*x724;
double x19054 = q5_i*x17049;
double x19055 = q5_i*x17051;
double x19056 = q5_i_dot_dt*x19021;
double x19057 = x1524*x750;
double x19058 = x11331*x19057;
double x19059 = x11328*x19057;
double x19060 = q5_t_dt*x19026;
double x19061 = x19044*x750;
double x19062 = x1500*x19041;
double x19063 = -x19056 + x19058 - x19059 + x19060 - x19061 + x19062;
double x19064 = q5_i_dt*x19008;
double x19065 = q5_i*x1524;
double x19066 = -x1527*x19053 + x1527*x19054 - x1527*x19055 + x15342*x19051 - x17055*x19065 + 2*x19064;
double x19067 = 3*x19064;
double x19068 = x19015*x19019;
double x19069 = 5*q5_i;
double x19070 = x11331*x19065;
double x19071 = 3*x19070;
double x19072 = x11328*x19065;
double x19073 = 3*x19072;
double x19074 = x1541*x19055;
double x19075 = x1524*x17191;
double x19076 = q5_i_dot*x17191;
double x19077 = x1541*x19054;
double x19078 = x1475*x750;
double x19079 = x1527*x721;
double x19080 = x10*x725;
double x19081 = q5_i*x17039;
double x19082 = x1500*x15342 + x19015*x19080 - x19015*x19081 - x19064 + x19070 - x19072;
double x19083 = q6_t_dt*x18248;
double x19084 = q5_i_dt*x19083;
double x19085 = q6_t_dt*x18259;
double x19086 = 5*x19085;
double x19087 = q5_i*x1576;
double x19088 = x11328*x19087;
double x19089 = x11331*x19087;
double x19090 = x1644*x17343;
double x19091 = q6_t_dt*x_f;
double x19092 = x19056 - x19058 + x19059 - x19060 + x19061 - x19062;
double x19093 = x17258*x19091;
double x19094 = x10*x772;
double x19095 = q6_i_dt*x19008;
double x19096 = L*x19083;
double x19097 = q5_i_dot_dt*x19096;
double x19098 = x1541*x19025;
double x19099 = q6_t_dt*x19026;
double x19100 = x10*x4749;
double x19101 = x19100*x53;
double x19102 = q5_t_dt*x19101;
double x19103 = q6_i*x1541;
double x19104 = q5_i_dot_dt*x1858;
double x19105 = x19008*x19104;
double x19106 = q6_i_dot_dt*x19021;
double x19107 = 3*q6_i;
double x19108 = x11328*x1524;
double x19109 = x11331*x1524;
double x19110 = x1576*x750;
double x19111 = x11328*x19110;
double x19112 = x19109*x779;
double x19113 = x1541*x750;
double x19114 = x17051*x19113;
double x19115 = x1551*x19041;
double x19116 = x6*x779;
double x19117 = x1500*x19116;
double x19118 = x17049*x19113;
double x19119 = x17039*x19091;
double x19120 = x19119*x750;
double x19121 = x19044*x779;
double x19122 = 3*x19059;
double x19123 = x19108*x779;
double x19124 = 3*x19058;
double x19125 = x11331*x19110;
double x19126 = x14*x1576;
double x19127 = x1524*x17055;
double x19128 = x10*x753;
double x19129 = q6_i*x17049;
double x19130 = q6_i*x17051;
double x19131 = q6_i_dot_dt*x19096;
double x19132 = x1576*x779;
double x19133 = x11331*x19132;
double x19134 = x11328*x19132;
double x19135 = q6_t_dt*x19101;
double x19136 = x19119*x779;
double x19137 = x1551*x19116;
double x19138 = -x19131 + x19133 - x19134 + x19135 - x19136 + x19137;
double x19139 = q6_i_dt*x19083;
double x19140 = q6_i*x1576;
double x19141 = x15646*x19126 - x1579*x19128 + x1579*x19129 - x1579*x19130 - x17055*x19140 + 2*x19139;
double x19142 = 3*x19139;
double x19143 = x19091*x19094;
double x19144 = 5*q6_i;
double x19145 = x11331*x19140;
double x19146 = 3*x19145;
double x19147 = x19083*x321;
double x19148 = q6_i_dot_dt*x321;
double x19149 = x11328*x19140;
double x19150 = 3*x19149;
double x19151 = x1593*x19130;
double x19152 = x1593*x19129;
double x19153 = x1527*x779;
double x19154 = x1579*x750;
double x19155 = x10*x754;
double x19156 = q6_i*x17039;
double x19157 = x1551*x15646 + x19091*x19155 - x19091*x19156 - x19139 + x19145 - x19149;
double x19158 = q7_t_dt*x18248;
double x19159 = q6_i_dt*x19158;
double x19160 = q7_t_dt*x18259;
double x19161 = 6*x19160;
double x19162 = q6_i*x1628;
double x19163 = x11328*x19162;
double x19164 = x11331*x19162;
double x19165 = q7_t_dt*x_f;
double x19166 = x18498*x19165;
double x19167 = x19131 - x19133 + x19134 - x19135 + x19136 - x19137;
double x19168 = x17258*x19165;
double x19169 = x10*x801;
double x19170 = q7_i_dt*x19083;
double x19171 = L*x19158;
double x19172 = q6_i_dot_dt*x19171;
double x19173 = x1593*x19100;
double x19174 = q7_t_dt*x19101;
double x19175 = x10*x4837;
double x19176 = x19175*x53;
double x19177 = q6_t_dt*x19176;
double x19178 = q7_i*x1593;
double x19179 = q6_i_dot_dt*x1858;
double x19180 = x19083*x19179;
double x19181 = q7_i_dot_dt*x19096;
double x19182 = 3*q7_i;
double x19183 = x11328*x1576;
double x19184 = x11331*x1576;
double x19185 = x1628*x779;
double x19186 = x11328*x19185;
double x19187 = x19184*x808;
double x19188 = x1593*x779;
double x19189 = x17051*x19188;
double x19190 = x1604*x19116;
double x19191 = x6*x808;
double x19192 = x1551*x19191;
double x19193 = x17049*x19188;
double x19194 = x17039*x19165;
double x19195 = x19194*x779;
double x19196 = x19119*x808;
double x19197 = x19183*x3299;
double x19198 = x19183*x808;
double x19199 = x19184*x3299;
double x19200 = x11331*x19185;
double x19201 = x14*x1628;
double x19202 = x1576*x17055;
double x19203 = x10*x782;
double x19204 = q7_i*x17049;
double x19205 = q7_i*x17051;
double x19206 = q7_i_dot_dt*x19171;
double x19207 = x1628*x808;
double x19208 = x11331*x19207;
double x19209 = x11328*x19207;
double x19210 = q7_t_dt*x19176;
double x19211 = x19194*x808;
double x19212 = x1604*x19191;
double x19213 = -x19206 + x19208 - x19209 + x19210 - x19211 + x19212;
double x19214 = q7_i_dt*x19158;
double x19215 = q7_i*x1628;
double x19216 = x15946*x19201 - x1631*x19203 + x1631*x19204 - x1631*x19205 - x17055*x19215 + 2*x19214;
double x19217 = 3*x19214;
double x19218 = x19165*x19169;
double x19219 = 5*q7_i;
double x19220 = x11331*x19215;
double x19221 = 3*x19220;
double x19222 = x11328*x19215;
double x19223 = 3*x19222;
double x19224 = x1645*x19205;
double x19225 = x1628*x17191;
double x19226 = q7_i_dot*x17191;
double x19227 = x1645*x19204;
double x19228 = x1579*x808;
double x19229 = x1631*x779;
double x19230 = x10*x783;
double x19231 = q7_i*x17039;
double x19232 = x15946*x1604 + x19165*x19230 - x19165*x19231 - x19214 + x19220 - x19222;
double x19233 = q8_t_dt*x18248;
double x19234 = q7_i_dt*x19233;
double x19235 = q8_t_dt*x18259;
double x19236 = 7*x19235;
double x19237 = q7_i*x1680;
double x19238 = x11328*x19237;
double x19239 = x11331*x19237;
double x19240 = q8_t_dt*x_f;
double x19241 = x18573*x19240;
double x19242 = x19206 - x19208 + x19209 - x19210 + x19211 - x19212;
double x19243 = x17258*x19240;
double x19244 = x10*x830;
double x19245 = q8_i_dt*x19158;
double x19246 = L*x19233;
double x19247 = q7_i_dot_dt*x19246;
double x19248 = x1645*x19175;
double x19249 = q8_t_dt*x19176;
double x19250 = x10*x4924;
double x19251 = x19250*x53;
double x19252 = q7_t_dt*x19251;
double x19253 = q8_i*x1645;
double x19254 = q7_i_dot_dt*x1858;
double x19255 = x19158*x19254;
double x19256 = q8_i_dot_dt*x19171;
double x19257 = 3*q8_i;
double x19258 = x11328*x1628;
double x19259 = x11331*x1628;
double x19260 = x1680*x808;
double x19261 = x11328*x19260;
double x19262 = x19259*x837;
double x19263 = x1645*x808;
double x19264 = x17051*x19263;
double x19265 = x1655*x19191;
double x19266 = x6*x837;
double x19267 = x1604*x19266;
double x19268 = x17049*x19263;
double x19269 = x17039*x19240;
double x19270 = x19269*x808;
double x19271 = x19194*x837;
double x19272 = 3*x19209;
double x19273 = x19258*x837;
double x19274 = 3*x19208;
double x19275 = x11331*x19260;
double x19276 = x14*x1680;
double x19277 = x1628*x17055;
double x19278 = x10*x811;
double x19279 = q8_i*x17049;
double x19280 = q8_i*x17051;
double x19281 = q8_i_dot_dt*x19246;
double x19282 = x1680*x837;
double x19283 = x11331*x19282;
double x19284 = x11328*x19282;
double x19285 = q8_t_dt*x19251;
double x19286 = x19269*x837;
double x19287 = x1655*x19266;
double x19288 = -x19281 + x19283 - x19284 + x19285 - x19286 + x19287;
double x19289 = q8_i_dt*x19233;
double x19290 = q8_i*x1680;
double x19291 = x16238*x19276 - x1683*x19278 + x1683*x19279 - x1683*x19280 - x17055*x19290 + 2*x19289;
double x19292 = 3*x19289;
double x19293 = x19240*x19244;
double x19294 = 5*q8_i;
double x19295 = x11331*x19290;
double x19296 = 3*x19295;
double x19297 = x19233*x321;
double x19298 = q8_i_dot_dt*x321;
double x19299 = x11328*x19290;
double x19300 = 3*x19299;
double x19301 = x1697*x19280;
double x19302 = x1697*x19279;
double x19303 = x1631*x837;
double x19304 = x1683*x808;
double x19305 = x10*x812;
double x19306 = q8_i*x17039;
double x19307 = x16238*x1655 + x19240*x19305 - x19240*x19306 - x19289 + x19295 - x19299;
double x19308 = q9_t_dt*x18248;
double x19309 = q8_i_dt*x19308;
double x19310 = q8_i*x1736;
double x19311 = x11328*x19310;
double x19312 = x11331*x19310;
double x19313 = q9_t_dt*x_f;
double x19314 = q9_t_dt*x18259;
double x19315 = -x18650*x19313 + 8*x19314;
double x19316 = x19281 - x19283 + x19284 - x19285 + x19286 - x19287;
double x19317 = q9_i_dt*x19233;
double x19318 = L*x19308;
double x19319 = q8_i_dot_dt*x19318;
double x19320 = q9_i_dot_dt*x19246;
double x19321 = x10*x859;
double x19322 = q8_i_dot_dt*x1858;
double x19323 = x19233*x19322;
double x19324 = x11331*x1680;
double x19325 = 3*q9_i;
double x19326 = x11328*x1680;
double x19327 = x1736*x837;
double x19328 = x11328*x19327;
double x19329 = x19324*x866;
double x19330 = x19326*x866;
double x19331 = x11331*x19327;
double x19332 = q9_i*x1697;
double x19333 = x19326*x3518;
double x19334 = q9_t_dt*x19251;
double x19335 = x10*x5013;
double x19336 = x19335*x53;
double x19337 = q8_t_dt*x19336;
double x19338 = x19324*x3518;
double x19339 = x1697*x19250;
double x19340 = x1697*x837;
double x19341 = x17049*x19340;
double x19342 = x1708*x19266;
double x19343 = x19269*x866;
double x19344 = x6*x866;
double x19345 = x1655*x19344;
double x19346 = x17039*x19313;
double x19347 = x19346*x837;
double x19348 = x17051*x19340;
double x19349 = -x17258*x19313 + x19314;
double x19350 = q9_i_dt*x19308;
double x19351 = 2*x19350;
double x19352 = x10*x840;
double x19353 = x1740*x19352;
double x19354 = x14*x1736;
double x19355 = q9_i*x1736;
double x19356 = x17055*x19355;
double x19357 = x16535*x19354;
double x19358 = x1680*x17055;
double x19359 = q9_i*x17051;
double x19360 = x1740*x19359;
double x19361 = q9_i*x17049;
double x19362 = x1740*x19361;
double x19363 = x1736*x866;
double x19364 = -q9_i_dot_dt*x19318 + q9_t_dt*x19336 - x11328*x19363 + x11331*x19363 + x1708*x19344 - x19346*x866;
double x19365 = 5*q9_i;
double x19366 = x17191*x1736;
double x19367 = q9_i_dot*x17191;
double x19368 = x1683*x866;
double x19369 = x1740*x837;
double x19370 = x11331*x19355;
double x19371 = x11328*x19355;
double x19372 = -x1746*x19359 + x1746*x19361 - x19313*x19321 + 3*x19350 - 3*x19370 + 3*x19371;
double x19373 = x10*x841;
double x19374 = x19313*x19373;
double x19375 = x16535*x1708;
double x19376 = q9_i*x17039;
double x19377 = x19313*x19376;
double x19378 = q10_t_dt*x18248;
double x19379 = q9_i_dt*x19378;
double x19380 = q10_t_dt*x18259;
double x19381 = q9_i*x1783;
double x19382 = x11331*x19381;
double x19383 = x11328*x19381;
double x19384 = q10_t_dt*x_f;
double x19385 = x19308*x872;
double x19386 = L*q9_i_dot_dt;
double x19387 = x19378*x19386;
double x19388 = x1736*x1790;
double x19389 = q9_i_dot_dt*x1858;
double x19390 = x19308*x19389;
double x19391 = c*x10;
double x19392 = x1766*x19391;
double x19393 = x11328*x875;
double x19394 = x1736*x19393;
double x19395 = x11331*x1793;
double x19396 = x11328*x1793;
double x19397 = x11331*x875;
double x19398 = x1736*x19397;
double x19399 = x1746*x19335;
double x19400 = q10_i*x17049;
double x19401 = x1736*x3619;
double x19402 = x11331*x19401;
double x19403 = x1773*x19391;
double x19404 = q9_t_dt*x19403;
double x19405 = q10_t_dt*x19336;
double x19406 = x11328*x19401;
double x19407 = q10_i*x17051;
double x19408 = x1746*x866;
double x19409 = x17051*x19408;
double x19410 = x6*x875;
double x19411 = x1708*x19410;
double x19412 = x17039*x19384;
double x19413 = x19412*x866;
double x19414 = x1758*x19344;
double x19415 = x19346*x875;
double x19416 = x17049*x19408;
double x19417 = x10*x5091;
double x19418 = q10_i*x17144;
double x19419 = q10_i*x17055;
double x19420 = -q10_t_dt*x19403 - x1758*x19410 + x1783*x19393 - x1783*x19397 + x19378*x872 + x19412*x875;
double x19421 = x1736*x8466;
double x19422 = x1783*x1790;
double x19423 = x19391*x872;
double x19424 = x1785*x866;
double x19425 = p10_t_dt*x_f;
double x19426 = p10_t_dt*x18259;
double x19427 = x19391*x878;
double x19428 = x19427*x53;
double x19429 = x18248*x878;
double x19430 = x17132*x387;
double x19431 = x19430*x935;
double x19432 = x241*x6*x883;
double x19433 = x17039*x883*x_f;
double x19434 = x11328*x27;
double x19435 = x19434*x883;
double x19436 = p10_i_dt*x18781;
double x19437 = x19430*x937;
double x19438 = L*p10_i_dot_dt;
double x19439 = p10_t_dt*x18248;
double x19440 = x19438*x19439;
double x19441 = p10_i*x18785;
double x19442 = x898*x935;
double x19443 = x11331*x19442;
double x19444 = x11328*x19442;
double x19445 = p10_t_dt*x53;
double x19446 = x17028*x379;
double x19447 = x19445*x19446;
double x19448 = x17039*x19425;
double x19449 = x19448*x898;
double x19450 = x6*x898;
double x19451 = x19450*x901;
double x19452 = x18248*x905;
double x19453 = x18781*x19438;
double x19454 = x18791*x19439;
double x19455 = x10*x19425;
double x19456 = p10_i_dot_dt*x1858;
double x19457 = x19439*x19456;
double x19458 = 3*x935;
double x19459 = x18785*x898;
double x19460 = x421*x935;
double x19461 = x11331*x19460;
double x19462 = x18797*x898;
double x19463 = x11328*x19460;
double x19464 = x12626*x19;
double x19465 = 3*x19444;
double x19466 = x18799*x19446;
double x19467 = x18800*x19445;
double x19468 = 3*x19443;
double x19469 = x19446*x908;
double x19470 = x17051*x883;
double x19471 = x898*x908;
double x19472 = x17049*x19471;
double x19473 = x19450*x924;
double x19474 = x19448*x421;
double x19475 = x18804*x898;
double x19476 = x18802*x901;
double x19477 = x17051*x19471;
double x19478 = x27*x883;
double x19479 = x10*x385;
double x19480 = p10_i*x17051;
double x19481 = 5*x935;
double x19482 = p10_t_dt*x267;
double x19483 = x898*x942;
double x19484 = x421*x956;
double x19485 = x17057*x74;
double x19486 = -x11390*x2719;
double x19487 = x11652*x19;
double x19488 = -x17092 - x17094;
double x19489 = 6*x17115;
double x19490 = q2_b_dt*x17063;
double x19491 = L*x19490;
double x19492 = 6*x19491;
double x19493 = 6*q1_b_dt;
double x19494 = q2_i*x19493;
double x19495 = x17051*x19494;
double x19496 = 6*x17051;
double x19497 = x11679*x19496;
double x19498 = x18210*x2719;
double x19499 = x11390*x2728;
double x19500 = -x17024*x2738;
double x19501 = -x17118 + x19500;
double x19502 = -x17093 - x17095;
double x19503 = q2_b_dt*x10;
double x19504 = x109*x19503 - x17080 + x17081*x656 - x17083 - x18167*x2727 - x18201*x74;
double x19505 = 6*x17049;
double x19506 = x17099 + x17101;
double x19507 = -x11679*x19505 + x11690*x19 + x11692*x19 - x17049*x19494 + x19506;
double x19508 = x17066*x70;
double x19509 = 4*x17068;
double x19510 = x17049*x19509;
double x19511 = x11737*x19;
double x19512 = x11738*x19;
double x19513 = x11780*x17049;
double x19514 = x17049*x2749;
double x19515 = x17049*x5828;
double x19516 = x11691*x17049;
double x19517 = x18191*x2741;
double x19518 = x17049*x19517;
double x19519 = q1_i_dot*x2754;
double x19520 = x17049*x19519;
double x19521 = x11765*x19;
double x19522 = x11766*x19;
double x19523 = 4*x17049;
double x19524 = x19523*x5280;
double x19525 = x17057*x2727;
double x19526 = x10*x646;
double x19527 = x19526*x5265;
double x19528 = x17071*x2738;
double x19529 = 4*x17071;
double x19530 = x19529*x5265;
double x19531 = x18216*x2741;
double x19532 = -x17034*x74 + x17071*x2754 + 4*x17077 + x17081*x3685 - x18167*x2741 - x18216*x74 - x19503*x77 + x19525 - x19527 - x19528 - x19530 + 3*x19531;
double x19533 = x11691*x17051;
double x19534 = x11780*x17051;
double x19535 = x17051*x2749;
double x19536 = 4*x17051;
double x19537 = x19536*x5280;
double x19538 = -x19537;
double x19539 = -x11390*x2746 - x11683*x2719 - x127*x17426 - x17037*x2719 + x17051*x19509 + x17051*x19517 + x17051*x19519 + x17051*x5828 + x19533 - x19534 - x19535 + x19538;
double x19540 = q1_b_dt*q2_i;
double x19541 = x17361*x19540;
double x19542 = x11679*x17361;
double x19543 = x18221*x2802;
double x19544 = x19536*x5919;
double x19545 = x17086*x2797;
double x19546 = x57*x6;
double x19547 = x19546*x2749;
double x19548 = q1_b_dt*x2794;
double x19549 = x17051*x19548;
double x19550 = 4*x19533;
double x19551 = x19526*x2738;
double x19552 = 2*x19551;
double x19553 = x2779*x6;
double x19554 = q2_i_dot*x19553;
double x19555 = x19552 + x19554;
double x19556 = x11873*x19536;
double x19557 = x2743*x2807;
double x19558 = x17051*x19557;
double x19559 = -x19556 - x19558;
double x19560 = x19555 + x19559;
double x19561 = x11848*x18216;
double x19562 = -x11906*x17069;
double x19563 = x11906*x17361;
double x19564 = x19561 + x19562 + x19563;
double x19565 = q1_b_dt*x18216;
double x19566 = x19503*x37;
double x19567 = x17081*x646;
double x19568 = x18216*x2727;
double x19569 = 4*x19568;
double x19570 = x19526*x2743;
double x19571 = 4*x19570;
double x19572 = -x19569 - x19571;
double x19573 = x158*x19567 + x17072*x19526 + x17078 + x17084 - x18216*x2802 + 4*x19525 + 2*x19528 - x19529*x2743 - 8*x19565 - 8*x19566 + x19572;
double x19574 = x11900*x19;
double x19575 = -x19574;
double x19576 = -x17070;
double x19577 = x11873*x19523;
double x19578 = x17049*x19557;
double x19579 = x19577 + x19578;
double x19580 = x11679*x17069 - x11843*x19 - x11844*x19 - x17049*x19548 + x17069*x19540 + x17102 + x18219*x2802 - 4*x19516 + x19523*x5919 + x19575 + x19576 + x19579;
double x19581 = 12*x19540;
double x19582 = x17051*x19581;
double x19583 = x17051*x2760;
double x19584 = 7*x2741;
double x19585 = x18221*x19584;
double x19586 = q1_i_dot*x2775;
double x19587 = x17051*x19586;
double x19588 = 5*x17051;
double x19589 = x11873*x19588;
double x19590 = x19588*x5952;
double x19591 = 3*x19534;
double x19592 = 3*x19535;
double x19593 = q1_b_dt*x2764;
double x19594 = x17051*x19593;
double x19595 = 5*x19533;
double x19596 = x17092*x286;
double x19597 = x17094*x286;
double x19598 = x19555 + x19575;
double x19599 = x18216*x2788;
double x19600 = q2_i*x2788;
double x19601 = x17049*x19600;
double x19602 = -x19601;
double x19603 = x17051*x19600;
double x19604 = x19599 + x19602 + x19603;
double x19605 = x154*x19567 - x17071*x2775 + x17079*x286 + x17082*x286 + x17108 + 5*x19525 + 3*x19527 + 3*x19528 + x19530 - 7*x19531 - 12*x19565 - 12*x19566 - 5*x19568 - 5*x19570;
double x19606 = -x17106;
double x19607 = -x19524;
double x19608 = 5*x17049;
double x19609 = x11873*x19608 + x17049*x19581 + x17049*x19586 - x17049*x19593 + x17049*x2760 - x17098*x286 - x17100*x286 + x18219*x19584 - 3*x19513 - 3*x19514 - 5*x19516 + x19606 + x19607 + x19608*x5952;
double x19610 = 4*x19491;
double x19611 = x17126*x19540;
double x19612 = x11679*x17126;
double x19613 = 16*x2741;
double x19614 = x18219*x19613;
double x19615 = q1_i_dot*x6057;
double x19616 = x17049*x19615;
double x19617 = x11873*x19505;
double x19618 = x19505*x5952;
double x19619 = q1_b_dt*x2826;
double x19620 = x17049*x19619;
double x19621 = x11691*x19505;
double x19622 = x11780*x19505;
double x19623 = x19505*x2749;
double x19624 = x17406*x5280;
double x19625 = x17098*x327;
double x19626 = x17100*x327;
double x19627 = -x18216*x6045;
double x19628 = -x11906*x17412;
double x19629 = x11906*x17126;
double x19630 = x19627 + x19628 + x19629;
double x19631 = -x129*x19567 - x17048*x2727 - 12*x17071*x5265 + x17071*x6057 - x17079*x327 - x17082*x327 - x17124 + x18186*x2727 - 6*x19527 - 6*x19528 + 16*x19531 - x19552 + 18*x19565 + 18*x19566 + 6*x19570;
double x19632 = -x17119;
double x19633 = -x19554;
double x19634 = x11679*x17412 - x11691*x19496 - x11780*x19496 + x11873*x19496 + x17051*x19615 - x17051*x19619 - x17092*x327 - x17094*x327 + x17412*x19540 - x17415*x5280 + x18221*x19613 - x19496*x2749 + x19496*x5952 + x19632 + x19633;
double x19635 = -x19610;
double x19636 = x19503*x638;
double x19637 = -x11683*x2746;
double x19638 = x12005*x19;
double x19639 = q2_b_dot_dt*x18216;
double x19640 = x19503*x646;
double x19641 = x17049*x2830;
double x19642 = x17049*x2831;
double x19643 = -x17051*x2830 - x17051*x2831;
double x19644 = 12*x19491;
double x19645 = x17429*x2738;
double x19646 = x17063*x2856;
double x19647 = 4*x19646;
double x19648 = q3_b_dt*x17063;
double x19649 = L*x19648;
double x19650 = 12*x19649;
double x19651 = x19496*x6224;
double x19652 = x12029*x19496;
double x19653 = x18896*x2746;
double x19654 = x11683*x2840;
double x19655 = -x19603;
double x19656 = x19575 + x19655;
double x19657 = q3_b_dt*x10;
double x19658 = x10*x675;
double x19659 = x19658*x2743;
double x19660 = -x18855*x2839 + x19503*x685 + x19572 - x19599 + x19657*x656 - 2*x19659;
double x19661 = -x12029*x19505 + x12045*x19 + x12047*x19 - x19505*x6224 + x19579 + x19601;
double x19662 = -x19646;
double x19663 = q2_i*x2850;
double x19664 = x17051*x19663;
double x19665 = x12040*x2746;
double x19666 = x11683*x2848;
double x19667 = x17051*x6230;
double x19668 = x17051*x6231;
double x19669 = x17051*x6131;
double x19670 = x12046*x17051;
double x19671 = x18876*x2727;
double x19672 = x17051*x19671;
double x19673 = q3_b_dt*x2863;
double x19674 = x17051*x19673;
double x19675 = x11683*x2728;
double x19676 = x18210*x2746;
double x19677 = 4*x19551;
double x19678 = x2738*x2807;
double x19679 = -x17049*x19678;
double x19680 = x17051*x19678;
double x19681 = x19677 + x19679 + x19680;
double x19682 = x19658*x2738;
double x19683 = x19526*x2856;
double x19684 = x18216*x2839;
double x19685 = x18903*x2727;
double x19686 = x19657*x646;
double x19687 = -x18216*x2850 - x1858*x19686 + x18855*x2727 + x19503*x667 + 2*x19570 + x19657*x638 - x19659 + x19682 + x19683 - x19684 - 3*x19685;
double x19688 = x17049*x6131;
double x19689 = x17049*x6230;
double x19690 = x17049*x6231;
double x19691 = x12046*x17049 - x12082*x19 - x12083*x19 - x12106*x19 - x12107*x19 + x17049*x19663 + x17049*x19671 + x17049*x19673 + x19688 - x19689 - x19690;
double x19692 = x17361*x6224;
double x19693 = x12029*x17361;
double x19694 = x2727*x2910;
double x19695 = x17051*x19694;
double x19696 = q3_b_dt*x2794;
double x19697 = x17051*x19696;
double x19698 = q3_i_dot*x19553;
double x19699 = x2891*x6;
double x19700 = q2_i_dot*x19699;
double x19701 = x2743*x2968;
double x19702 = x17051*x19701;
double x19703 = x18221*x3017;
double x19704 = x19658*x2856;
double x19705 = 2*x19704;
double x19706 = q3_i_dot*x19699;
double x19707 = x19705 + x19706;
double x19708 = x2839*x2910;
double x19709 = x17051*x19708;
double x19710 = x17051*x2883;
double x19711 = x158*x19710;
double x19712 = -x19709 - x19711;
double x19713 = x19707 + x19712;
double x19714 = q3_b_dt*x18903;
double x19715 = 8*x19714;
double x19716 = -x17069*x6295;
double x19717 = x17361*x6295;
double x19718 = x19715 + x19716 + x19717;
double x19719 = x19556 + x19558;
double x19720 = x18903*x3017;
double x19721 = x19657*x675;
double x19722 = x158*x19721;
double x19723 = -x19720 - x19722;
double x19724 = -x11848*x18903 - x158*x19686 + x19569 + x19571 - x19657*x3733 + 4*x19659 + 2*x19682 + 2*x19683 + 4*x19684 - 4*x19685 + x19723;
double x19725 = x12214*x19;
double x19726 = -x19725;
double x19727 = x17049*x19708;
double x19728 = x17049*x2883;
double x19729 = x158*x19728;
double x19730 = x19727 + x19729;
double x19731 = x12029*x17069 - x12165*x19 - x12166*x19 + x17049*x19694 + x17049*x19696 - x17049*x19701 + x17069*x6224 - x18219*x3017 - x19577 - x19578 + x19726 + x19730;
double x19732 = q3_i*x2788;
double x19733 = x17051*x19732;
double x19734 = 12*x12029;
double x19735 = x17051*x19734;
double x19736 = 7*x2727;
double x19737 = x18905*x19736;
double x19738 = q3_b_dt*x2887;
double x19739 = x17051*x19738;
double x19740 = x12246*x18905;
double x19741 = x154*x19710;
double x19742 = 3*x19667;
double x19743 = 3*x19668;
double x19744 = 5*x19669;
double x19745 = x12246*x18221;
double x19746 = 7*x11873;
double x19747 = x17051*x19746;
double x19748 = x17051*x6305;
double x19749 = x19707 + x19726;
double x19750 = x18903*x6316;
double x19751 = q3_i*x6316;
double x19752 = x17049*x19751;
double x19753 = -x19752;
double x19754 = x17051*x19751;
double x19755 = x19750 + x19753 + x19754;
double x19756 = -x12246*x18903 - x154*x19721 - x18903*x2788 + x19526*x2775 + 7*x19568 - x19657*x3706 + 5*x19659 + 3*x19682 + 3*x19683 + 5*x19684 - 7*x19685 - x19686*x286;
double x19757 = -x12246*x18219 + x12246*x18904 + x154*x19728 + x17049*x19732 + x17049*x19734 + x17049*x19738 - x17049*x19746 - x17049*x6305 + x18904*x19736 - 5*x19688 - 3*x19689 - 3*x19690;
double x19758 = 4*x19649;
double x19759 = x17126*x6224;
double x19760 = x12029*x17126;
double x19761 = 16*x2727;
double x19762 = x18904*x19761;
double x19763 = q3_b_dt*x2930;
double x19764 = x17049*x19763;
double x19765 = x12283*x19505;
double x19766 = x129*x19728;
double x19767 = x19505*x6131;
double x19768 = x12046*x19505;
double x19769 = q3_i_dot*x17049;
double x19770 = x19769*x6009;
double x19771 = x19505*x6231;
double x19772 = x12292*x17049;
double x19773 = 16*x17049;
double x19774 = x11873*x19773;
double x19775 = x19773*x5952;
double x19776 = -18*x19714;
double x19777 = -x17412*x6295;
double x19778 = x17126*x6295;
double x19779 = -x17024*x2856 + x19776 + x19777 + x19778;
double x19780 = x129*x19721 - x18186*x2839 + x18872*x2839 + x18903*x6045 - x19526*x2931 - x19526*x6057 - 16*x19568 + x19657*x3749 - 6*x19659 - 6*x19682 - 6*x19683 + 16*x19685 + x19686*x327 - x19705;
double x19781 = 16*x17051;
double x19782 = q3_i_dot*x17051;
double x19783 = -x19706;
double x19784 = -x11873*x19781 + x12029*x17412 - x12046*x19496 + x12283*x19496 - x12292*x17051 + x129*x19710 + x17051*x19763 + x17412*x6224 + x18905*x19761 - x19496*x6131 - x19496*x6231 - x19781*x5952 - x19782*x6009 + x19783;
double x19785 = p10_b_dt*x17063;
double x19786 = L*x19785;
double x19787 = p10_b_dt*x10;
double x19788 = x19787*x386;
double x19789 = -x12643*x1797;
double x19790 = x12618*x19;
double x19791 = p10_b_dot_dt*x19479;
double x19792 = x19787*x379;
double x19793 = p10_b_dot_dt*x17063;
double x19794 = x19793*x5224;
double x19795 = x12635*x19;
double x19796 = x17049*x1805;
double x19797 = x11328*x12809;
double x19798 = x17051*x1805;
double x19799 = -x19797 - x19798;
double x19800 = x19793*x70;
double x19801 = 42*x19800;
double x19802 = x17063*x1842;
double x19803 = 20*x19802;
double x19804 = p9_b_dt*x17063;
double x19805 = L*x19804;
double x19806 = c*p10_b_dt;
double x19807 = 6*x19806;
double x19808 = x18783*x19807;
double x19809 = x12683*x19;
double x19810 = x12712*x19;
double x19811 = x12713*x19;
double x19812 = x12764*x19;
double x19813 = p10_b_dt*x19479;
double x19814 = 12*x19813;
double x19815 = x12668*x19;
double x19816 = -x19815;
double x19817 = x12624*x17415;
double x19818 = x19814 + x19816 + x19817;
double x19819 = x158*x19795;
double x19820 = -x19819;
double x19821 = x158*x19796;
double x19822 = -x19821;
double x19823 = p10_i_dot*x6;
double x19824 = x1834*x70;
double x19825 = x19823*x19824;
double x19826 = -x19825;
double x19827 = x19820 + x19822 + x19826;
double x19828 = x158*x19797;
double x19829 = x158*x19798;
double x19830 = p10_b_dot_dt*x10;
double x19831 = x1838*x19830;
double x19832 = x158*x19792 + 4*x19831;
double x19833 = x19828 + x19829 + x19832;
double x19834 = p9_b_dt*x10;
double x19835 = x1822*x19830;
double x19836 = 2*x19835;
double x19837 = x19787*x403;
double x19838 = p9_b_dot_dt*x10;
double x19839 = L*x19838;
double x19840 = -x19787*x414 - x19834*x413 - x19836 + x19837*x321 + x19839*x386;
double x19841 = x1797*x6;
double x19842 = x12643*x1833 - x12806*x19496 - x18793*x19807 + x19841*x421;
double x19843 = 12*x19800;
double x19844 = 11*x19802;
double x19845 = x12775*x19;
double x19846 = x12782*x19;
double x19847 = x12784*x19;
double x19848 = x11331*x8900;
double x19849 = c*x17515;
double x19850 = x1842*x19849;
double x19851 = x12740*x17049;
double x19852 = x12798*x19;
double x19853 = x1802*x1858;
double x19854 = x18783*x19853;
double x19855 = x1847*x19849;
double x19856 = 3*x19855;
double x19857 = x12810*x19;
double x19858 = x12811*x19;
double x19859 = x17515*x1802*x5540;
double x19860 = x1838*x19838;
double x19861 = x10*x1840;
double x19862 = p10_b_dot_dt*x19861;
double x19863 = x10*x1842;
double x19864 = x19863*x379;
double x19865 = 4*x19835;
double x19866 = x10*x1847;
double x19867 = x19866*x379;
double x19868 = -p10_b_dot_dt*x17028*x386 + x19787*x3867 - x19787*x391 - x19792*x321 + 4*x19813 + x19830*x3881 - x19834*x386 + x19860 - x19862 - x19864 - x19865 + 3*x19867;
double x19869 = p10_b_dt*x17051;
double x19870 = x11328*x8900;
double x19871 = x11328*x12849;
double x19872 = -x19871;
double x19873 = -L*x12643*x1834 - x12643*x1851 - x12700*x1797 + x12740*x17051 + x17051*x8767 - x17051*x8901 + x1850*x19869 + x1857*x19480 + x18793*x19853 - x19841*x898 - x19870 + x19872;
double x19874 = p10_b_dt*x5107;
double x19875 = x18793*x19874;
double x19876 = x12806*x17361;
double x19877 = x12624*x17361;
double x19878 = p9_b_dt*x5107;
double x19879 = x18793*x19878;
double x19880 = x158*x1802;
double x19881 = x18793*x19880;
double x19882 = x12952*x17051;
double x19883 = p9_i_dot*x6;
double x19884 = x19824*x19883;
double x19885 = x1892*x19823;
double x19886 = p9_i_dot*x158;
double x19887 = x19869*x19886;
double x19888 = p9_b_dot_dt*x19480;
double x19889 = x158*x19888;
double x19890 = x1840*x19838;
double x19891 = 2*x19890;
double x19892 = x1892*x19883;
double x19893 = x19891 + x19892;
double x19894 = x19866*x403;
double x19895 = -x1923*x19838 - 4*x19894;
double x19896 = x17049*x1881;
double x19897 = x158*x19896;
double x19898 = p9_i_dot*x8904;
double x19899 = x17049*x19898;
double x19900 = x19897 + x19899;
double x19901 = x17051*x1881;
double x19902 = x158*x19901;
double x19903 = x17051*x19898;
double x19904 = -x19902 - x19903;
double x19905 = x19895 + x19900 + x19904;
double x19906 = x19893 + x19905;
double x19907 = p9_b_dt*x19479;
double x19908 = x1921*x19834;
double x19909 = -x1921*x19787 - x1923*x19830 + x19787*x4539 + 8*x19813 + x19836 + 4*x19860 + 2*x19862 + 2*x19864 - 4*x19867 - 8*x19907 + x19908;
double x19910 = p10_b_dt*x17049;
double x19911 = -x19812;
double x19912 = x12906*x19;
double x19913 = -x19912;
double x19914 = x18783*x19878;
double x19915 = x19913 - x19914;
double x19916 = x12929*x19 - x12936*x19 - x12943*x19 - x12944*x19 - x12946*x19 + x18783*x19874 + x18783*x19880 + x19849*x8904 - x19886*x19910 + x19911 + x19915;
double x19917 = 12*x19806;
double x19918 = x18793*x19917;
double x19919 = x1868*x19480;
double x19920 = x1802*x286;
double x19921 = x18793*x19920;
double x19922 = 7*x17051;
double x19923 = x19922*x8840;
double x19924 = x154*x19901;
double x19925 = x19588*x8837;
double x19926 = 3*x19870;
double x19927 = x12890*x17051;
double x19928 = p9_i_dot*x154;
double x19929 = x19869*x19928;
double x19930 = x154*x19888;
double x19931 = x19797*x286;
double x19932 = x19798*x286;
double x19933 = c*x1868;
double x19934 = x18793*x19933;
double x19935 = x19913 + x19934;
double x19936 = x1896*x19834;
double x19937 = x1845*x19830;
double x19938 = x1845*x19838;
double x19939 = x154*x19837 - x1868*x19479 - x1896*x19787 + x19792*x286 + 7*x19831 + 5*x19860 + 3*x19862 + 3*x19864 + x19865 - 7*x19867 - 5*x19894 + x19936 - 7*x19937 - 5*x19938;
double x19940 = x18783*x19933;
double x19941 = -x19940;
double x19942 = -x19859;
double x19943 = x12855*x19 - x12879*x19 + x154*x19896 + x18783*x19917 + x18783*x19920 + x19608*x8837 - x19795*x286 - x19796*x286 - 3*x19848 - 3*x19850 + 7*x19855 - x19910*x19928 + x19941 + x19942;
double x19944 = x158*x19785;
double x19945 = x17022*x8592;
double x19946 = x17024*x1842;
double x19947 = x158*x19804;
double x19948 = p10_b_dt*x5096;
double x19949 = x18783*x19948;
double x19950 = x12988*x19;
double x19951 = x13000*x19;
double x19952 = p9_b_dt*x5096;
double x19953 = x18783*x19952;
double x19954 = x1802*x327;
double x19955 = x18783*x19954;
double x19956 = 16*x19855;
double x19957 = x129*x19896;
double x19958 = x19505*x8837;
double x19959 = p9_i_dot*x129;
double x19960 = x19910*x19959;
double x19961 = x13011*x19;
double x19962 = x17183*x8900;
double x19963 = 6*x19850;
double x19964 = x17515*x8722;
double x19965 = x19795*x327;
double x19966 = x19796*x327;
double x19967 = -x19891;
double x19968 = x19912 + x19967;
double x19969 = x1927*x19834;
double x19970 = -x129*x19837 + x1927*x19787 - x19792*x327 - 18*x19813 - 16*x19831 - 12*x19835 - x19839*x413 + x19839*x414 - 6*x19862 - 6*x19864 + 16*x19867 + 6*x19894 + 18*x19907 + 16*x19937 - x19969;
double x19971 = -x19892;
double x19972 = x18793*x19952;
double x19973 = -x19972;
double x19974 = p10_i_dot*x11328;
double x19975 = -x12624*x17412 + x12806*x17412 - x129*x19888 + x129*x19901 + x18793*x19948 + x18793*x19954 + x19496*x8837 - x19496*x8901 + x19781*x8840 - x19797*x327 - x19798*x327 - x19869*x19959 - 6*x19870 + x19971 + x19973 - x19974*x8722;
double x19976 = p2_b_dt*x17063;
double x19977 = x158*x19976;
double x19978 = p2_b_dt*x10;
double x19979 = x19978*x430;
double x19980 = -x13105*x1935;
double x19981 = x13043*x19;
double x19982 = p2_b_dot_dt*x18316;
double x19983 = x19978*x423;
double x19984 = x17049*x1940;
double x19985 = x17049*x1942;
double x19986 = x17051*x1940;
double x19987 = -x17051*x1942 - x19986;
double x19988 = x17352*x3943;
double x19989 = x17063*x5540;
double x19990 = p1_b_dot_dt*x19989;
double x19991 = 10*x17063;
double x19992 = x19991*x9064;
double x19993 = x19976*x3943;
double x19994 = x19496*x9248;
double x19995 = x19496*x9249;
double x19996 = x13105*x1948;
double x19997 = x17328*x1935;
double x19998 = p2_i*x1954;
double x19999 = x17051*x19998;
double x20000 = -x19999;
double x20001 = x13168*x19;
double x20002 = -x20001;
double x20003 = x20000 + x20002;
double x20004 = -x18316*x1954;
double x20005 = x17049*x19998;
double x20006 = x20004 + x20005;
double x20007 = p2_b_dot_dt*x10;
double x20008 = 2*x20007*x3957;
double x20009 = x17368*x1960;
double x20010 = p2_i_dot*x20009;
double x20011 = x20008 + x20010;
double x20012 = x2000*x20007;
double x20013 = 4*x20012;
double x20014 = x10*x1968;
double x20015 = x20014*x2005;
double x20016 = -x20013 - x20015;
double x20017 = x158*x19984;
double x20018 = p2_i_dot*x9009;
double x20019 = x17049*x20018;
double x20020 = x20017 + x20019;
double x20021 = x158*x19986;
double x20022 = x17051*x20018;
double x20023 = -x20021 - x20022;
double x20024 = x20016 + x20020 + x20023;
double x20025 = x20014*x202;
double x20026 = x17348*x444 - x18255*x1981 + x19978*x226 - 2*x20025;
double x20027 = x13111*x19 + x13112*x19 - x19505*x9248 - x19505*x9249;
double x20028 = p2_b_dot_dt*x19989;
double x20029 = 4*x9173;
double x20030 = x17051*x20029;
double x20031 = x13105*x276;
double x20032 = x11469*x1935;
double x20033 = x13221*x17051;
double x20034 = x17051*x9252;
double x20035 = x13125*x17051;
double x20036 = x17051*x1983;
double x20037 = p1_b_dt*x1994;
double x20038 = x17051*x20037;
double x20039 = x13204*x1858;
double x20040 = x17051*x20039;
double x20041 = x17426*x1940;
double x20042 = x18275*x1935;
double x20043 = p2_i_dot*x9212;
double x20044 = x17051*x20043;
double x20045 = p2_b_dt*x18316;
double x20046 = x17363*x3957;
double x20047 = x20007*x345;
double x20048 = x17363*x2000;
double x20049 = p2_b_dot_dt*x17312;
double x20050 = x20014*x423;
double x20051 = x20007*x3976;
double x20052 = -x17348*x3981 + x17348*x430 + x18255*x2084 - x1858*x20049 + x19978*x211 - x20025 - 4*x20045 + x20046 + x20047 - x20048 + 2*x20050 + x20051;
double x20053 = x13125*x17049;
double x20054 = x17049*x1983;
double x20055 = x13221*x17049;
double x20056 = x17049*x9252;
double x20057 = x17049*x20043;
double x20058 = -x20057;
double x20059 = -x13184*x19 - x13185*x19 - x13210*x19 - x13211*x19 + x17049*x20029 + x17049*x20037 + x17049*x20039 + x20053 + x20054 - x20055 - x20056 + x20058;
double x20060 = p2_i*x299;
double x20061 = x17049*x20060;
double x20062 = p1_i*x1954;
double x20063 = x17049*x20062;
double x20064 = 7*x17049;
double x20065 = x20064*x9235;
double x20066 = x13204*x286;
double x20067 = x17049*x20066;
double x20068 = x154*x17356;
double x20069 = x154*x17357;
double x20070 = 3*x20055;
double x20071 = 3*x20056;
double x20072 = 5*x20053;
double x20073 = 5*x20054;
double x20074 = x19984*x286;
double x20075 = p2_i_dot*x9158;
double x20076 = x17049*x20075;
double x20077 = x20000 + x20006;
double x20078 = x17348*x429;
double x20079 = x17348*x423;
double x20080 = x154*x17355 + x17312*x1954 + 5*x17377 - x17391 + x17431 - 7*x20012 - 5*x20025 - 3*x20046 - 3*x20047 - 5*x20048 + x20049*x286 - 7*x20050 - x20051 + 12*x20078 + x20079*x286;
double x20081 = -x17395;
double x20082 = -x20044;
double x20083 = x154*x17358 + x154*x17359 + x17051*x20060 + x17051*x20062 + x17051*x20066 - x17051*x20075 + x17433 + x19922*x9235 - x19986*x286 - 3*x20033 - 3*x20034 - 5*x20035 - 5*x20036 + x20081 + x20082;
double x20084 = x17069*x9248;
double x20085 = x17069*x9249;
double x20086 = p1_b_dt*x2034;
double x20087 = x17049*x20086;
double x20088 = x13204*x158;
double x20089 = x17049*x20088;
double x20090 = x13309*x19;
double x20091 = x13310*x19;
double x20092 = 4*x20053;
double x20093 = 4*x20054;
double x20094 = x17069*x9173;
double x20095 = -x20008;
double x20096 = -8*x20045 + x20095;
double x20097 = -x20010;
double x20098 = -x17361*x9173 + x20097;
double x20099 = x20001 + x20094 + x20096 + x20098;
double x20100 = p2_b_dt*x17312;
double x20101 = x158*x20049 + x158*x20079 - x17376 - 4*x20025 - 2*x20046 - 2*x20047 - 4*x20048 + 8*x20078 + 8*x20100;
double x20102 = -x17362;
double x20103 = -p1_i_dot*x20009 - p2_i_dot*x17369 + x17051*x20086 + x17051*x20088 + x17361*x9248 + x17361*x9249 - 4*x20035 - 4*x20036 + x20102;
double x20104 = x17412*x9248;
double x20105 = x17412*x9249;
double x20106 = x19781*x9235;
double x20107 = x13204*x327;
double x20108 = x17051*x20107;
double x20109 = x129*x17358;
double x20110 = x129*x17359;
double x20111 = x13125*x19496;
double x20112 = x19496*x1983;
double x20113 = x13221*x19496;
double x20114 = p1_i_dot*x9343;
double x20115 = x17051*x20114;
double x20116 = x13341*x9064;
double x20117 = x17051*x20116;
double x20118 = x19986*x327;
double x20119 = x19781*x9133;
double x20120 = 18*x20045;
double x20121 = -x17126*x9173;
double x20122 = x17412*x9173;
double x20123 = x17024*x9064 + x20120 + x20121 + x20122;
double x20124 = -x129*x17355 + x17410 - x17423*x226 + x17423*x444 + x20007*x3999 + 16*x20012 + 6*x20025 + 6*x20046 + 6*x20047 - x20049*x327 + 16*x20050 - 18*x20078 - x20079*x327 - 18*x20100;
double x20125 = -x17405;
double x20126 = x129*x17356 + x129*x17357 - x13125*x19505 - x13221*x19505 + x17049*x20107 - x17049*x20114 - x17049*x20116 + x17126*x9248 + x17126*x9249 - x19505*x1983 - x19773*x9133 + x19773*x9235 - x19984*x327 + x20125;
double x20127 = p3_b_dt*x17063;
double x20128 = x129*x20127;
double x20129 = p3_b_dt*x10;
double x20130 = x20129*x459;
double x20131 = -x13434*x2040;
double x20132 = x13368*x19;
double x20133 = p3_b_dot_dt*x18397;
double x20134 = x20129*x452;
double x20135 = x17063*x2096;
double x20136 = x17049*x2045;
double x20137 = x17049*x2047;
double x20138 = x17051*x2045;
double x20139 = x17051*x2047;
double x20140 = -x20138 - x20139;
double x20141 = x17429*x9064;
double x20142 = x18572*x9339;
double x20143 = x19496*x9518;
double x20144 = x19496*x9519;
double x20145 = x13434*x2055;
double x20146 = x18275*x2040;
double x20147 = p3_i*x2061;
double x20148 = x17051*x20147;
double x20149 = -x20148;
double x20150 = x13492*x19;
double x20151 = -x20150;
double x20152 = x20149 + x20151;
double x20153 = -x18397*x2061;
double x20154 = x17049*x20147;
double x20155 = x20153 + x20154;
double x20156 = p3_b_dot_dt*x10;
double x20157 = x20156*x4038;
double x20158 = 2*x20157;
double x20159 = x17368*x2067;
double x20160 = p3_i_dot*x20159;
double x20161 = x20158 + x20160;
double x20162 = x158*x20133;
double x20163 = x158*x20134;
double x20164 = -x20162 - x20163;
double x20165 = x158*x20136;
double x20166 = x158*x20137;
double x20167 = x20165 + x20166;
double x20168 = x158*x20138;
double x20169 = x158*x20139;
double x20170 = -x20168 - x20169;
double x20171 = x20164 + x20167 + x20170;
double x20172 = x20129*x423;
double x20173 = -x18339*x2084 + x19978*x473 + x20129*x444 - x20172*x321;
double x20174 = x13440*x19 + x13442*x19 - x19505*x9518 - x19505*x9519;
double x20175 = 5*x17063;
double x20176 = x20175*x9339;
double x20177 = 4*x9451;
double x20178 = x17051*x20177;
double x20179 = x13434*x1935;
double x20180 = x13105*x2040;
double x20181 = x17051*x9524;
double x20182 = x17051*x9525;
double x20183 = x13455*x17051;
double x20184 = x17051*x9455;
double x20185 = x1968*x2094;
double x20186 = x17051*x20185;
double x20187 = x18327*x2096;
double x20188 = x17426*x2045;
double x20189 = x18358*x2040;
double x20190 = x13561*x5540;
double x20191 = x17051*x20190;
double x20192 = p3_b_dt*x18397;
double x20193 = x20007*x4038;
double x20194 = x20156*x3957;
double x20195 = x20014*x452;
double x20196 = x2000*x20156;
double x20197 = 4*x20157;
double x20198 = x18339*x2188 - x18397*x2084 + x19978*x459 - x20129*x3978 + x20129*x430 + x20134*x321 - 4*x20192 + x20193 + x20194 - 3*x20195 - 3*x20196 + x20197;
double x20199 = x17049*x9525;
double x20200 = x17049*x20190;
double x20201 = -x20200;
double x20202 = x13455*x17049 - x13508*x19 - x13509*x19 - x13528*x19 - x13529*x19 + x17049*x20177 + x17049*x20185 + x17049*x9455 - x17049*x9524 + x18326*x2096 - x20199 + x20201;
double x20203 = p3_i*x1954;
double x20204 = x17049*x20203;
double x20205 = p2_i*x2061;
double x20206 = x17049*x20205;
double x20207 = p3_i_dot*x9158;
double x20208 = x17049*x20207;
double x20209 = p3_b_dot_dt*x286;
double x20210 = x18326*x20209;
double x20211 = x154*x19984;
double x20212 = x19608*x9133;
double x20213 = x2094*x9064;
double x20214 = x17049*x20213;
double x20215 = 3*x20199;
double x20216 = p2_b_dot_dt*x154;
double x20217 = x18403*x20216;
double x20218 = x154*x9510;
double x20219 = x17049*x20218;
double x20220 = x20136*x286;
double x20221 = x20137*x286;
double x20222 = x20149 + x20155;
double x20223 = x19978*x458;
double x20224 = p2_b_dot_dt*x18397;
double x20225 = -x154*x20172 - x154*x20224 + x18316*x2061 + 5*x20012 + 5*x20050 + x20095 - x20133*x286 - x20134*x286 - 3*x20193 - 3*x20194 + 7*x20195 + 7*x20196 - x20197 + 12*x20223;
double x20226 = -x20191;
double x20227 = x154*x19986 + x17051*x20203 + x17051*x20205 + x17051*x20207 - x17051*x20213 - x17051*x20218 + x18327*x20209 - x18404*x20216 + x19588*x9133 + x20097 - x20138*x286 - x20139*x286 - 3*x20182 + x20226;
double x20228 = x17069*x9518;
double x20229 = x17069*x9519;
double x20230 = p3_i_dot*x9009;
double x20231 = x17049*x20230;
double x20232 = p3_b_dot_dt*x158;
double x20233 = x18326*x20232;
double x20234 = x13614*x19;
double x20235 = x13615*x19;
double x20236 = p2_b_dot_dt*x158;
double x20237 = x18403*x20236;
double x20238 = x13622*x17049;
double x20239 = -x20017 - x20019;
double x20240 = x17069*x9451;
double x20241 = -x20158;
double x20242 = -8*x20192 + x20241;
double x20243 = -x20160;
double x20244 = -x17361*x9451 + x20243;
double x20245 = x20150 + x20240 + x20242 + x20244;
double x20246 = p3_b_dt*x18316;
double x20247 = -x158*x20172 - x158*x20224 + x20013 + x20015 - 2*x20193 - 2*x20194 + 4*x20195 + 4*x20196 + 8*x20223 + 8*x20246;
double x20248 = x20021 + x20022;
double x20249 = -p2_i_dot*x20159 - p3_i_dot*x20009 - x13622*x17051 + x17051*x20230 + x17361*x9518 + x17361*x9519 + x18327*x20232 - x18404*x20236 + x20248;
double x20250 = x158*x20127;
double x20251 = x17412*x9518;
double x20252 = x17412*x9519;
double x20253 = x1968*x9557;
double x20254 = x17051*x20253;
double x20255 = p3_b_dot_dt*x327;
double x20256 = x18327*x20255;
double x20257 = x129*x19986;
double x20258 = x19496*x9133;
double x20259 = p2_b_dot_dt*x129;
double x20260 = x18404*x20259;
double x20261 = x129*x9510;
double x20262 = x17051*x20261;
double x20263 = p3_i_dot*x9343;
double x20264 = x17051*x20263;
double x20265 = x19496*x9525;
double x20266 = x13652*x17051;
double x20267 = x20138*x327;
double x20268 = x20139*x327;
double x20269 = 18*x20192;
double x20270 = -x17126*x9451;
double x20271 = x17412*x9451;
double x20272 = x17024*x9339 + x20269 + x20270 + x20271;
double x20273 = x10*x2084;
double x20274 = x129*x20172 - 6*x20050 + x20133*x327 + x20134*x327 + x20156*x4083 + 6*x20193 + 6*x20194 - 16*x20195 - 16*x20196 - 18*x20223 - 18*x20246 - x20273*x444 + x20273*x473;
double x20275 = x129*x19984 - x13652*x17049 + x17049*x20253 - x17049*x20261 - x17049*x20263 + x17126*x9518 + x17126*x9519 + x18326*x20255 - x18403*x20259 + x19505*x9133 - x19505*x9525 + x20002 - x20136*x327 - x20137*x327;
double x20276 = p4_b_dt*x17063;
double x20277 = L*x20276;
double x20278 = p4_b_dt*x10;
double x20279 = x20278*x489;
double x20280 = -x13738*x2142;
double x20281 = x13677*x19;
double x20282 = p4_b_dot_dt*x18469;
double x20283 = x20278*x482;
double x20284 = x17063*x2240;
double x20285 = x17049*x2147;
double x20286 = x17049*x2149;
double x20287 = x17051*x2147;
double x20288 = -x17051*x2149 - x20287;
double x20289 = L*x20127;
double x20290 = x18347*x9339;
double x20291 = 18*x17063;
double x20292 = x20291*x9634;
double x20293 = x19496*x9806;
double x20294 = x19496*x9807;
double x20295 = x13738*x2155;
double x20296 = x18358*x2142;
double x20297 = p4_i*x2161;
double x20298 = x17051*x20297;
double x20299 = -x20298;
double x20300 = x13790*x19;
double x20301 = -x20300;
double x20302 = x20299 + x20301;
double x20303 = -x18469*x2161;
double x20304 = x17049*x20297;
double x20305 = x20303 + x20304;
double x20306 = p4_b_dot_dt*x10;
double x20307 = 2*x20306*x4121;
double x20308 = x17368*x2167;
double x20309 = p4_i_dot*x20308;
double x20310 = x20307 + x20309;
double x20311 = x20306*x2206;
double x20312 = 4*x20311;
double x20313 = x10*x2175;
double x20314 = x20313*x2211;
double x20315 = -x20312 - x20314;
double x20316 = x158*x20285;
double x20317 = p4_i_dot*x9828;
double x20318 = x17049*x20317;
double x20319 = x20316 + x20318;
double x20320 = x158*x20287;
double x20321 = x17051*x20317;
double x20322 = -x20320 - x20321;
double x20323 = x20315 + x20319 + x20322;
double x20324 = x10*x489;
double x20325 = x20313*x452;
double x20326 = x20129*x503 + x20278*x473 - x20324*x2188 - 2*x20325;
double x20327 = x13743*x19 + x13744*x19 - x19505*x9806 - x19505*x9807;
double x20328 = x17429*x9634;
double x20329 = 4*x9744;
double x20330 = x17051*x20329;
double x20331 = x13738*x2040;
double x20332 = x13434*x2142;
double x20333 = x17051*x9811;
double x20334 = x17051*x9812;
double x20335 = x13756*x17051;
double x20336 = x17051*x2190;
double x20337 = 3*x9755;
double x20338 = x17051*x20337;
double x20339 = p4_b_dot_dt*x1858;
double x20340 = x18404*x20339;
double x20341 = x17426*x2147;
double x20342 = x18431*x2142;
double x20343 = x13867*x5540;
double x20344 = x17051*x20343;
double x20345 = p4_b_dt*x18469;
double x20346 = x20156*x4121;
double x20347 = x20306*x4038;
double x20348 = x20156*x2206;
double x20349 = p4_b_dot_dt*x18397;
double x20350 = x20313*x482;
double x20351 = x10*x2211;
double x20352 = x20351*x9634;
double x20353 = -x1858*x20349 - x20129*x4145 + x20129*x489 + x20278*x459 + x20324*x2291 - x20325 - 4*x20345 + x20346 + x20347 - x20348 + 2*x20350 + x20352;
double x20354 = x17049*x2190;
double x20355 = x17049*x9811;
double x20356 = x17049*x20343;
double x20357 = -x20356;
double x20358 = x13756*x17049 - x13805*x19 - x13806*x19 - x13828*x19 - x13829*x19 + x17049*x20329 + x17049*x20337 - x17049*x9812 + x18403*x20339 + x20354 - x20355 + x20357;
double x20359 = p4_i*x2061;
double x20360 = x17049*x20359;
double x20361 = p3_i*x2161;
double x20362 = x17049*x20361;
double x20363 = x20064*x9755;
double x20364 = p4_b_dot_dt*x286;
double x20365 = x18403*x20364;
double x20366 = x154*x20136;
double x20367 = x154*x20137;
double x20368 = 3*x20355;
double x20369 = x2094*x9634;
double x20370 = x17049*x20369;
double x20371 = p3_b_dot_dt*x154;
double x20372 = x18477*x20371;
double x20373 = 5*x20354;
double x20374 = x20285*x286;
double x20375 = x20064*x9700;
double x20376 = x20299 + x20305;
double x20377 = x20129*x488;
double x20378 = x20129*x482;
double x20379 = x154*x20133 + x154*x20134 + x18397*x2161 + x20241 - 7*x20311 - 5*x20325 - 3*x20346 - 3*x20347 - 5*x20348 + x20349*x286 - 7*x20350 - x20352 + 12*x20377 + x20378*x286;
double x20380 = -x20344;
double x20381 = x154*x20138 + x154*x20139 + x17051*x20359 + x17051*x20361 - x17051*x20369 + x18404*x20364 - x18478*x20371 - x19922*x9700 + x19922*x9755 + x20243 - x20287*x286 - 3*x20333 - 5*x20336 + x20380;
double x20382 = x17069*x9806;
double x20383 = x17069*x9807;
double x20384 = p3_b_dt*x9612;
double x20385 = x17049*x20384;
double x20386 = x18403*x2240;
double x20387 = x13914*x19;
double x20388 = x13915*x19;
double x20389 = x18477*x20232;
double x20390 = 4*x20354;
double x20391 = -x20165 - x20166;
double x20392 = x17069*x9744;
double x20393 = -x20307;
double x20394 = -8*x20345 + x20393;
double x20395 = -x20309;
double x20396 = -x17361*x9744 + x20395;
double x20397 = x20300 + x20392 + x20394 + x20396;
double x20398 = p4_b_dt*x18397;
double x20399 = x158*x20378 + x18397*x2240 + x20162 + x20163 - 4*x20325 - 2*x20346 - 2*x20347 - 4*x20348 + 8*x20377 + 8*x20398;
double x20400 = x20168 + x20169;
double x20401 = -p3_i_dot*x20308 - p4_i_dot*x20159 + x17051*x20384 + x17361*x9806 + x17361*x9807 + x18404*x2240 - x18478*x20232 - 4*x20336 + x20400;
double x20402 = x158*x20276;
double x20403 = x17412*x9806;
double x20404 = x17412*x9807;
double x20405 = x19781*x9755;
double x20406 = p4_b_dot_dt*x327;
double x20407 = x18404*x20406;
double x20408 = x129*x20138;
double x20409 = x129*x20139;
double x20410 = p3_b_dot_dt*x129;
double x20411 = x18478*x20410;
double x20412 = x19496*x2190;
double x20413 = x19496*x9811;
double x20414 = p3_i_dot*x9779;
double x20415 = x17051*x20414;
double x20416 = x13945*x9634;
double x20417 = x17051*x20416;
double x20418 = x20287*x327;
double x20419 = x19781*x9700;
double x20420 = 18*x20345;
double x20421 = -x17126*x9744;
double x20422 = x17412*x9744;
double x20423 = x17024*x9634 + x20420 + x20421 + x20422;
double x20424 = x10*x2188;
double x20425 = -x129*x20134 + x20306*x4166 + 16*x20311 + 6*x20325 + 6*x20346 + 6*x20347 - x20349*x327 + 16*x20350 - 18*x20377 - x20378*x327 - 18*x20398 - x20424*x473 + x20424*x503;
double x20426 = x129*x20136 + x129*x20137 - x17049*x20414 - x17049*x20416 + x17126*x9806 + x17126*x9807 + x18403*x20406 - x18477*x20410 - x19505*x2190 - x19505*x9811 - x19773*x9700 + x19773*x9755 + x20151 - x20285*x327;
double x20427 = p5_b_dt*x17063;
double x20428 = p5_b_dt*x10;
double x20429 = x20428*x519;
double x20430 = -x14034*x2247;
double x20431 = x13975*x19;
double x20432 = p5_b_dot_dt*x18547;
double x20433 = x20428*x512;
double x20434 = p5_b_dot_dt*x17063;
double x20435 = x154*x20434;
double x20436 = x17049*x2252;
double x20437 = x17049*x2254;
double x20438 = x17051*x2252;
double x20439 = x17051*x2254;
double x20440 = -x20438 - x20439;
double x20441 = x19991*x9634;
double x20442 = x20434*x70;
double x20443 = 22*x20442;
double x20444 = L*x20427;
double x20445 = x10105*x19496;
double x20446 = x10106*x19496;
double x20447 = x14034*x2262;
double x20448 = x18431*x2247;
double x20449 = p5_i*x2268;
double x20450 = x17051*x20449;
double x20451 = -x20450;
double x20452 = x14086*x19;
double x20453 = -x20452;
double x20454 = x20451 + x20453;
double x20455 = -x18547*x2268;
double x20456 = x17049*x20449;
double x20457 = x20455 + x20456;
double x20458 = p5_b_dot_dt*x10;
double x20459 = x20458*x4205;
double x20460 = 2*x20459;
double x20461 = x17368*x2274;
double x20462 = p5_i_dot*x20461;
double x20463 = x20460 + x20462;
double x20464 = x158*x20432;
double x20465 = x158*x20433;
double x20466 = -x20464 - x20465;
double x20467 = x158*x20436;
double x20468 = x158*x20437;
double x20469 = x20467 + x20468;
double x20470 = x158*x20438;
double x20471 = x158*x20439;
double x20472 = -x20470 - x20471;
double x20473 = x20466 + x20469 + x20472;
double x20474 = x20428*x482;
double x20475 = -x18490*x2291 + x20278*x533 + x20428*x503 - x20474*x321;
double x20476 = -x10105*x19505 - x10106*x19505 + x14039*x19 + x14040*x19;
double x20477 = 7*x17063;
double x20478 = x20477*x9922;
double x20479 = 4*x10034;
double x20480 = x17051*x20479;
double x20481 = x14034*x2142;
double x20482 = x13738*x2247;
double x20483 = x10111*x17051;
double x20484 = x10112*x17051;
double x20485 = x14051*x17051;
double x20486 = x10037*x17051;
double x20487 = x10049*x17051;
double x20488 = p5_b_dot_dt*x1858;
double x20489 = x18478*x20488;
double x20490 = x17426*x2252;
double x20491 = x18508*x2247;
double x20492 = x14152*x5540;
double x20493 = x17051*x20492;
double x20494 = p5_b_dt*x18547;
double x20495 = x20306*x4205;
double x20496 = x20458*x4121;
double x20497 = x20313*x512;
double x20498 = x20458*x2206;
double x20499 = 4*x20459;
double x20500 = x18490*x2394 - x18547*x2291 + x20278*x519 - x20428*x4142 + x20428*x489 + x20433*x321 - 4*x20494 + x20495 + x20496 - 3*x20497 - 3*x20498 + x20499;
double x20501 = x10112*x17049;
double x20502 = x17049*x20492;
double x20503 = -x20502;
double x20504 = x10037*x17049 + x10049*x17049 - x10111*x17049 + x14051*x17049 - x14101*x19 - x14102*x19 - x14121*x19 - x14122*x19 + x17049*x20479 + x18477*x20488 - x20501 + x20503;
double x20505 = p5_i*x2161;
double x20506 = x17049*x20505;
double x20507 = p4_i*x2268;
double x20508 = x17049*x20507;
double x20509 = x10093*x20064;
double x20510 = p5_b_dot_dt*x286;
double x20511 = x18477*x20510;
double x20512 = x154*x20285;
double x20513 = x19608*x9700;
double x20514 = x2301*x9634;
double x20515 = x17049*x20514;
double x20516 = 3*x20501;
double x20517 = x14182*x18553;
double x20518 = x10091*x154;
double x20519 = x17049*x20518;
double x20520 = x20436*x286;
double x20521 = x20437*x286;
double x20522 = x20451 + x20457;
double x20523 = x20278*x518;
double x20524 = -x14182*x18547 - x154*x20474 + x18469*x2268 + 5*x20311 + 5*x20350 + x20393 - x20432*x286 - x20433*x286 - 3*x20495 - 3*x20496 + 7*x20497 + 7*x20498 - x20499 + 12*x20523;
double x20525 = -x20493;
double x20526 = x10093*x19922 - x14182*x18554 + x154*x20287 + x17051*x20505 + x17051*x20507 - x17051*x20514 - x17051*x20518 + x18478*x20510 + x19588*x9700 + x20395 - x20438*x286 - x20439*x286 - 3*x20484 + x20525;
double x20527 = x10105*x17069;
double x20528 = x10106*x17069;
double x20529 = p5_i_dot*x17049;
double x20530 = x20529*x9828;
double x20531 = p5_b_dot_dt*x158;
double x20532 = x18477*x20531;
double x20533 = x14200*x19;
double x20534 = x14201*x19;
double x20535 = x18553*x2240;
double x20536 = p5_b_dt*x9612;
double x20537 = x17049*x20536;
double x20538 = -x20316 - x20318;
double x20539 = x10034*x17069;
double x20540 = -x20460;
double x20541 = -8*x20494 + x20540;
double x20542 = -x20462;
double x20543 = -x10034*x17361 + x20542;
double x20544 = x20452 + x20539 + x20541 + x20543;
double x20545 = p5_b_dt*x18469;
double x20546 = -x158*x20474 - x18547*x2240 + x20312 + x20314 - 2*x20495 - 2*x20496 + 4*x20497 + 4*x20498 + 8*x20523 + 8*x20545;
double x20547 = p5_i_dot*x17051;
double x20548 = x20320 + x20321;
double x20549 = -p4_i_dot*x20461 - p5_i_dot*x20308 + x10105*x17361 + x10106*x17361 - x17051*x20536 + x18478*x20531 - x18554*x2240 + x20547*x9828 + x20548;
double x20550 = x158*x20427;
double x20551 = x10105*x17412;
double x20552 = x10106*x17412;
double x20553 = x10093*x19781;
double x20554 = p5_b_dot_dt*x327;
double x20555 = x18478*x20554;
double x20556 = x129*x20287;
double x20557 = x19496*x9700;
double x20558 = x14236*x18554;
double x20559 = x10091*x129;
double x20560 = x17051*x20559;
double x20561 = x20547*x9779;
double x20562 = x10112*x19496;
double x20563 = x10224*x20547;
double x20564 = x20438*x327;
double x20565 = x20439*x327;
double x20566 = 18*x20494;
double x20567 = -x10034*x17126;
double x20568 = x10034*x17412;
double x20569 = x17024*x9922 + x20566 + x20567 + x20568;
double x20570 = x10*x2291;
double x20571 = x129*x20474 - 6*x20350 + x20432*x327 + x20433*x327 + x20458*x4250 + 6*x20495 + 6*x20496 - 16*x20497 - 16*x20498 - 18*x20523 - 18*x20545 - x20570*x503 + x20570*x533;
double x20572 = x10093*x19773 + x10105*x17126 + x10106*x17126 - x10112*x19505 - x10224*x20529 + x129*x20285 - x14236*x18553 - x17049*x20559 + x18477*x20554 + x19505*x9700 + x20301 - x20436*x327 - x20437*x327 - x20529*x9779;
double x20573 = p6_b_dt*x17063;
double x20574 = x20573*x3943;
double x20575 = p6_b_dt*x10;
double x20576 = x20575*x549;
double x20577 = -x14321*x2348;
double x20578 = x14261*x19;
double x20579 = p6_b_dot_dt*x18621;
double x20580 = x20575*x542;
double x20581 = p6_b_dot_dt*x17063;
double x20582 = x129*x20581;
double x20583 = x17049*x2353;
double x20584 = x17049*x2355;
double x20585 = x17051*x2353;
double x20586 = -x17051*x2355 - x20585;
double x20587 = 12*x20442;
double x20588 = x14316*x20581;
double x20589 = L*x20573;
double x20590 = x10391*x19496;
double x20591 = x10392*x19496;
double x20592 = x14321*x2361;
double x20593 = x18508*x2348;
double x20594 = p6_i*x2367;
double x20595 = x17051*x20594;
double x20596 = -x20595;
double x20597 = x14372*x19;
double x20598 = -x20597;
double x20599 = x20596 + x20598;
double x20600 = -x18621*x2367;
double x20601 = x17049*x20594;
double x20602 = x20600 + x20601;
double x20603 = p6_b_dot_dt*x10;
double x20604 = x20603*x4288;
double x20605 = 2*x20604;
double x20606 = x17368*x2373;
double x20607 = p6_i_dot*x20606;
double x20608 = x20605 + x20607;
double x20609 = 4*x20603;
double x20610 = x20609*x2412;
double x20611 = x10*x2381;
double x20612 = x20611*x542;
double x20613 = 4*x20612;
double x20614 = -x20610 - x20613;
double x20615 = x158*x20583;
double x20616 = p6_i_dot*x10413;
double x20617 = x17049*x20616;
double x20618 = x20615 + x20617;
double x20619 = x158*x20585;
double x20620 = x17051*x20616;
double x20621 = -x20619 - x20620;
double x20622 = x20614 + x20618 + x20621;
double x20623 = x10*x549;
double x20624 = x20611*x512;
double x20625 = x20428*x563 + x20575*x533 - x20623*x2394 - 2*x20624;
double x20626 = -x10391*x19505 - x10392*x19505 + x14326*x19 + x14327*x19;
double x20627 = x10221*x18347;
double x20628 = 4*x10329;
double x20629 = x17051*x20628;
double x20630 = x14321*x2247;
double x20631 = x14034*x2348;
double x20632 = x10396*x17051;
double x20633 = x10397*x17051;
double x20634 = x14338*x17051;
double x20635 = x17051*x2396;
double x20636 = 3*x10339;
double x20637 = x17051*x20636;
double x20638 = p6_b_dot_dt*x1858;
double x20639 = x18554*x20638;
double x20640 = x17426*x2353;
double x20641 = x18583*x2348;
double x20642 = x14450*x5540;
double x20643 = x17051*x20642;
double x20644 = p6_b_dt*x18621;
double x20645 = x20458*x4288;
double x20646 = x20603*x4205;
double x20647 = x20458*x2412;
double x20648 = p6_b_dot_dt*x18547;
double x20649 = x20609*x4288;
double x20650 = -x1858*x20648 - x20428*x4312 + x20428*x549 + x20575*x519 + 2*x20612 + x20623*x2495 - x20624 - 4*x20644 + x20645 + x20646 - x20647 + x20649;
double x20651 = x17049*x2396;
double x20652 = x10396*x17049;
double x20653 = x17049*x20642;
double x20654 = -x20653;
double x20655 = -x10397*x17049 + x14338*x17049 - x14387*x19 - x14388*x19 - x14410*x19 - x14411*x19 + x17049*x20628 + x17049*x20636 + x18553*x20638 + x20651 - x20652 + x20654;
double x20656 = p6_i*x2268;
double x20657 = x17049*x20656;
double x20658 = p5_i*x2367;
double x20659 = x17049*x20658;
double x20660 = x10339*x20064;
double x20661 = p6_b_dot_dt*x286;
double x20662 = x18553*x20661;
double x20663 = x154*x20436;
double x20664 = x154*x20437;
double x20665 = 3*x20652;
double x20666 = x10221*x2301;
double x20667 = x17049*x20666;
double x20668 = x18629*x9893;
double x20669 = 5*x20651;
double x20670 = x20583*x286;
double x20671 = x10286*x20064;
double x20672 = x20596 + x20602;
double x20673 = x20428*x548;
double x20674 = x20603*x2412;
double x20675 = x20428*x542;
double x20676 = x154*x20432 + x154*x20433 + x18547*x2367 + x20540 - 7*x20612 - 5*x20624 - 3*x20645 - 3*x20646 - 5*x20647 + x20648*x286 - x20649 + 12*x20673 - 7*x20674 + x20675*x286;
double x20677 = -x20643;
double x20678 = -x10286*x19922 + x10339*x19922 + x154*x20438 + x154*x20439 + x17051*x20656 + x17051*x20658 - x17051*x20666 + x18554*x20661 - x18630*x9893 + x20542 - x20585*x286 - 3*x20632 - 5*x20635 + x20677;
double x20679 = x10391*x17069;
double x20680 = x10392*x17069;
double x20681 = p5_b_dt*x10399;
double x20682 = x17049*x20681;
double x20683 = p6_b_dot_dt*x158;
double x20684 = x18553*x20683;
double x20685 = x14495*x19;
double x20686 = x14496*x19;
double x20687 = x18629*x20531;
double x20688 = 4*x20651;
double x20689 = -x20467 - x20468;
double x20690 = x10329*x17069;
double x20691 = -x20605;
double x20692 = -8*x20644 + x20691;
double x20693 = -x20607;
double x20694 = -x10329*x17361 + x20693;
double x20695 = x20597 + x20690 + x20692 + x20694;
double x20696 = p6_b_dt*x18547;
double x20697 = x158*x20648 + x158*x20675 + x20464 + x20465 - 4*x20624 - 2*x20645 - 2*x20646 - 4*x20647 + 8*x20673 + 8*x20696;
double x20698 = x20470 + x20471;
double x20699 = -p5_i_dot*x20606 - p6_i_dot*x20461 + x10391*x17361 + x10392*x17361 + x17051*x20681 + x18554*x20683 - x18630*x20531 - 4*x20635 + x20698;
double x20700 = x158*x20573;
double x20701 = x10391*x17412;
double x20702 = x10392*x17412;
double x20703 = x10339*x19781;
double x20704 = p6_b_dot_dt*x327;
double x20705 = x18554*x20704;
double x20706 = x129*x20438;
double x20707 = x129*x20439;
double x20708 = p5_b_dot_dt*x129;
double x20709 = x18630*x20708;
double x20710 = x19496*x2396;
double x20711 = x10396*x19496;
double x20712 = x10397*x19496;
double x20713 = x10221*x14528;
double x20714 = x17051*x20713;
double x20715 = x20585*x327;
double x20716 = x10286*x19781;
double x20717 = 18*x20644;
double x20718 = -x10329*x17126;
double x20719 = x10329*x17412;
double x20720 = x10221*x17024 + x20717 + x20718 + x20719;
double x20721 = x10*x2394;
double x20722 = -x129*x20433 + 12*x20604 + 16*x20612 + 6*x20624 + 6*x20645 + 6*x20646 - x20648*x327 - 18*x20673 + 16*x20674 - x20675*x327 - 18*x20696 - x20721*x533 + x20721*x563;
double x20723 = -x10286*x19773 + x10339*x19773 + x10391*x17126 + x10392*x17126 - x10396*x19505 - x10397*x19505 + x129*x20436 + x129*x20437 - x17049*x20713 + x18553*x20704 - x18629*x20708 - x19505*x2396 + x20453 - x20583*x327;
double x20724 = p7_b_dt*x17063;
double x20725 = L*x20724;
double x20726 = p7_b_dt*x10;
double x20727 = x20726*x579;
double x20728 = -x14616*x2451;
double x20729 = x14558*x19;
double x20730 = p7_b_dot_dt*x18698;
double x20731 = x20726*x572;
double x20732 = p7_b_dot_dt*x17063;
double x20733 = x20732*x286;
double x20734 = x17049*x2456;
double x20735 = x17049*x2458;
double x20736 = x17051*x2456;
double x20737 = x17051*x2458;
double x20738 = -x20736 - x20737;
double x20739 = x10221*x18572;
double x20740 = x20732*x70;
double x20741 = 30*x20740;
double x20742 = x10687*x19496;
double x20743 = x10688*x19496;
double x20744 = x14616*x2466;
double x20745 = x18583*x2451;
double x20746 = p7_i*x2472;
double x20747 = x17051*x20746;
double x20748 = -x20747;
double x20749 = x14669*x19;
double x20750 = -x20749;
double x20751 = x20748 + x20750;
double x20752 = -x18698*x2472;
double x20753 = x17049*x20746;
double x20754 = x20752 + x20753;
double x20755 = p7_b_dot_dt*x10;
double x20756 = x20755*x4370;
double x20757 = 2*x20756;
double x20758 = x17368*x2478;
double x20759 = p7_i_dot*x20758;
double x20760 = x20757 + x20759;
double x20761 = x158*x20730;
double x20762 = x158*x20731;
double x20763 = -x20761 - x20762;
double x20764 = x158*x20734;
double x20765 = x158*x20735;
double x20766 = x20764 + x20765;
double x20767 = x158*x20736;
double x20768 = x158*x20737;
double x20769 = -x20767 - x20768;
double x20770 = x20763 + x20766 + x20769;
double x20771 = x10*x579;
double x20772 = x20726*x542;
double x20773 = x20575*x593 + x20726*x563 - x20771*x2495 - x20772*x321;
double x20774 = -x10687*x19505 - x10688*x19505 + x14621*x19 + x14622*x19;
double x20775 = 9*x17063;
double x20776 = x10506*x20775;
double x20777 = 4*x10618;
double x20778 = x17051*x20777;
double x20779 = x14616*x2348;
double x20780 = x14321*x2451;
double x20781 = x10693*x17051;
double x20782 = x10694*x17051;
double x20783 = x14633*x17051;
double x20784 = x10621*x17051;
double x20785 = x10633*x17051;
double x20786 = p7_b_dot_dt*x1858;
double x20787 = x18630*x20786;
double x20788 = x17426*x2456;
double x20789 = x18660*x2451;
double x20790 = x14736*x5540;
double x20791 = x17051*x20790;
double x20792 = p7_b_dt*x18698;
double x20793 = x20603*x4370;
double x20794 = x20755*x4288;
double x20795 = x20611*x572;
double x20796 = x20755*x2412;
double x20797 = 4*x20756;
double x20798 = -x18698*x2495 + x20575*x579 - x20726*x4309 + x20726*x549 + x20731*x321 + x20771*x2599 - 4*x20792 + x20793 + x20794 - 3*x20795 - 3*x20796 + x20797;
double x20799 = x10694*x17049;
double x20800 = x17049*x20790;
double x20801 = -x20800;
double x20802 = x10621*x17049 + x10633*x17049 - x10693*x17049 + x14633*x17049 - x14684*x19 - x14685*x19 - x14704*x19 - x14705*x19 + x17049*x20777 + x18629*x20786 - x20799 + x20801;
double x20803 = p7_i*x2367;
double x20804 = x17049*x20803;
double x20805 = p6_i*x2472;
double x20806 = x17049*x20805;
double x20807 = x10679*x20064;
double x20808 = x18629*x2549;
double x20809 = x154*x20583;
double x20810 = x10286*x19608;
double x20811 = x10221*x2505;
double x20812 = x17049*x20811;
double x20813 = 3*x20799;
double x20814 = p6_b_dot_dt*x154;
double x20815 = x18704*x20814;
double x20816 = x10677*x154;
double x20817 = x17049*x20816;
double x20818 = x20734*x286;
double x20819 = x20735*x286;
double x20820 = x20748 + x20754;
double x20821 = x20575*x578;
double x20822 = p6_b_dot_dt*x18698;
double x20823 = -x154*x20772 - x154*x20822 + x18621*x2472 + 5*x20612 + 5*x20674 + x20691 - x20730*x286 - x20731*x286 - 3*x20793 - 3*x20794 + 7*x20795 + 7*x20796 - x20797 + 12*x20821;
double x20824 = -x20791;
double x20825 = x10286*x19588 + x10679*x19922 + x154*x20585 + x17051*x20803 + x17051*x20805 - x17051*x20811 - x17051*x20816 + x18630*x2549 - x18705*x20814 + x20693 - x20736*x286 - x20737*x286 - 3*x20782 + x20824;
double x20826 = x10687*x17069;
double x20827 = x10688*x17069;
double x20828 = p7_i_dot*x10413;
double x20829 = x17049*x20828;
double x20830 = p7_b_dot_dt*x158;
double x20831 = x18629*x20830;
double x20832 = x14786*x19;
double x20833 = x14787*x19;
double x20834 = x18704*x20683;
double x20835 = p7_b_dt*x10399;
double x20836 = x17049*x20835;
double x20837 = -x20615 - x20617;
double x20838 = x10618*x17069;
double x20839 = -x20757;
double x20840 = -8*x20792 + x20839;
double x20841 = -x20759;
double x20842 = -x10618*x17361 + x20841;
double x20843 = x20749 + x20838 + x20840 + x20842;
double x20844 = p7_b_dt*x18621;
double x20845 = -x158*x20772 - x158*x20822 + x20610 + x20613 - 2*x20793 - 2*x20794 + 4*x20795 + 4*x20796 + 8*x20821 + 8*x20844;
double x20846 = x20619 + x20620;
double x20847 = -p6_i_dot*x20758 - p7_i_dot*x20606 + x10687*x17361 + x10688*x17361 + x17051*x20828 - x17051*x20835 + x18630*x20830 - x18705*x20683 + x20846;
double x20848 = x158*x20724;
double x20849 = x10687*x17412;
double x20850 = x10688*x17412;
double x20851 = x10679*x19781;
double x20852 = p7_b_dot_dt*x327;
double x20853 = x18630*x20852;
double x20854 = x129*x20585;
double x20855 = x10286*x19496;
double x20856 = x10191*x18705;
double x20857 = x10677*x129;
double x20858 = x17051*x20857;
double x20859 = x10693*x19496;
double x20860 = x10694*x19496;
double x20861 = x10506*x14814;
double x20862 = x17051*x20861;
double x20863 = x20736*x327;
double x20864 = x20737*x327;
double x20865 = 18*x20792;
double x20866 = -x10618*x17126;
double x20867 = x10618*x17412;
double x20868 = x10506*x17024 + x20865 + x20866 + x20867;
double x20869 = x10*x2495;
double x20870 = x129*x20772 - 6*x20612 + x20730*x327 + x20731*x327 + x20755*x4414 + 6*x20793 + 6*x20794 - 16*x20795 - 16*x20796 - 18*x20821 - 18*x20844 - x20869*x563 + x20869*x593;
double x20871 = -x10191*x18704 + x10286*x19505 + x10679*x19773 + x10687*x17126 + x10688*x17126 - x10693*x19505 - x10694*x19505 + x129*x20583 - x17049*x20857 - x17049*x20861 + x18629*x20852 + x20598 - x20734*x327 - x20735*x327;
double x20872 = p8_b_dt*x17063;
double x20873 = p8_b_dt*x10;
double x20874 = x20873*x609;
double x20875 = -x14905*x2553;
double x20876 = x14846*x19;
double x20877 = p8_b_dot_dt*x18769;
double x20878 = x20873*x602;
double x20879 = x18347*x2675;
double x20880 = x17049*x2558;
double x20881 = x17049*x2560;
double x20882 = x17051*x2558;
double x20883 = -x17051*x2560 - x20882;
double x20884 = 16*x20740;
double x20885 = x10808*x17063;
double x20886 = x10987*x19496;
double x20887 = x10988*x19496;
double x20888 = x14905*x2566;
double x20889 = x18660*x2553;
double x20890 = p8_i*x2572;
double x20891 = x17051*x20890;
double x20892 = -x20891;
double x20893 = x14957*x19;
double x20894 = -x20893;
double x20895 = x20892 + x20894;
double x20896 = -x18769*x2572;
double x20897 = x17049*x20890;
double x20898 = x20896 + x20897;
double x20899 = p8_b_dot_dt*x10;
double x20900 = x20899*x2575;
double x20901 = 2*x20900;
double x20902 = x17368*x2578;
double x20903 = p8_i_dot*x20902;
double x20904 = x20901 + x20903;
double x20905 = 4*x20899;
double x20906 = x20905*x2617;
double x20907 = x10*x2586;
double x20908 = x20907*x602;
double x20909 = 4*x20908;
double x20910 = -x20906 - x20909;
double x20911 = x158*x20880;
double x20912 = p8_i_dot*x10876;
double x20913 = x17049*x20912;
double x20914 = x20911 + x20913;
double x20915 = x158*x20882;
double x20916 = x17051*x20912;
double x20917 = -x20915 - x20916;
double x20918 = x20910 + x20914 + x20917;
double x20919 = x10*x609;
double x20920 = x20907*x572;
double x20921 = x20726*x623 + x20873*x593 - x20919*x2599 - 2*x20920;
double x20922 = -x10987*x19505 - x10988*x19505 + x14910*x19 + x14911*x19;
double x20923 = x10807*x19991;
double x20924 = L*x20872;
double x20925 = 4*x10922;
double x20926 = x17051*x20925;
double x20927 = x14905*x2451;
double x20928 = x14616*x2553;
double x20929 = x10991*x17051;
double x20930 = x10992*x17051;
double x20931 = x14922*x17051;
double x20932 = x17051*x2601;
double x20933 = 3*x10935;
double x20934 = x17051*x20933;
double x20935 = p8_b_dot_dt*x1858;
double x20936 = x18705*x20935;
double x20937 = x17426*x2558;
double x20938 = x18733*x2553;
double x20939 = x15031*x5540;
double x20940 = x17051*x20939;
double x20941 = p8_b_dt*x18769;
double x20942 = x20755*x2575;
double x20943 = x20899*x4370;
double x20944 = x20755*x2617;
double x20945 = x20726*x602;
double x20946 = p8_b_dot_dt*x18698;
double x20947 = x20905*x2575;
double x20948 = -x1858*x20945 - x1858*x20946 + x20726*x609 + x20873*x579 + 2*x20908 + x20919*x2675 - x20920 - 4*x20941 + x20942 + x20943 - x20944 + x20947;
double x20949 = x17049*x2601;
double x20950 = x10991*x17049;
double x20951 = x17049*x20939;
double x20952 = -x20951;
double x20953 = -x10992*x17049 + x14922*x17049 - x14972*x19 - x14973*x19 - x14995*x19 - x14996*x19 + x17049*x20925 + x17049*x20933 + x18704*x20935 + x20949 - x20950 + x20952;
double x20954 = p8_i*x2472;
double x20955 = x17049*x20954;
double x20956 = p7_i*x2572;
double x20957 = x17049*x20956;
double x20958 = x10935*x20064;
double x20959 = p8_b_dot_dt*x286;
double x20960 = x18704*x20959;
double x20961 = x154*x20734;
double x20962 = x154*x20735;
double x20963 = 3*x20950;
double x20964 = x10807*x2505;
double x20965 = x17049*x20964;
double x20966 = p7_b_dot_dt*x154;
double x20967 = x18775*x20966;
double x20968 = 5*x20949;
double x20969 = x20880*x286;
double x20970 = x10933*x20064;
double x20971 = x20892 + x20898;
double x20972 = x20726*x608;
double x20973 = x20899*x2617;
double x20974 = x154*x20730 + x154*x20731 + x18698*x2572 + x20839 - 7*x20908 - 5*x20920 - 3*x20942 - 3*x20943 - 5*x20944 + x20945*x286 + x20946*x286 - x20947 + 12*x20972 - 7*x20973;
double x20975 = -x20940;
double x20976 = -x10933*x19922 + x10935*x19922 + x154*x20736 + x154*x20737 + x17051*x20954 + x17051*x20956 - x17051*x20964 + x18705*x20959 - x18776*x20966 + x20841 - x20882*x286 - 3*x20929 - 5*x20932 + x20975;
double x20977 = x10987*x17069;
double x20978 = x10988*x17069;
double x20979 = p7_b_dt*x10994;
double x20980 = x17049*x20979;
double x20981 = p8_b_dot_dt*x158;
double x20982 = x18704*x20981;
double x20983 = x15079*x19;
double x20984 = x15080*x19;
double x20985 = x18775*x20830;
double x20986 = 4*x20949;
double x20987 = -x20764 - x20765;
double x20988 = x10922*x17069;
double x20989 = -x20901;
double x20990 = -8*x20941 + x20989;
double x20991 = -x20903;
double x20992 = -x10922*x17361 + x20991;
double x20993 = x20893 + x20988 + x20990 + x20992;
double x20994 = p8_b_dt*x18698;
double x20995 = x158*x20945 + x158*x20946 + x20761 + x20762 - 4*x20920 - 2*x20942 - 2*x20943 - 4*x20944 + 8*x20972 + 8*x20994;
double x20996 = x20767 + x20768;
double x20997 = -p7_i_dot*x20902 - p8_i_dot*x20758 + x10987*x17361 + x10988*x17361 + x17051*x20979 + x18705*x20981 - x18776*x20830 - 4*x20932 + x20996;
double x20998 = x158*x20872;
double x20999 = x10987*x17412;
double x21000 = x10988*x17412;
double x21001 = x10935*x19781;
double x21002 = p8_b_dot_dt*x327;
double x21003 = x18705*x21002;
double x21004 = x129*x20736;
double x21005 = x129*x20737;
double x21006 = p7_b_dot_dt*x129;
double x21007 = x18776*x21006;
double x21008 = x19496*x2601;
double x21009 = x10991*x19496;
double x21010 = x10992*x19496;
double x21011 = x10807*x15110;
double x21012 = x17051*x21011;
double x21013 = x20882*x327;
double x21014 = p8_i_dot*x10747;
double x21015 = x17051*x21014;
double x21016 = 18*x20941;
double x21017 = -x10922*x17126;
double x21018 = x10922*x17412;
double x21019 = x10807*x17024 + x21016 + x21017 + x21018;
double x21020 = x10*x2599;
double x21021 = -x129*x20731 + 12*x20900 + 16*x20908 + 6*x20920 + 6*x20942 + 6*x20943 - x20945*x327 - x20946*x327 - 18*x20972 + 16*x20973 - 18*x20994 - x21020*x593 + x21020*x623;
double x21022 = x10935*x19773 + x10987*x17126 + x10988*x17126 - x10991*x19505 - x10992*x19505 + x129*x20734 + x129*x20735 - x17049*x21011 - x17049*x21014 + x18704*x21002 - x18775*x21006 - x19505*x2601 + x20750 - x20880*x327;
double x21023 = x19834*x391;
double x21024 = -x12700*x1851;
double x21025 = x15138*x19;
double x21026 = x19838*x390;
double x21027 = x19834*x403;
double x21028 = x11046*x17063;
double x21029 = x17049*x2657;
double x21030 = -x17051*x2657 - x19901;
double x21031 = x10807*x20291;
double x21032 = 38*x19802;
double x21033 = x11173*x19496;
double x21034 = x11174*x19496;
double x21035 = x12700*x2663;
double x21036 = x1851*x18733;
double x21037 = -x19934;
double x21038 = x19913 + x21037;
double x21039 = -x19936;
double x21040 = x19940 + x21039;
double x21041 = x10*x2675;
double x21042 = x19866*x602;
double x21043 = x19834*x623 + x20873*x414 - x21041*x391 - 2*x21042;
double x21044 = -x11173*x19505 - x11174*x19505 + x15159*x19 + x15160*x19;
double x21045 = 4*p9_b_dt;
double x21046 = x18833*x21045;
double x21047 = x12700*x2553;
double x21048 = x14905*x1851;
double x21049 = x11177*x17051;
double x21050 = x11178*x17051;
double x21051 = x18833*x2675;
double x21052 = x17051*x2677;
double x21053 = x11131*x17051;
double x21054 = p9_b_dot_dt*x1858;
double x21055 = x18776*x21054;
double x21056 = x17426*x1881;
double x21057 = x1851*x18802;
double x21058 = x19536*x8862;
double x21059 = p8_b_dot_dt*x19861;
double x21060 = x19863*x602;
double x21061 = x1845*x20899;
double x21062 = x20907*x403;
double x21063 = x19838*x2617;
double x21064 = 4*x19890;
double x21065 = x19834*x609 - x19834*x933 + x19839*x391 + 2*x19894 + x20873*x391 - x21042 + x21059 + x21060 - x21061 - 3*x21062 - 3*x21063 + x21064;
double x21066 = x17049*x2677;
double x21067 = x11178*x17049;
double x21068 = x19523*x8862;
double x21069 = -x21068;
double x21070 = x11131*x17049 - x11177*x17049 - x15178*x19 - x15179*x19 - x15196*x19 - x15197*x19 + x18775*x21054 + x18834*x21045 + x18834*x2675 + x21066 - x21067 + x21069;
double x21071 = x18834*x2572;
double x21072 = p8_i*x1868;
double x21073 = x17049*x21072;
double x21074 = x15256*x17049;
double x21075 = p9_b_dot_dt*x286;
double x21076 = x18775*x21075;
double x21077 = x154*x20880;
double x21078 = x10933*x19608;
double x21079 = x10807*x2685;
double x21080 = x17049*x21079;
double x21081 = 3*x21067;
double x21082 = p8_b_dot_dt*x154;
double x21083 = x18834*x21082;
double x21084 = 5*x21066;
double x21085 = x19896*x286;
double x21086 = x20064*x8837;
double x21087 = x1868*x18769 + x1896*x20873 - 7*x19894 - 7*x19938 + 5*x20908 + 5*x20973 + x20989 - 5*x21042 - 3*x21059 - 3*x21060 - 5*x21061 + 7*x21062 + 7*x21063 - x21064;
double x21088 = -x21058;
double x21089 = x10933*x19588 + x15256*x17051 + x154*x20882 + x17051*x21072 - x17051*x21079 + x18776*x21075 - x18833*x21082 + x18833*x2572 - x19901*x286 - x19922*x8837 + x20991 + x21037 - 3*x21050 - 5*x21052 + x21088;
double x21090 = x11173*x17069;
double x21091 = x11174*x17069;
double x21092 = p9_i_dot*x10876;
double x21093 = x17049*x21092;
double x21094 = x18775*x8681;
double x21095 = x15270*x19;
double x21096 = x15271*x19;
double x21097 = x18834*x20981;
double x21098 = 4*x21066;
double x21099 = -x20911 - x20913;
double x21100 = p9_b_dt*x18769;
double x21101 = x1921*x20873 - x1923*x20899 - x19908 + x20906 + x20909 - 4*x21042 - 2*x21059 - 2*x21060 + 4*x21062 + 4*x21063 + 8*x21100;
double x21102 = x19883*x70;
double x21103 = p8_i_dot*x6;
double x21104 = x20915 + x20916;
double x21105 = -x19879 + x19971;
double x21106 = x11173*x17361 + x11174*x17361 + x17051*x21092 + x18776*x8681 - x18833*x20981 - x1892*x21103 - 4*x21052 - x21102*x2578 + x21104 + x21105;
double x21107 = x11173*x17412;
double x21108 = x11174*x17412;
double x21109 = p9_i_dot*x10747;
double x21110 = x17051*x21109;
double x21111 = p9_b_dot_dt*x327;
double x21112 = x18776*x21111;
double x21113 = x129*x20882;
double x21114 = x10933*x19496;
double x21115 = p8_b_dot_dt*x129;
double x21116 = x18833*x21115;
double x21117 = x19496*x2677;
double x21118 = x11177*x19496;
double x21119 = x11178*x19496;
double x21120 = x17415*x8862;
double x21121 = x19901*x327;
double x21122 = x19781*x8837;
double x21123 = -x1927*x20873 + 12*x19890 + 16*x19894 + 16*x19938 + x19969 - 6*x20908 + x21041*x414 - x21041*x623 + 6*x21042 + 6*x21059 + 6*x21060 - 16*x21062 - 16*x21063 - 18*x21100;
double x21124 = -x19953;
double x21125 = x10933*x19505 + x11173*x17126 + x11174*x17126 - x11177*x19505 - x11178*x19505 + x129*x20880 + x17049*x21109 - x17406*x8862 + x18775*x21111 - x18834*x21115 - x19505*x2677 - x19773*x8837 - x19896*x327 + x20894 + x21124;
double x21126 = 6*x19649;
double x21127 = x19657*x667;
double x21128 = -x12040*x2848;
double x21129 = x12314*x19;
double x21130 = q3_b_dot_dt*x18903;
double x21131 = x17417*x2839;
double x21132 = x17049*x2935;
double x21133 = -x17051*x2935 - x19710;
double x21134 = 18*x19649;
double x21135 = 10*x19646;
double x21136 = x17429*x2958;
double x21137 = q4_b_dt*x17063;
double x21138 = x19496*x6534;
double x21139 = x19496*x6535;
double x21140 = x2848*x6;
double x21141 = x21140*x721;
double x21142 = x12040*x2944;
double x21143 = -x19754;
double x21144 = x19726 + x21143;
double x21145 = q4_b_dt*x10;
double x21146 = x19657*x704;
double x21147 = -x18930*x2943 + x19657*x714 + x19723 - x19750 + x21145*x685 - x21146*x321;
double x21148 = x12358*x19 + x12360*x19 - x19505*x6534 - x19505*x6535 + x19730 + x19752;
double x21149 = -x17024*x2958;
double x21150 = 3*x19649;
double x21151 = q3_b_dt*x2910;
double x21152 = x17051*x21151;
double x21153 = x12351*x2848;
double x21154 = x12040*x2952;
double x21155 = x17051*x6541;
double x21156 = x17051*x6542;
double x21157 = x12357*x17051;
double x21158 = x12359*x17051;
double x21159 = x18980*x2962;
double x21160 = q3_i_dot*x2965;
double x21161 = x17051*x21160;
double x21162 = x12040*x2840;
double x21163 = x21140*x692;
double x21164 = 4*x19704;
double x21165 = x2856*x2968;
double x21166 = -x17049*x21165;
double x21167 = x17051*x21165;
double x21168 = x21164 + x21166 + x21167;
double x21169 = x10*x704;
double x21170 = x21169*x2856;
double x21171 = x19658*x2958;
double x21172 = x18903*x2943;
double x21173 = x18930*x2839 - x18978*x2962 - x19657*x4570 + x19657*x696 - x19658*x2965 - 4*x19714 + x19721*x321 + x21145*x667 + x21170 + x21171 - x21172;
double x21174 = x12359*x17049;
double x21175 = x17049*x6541;
double x21176 = x17049*x6542;
double x21177 = x12357*x17049 - x12390*x19 - x12391*x19 - x12412*x19 - x12413*x19 + x17049*x21151 + x17049*x21160 + x18979*x2962 + x21174 - x21175 - x21176;
double x21178 = x17361*x6534;
double x21179 = x17361*x6535;
double x21180 = x18980*x3017;
double x21181 = q3_i_dot*x3019;
double x21182 = x17051*x21181;
double x21183 = q4_i_dot*x19699;
double x21184 = x2998*x6;
double x21185 = q3_i_dot*x21184;
double x21186 = q3_b_dt*x3012;
double x21187 = x17051*x21186;
double x21188 = x2910*x2943;
double x21189 = x17051*x21188;
double x21190 = 2*x21169;
double x21191 = x21190*x2958;
double x21192 = q4_i_dot*x21184;
double x21193 = x21191 + x21192;
double x21194 = x18980*x3021;
double x21195 = x2964*x3023;
double x21196 = x17051*x21195;
double x21197 = -x21194 - x21196;
double x21198 = x21193 + x21197;
double x21199 = x12482*x18978;
double x21200 = -x17069*x6608;
double x21201 = x17361*x6608;
double x21202 = x21199 + x21200 + x21201;
double x21203 = x19709 + x19711;
double x21204 = q3_b_dt*x18978;
double x21205 = x18978*x3021;
double x21206 = x21169*x3019;
double x21207 = -x21205 - x21206;
double x21208 = x158*x21146 + x18903*x3021 - x18978*x3017 - x19658*x3019 + x19720 + x19722 - x21145*x3818 + 2*x21170 + 2*x21171 - 8*x21204 + x21207;
double x21209 = x12524*x19;
double x21210 = -x21209;
double x21211 = x18979*x3021;
double x21212 = x17049*x21195;
double x21213 = x21211 + x21212;
double x21214 = -x12478*x19 - x12479*x19 + x17049*x21181 - x17049*x21186 - x17049*x21188 + x17069*x6534 + x17069*x6535 + x18979*x3017 - x19727 - x19729 + x21210 + x21213;
double x21215 = q4_i*x6316;
double x21216 = x17051*x21215;
double x21217 = q3_i*x2978;
double x21218 = x17051*x21217;
double x21219 = x18980*x2980;
double x21220 = q3_i_dot*x2994;
double x21221 = x17051*x21220;
double x21222 = x12498*x19588;
double x21223 = q4_i_dot*x17051;
double x21224 = x21223*x2990;
double x21225 = 3*x21155;
double x21226 = 3*x21156;
double x21227 = q3_b_dt*x2983;
double x21228 = x17051*x21227;
double x21229 = 5*x21158;
double x21230 = x18905*x2980;
double x21231 = x19710*x286;
double x21232 = x21193 + x21210;
double x21233 = x18978*x2978;
double x21234 = q4_i*x2978;
double x21235 = x17049*x21234;
double x21236 = -x21235;
double x21237 = x17051*x21234;
double x21238 = x21233 + x21236 + x21237;
double x21239 = x18978*x2943;
double x21240 = x154*x21146 + x18903*x2980 - x18978*x2980 - x18978*x6316 - x19658*x2994 + x19721*x286 - x21145*x3792 - x21169*x2990 + 3*x21170 + 3*x21171 + 5*x21172 - 5*x21239;
double x21241 = q4_i_dot*x17049;
double x21242 = x12498*x19608 + x17049*x21215 + x17049*x21217 + x17049*x21220 - x17049*x21227 - x18904*x2980 + x18979*x2980 - x19728*x286 - 5*x21174 - 3*x21175 - 3*x21176 + x21241*x2990;
double x21243 = x158*x21137;
double x21244 = x17126*x6534;
double x21245 = x17126*x6535;
double x21246 = x18979*x3041;
double x21247 = x19769*x3042;
double x21248 = x12498*x19505;
double x21249 = x21241*x3043;
double x21250 = q3_b_dt*x3044;
double x21251 = x17049*x21250;
double x21252 = x12359*x19505;
double x21253 = x19505*x6541;
double x21254 = x19769*x6397;
double x21255 = x12598*x17049;
double x21256 = x18904*x3041;
double x21257 = x19728*x327;
double x21258 = -x12592*x18978;
double x21259 = -x17412*x6608;
double x21260 = x17126*x6608;
double x21261 = x21149 + x21258 + x21259 + x21260;
double x21262 = -x12591*x19658 - x129*x21146 - x18872*x2943 - x18903*x3041 + x18944*x2943 + x18978*x3041 + x19658*x3042 - x19721*x327 + x21145*x3836 + x21169*x3043 - 6*x21170 - 6*x21171 - x21191 + 18*x21204;
double x21263 = -x21192;
double x21264 = -x12359*x19496 + x12498*x19496 - x12598*x17051 - x17051*x21250 + x17412*x6534 + x17412*x6535 - x18905*x3041 + x18980*x3041 - x19496*x6541 - x19710*x327 + x19782*x3042 - x19782*x6397 + x21223*x3043 + x21263;
double x21265 = L*x21137;
double x21266 = x21145*x696;
double x21267 = -x12351*x2952;
double x21268 = x15306*x19;
double x21269 = q4_b_dot_dt*x18978;
double x21270 = x21145*x704;
double x21271 = x17063*x3021;
double x21272 = x17049*x3049;
double x21273 = x17049*x3050;
double x21274 = -x17051*x3049 - x17051*x3050;
double x21275 = x18572*x2958;
double x21276 = x18347*x6724;
double x21277 = q5_b_dt*x17063;
double x21278 = L*x21277;
double x21279 = x19496*x6852;
double x21280 = x19496*x6853;
double x21281 = x2952*x6;
double x21282 = x21281*x750;
double x21283 = x12351*x3060;
double x21284 = -x21237;
double x21285 = x21210 + x21284;
double x21286 = q5_b_dt*x10;
double x21287 = x10*x733;
double x21288 = x21287*x2964;
double x21289 = -x19005*x3059 + x21145*x743 + x21207 - x21233 + x21286*x714 - 2*x21288;
double x21290 = x15347*x19 + x15349*x19 - x19505*x6852 - x19505*x6853 + x21213 + x21235;
double x21291 = x17417*x6724;
double x21292 = -x21291;
double x21293 = q4_i*x3070;
double x21294 = x17051*x21293;
double x21295 = x15342*x2952;
double x21296 = x12351*x3068;
double x21297 = x17051*x6858;
double x21298 = x17051*x6859;
double x21299 = x17051*x6756;
double x21300 = x15348*x17051;
double x21301 = x19032*x2943;
double x21302 = x17051*x21301;
double x21303 = q5_b_dt*x3082;
double x21304 = x17051*x21303;
double x21305 = x12351*x2944;
double x21306 = x21281*x721;
double x21307 = 4*x21169;
double x21308 = x21307*x2958;
double x21309 = x2958*x3023;
double x21310 = -x17049*x21309;
double x21311 = x17051*x21309;
double x21312 = x21308 + x21310 + x21311;
double x21313 = x21287*x2958;
double x21314 = x21169*x6724;
double x21315 = x18978*x3059;
double x21316 = x19053*x2943;
double x21317 = x21286*x704;
double x21318 = -x1858*x21317 - x18978*x3070 + x19005*x2943 + x21145*x725 + x21190*x2964 + x21286*x696 - x21288 + x21313 + x21314 - x21315 - 3*x21316;
double x21319 = x15348*x17049;
double x21320 = x17049*x6858;
double x21321 = -x15377*x19 - x15378*x19 - x15402*x19 - x15403*x19 + x17049*x21293 + x17049*x21301 + x17049*x21303 + x17049*x6756 - x17049*x6859 + x21319 - x21320;
double x21322 = x17361*x6852;
double x21323 = x17361*x6853;
double x21324 = x2943*x3131;
double x21325 = x17051*x21324;
double x21326 = q5_b_dt*x3012;
double x21327 = x17051*x21326;
double x21328 = q5_i_dot*x21184;
double x21329 = x3111*x6;
double x21330 = q4_i_dot*x70;
double x21331 = x21329*x21330;
double x21332 = x15480*x17051;
double x21333 = 4*x21300;
double x21334 = q5_b_dot_dt*x3108;
double x21335 = x21287*x21334;
double x21336 = q5_i_dot*x70;
double x21337 = x21329*x21336;
double x21338 = x21335 + x21337;
double x21339 = x3059*x3131;
double x21340 = x17051*x21339;
double x21341 = x17051*x3102;
double x21342 = x158*x21341;
double x21343 = -x21340 - x21342;
double x21344 = x21338 + x21343;
double x21345 = q5_b_dt*x19053;
double x21346 = 8*x21345;
double x21347 = -x17069*x6922;
double x21348 = x17361*x6922;
double x21349 = x21346 + x21347 + x21348;
double x21350 = x21194 + x21196;
double x21351 = x19053*x3059;
double x21352 = 4*x21351;
double x21353 = x21286*x733;
double x21354 = x158*x21353;
double x21355 = -x21352 - x21354;
double x21356 = -x12482*x19053 - x158*x21317 - x19053*x3021 + x21169*x21334 + x21205 + x21206 - x21286*x4623 + 4*x21288 + 2*x21313 + 4*x21315 + x21355;
double x21357 = x15522*x19;
double x21358 = -x21357;
double x21359 = x17049*x21339;
double x21360 = x17049*x3102;
double x21361 = x158*x21360;
double x21362 = x21359 + x21361;
double x21363 = -x15472*x19 - x15473*x19 - x15480*x17049 + x17049*x21324 + x17049*x21326 + x17069*x6852 + x17069*x6853 - x21211 - x21212 - 4*x21319 + x21358 + x21362;
double x21364 = q5_i*x2978;
double x21365 = x17051*x21364;
double x21366 = 12*x6853;
double x21367 = x17051*x21366;
double x21368 = 7*x2943;
double x21369 = x19055*x21368;
double x21370 = q5_b_dt*x3106;
double x21371 = x17051*x21370;
double x21372 = x19055*x3100;
double x21373 = x154*x21341;
double x21374 = 3*x21297;
double x21375 = x21223*x6831;
double x21376 = q5_i_dot*x2990;
double x21377 = x17051*x21376;
double x21378 = x18980*x3100;
double x21379 = 7*x12498;
double x21380 = x17051*x21379;
double x21381 = x21223*x2994;
double x21382 = x21338 + x21358;
double x21383 = x19053*x6953;
double x21384 = q5_i*x6953;
double x21385 = x17049*x21384;
double x21386 = -x21385;
double x21387 = x17051*x21384;
double x21388 = x21383 + x21386 + x21387;
double x21389 = -x154*x21353 - x19053*x2978 - x19053*x3100 + x21169*x2994 + 7*x21239 - x21286*x4597 + 5*x21288 + 3*x21313 + 3*x21314 + 5*x21315 - 7*x21316 - x21317*x286;
double x21390 = x154*x21360 + x17049*x21364 + x17049*x21366 + x17049*x21370 - x17049*x21376 - x17049*x21379 - x18979*x3100 + x19054*x21368 + x19054*x3100 - x21241*x2994 - x21241*x6831 - 3*x21320;
double x21391 = x158*x21277;
double x21392 = x17126*x6852;
double x21393 = x17126*x6853;
double x21394 = 16*x2943;
double x21395 = x19054*x21394;
double x21396 = q5_b_dt*x3151;
double x21397 = x17049*x21396;
double x21398 = x15587*x19505;
double x21399 = x129*x21360;
double x21400 = x19505*x6756;
double x21401 = x15348*x19505;
double x21402 = q5_i_dot*x6397;
double x21403 = x17049*x21402;
double x21404 = x19505*x6859;
double x21405 = x21241*x3153;
double x21406 = x12498*x19773;
double x21407 = x21241*x3042;
double x21408 = -18*x21345;
double x21409 = -x17412*x6922;
double x21410 = x17126*x6922;
double x21411 = -x17024*x6724 + x21408 + x21409 + x21410;
double x21412 = x12592*x19053 + x129*x21353 - x18944*x3059 + x19019*x3059 - x21169*x3042 - x21169*x3153 - 16*x21239 + x21286*x4639 - 6*x21288 - 6*x21313 - 6*x21314 + 16*x21316 + x21317*x327 - x21335;
double x21413 = -x21337;
double x21414 = -x12498*x19781 + x129*x21341 - x15348*x19496 + x15587*x19496 + x17051*x21396 - x17051*x21402 + x17412*x6852 + x17412*x6853 + x19055*x21394 - x19496*x6756 - x19496*x6859 - x21223*x3042 - x21223*x3153 + x21413;
double x21415 = x21286*x725;
double x21416 = -x15342*x3068;
double x21417 = x15613*x19;
double x21418 = q5_b_dot_dt*x19053;
double x21419 = x20175*x3059;
double x21420 = x17049*x3157;
double x21421 = -x17051*x3157 - x21341;
double x21422 = x20291*x6724;
double x21423 = x17063*x3180;
double x21424 = 10*x21423;
double x21425 = q6_b_dt*x17063;
double x21426 = L*x21425;
double x21427 = x19496*x7162;
double x21428 = x19496*x7163;
double x21429 = x3068*x6;
double x21430 = x21429*x779;
double x21431 = x15342*x3166;
double x21432 = -x21387;
double x21433 = x21358 + x21432;
double x21434 = q6_b_dt*x10;
double x21435 = x21286*x762;
double x21436 = -x19080*x3165 + x21286*x772 + x21355 - x21383 + x21434*x743 - x21435*x321;
double x21437 = x15653*x19 + x15655*x19 - x19505*x7162 - x19505*x7163 + x21362 + x21385;
double x21438 = 4*x21423;
double x21439 = -x21438;
double x21440 = q5_b_dt*x3131;
double x21441 = x17051*x21440;
double x21442 = x15646*x3068;
double x21443 = x15342*x3174;
double x21444 = x17051*x7168;
double x21445 = x17051*x7169;
double x21446 = x15652*x17051;
double x21447 = x15654*x17051;
double x21448 = x19107*x3059;
double x21449 = x17051*x21448;
double x21450 = 3*x7120;
double x21451 = x17051*x21450;
double x21452 = x15342*x3060;
double x21453 = x21429*x750;
double x21454 = x15754*x21287;
double x21455 = q5_i_dot*x15754;
double x21456 = -x17049*x21455;
double x21457 = x17051*x21455;
double x21458 = x21454 + x21456 + x21457;
double x21459 = x10*x762;
double x21460 = x21459*x6724;
double x21461 = x21287*x3180;
double x21462 = x19053*x3165;
double x21463 = x19128*x3059;
double x21464 = x21287*x3186;
double x21465 = x19080*x3059 - x21286*x4749 + x21286*x754 - 4*x21345 + x21353*x321 + x21434*x725 + x21460 + x21461 - x21462 - 3*x21463 - 3*x21464;
double x21466 = x15654*x17049;
double x21467 = x17049*x7169;
double x21468 = x15652*x17049 - x15682*x19 - x15683*x19 - x15704*x19 - x15705*x19 + x17049*x21440 + x17049*x21448 + x17049*x21450 - x17049*x7168 + x21466 - x21467;
double x21469 = x17361*x7162;
double x21470 = x17361*x7163;
double x21471 = 4*x3059;
double x21472 = x19130*x21471;
double x21473 = q5_i_dot*x3241;
double x21474 = x17051*x21473;
double x21475 = q6_i_dot*x70;
double x21476 = x21329*x21475;
double x21477 = x3220*x6;
double x21478 = q5_i_dot*x21477;
double x21479 = q5_b_dt*x3234;
double x21480 = x17051*x21479;
double x21481 = x3131*x3165;
double x21482 = x17051*x21481;
double x21483 = 2*x21459;
double x21484 = x21483*x3180;
double x21485 = q6_i_dot*x21477;
double x21486 = x21484 + x21485;
double x21487 = x15791*x19536;
double x21488 = q6_i_dot*x3241;
double x21489 = x17051*x21488;
double x21490 = -x21487 - x21489;
double x21491 = x21486 + x21490;
double x21492 = x15775*x19128;
double x21493 = -x17069*x7231;
double x21494 = x17361*x7231;
double x21495 = x21492 + x21493 + x21494;
double x21496 = x21340 + x21342;
double x21497 = q5_b_dt*x19128;
double x21498 = x19128*x3165;
double x21499 = 4*x21498;
double x21500 = x21459*x3241;
double x21501 = -x21499 - x21500;
double x21502 = x158*x21435 - x21287*x3241 + x21334*x21459 + x21352 + x21354 - x21434*x4714 + 2*x21461 + 4*x21462 - 4*x21463 - 8*x21497 + x21501;
double x21503 = x15818*x19;
double x21504 = -x21503;
double x21505 = x15791*x19523;
double x21506 = x17049*x21488;
double x21507 = x21505 + x21506;
double x21508 = -x15771*x19 - x15772*x19 + x17049*x21473 - x17049*x21479 - x17049*x21481 + x17069*x7162 + x17069*x7163 + x19129*x21471 - x21359 - x21361 + x21504 + x21507;
double x21509 = q6_i*x6953;
double x21510 = x17051*x21509;
double x21511 = q5_i*x3201;
double x21512 = x17051*x21511;
double x21513 = 7*x3059;
double x21514 = x19130*x21513;
double x21515 = q5_i_dot*x3216;
double x21516 = x17051*x21515;
double x21517 = x15791*x19588;
double x21518 = x19588*x7199;
double x21519 = q6_i_dot*x6831;
double x21520 = x17051*x21519;
double x21521 = 3*x21445;
double x21522 = q5_b_dt*x3205;
double x21523 = x17051*x21522;
double x21524 = 5*x21447;
double x21525 = 7*x15587;
double x21526 = x17051*x21525;
double x21527 = x21341*x286;
double x21528 = x21486 + x21504;
double x21529 = x19128*x3201;
double x21530 = q6_i*x3201;
double x21531 = x17049*x21530;
double x21532 = -x21531;
double x21533 = x17051*x21530;
double x21534 = x21529 + x21532 + x21533;
double x21535 = x21459*x3186;
double x21536 = x154*x21435 - x19128*x6953 - x21287*x3216 + 7*x21351 + x21353*x286 - x21434*x4688 + 3*x21460 + 3*x21461 + 5*x21462 - 7*x21463 - 5*x21498 - 5*x21535;
double x21537 = x15791*x19608 + x17049*x21509 + x17049*x21511 + x17049*x21515 - x17049*x21519 - x17049*x21522 - x17049*x21525 + x19129*x21513 + x19608*x7199 - x21360*x286 - 5*x21466 - 3*x21467;
double x21538 = x158*x21425;
double x21539 = x17126*x7162;
double x21540 = x17126*x7163;
double x21541 = 16*x3059;
double x21542 = x19129*x21541;
double x21543 = x19773*x7120;
double x21544 = x19129*x3260;
double x21545 = x19505*x7199;
double x21546 = q5_b_dt*x3261;
double x21547 = x17049*x21546;
double x21548 = x19054*x3260;
double x21549 = x19505*x7168;
double x21550 = x19505*x7169;
double x21551 = x3262*x6724;
double x21552 = x17049*x21551;
double x21553 = x15587*x19773;
double x21554 = x21360*x327;
double x21555 = -x15885*x19128;
double x21556 = -x17412*x7231;
double x21557 = x17126*x7231;
double x21558 = -x17024*x3180 + x21555 + x21556 + x21557;
double x21559 = -x129*x21435 - x19019*x3165 + x19094*x3165 - 12*x21287*x6724 - 16*x21351 - x21353*x327 + x21434*x4730 - 6*x21460 - 6*x21461 + 16*x21463 + 16*x21464 - x21484 + 18*x21497 + 6*x21535;
double x21560 = -x21485;
double x21561 = -x15587*x19781 - x17051*x21546 - x17051*x21551 + x17412*x7162 + x17412*x7163 - x19055*x3260 + x19130*x21541 + x19130*x3260 - x19496*x7168 - x19496*x7169 + x19496*x7199 + x19781*x7120 - x21341*x327 + x21560;
double x21562 = x21425*x3943;
double x21563 = x21434*x754;
double x21564 = -x15646*x3174;
double x21565 = x15912*x19;
double x21566 = q6_b_dot_dt*x19128;
double x21567 = x21434*x762;
double x21568 = x17429*x3165;
double x21569 = x17049*x3266;
double x21570 = x17049*x3267;
double x21571 = -x17051*x3266 - x17051*x3267;
double x21572 = 22*x21423;
double x21573 = x17063*x7340;
double x21574 = 12*x21573;
double x21575 = q7_b_dt*x17063;
double x21576 = L*x21575;
double x21577 = x19496*x7481;
double x21578 = x19496*x7482;
double x21579 = x3174*x6;
double x21580 = x21579*x808;
double x21581 = x15646*x3277;
double x21582 = -x21533;
double x21583 = x21504 + x21582;
double x21584 = q7_b_dt*x10;
double x21585 = x10*x791;
double x21586 = x21585*x3186;
double x21587 = -x19155*x3276 + x21434*x801 + x21501 - x21529 + x21584*x772 - 2*x21586;
double x21588 = x15951*x19 + x15953*x19 - x19505*x7481 - x19505*x7482 + x21507 + x21531;
double x21589 = x20175*x7340;
double x21590 = -x21589;
double x21591 = q6_i*x3287;
double x21592 = x17051*x21591;
double x21593 = x15946*x3174;
double x21594 = x15646*x3285;
double x21595 = x17051*x7487;
double x21596 = x17051*x7488;
double x21597 = x17051*x7373;
double x21598 = x15952*x17051;
double x21599 = x19182*x3165;
double x21600 = x17051*x21599;
double x21601 = q7_b_dt*x3299;
double x21602 = x17051*x21601;
double x21603 = x15646*x3166;
double x21604 = x21579*x779;
double x21605 = x21459*x3302;
double x21606 = q6_i_dot*x3302;
double x21607 = -x17049*x21606;
double x21608 = x17051*x21606;
double x21609 = x21605 + x21607 + x21608;
double x21610 = x21585*x3180;
double x21611 = x21459*x7340;
double x21612 = x19128*x3276;
double x21613 = x19203*x3165;
double x21614 = x21584*x762;
double x21615 = -x1858*x21614 - x19128*x3287 + x19155*x3165 + x21434*x783 + x21483*x3186 + x21584*x754 - x21586 + x21610 + x21611 - x21612 - 3*x21613;
double x21616 = x17049*x7373;
double x21617 = x15952*x17049;
double x21618 = x17049*x7487;
double x21619 = x17049*x7488;
double x21620 = -x15983*x19 - x15984*x19 - x16008*x19 - x16009*x19 + x17049*x21591 + x17049*x21599 + x17049*x21601 + x21616 + x21617 - x21618 - x21619;
double x21621 = x17361*x7481;
double x21622 = x17361*x7482;
double x21623 = x3165*x3347;
double x21624 = x17051*x21623;
double x21625 = q7_b_dt*x3234;
double x21626 = x17051*x21625;
double x21627 = q7_i_dot*x21477;
double x21628 = x3328*x6;
double x21629 = x21475*x21628;
double x21630 = x16074*x17051;
double x21631 = 4*x21598;
double x21632 = q7_b_dot_dt*x3108;
double x21633 = x21585*x21632;
double x21634 = q7_i_dot*x70;
double x21635 = x21628*x21634;
double x21636 = x21633 + x21635;
double x21637 = x3276*x3347;
double x21638 = x17051*x21637;
double x21639 = x17051*x3320;
double x21640 = x158*x21639;
double x21641 = -x21638 - x21640;
double x21642 = x21636 + x21641;
double x21643 = q7_b_dt*x19203;
double x21644 = 8*x21643;
double x21645 = -x17069*x7551;
double x21646 = x17361*x7551;
double x21647 = x21644 + x21645 + x21646;
double x21648 = x21487 + x21489;
double x21649 = x19203*x3276;
double x21650 = 4*x21649;
double x21651 = x21584*x791;
double x21652 = x158*x21651;
double x21653 = -x21650 - x21652;
double x21654 = -x15775*x19203 - x158*x21614 + x21459*x21632 + x21499 + x21500 - x21584*x4802 + 4*x21586 + 2*x21610 + 4*x21612 - 4*x21613 + x21653;
double x21655 = x16115*x19;
double x21656 = -x21655;
double x21657 = x17049*x21637;
double x21658 = x17049*x3320;
double x21659 = x158*x21658;
double x21660 = x21657 + x21659;
double x21661 = -x16066*x19 - x16067*x19 - x16074*x17049 + x17049*x21623 + x17049*x21625 + x17069*x7481 + x17069*x7482 - x21505 - x21506 - 4*x21617 + x21656 + x21660;
double x21662 = q7_i*x3201;
double x21663 = x17051*x21662;
double x21664 = 12*x7482;
double x21665 = x17051*x21664;
double x21666 = 7*x3165;
double x21667 = x19205*x21666;
double x21668 = q7_b_dt*x3324;
double x21669 = x17051*x21668;
double x21670 = x16179*x19588;
double x21671 = x154*x21639;
double x21672 = 3*x21595;
double x21673 = 3*x21596;
double x21674 = 5*x21597;
double x21675 = 5*x21598;
double x21676 = 7*x15791;
double x21677 = x17051*x21676;
double x21678 = x17051*x7563;
double x21679 = x21636 + x21656;
double x21680 = x19203*x7577;
double x21681 = q7_i*x7577;
double x21682 = x17049*x21681;
double x21683 = -x21682;
double x21684 = x17051*x21681;
double x21685 = x21680 + x21683 + x21684;
double x21686 = -x154*x21651 - x19203*x3201 + x21459*x3216 + 7*x21498 - x21584*x4776 + 5*x21586 + 3*x21610 + 3*x21611 + 5*x21612 - 7*x21613 - x21614*x286 - 5*x21649;
double x21687 = x154*x21658 + x16179*x19608 + x17049*x21662 + x17049*x21664 + x17049*x21668 - x17049*x21676 - x17049*x7563 + x19204*x21666 - 5*x21616 - 5*x21617 - 3*x21618 - 3*x21619;
double x21688 = x158*x21575;
double x21689 = x17126*x7481;
double x21690 = x17126*x7482;
double x21691 = 16*x3165;
double x21692 = x19204*x21691;
double x21693 = q7_b_dt*x3367;
double x21694 = x17049*x21693;
double x21695 = x16179*x19505;
double x21696 = x129*x21658;
double x21697 = x19505*x7373;
double x21698 = x15952*x19505;
double x21699 = x19505*x7487;
double x21700 = x19505*x7488;
double x21701 = q6_i_dot*x3368;
double x21702 = x17049*x21701;
double x21703 = x15791*x19773;
double x21704 = x19773*x7199;
double x21705 = -18*x21643;
double x21706 = -x17412*x7551;
double x21707 = x17126*x7551;
double x21708 = -x17024*x7340 + x21705 + x21706 + x21707;
double x21709 = x129*x21651 + x15885*x19203 - x19094*x3276 + x19169*x3276 - x21459*x3368 - 16*x21498 - 16*x21535 + x21584*x4818 - 6*x21586 - 6*x21610 - 6*x21611 + 16*x21613 + x21614*x327 - x21633;
double x21710 = -x21635;
double x21711 = x129*x21639 - x15791*x19781 - x15952*x19496 + x16179*x19496 + x17051*x21693 - x17051*x21701 + x17412*x7481 + x17412*x7482 + x19205*x21691 - x19496*x7373 - x19496*x7487 - x19496*x7488 - x19781*x7199 + x21710;
double x21712 = x21584*x783;
double x21713 = -x15946*x3285;
double x21714 = x16205*x19;
double x21715 = q7_b_dot_dt*x19203;
double x21716 = x20477*x3276;
double x21717 = x17049*x3372;
double x21718 = -x17051*x3372 - x21639;
double x21719 = 26*x21573;
double x21720 = x17063*x3395;
double x21721 = 14*x21720;
double x21722 = q8_b_dt*x17063;
double x21723 = L*x21722;
double x21724 = x19496*x7788;
double x21725 = x19496*x7789;
double x21726 = x3285*x6;
double x21727 = x21726*x837;
double x21728 = x15946*x3381;
double x21729 = -x21684;
double x21730 = x21656 + x21729;
double x21731 = q8_b_dt*x10;
double x21732 = x21584*x820;
double x21733 = -x19230*x3380 + x21584*x830 + x21653 - x21680 + x21731*x801 - x21732*x321;
double x21734 = x16245*x19 + x16247*x19 - x19505*x7788 - x19505*x7789 + x21660 + x21682;
double x21735 = 6*x21720;
double x21736 = -x21735;
double x21737 = q7_b_dt*x3347;
double x21738 = x17051*x21737;
double x21739 = x16238*x3285;
double x21740 = x15946*x3389;
double x21741 = x17051*x7794;
double x21742 = x17051*x7795;
double x21743 = x16244*x17051;
double x21744 = x16246*x17051;
double x21745 = x19257*x3276;
double x21746 = x17051*x21745;
double x21747 = q7_i_dot*x17051;
double x21748 = x21747*x3402;
double x21749 = x15946*x3277;
double x21750 = x21726*x808;
double x21751 = x16341*x21585;
double x21752 = q7_i_dot*x17049;
double x21753 = -x16341*x21752;
double x21754 = x16341*x21747;
double x21755 = x21751 + x21753 + x21754;
double x21756 = x10*x820;
double x21757 = x21756*x7340;
double x21758 = x21585*x3395;
double x21759 = x19203*x3380;
double x21760 = x19278*x3276;
double x21761 = x19230*x3276 - x21584*x4924 + x21584*x812 - x21585*x3402 - 4*x21643 + x21651*x321 + x21731*x783 + x21757 + x21758 - x21759 - 3*x21760;
double x21762 = x16246*x17049;
double x21763 = x17049*x7794;
double x21764 = x17049*x7795;
double x21765 = x16244*x17049 - x16274*x19 - x16275*x19 - x16295*x19 - x16296*x19 + x17049*x21737 + x17049*x21745 + x21752*x3402 + x21762 - x21763 - x21764;
double x21766 = x17361*x7788;
double x21767 = x17361*x7789;
double x21768 = 4*x3276;
double x21769 = x19280*x21768;
double x21770 = x21747*x3457;
double x21771 = q8_i_dot*x70;
double x21772 = x21628*x21771;
double x21773 = x3436*x6;
double x21774 = q7_i_dot*x21773;
double x21775 = q7_b_dt*x3450;
double x21776 = x17051*x21775;
double x21777 = x3347*x3380;
double x21778 = x17051*x21777;
double x21779 = 2*x21756;
double x21780 = x21779*x3395;
double x21781 = q8_i_dot*x21773;
double x21782 = x21780 + x21781;
double x21783 = x16378*x19536;
double x21784 = x3401*x3460;
double x21785 = x17051*x21784;
double x21786 = -x21783 - x21785;
double x21787 = x21782 + x21786;
double x21788 = x16362*x19278;
double x21789 = -x17069*x7860;
double x21790 = x17361*x7860;
double x21791 = x21788 + x21789 + x21790;
double x21792 = x21638 + x21640;
double x21793 = q7_b_dt*x19278;
double x21794 = x19278*x3380;
double x21795 = 4*x21794;
double x21796 = x21756*x3457;
double x21797 = -x21795 - x21796;
double x21798 = x158*x21732 - x21585*x3457 + x21632*x21756 + x21650 + x21652 - x21731*x4890 + 2*x21758 + 4*x21759 - 4*x21760 - 8*x21793 + x21797;
double x21799 = x16405*x19;
double x21800 = -x21799;
double x21801 = x16378*x19523;
double x21802 = x17049*x21784;
double x21803 = x21801 + x21802;
double x21804 = -x16358*x19 - x16359*x19 - x17049*x21775 - x17049*x21777 + x17069*x7788 + x17069*x7789 + x19279*x21768 - x21657 - x21659 + x21752*x3457 + x21800 + x21803;
double x21805 = q8_i*x7577;
double x21806 = x17051*x21805;
double x21807 = q7_i*x3416;
double x21808 = x17051*x21807;
double x21809 = x19280*x3418;
double x21810 = x21747*x3432;
double x21811 = x16378*x19588;
double x21812 = x19588*x7828;
double x21813 = 3*x21741;
double x21814 = 3*x21742;
double x21815 = q7_b_dt*x3421;
double x21816 = x17051*x21815;
double x21817 = 5*x21744;
double x21818 = x19205*x3418;
double x21819 = x21639*x286;
double x21820 = x21782 + x21800;
double x21821 = x19278*x3416;
double x21822 = q8_i*x3416;
double x21823 = x17049*x21822;
double x21824 = -x21823;
double x21825 = x17051*x21822;
double x21826 = x21821 + x21824 + x21825;
double x21827 = x21756*x3401;
double x21828 = x154*x21732 + x19203*x3418 - x19278*x3418 - x19278*x7577 - x21585*x3432 + x21651*x286 - x21731*x4864 + 3*x21757 + 3*x21758 + 5*x21759 - 5*x21794 - 5*x21827;
double x21829 = x16378*x19608 + x17049*x21805 + x17049*x21807 - x17049*x21815 - x19204*x3418 + x19279*x3418 + x19608*x7828 - x21658*x286 + x21752*x3432 - 5*x21762 - 3*x21763 - 3*x21764;
double x21830 = x158*x21722;
double x21831 = x17126*x7788;
double x21832 = x17126*x7789;
double x21833 = 16*x3276;
double x21834 = x19279*x21833;
double x21835 = x21752*x3478;
double x21836 = x16378*x19505;
double x21837 = x19505*x7828;
double x21838 = q7_b_dt*x3479;
double x21839 = x17049*x21838;
double x21840 = x16246*x19505;
double x21841 = x19505*x7794;
double x21842 = x21752*x7773;
double x21843 = x16476*x17049;
double x21844 = 16*x16179;
double x21845 = x17049*x21844;
double x21846 = x21658*x327;
double x21847 = -x16470*x19278;
double x21848 = -x17412*x7860;
double x21849 = x17126*x7860;
double x21850 = -x17024*x3395 + x21847 + x21848 + x21849;
double x21851 = -x129*x21732 - x19169*x3380 + x19244*x3380 + x21585*x3478 - x21585*x7341 - 16*x21649 - x21651*x327 + x21731*x4906 - 6*x21757 - 6*x21758 + 16*x21760 - x21780 + 18*x21793 + 6*x21827;
double x21852 = -x21781;
double x21853 = -x16246*x19496 + x16378*x19496 - x16476*x17051 - x17051*x21838 - x17051*x21844 + x17412*x7788 + x17412*x7789 + x19280*x21833 - x19496*x7794 + x19496*x7828 - x21639*x327 + x21747*x3478 - x21747*x7773 + x21852;
double x21854 = x21731*x812;
double x21855 = -x16238*x3389;
double x21856 = x16500*x19;
double x21857 = q8_b_dot_dt*x19278;
double x21858 = x21731*x820;
double x21859 = x18347*x3380;
double x21860 = x17049*x3484;
double x21861 = x17049*x3485;
double x21862 = -x17051*x3484 - x17051*x3485;
double x21863 = 30*x21720;
double x21864 = x17063*x7975;
double x21865 = 16*x21864;
double x21866 = q9_b_dt*x17063;
double x21867 = x19496*x8113;
double x21868 = x19496*x8114;
double x21869 = x3389*x6;
double x21870 = x21869*x866;
double x21871 = x16238*x3495;
double x21872 = -x21825;
double x21873 = x21800 + x21872;
double x21874 = q9_b_dt*x10;
double x21875 = x10*x849;
double x21876 = x21875*x3401;
double x21877 = -x19305*x3494 + x21731*x859 + x21797 - x21821 + x21874*x830 - 2*x21876;
double x21878 = x16540*x19 + x16542*x19 - x19505*x8113 - x19505*x8114 + x21803 + x21823;
double x21879 = x20477*x7975;
double x21880 = q8_i*x3506;
double x21881 = x17051*x21880;
double x21882 = x16535*x3389;
double x21883 = x16238*x3503;
double x21884 = x17051*x8120;
double x21885 = x17051*x8121;
double x21886 = x17051*x8007;
double x21887 = x16541*x17051;
double x21888 = x19325*x3380;
double x21889 = x17051*x21888;
double x21890 = q9_b_dt*x17051;
double x21891 = x21890*x3518;
double x21892 = x16238*x3381;
double x21893 = x21869*x837;
double x21894 = 4*x3395;
double x21895 = x21756*x21894;
double x21896 = x3395*x3460;
double x21897 = -x17049*x21896;
double x21898 = x17051*x21896;
double x21899 = x21895 + x21897 + x21898;
double x21900 = x21875*x3395;
double x21901 = x21756*x7975;
double x21902 = x19278*x3494;
double x21903 = x19352*x3380;
double x21904 = x21874*x820;
double x21905 = -x1858*x21904 - x19278*x3506 + x19305*x3380 + x21731*x841 + x21779*x3401 + x21874*x812 - x21876 + x21900 + x21901 - x21902 - 3*x21903;
double x21906 = x17049*x8007;
double x21907 = x16541*x17049;
double x21908 = x17049*x8120;
double x21909 = x17049*x8121;
double x21910 = q9_b_dt*x17049;
double x21911 = -x16568*x19 - x16569*x19 - x16593*x19 - x16594*x19 + x17049*x21880 + x17049*x21888 + x21906 + x21907 - x21908 - x21909 + x21910*x3518;
double x21912 = x17361*x8113;
double x21913 = x17361*x8114;
double x21914 = x17361*x8184;
double x21915 = 4*x3380;
double x21916 = x19359*x21915;
double x21917 = x21890*x3450;
double x21918 = q9_i_dot*x21773;
double x21919 = x3555*x6;
double x21920 = x21771*x21919;
double x21921 = x17051*x8117;
double x21922 = 4*x21887;
double x21923 = 4*x16668;
double x21924 = x17051*x21923;
double x21925 = -x21924;
double x21926 = x17051*x3538;
double x21927 = x158*x21926;
double x21928 = -x21927;
double x21929 = 4*x19352;
double x21930 = x21929*x3494;
double x21931 = x21874*x849;
double x21932 = x158*x21931;
double x21933 = -x21930 - x21932;
double x21934 = x21925 + x21928 + x21933;
double x21935 = x16697*x19;
double x21936 = -x21935;
double x21937 = x17049*x21923;
double x21938 = x17049*x3538;
double x21939 = x158*x21938;
double x21940 = x21937 + x21939;
double x21941 = x21936 + x21940;
double x21942 = q9_b_dot_dt*x3108;
double x21943 = x21875*x21942;
double x21944 = q9_i_dot*x70;
double x21945 = x21919*x21944;
double x21946 = x21943 + x21945;
double x21947 = x21783 + x21785;
double x21948 = q9_b_dt*x19352;
double x21949 = 8*x21948;
double x21950 = -x158*x21904 - x16362*x19352 + x21756*x21942 + x21795 + x21796 - x21874*x4977 + 4*x21876 + 2*x21900 + 4*x21902 - x21929*x3380 + x21949;
double x21951 = x17069*x8184;
double x21952 = -x21951;
double x21953 = -x16648*x19 - x16650*x19 - x17049*x8117 + x17069*x8113 + x17069*x8114 + x19361*x21915 - x21801 - x21802 - 4*x21907 + x21910*x3450 + x21952;
double x21954 = q9_i*x8211;
double x21955 = x17049*x21954;
double x21956 = -x21955;
double x21957 = q9_i*x3416;
double x21958 = x17051*x21957;
double x21959 = 12*x8114;
double x21960 = x17051*x21959;
double x21961 = 7*x3380;
double x21962 = x19359*x21961;
double x21963 = x21890*x3542;
double x21964 = 5*x16668;
double x21965 = x17051*x21964;
double x21966 = x154*x21926;
double x21967 = 3*x21884;
double x21968 = 3*x21885;
double x21969 = 5*x21886;
double x21970 = 5*x21887;
double x21971 = 7*x16378;
double x21972 = x17051*x21971;
double x21973 = q8_i_dot*x3432;
double x21974 = x17051*x21973;
double x21975 = x19352*x8211;
double x21976 = x17051*x21954;
double x21977 = x21975 + x21976;
double x21978 = -x154*x21931 - x16733*x19352 - x19352*x3416 + x21756*x3432 + 7*x21794 - x21874*x4951 + 5*x21876 + 3*x21900 + 3*x21901 + 5*x21902 - 7*x21903 - x21904*x286;
double x21979 = x154*x21938 + x17049*x21957 + x17049*x21959 + x17049*x21964 - x17049*x21971 - x17049*x21973 + x19361*x21961 - 5*x21906 - 5*x21907 - 3*x21908 - 3*x21909 + x21910*x3542 + x21936;
double x21980 = x158*x21866;
double x21981 = x17024*x7975;
double x21982 = x17126*x8113;
double x21983 = x17126*x8114;
double x21984 = x17126*x8184;
double x21985 = 16*x3380;
double x21986 = x19361*x21985;
double x21987 = x21910*x3583;
double x21988 = x16668*x19505;
double x21989 = x129*x21938;
double x21990 = 6*x21906;
double x21991 = 6*x21907;
double x21992 = q9_i_dot*x7773;
double x21993 = x17049*x21992;
double x21994 = 6*x21909;
double x21995 = q8_i_dot*x17049;
double x21996 = x21995*x3584;
double x21997 = 16*x16378;
double x21998 = x17049*x21997;
double x21999 = x21995*x3478;
double x22000 = -x21945;
double x22001 = -x21943;
double x22002 = x21935 + x22001;
double x22003 = x22000 + x22002;
double x22004 = 18*x21948;
double x22005 = x129*x21931 + x16470*x19352 - x19244*x3494 + x19321*x3494 - x21756*x3478 - x21756*x3584 - 16*x21794 + x21874*x4993 - 6*x21876 - 6*x21900 - 6*x21901 + 16*x21903 + x21904*x327 - x22004;
double x22006 = x17412*x8184;
double x22007 = -x22006;
double x22008 = q8_i_dot*x17051;
double x22009 = x129*x21926 + x16668*x19496 - x17051*x21992 - x17051*x21997 + x17412*x8113 + x17412*x8114 + x19359*x21985 - 6*x21885 - 6*x21886 - 6*x21887 + x21890*x3583 + x22007 - x22008*x3478 - x22008*x3584;
double x22010 = x21874*x841;
double x22011 = -x16535*x3503;
double x22012 = x16790*x19;
double x22013 = q9_b_dot_dt*x19352;
double x22014 = x20775*x3494;
double x22015 = x17049*x3588;
double x22016 = -x17051*x3588 - x21926;
double x22017 = q10_b_dt*x17063;
double x22018 = x22017*x8287;
double x22019 = x17063*x3605;
double x22020 = 18*x22019;
double x22021 = 34*x21864;
double x22022 = q9_i*x3595;
double x22023 = x17049*x22022;
double x22024 = 6*x8420;
double x22025 = x17049*x22024;
double x22026 = x16815*x19;
double x22027 = x16817*x19;
double x22028 = x21956 + x22000;
double x22029 = -x21937 - x21939;
double x22030 = q10_b_dt*x10;
double x22031 = c*x21874;
double x22032 = x22031*x872;
double x22033 = x19373*x871 + x21930 + x21932 - x22030*x859 - x22031*x877 + 2*x22032;
double x22034 = x3503*x6;
double x22035 = x21924 + x21927;
double x22036 = x16535*x3597 - x17051*x22022 - x17051*x22024 + x22034*x875 + x22035;
double x22037 = x22017*x8342;
double x22038 = 8*x22019;
double x22039 = q9_i*x3614;
double x22040 = x17049*x22039;
double x22041 = x16843*x19;
double x22042 = x16844*x19;
double x22043 = x17049*x3663;
double x22044 = x17049*x8427;
double x22045 = x16814*x17049;
double x22046 = x16816*x17049;
double x22047 = q10_b_dt*x3619;
double x22048 = x17049*x22047;
double x22049 = x17049*x3621;
double x22050 = x16862*x19;
double x22051 = x16863*x19;
double x22052 = -x16894*x21875;
double x22053 = q9_i_dot*x16894;
double x22054 = -x17051*x22053;
double x22055 = x17049*x22053;
double x22056 = x22052 + x22054 + x22055;
double x22057 = x19352*x871;
double x22058 = x21875*x3605;
double x22059 = x19391*x3608;
double x22060 = x22030*x849;
double x22061 = x19417*x3494;
double x22062 = x1858*x22060 + x19352*x3614 - x19373*x3494 - x21931*x321 - x22030*x841 - x22031*x869 + x22032 + x22057 - x22058 - x22059 + 3*x22061;
double x22063 = x16814*x17051;
double x22064 = x17051*x3663;
double x22065 = x17051*x8427;
double x22066 = -x16535*x3495 - x16535*x3615 + x16816*x17051 + x17051*x22039 + x17051*x22047 + x17051*x3621 - x18162*x3503 - x22034*x866 + x22063 - x22064 - x22065;
double x22067 = x17049*x3669;
double x22068 = q9_i*x22067;
double x22069 = q9_b_dt*x3670;
double x22070 = x17049*x22069;
double x22071 = q10_i*x22067;
double x22072 = q10_b_dt*x17049;
double x22073 = x22072*x3671;
double x22074 = x19400*x3672;
double x22075 = x16973*x17049;
double x22076 = x22072*x3673;
double x22077 = 3*x22043;
double x22078 = 3*x22044;
double x22079 = x16966*x19361;
double x22080 = x21910*x3673;
double x22081 = x19361*x3672;
double x22082 = x21938*x286;
double x22083 = x19391*x3652;
double x22084 = -x22083;
double x22085 = x19546*x3636;
double x22086 = -x22085;
double x22087 = x16942*x19;
double x22088 = x22084 + x22086 + x22087;
double x22089 = c*x22030;
double x22090 = x19391*x871;
double x22091 = x22089*x872;
double x22092 = x1787*x22090 + x19352*x3669 - x19352*x3672 + x19417*x3672 - x21931*x286 - x21975 + x22031*x3667 - 5*x22032 - 5*x22057 - 3*x22058 - 3*x22059 + x22060*x286 - x22089*x3667 + 5*x22091;
double x22093 = x17051*x3669;
double x22094 = -x21976;
double x22095 = x17051*x3673;
double x22096 = q10_b_dt*x17051;
double x22097 = q10_b_dt*x22095 - q10_i*x22093 - q9_b_dt*x22095 + q9_i*x22093 - x16966*x19359 + x16973*x17051 + x17051*x22069 - x19359*x3672 + x19407*x3672 - x21926*x286 - 3*x22064 - 3*x22065 + x22094 + x22096*x3671;
double x22098 = x16842*x17069;
double x22099 = x17069*x8420;
double x22100 = q10_b_dt*q10_i;
double x22101 = x17069*x22100;
double x22102 = x16918*x19523;
double x22103 = x17049*x8432;
double x22104 = x17049*x8433;
double x22105 = x16919*x19523;
double x22106 = x16921*x19;
double x22107 = x16922*x19;
double x22108 = 4*x22045;
double x22109 = x21910*x3661;
double x22110 = -x21914;
double x22111 = x21940 + x22110;
double x22112 = x158*x22060 + x16931*x19417 + x19352*x3660 - x21875*x3651 - x21949 + x22031*x3655 - 4*x22032 - 4*x22057 - 2*x22059 + 4*x22061 - x22089*x3655 + 4*x22091;
double x22113 = x16842*x17361 + x16918*x19536 + x16919*x19536 + x17051*x8432 + x17051*x8433 - x17361*x22100 + x17361*x8420 - x19546*x3663 - x21890*x3661 - x21919*x3664 - 4*x22063;
double x22114 = x158*x22017;
double x22115 = x16842*x17412;
double x22116 = x17412*x8420;
double x22117 = x17412*x22100;
double x22118 = x22096*x3642;
double x22119 = x16999*x19407;
double x22120 = x16918*x19496;
double x22121 = x17051*x3640;
double x22122 = 6*x22063;
double x22123 = x21890*x3632;
double x22124 = 6*x22064;
double x22125 = 6*x22065;
double x22126 = x17003*x17051;
double x22127 = 16*x16668;
double x22128 = x17051*x22127;
double x22129 = x21926*x327;
double x22130 = x16999*x19352 - x16999*x19417 + x19321*x871 - x19352*x3623 - x19423*x3595 + 12*x21875*x7975 + x21931*x327 + x22004 - x22031*x3646 + 6*x22032 + 6*x22058 + 6*x22059 - x22060*x327 + x22083 + x22089*x3646 - x22090*x877;
double x22131 = -x21984;
double x22132 = -x22087;
double x22133 = x16842*x17126 + x16918*x19505 + x16999*x19400 - x17003*x17049 - x17049*x22127 + x17049*x3640 - x17126*x22100 + x17126*x8420 - x21910*x3632 - x21938*x327 - 6*x22043 - 6*x22044 - 6*x22045 + x22072*x3642 + x22131 + x22132;
double x22134 = x17057*x208;
double x22135 = x17144*x5309;
double x22136 = -x11650*x19 + x11658*x19;
double x22137 = x169*x17161;
double x22138 = x11317*x19 - x17213 - x17216;
double x22139 = x109*x17507;
double x22140 = x17507*x656;
double x22141 = 6*x5;
double x22142 = x22141*x3682;
double x22143 = q1_b*x22142;
double x22144 = q2_b*x17203;
double x22145 = 6*x22144;
double x22146 = q1_b*x646;
double x22147 = x17191*x22146;
double x22148 = x17191*x3687;
double x22149 = x17242 + x17244;
double x22150 = -x17220 - x17221;
double x22151 = -x17241;
double x22152 = -x17247;
double x22153 = x19526*x3835;
double x22154 = -x22153;
double x22155 = x11706*x19;
double x22156 = -x22155;
double x22157 = x22154 + x22156;
double x22158 = x22151 + x22152 + x22157;
double x22159 = q1_b*x11331;
double x22160 = q2_b*x11331;
double x22161 = x17214 + x17217;
double x22162 = -x109*x22160 - x11676*x19 + x11689*x19 + x11693*x19 + x11714*x19 - x22159*x656 + x22161;
double x22163 = x11713*x19;
double x22164 = x11447*x19;
double x22165 = x11808*x19;
double x22166 = 4*x17206;
double x22167 = x11736*x19;
double x22168 = x11739*x19;
double x22169 = x11331*x5917;
double x22170 = x11331*x5839;
double x22171 = x11331*x5790;
double x22172 = L*x11331;
double x22173 = x22172*x3687;
double x22174 = x11331*x1858;
double x22175 = x22174*x3699;
double x22176 = x22160*x51;
double x22177 = x1858*x22176;
double x22178 = x11763*x19;
double x22179 = x11764*x19;
double x22180 = x11331*x5896;
double x22181 = x11359*x637;
double x22182 = L*x22181;
double x22183 = x17144*x637;
double x22184 = x17877*x192;
double x22185 = x11328*x5917;
double x22186 = x11328*x5839;
double x22187 = x11328*x5896;
double x22188 = -x22187;
double x22189 = x17161*x3683;
double x22190 = x11328*x5846;
double x22191 = -L*x17196 - q1_b*x22183 + x11328*x5790 - x17144*x5821 - x17191*x183 - x17191*x5235 - x17199*x70 + 4*x17226 + x1858*x22190 + x22182 + x22184 - x22185 - x22186 + x22188 + 3*x22189;
double x22192 = x3682*x5;
double x22193 = x22192*x5335;
double x22194 = 8*x22144;
double x22195 = x17161*x3752;
double x22196 = x11328*x158;
double x22197 = x22196*x5846;
double x22198 = x17208*x3695;
double x22199 = q2_b_dot*x17208;
double x22200 = x22199*x51;
double x22201 = x11328*x5913;
double x22202 = q1_b*x22201;
double x22203 = x17877*x193;
double x22204 = x22199*x646;
double x22205 = x19552 + x22204;
double x22206 = x11328*x5946;
double x22207 = x158*x22206;
double x22208 = x17877*x3752;
double x22209 = -x22207 - x22208;
double x22210 = x11331*x5946;
double x22211 = x158*x22210;
double x22212 = x11331*x3720;
double x22213 = x158*x22212;
double x22214 = x22211 + x22213;
double x22215 = x22205 + x22209 + x22214;
double x22216 = 8*x5;
double x22217 = q2_b*x3682;
double x22218 = x22216*x22217;
double x22219 = x19561 + x22218;
double x22220 = -x17207;
double x22221 = 8*x11331;
double x22222 = x11331*x158;
double x22223 = x11899*x19;
double x22224 = -x22223;
double x22225 = -x22160*x3733;
double x22226 = x22224 + x22225;
double x22227 = -x11842*x19 - x11845*x19 + x22159*x3733 - x22159*x5913 + x22160*x5920 + x22220 + x22221*x5821 - x22222*x3687 + x22222*x3699 + x22226;
double x22228 = 12*x5;
double x22229 = x22228*x3682;
double x22230 = q1_b*x22229;
double x22231 = 12*x22144;
double x22232 = 7*x22189;
double x22233 = x22190*x286;
double x22234 = x154*x22206;
double x22235 = x17877*x3683;
double x22236 = 5*x22235;
double x22237 = 3*x22185;
double x22238 = 3*x22186;
double x22239 = x11328*x646;
double x22240 = x11936*x22239;
double x22241 = 5*x22184;
double x22242 = x17219*x286;
double x22243 = 7*x17231;
double x22244 = x22205 + x22224;
double x22245 = x11331*x3706;
double x22246 = q2_b*x22245;
double x22247 = -x22246;
double x22248 = q2_b*x22229;
double x22249 = x19599 + x22247 + x22248;
double x22250 = -x17229;
double x22251 = x22159*x646;
double x22252 = x11331*x154;
double x22253 = -x22180;
double x22254 = x11331*x286;
double x22255 = q1_b*x22245 + x154*x22210 + x154*x22212 - x154*x22251 - x17213*x286 - x17216*x286 + x17470*x5821 - 3*x22169 - 3*x22170 + x22176*x286 + x22250 - x22252*x3687 + x22253 + x22254*x3699;
double x22256 = x11331*x3749;
double x22257 = q1_b*x22256;
double x22258 = 18*x11331;
double x22259 = x22258*x5821;
double x22260 = x11331*x327;
double x22261 = x22260*x3699;
double x22262 = x22176*x327;
double x22263 = x129*x22210;
double x22264 = x11331*x656;
double x22265 = x22264*x662;
double x22266 = x129*x22251;
double x22267 = x17245*x662;
double x22268 = x17183*x5917;
double x22269 = x17183*x5839;
double x22270 = x17470*x5277;
double x22271 = x17213*x327;
double x22272 = x17216*x327;
double x22273 = x11992*x19;
double x22274 = 18*x5;
double x22275 = -x22217*x22274;
double x22276 = x22273 + x22275;
double x22277 = q2_b*x22256;
double x22278 = x19627 + x22277;
double x22279 = x158*x22181;
double x22280 = -x17233;
double x22281 = 12*x11328;
double x22282 = -x22204;
double x22283 = -x11985*x22239 + x129*x22206 - x17219*x327 - 16*x17231 - x17877*x3678 + x17877*x3684 + 18*x22144 - 6*x22185 - 6*x22186 + 16*x22189 + x22190*x327 + x22192*x5428 + x22279 + x22280 - x22281*x5277 + x22282;
double x22284 = q2_b*x22183;
double x22285 = -x12004*x19 + x22273;
double x22286 = x17877*x3682;
double x22287 = x19526*x208;
double x22288 = x11712*x19 + x12012*x19 - x22210 - x22212;
double x22289 = x22181*x3943;
double x22290 = 6*x11359;
double x22291 = x22290*x646*x70;
double x22292 = x11359*x675;
double x22293 = x22292*x5540;
double x22294 = q2_b*x3765;
double x22295 = x22141*x22294;
double x22296 = q3_b*x22142;
double x22297 = x11359*x666;
double x22298 = x22297*x3943;
double x22299 = q2_b*x675;
double x22300 = x17191*x22299;
double x22301 = x17191*x3770;
double x22302 = -x22248;
double x22303 = x22224 + x22302;
double x22304 = q3_b*x11331;
double x22305 = x12022*x19 - x12032*x19 - x12033*x19 + x12044*x19 + x12048*x19 - x12062*x19 - x22160*x685 + x22246 - x22304*x656;
double x22306 = L*x22297;
double x22307 = x17502*x22217;
double x22308 = x17144*x666;
double x22309 = q2_b*x22308;
double x22310 = q3_b*x22183;
double x22311 = x11328*x6229;
double x22312 = x11328*x6232;
double x22313 = x11328*x6130;
double x22314 = x17913*x3683;
double x22315 = x17877*x4574;
double x22316 = x12125*x22239;
double x22317 = x17191*x5946;
double x22318 = x17191*x3720;
double x22319 = x11359*x6280;
double x22320 = -x12061*x19;
double x22321 = -x22319 + x22320;
double x22322 = -x11331*x6210;
double x22323 = x11328*x6210;
double x22324 = x19677 + x22322 + x22323;
double x22325 = -x22163;
double x22326 = x11331*x6229;
double x22327 = x11331*x6232;
double x22328 = x22304*x646;
double x22329 = x12021*x19 - x12081*x19 - x12084*x19 - x12104*x19 - x12105*x19 + x1858*x22328 + x22160*x3768 + x22160*x3776 + x22172*x3770 + x22174*x3785 + x22325 - x22326 - x22327;
double x22330 = x22216*x22294;
double x22331 = q3_b*x3682;
double x22332 = x22216*x22331;
double x22333 = x17877*x3839;
double x22334 = q3_b*x22201;
double x22335 = x22199*x675;
double x22336 = q3_b_dot*x17208;
double x22337 = x22336*x646;
double x22338 = x11328*x6545;
double x22339 = q2_b*x22338;
double x22340 = x17913*x3752;
double x22341 = x22336*x675;
double x22342 = x19705 + x22341;
double x22343 = x11328*x6256;
double x22344 = x158*x22343;
double x22345 = x17913*x3839;
double x22346 = -x22344 - x22345;
double x22347 = x11331*x6256;
double x22348 = x158*x22347;
double x22349 = x11331*x3805;
double x22350 = x158*x22349;
double x22351 = x22348 + x22350;
double x22352 = x22342 + x22346 + x22351;
double x22353 = x22207 + x22208;
double x22354 = q3_b*x3765;
double x22355 = x22216*x22354;
double x22356 = x19715 + x22355;
double x22357 = x12213*x19;
double x22358 = -x22357;
double x22359 = -x22304*x3818;
double x22360 = x22358 + x22359;
double x22361 = -x12164*x19 - x12167*x19 + x22160*x3818 - x22160*x6545 - x22211 - x22213 - x22222*x3770 + x22222*x3785 + x22304*x3733 + x22304*x5913 + x22360;
double x22362 = x22228*x3765;
double x22363 = q2_b*x22362;
double x22364 = q3_b*x22229;
double x22365 = x17877*x3766;
double x22366 = 7*x22365;
double x22367 = x12251*x22239;
double x22368 = x154*x22343;
double x22369 = x17913*x3766;
double x22370 = 5*x22369;
double x22371 = 3*x22311;
double x22372 = 3*x22312;
double x22373 = x11328*x675;
double x22374 = x12253*x22373;
double x22375 = 5*x22314;
double x22376 = x22206*x286;
double x22377 = 7*x22235;
double x22378 = x22342 + x22358;
double x22379 = x22304*x3792;
double x22380 = -x22379;
double x22381 = q3_b*x22362;
double x22382 = x19750 + x22380 + x22381;
double x22383 = x22160*x675;
double x22384 = q3_b*x22245 + x154*x22347 + x154*x22349 - x154*x22383 + x22160*x3792 - x22210*x286 - x22212*x286 - x22252*x3770 + x22254*x3785 - 3*x22326 - 3*x22327 + x22328*x286;
double x22385 = -x22279;
double x22386 = x22160*x3836;
double x22387 = q3_b*x22256;
double x22388 = x22260*x3785;
double x22389 = x22328*x327;
double x22390 = x129*x22347;
double x22391 = x11331*x685;
double x22392 = x22391*x691;
double x22393 = x129*x22383;
double x22394 = x22264*x691;
double x22395 = x17183*x6229;
double x22396 = x17183*x6232;
double x22397 = x11331*x11983*x646;
double x22398 = x22210*x327;
double x22399 = x22212*x327;
double x22400 = -x22273 + x22275;
double x22401 = x22274*x3765;
double x22402 = -q3_b*x22401;
double x22403 = -x19658*x3835;
double x22404 = x12297*x19;
double x22405 = x22402 + x22403 + x22404;
double x22406 = x12304*x19;
double x22407 = x22304*x3836;
double x22408 = x19776 - x22406 + x22407;
double x22409 = x158*x22297;
double x22410 = -x22341;
double x22411 = q2_b*x22401 - x11795*x22373 - x11983*x22239 + x12288*x22239 + x129*x22343 - x17913*x3684 + x17913*x4559 - x22206*x327 - 16*x22235 + x22274*x22331 - 6*x22311 - 6*x22312 + 16*x22365 + x22409 + x22410;
double x22412 = x11359*x1838;
double x22413 = 20*x22412;
double x22414 = p10_b*x17144;
double x22415 = x22414*x385;
double x22416 = x12613*x19;
double x22417 = -x12616*x19 - x22416*x8518;
double x22418 = x11359*x385;
double x22419 = x11328*x8828;
double x22420 = x17536*x3842;
double x22421 = x17507*x3847;
double x22422 = x11331*x8828;
double x22423 = x11331*x3851;
double x22424 = -x12639*x19 + x22416 - x22422 - x22423;
double x22425 = x22416*x8589;
double x22426 = x12661*x19;
double x22427 = x12664*x19;
double x22428 = p10_b*x11331;
double x22429 = x22428*x414;
double x22430 = p9_b*x11331;
double x22431 = x22430*x413;
double x22432 = x12689*x19;
double x22433 = x22432*x8589;
double x22434 = x12711*x19;
double x22435 = x12714*x19;
double x22436 = x12763*x19;
double x22437 = x22428*x8621;
double x22438 = -x22437;
double x22439 = p10_b*x5;
double x22440 = x22439*x3842;
double x22441 = 12*x22440;
double x22442 = x19814 + x22438 + x22441;
double x22443 = x158*x22422;
double x22444 = -x22443;
double x22445 = x158*x22423;
double x22446 = -x22445;
double x22447 = x17144*x8705;
double x22448 = -x22447;
double x22449 = x22444 + x22446 + x22448;
double x22450 = x158*x22419;
double x22451 = x17536*x3926;
double x22452 = x19832 + x22450 + x22451;
double x22453 = x11359*x1822;
double x22454 = x11359*x1840;
double x22455 = x22439*x3865;
double x22456 = x3842*x5;
double x22457 = x11359*x1845;
double x22458 = p10_b*x403;
double x22459 = -x12748*x22456 + x17144*x3868 + x17191*x22458 - 60*x22412 - 42*x22453 - 20*x22454 - 6*x22455 + 60*x22457;
double x22460 = x22416*x8720;
double x22461 = x12841*x19;
double x22462 = x12843*x19;
double x22463 = x22428*x8742;
double x22464 = x12779*x19;
double x22465 = x12785*x19;
double x22466 = x22432*x8720;
double x22467 = x11331*x8899;
double x22468 = x11331*x8902;
double x22469 = x22428*x3867;
double x22470 = x11331*x3868;
double x22471 = p10_b_dot*x11331;
double x22472 = x22471*x3881;
double x22473 = x22430*x379;
double x22474 = x1858*x22473;
double x22475 = x12807*x19;
double x22476 = x12808*x19;
double x22477 = x17475*x8705;
double x22478 = 11*x22454;
double x22479 = -x22478;
double x22480 = x11328*x8899;
double x22481 = x11328*x8902;
double x22482 = x11328*x8705;
double x22483 = 4*x22482;
double x22484 = -x22483;
double x22485 = x17536*x3866;
double x22486 = x11328*x379;
double x22487 = x11328*x12739 + x12826*x22486 - x17144*x8736 - x17191*x3851 - x17191*x8828 + x17544*x3843 - 23*x22412 - x22414*x390 + 4*x22440 - 12*x22453 + 23*x22457 + x22479 - x22480 - x22481 + x22484 + 3*x22485;
double x22488 = 8*x22455;
double x22489 = x22456*x8907;
double x22490 = 8*x22440;
double x22491 = x3865*x5;
double x22492 = x22491*x8907;
double x22493 = x17536*x3927;
double x22494 = x22486*x8892;
double x22495 = x17144*x8899;
double x22496 = x17144*x8902;
double x22497 = x11328*x4539;
double x22498 = p10_b*x22497;
double x22499 = x17544*x3926;
double x22500 = x17144*x8861;
double x22501 = x19891 + x22500;
double x22502 = x11331*x8833;
double x22503 = x158*x22502;
double x22504 = x11331*x3901;
double x22505 = x158*x22504;
double x22506 = x22503 + x22505;
double x22507 = x11328*x8833;
double x22508 = x158*x22507;
double x22509 = x17544*x3927;
double x22510 = -x22508 - x22509;
double x22511 = x19895 + x22506 + x22510;
double x22512 = x22501 + x22511;
double x22513 = -x22436;
double x22514 = x11331*x8892;
double x22515 = x12905*x19;
double x22516 = -x22515;
double x22517 = x1921*x22430;
double x22518 = x22516 - x22517;
double x22519 = -x12942*x19 - x12945*x19 + x1921*x22428 + x1923*x22471 - x22428*x4539 - x22428*x8891 + x22430*x8891 - 4*x22470 + x22513 + x22514*x379 + x22518;
double x22520 = 12*x22455;
double x22521 = x22456*x8670;
double x22522 = 7*x22485;
double x22523 = x12884*x22486;
double x22524 = x154*x22507;
double x22525 = x17544*x3865;
double x22526 = x154*x22525;
double x22527 = 3*x22480;
double x22528 = 3*x22481;
double x22529 = x11328*x403;
double x22530 = x12885*x22529;
double x22531 = x17544*x3842;
double x22532 = x154*x22531;
double x22533 = x22419*x286;
double x22534 = x17536*x3843;
double x22535 = 7*x22534;
double x22536 = x22491*x8670;
double x22537 = x22516 + x22536;
double x22538 = x1896*x22430;
double x22539 = -x22538;
double x22540 = x22428*x403;
double x22541 = -x22477;
double x22542 = x1845*x22471;
double x22543 = x154*x22502 + x154*x22504 - x154*x22540 + x17470*x8736 + x1896*x22428 - x22422*x286 - x22423*x286 - 3*x22467 - 3*x22468 - 5*x22470 + x22473*x286 + x22539 + x22541 + 7*x22542;
double x22544 = x1927*x22428;
double x22545 = x22430*x8951;
double x22546 = x158*x22416;
double x22547 = x13025*x19;
double x22548 = x13031*x19;
double x22549 = x22428*x8951;
double x22550 = x1927*x22430;
double x22551 = 16*x22542;
double x22552 = x22473*x327;
double x22553 = x129*x22502;
double x22554 = x11331*x420;
double x22555 = x22554*x414;
double x22556 = x129*x22540;
double x22557 = x22554*x413;
double x22558 = x17183*x8899;
double x22559 = x17183*x8902;
double x22560 = x17470*x8705;
double x22561 = x22422*x327;
double x22562 = x22423*x327;
double x22563 = x19967 + x22515;
double x22564 = x11359*x1923;
double x22565 = x158*x22432;
double x22566 = x22564 + x22565;
double x22567 = -x22500;
double x22568 = x22491*x8980;
double x22569 = x14*x19861;
double x22570 = -x22568 - x22569;
double x22571 = x129*x22507 + x129*x22525 - x129*x22531 + x13014*x22486 - x13018*x22529 - x17149*x1822 - 4*x22412 - x22419*x327 - 18*x22440 + 18*x22455 + x22456*x8980 - 6*x22480 - 6*x22481 - 12*x22482 + 16*x22485 - 16*x22534 + x22567 + x22570;
double x22572 = x11359*x2000;
double x22573 = 4*x22572;
double x22574 = -x22573;
double x22575 = x17144*x8997;
double x22576 = x13045*x19;
double x22577 = x158*x22576;
double x22578 = -x22577;
double x22579 = -x13042*x19 + x22578;
double x22580 = x11359*x429;
double x22581 = x11328*x9032;
double x22582 = x17587*x3933;
double x22583 = x208*x423;
double x22584 = x10*x22583;
double x22585 = x11331*x9032;
double x22586 = x11331*x3941;
double x22587 = -x13076*x19 + x22576 - x22585 - x22586;
double x22588 = x17439*x3943;
double x22589 = 4*x17499;
double x22590 = x3933*x5;
double x22591 = p1_b*x22590;
double x22592 = 6*x22591;
double x22593 = p2_b*x336;
double x22594 = x22593*x5;
double x22595 = 6*x22594;
double x22596 = 10*x11359;
double x22597 = x22596*x3957;
double x22598 = 12*x22572;
double x22599 = x17144*x3951;
double x22600 = x17191*x9177;
double x22601 = p2_b*x3933;
double x22602 = x22228*x22601;
double x22603 = -x22602;
double x22604 = x13166*x19;
double x22605 = -x22604;
double x22606 = x22603 + x22605;
double x22607 = x17470*x8997;
double x22608 = x20004 + x22607;
double x22609 = p2_b_dot*x17208;
double x22610 = x22609*x423;
double x22611 = x20008 + x22610;
double x22612 = x158*x22585;
double x22613 = x158*x22586;
double x22614 = x22612 + x22613;
double x22615 = x158*x22581;
double x22616 = x17587*x3934;
double x22617 = -x22615 - x22616;
double x22618 = x20016 + x22614 + x22617;
double x22619 = p2_b*x11331;
double x22620 = -x11331*x9067 + x13091*x19 + x13110*x19 + x13113*x19 + x13132*x19 - x17443*x3943 + x22576*x3943 - x226*x22619;
double x22621 = x17439*x286;
double x22622 = x17502*x22601;
double x22623 = x17144*x9167;
double x22624 = x17144*x9168;
double x22625 = 7*x22572;
double x22626 = x11328*x9178;
double x22627 = x11328*x9182;
double x22628 = x22590*x450;
double x22629 = x11328*x9098;
double x22630 = p1_b*x3981;
double x22631 = x11328*x22630;
double x22632 = x17587*x336;
double x22633 = x1858*x22632;
double x22634 = x17191*x9032;
double x22635 = x17191*x3941;
double x22636 = x11328*x9216;
double x22637 = x11359*x3976;
double x22638 = x13249*x19;
double x22639 = x22637 + x22638;
double x22640 = x11331*x8997;
double x22641 = x11331*x3951;
double x22642 = x11331*x9178;
double x22643 = x11331*x9182;
double x22644 = x11331*x9216;
double x22645 = -x22644;
double x22646 = x11331*x13234 + x11331*x22630 + x11331*x9098 - x13181*x19 - x13186*x19 - x13208*x19 - x13209*x19 - x17443*x286 + x17496 + x22576*x286 + 4*x22640 + x22641 - x22642 - x22643 + x22645;
double x22647 = x17470*x9167;
double x22648 = x17470*x9168;
double x22649 = x22254*x9187;
double x22650 = x22254*x9190;
double x22651 = x154*x17444;
double x22652 = x154*x17445;
double x22653 = 3*x22642;
double x22654 = 3*x22643;
double x22655 = 5*x22641;
double x22656 = x154*x9177;
double x22657 = x11331*x22656;
double x22658 = x22585*x286;
double x22659 = x22586*x286;
double x22660 = x22603 + x22608;
double x22661 = -x17473;
double x22662 = x17277*x3933;
double x22663 = -x22636;
double x22664 = x11328*x9187;
double x22665 = -x11328*x22656 + x154*x17440 - x154*x22662 + x17277*x365 + x17587*x3965 - x17587*x3970 + x22228*x22593 - x22581*x286 + 12*x22591 - 3*x22626 - 3*x22627 + x22661 + x22663 + x22664*x286;
double x22666 = x22221*x9167;
double x22667 = x22221*x9168;
double x22668 = x22222*x9187;
double x22669 = x22222*x9190;
double x22670 = x13308*x19;
double x22671 = x13311*x19;
double x22672 = 4*x22641;
double x22673 = x22222*x9177;
double x22674 = -x22216*x22601;
double x22675 = 8*x22640;
double x22676 = -x22610;
double x22677 = x22604 + x22676;
double x22678 = x20096 + x22674 + x22675 + x22677;
double x22679 = -x17452;
double x22680 = -x17277*x3934 - x17455*x423 + x17587*x371 - x202*x22609 - x22196*x9177 + x22196*x9187 + x22216*x22593 + 8*x22591 + x22679;
double x22681 = 18*x22591;
double x22682 = 18*x22594;
double x22683 = x22664*x327;
double x22684 = x22632*x327;
double x22685 = x129*x17440;
double x22686 = x17277*x361;
double x22687 = x129*x22662;
double x22688 = x129*x9177;
double x22689 = x11328*x22688;
double x22690 = x11328*x9267;
double x22691 = 6*x22627;
double x22692 = x11328*x9264;
double x22693 = x22581*x327;
double x22694 = x22582*x327;
double x22695 = x17490*x423;
double x22696 = x22274*x22601;
double x22697 = x13355*x19 - 18*x22640;
double x22698 = x20120 + x22695 + x22696 + x22697;
double x22699 = x11331*x450;
double x22700 = x17479 - x17480;
double x22701 = -x11331*x22688 - x11331*x9264 - x11331*x9267 + x129*x17444 - x17183*x9182 + x22258*x9167 + x22258*x9168 + x22260*x9187 + x22260*x9190 + x22577 - x22585*x327 - x22586*x327 + x226*x22699 - x22699*x444 + x22700;
double x22702 = x17507*x473;
double x22703 = x17144*x9286;
double x22704 = x13370*x19;
double x22705 = -x129*x22704 - x13367*x19;
double x22706 = x11359*x458;
double x22707 = x11328*x9303;
double x22708 = x17628*x4013;
double x22709 = x11359*x4063;
double x22710 = x11331*x9303;
double x22711 = x11331*x4021;
double x22712 = -x13391*x19 + x22704 - x22710 - x22711;
double x22713 = 18*x22572;
double x22714 = p2_b*x4013;
double x22715 = x22141*x22714;
double x22716 = x11359*x9228;
double x22717 = p3_b*x22590;
double x22718 = 6*x22717;
double x22719 = x11359*x4038;
double x22720 = 14*x22719;
double x22721 = x22706*x4023;
double x22722 = x17191*x9453;
double x22723 = p3_b*x6;
double x22724 = x22583*x22723;
double x22725 = p3_b*x4013;
double x22726 = x22228*x22725;
double x22727 = -x22726;
double x22728 = x13490*x19;
double x22729 = -x22728;
double x22730 = x22727 + x22729;
double x22731 = x17470*x9286;
double x22732 = x20153 + x22731;
double x22733 = p3_b_dot*x17208;
double x22734 = x22733*x452;
double x22735 = x20158 + x22734;
double x22736 = x158*x22710;
double x22737 = x158*x22711;
double x22738 = x22736 + x22737;
double x22739 = x158*x22707;
double x22740 = x17628*x4078;
double x22741 = -x22739 - x22740;
double x22742 = x20164 + x22738 + x22741;
double x22743 = p3_b*x11331;
double x22744 = x13417*x19 + x13421*x19 + x13439*x19 + x13443*x19 - x22576*x4023 - x22619*x473 + x22704*x4023 - x22743*x444;
double x22745 = 9*x22572;
double x22746 = x17502*x22725;
double x22747 = x17144*x9445;
double x22748 = x17144*x9446;
double x22749 = x22706*x4046;
double x22750 = x11328*x9523;
double x22751 = x11328*x9526;
double x22752 = x17587*x4107;
double x22753 = x11328*x9371;
double x22754 = p2_b*x11328*x4063;
double x22755 = x17628*x3933;
double x22756 = x1858*x22755;
double x22757 = x17191*x9303;
double x22758 = x17191*x4021;
double x22759 = 4*x11328;
double x22760 = x22759*x9422;
double x22761 = 5*x22719;
double x22762 = x13556*x19;
double x22763 = x22761 + x22762;
double x22764 = x11331*x9523;
double x22765 = x11331*x9526;
double x22766 = x17475*x9422;
double x22767 = -x22766;
double x22768 = x11331*x9528;
double x22769 = x11331*x4032 + x11331*x9371 - x13505*x19 - x13510*x19 - x13526*x19 - x13527*x19 + x17475*x9286 - x22576*x4046 + x22619*x4063 + x22704*x4046 - x22764 - x22765 + x22767 + 3*x22768;
double x22770 = x17470*x9445;
double x22771 = x17470*x9446;
double x22772 = x22619*x452;
double x22773 = x22772*x286;
double x22774 = 7*x22768;
double x22775 = x154*x22585;
double x22776 = x154*x22586;
double x22777 = 3*x22764;
double x22778 = 3*x22765;
double x22779 = x22252*x9453;
double x22780 = x22743*x423;
double x22781 = x154*x22780;
double x22782 = x22710*x286;
double x22783 = x22711*x286;
double x22784 = x22727 + x22732;
double x22785 = x11328*x423;
double x22786 = -x22760;
double x22787 = x11328*x452;
double x22788 = x13592*x22787 - x13597*x22785 - x154*x17587*x4013 + x154*x22581 + x154*x22582 + x17628*x3970 + x22228*x22714 - x22707*x286 - x22708*x286 + 12*x22717 - 3*x22750 - 3*x22751 + x22786;
double x22789 = x22221*x9445;
double x22790 = x22221*x9446;
double x22791 = x158*x22772;
double x22792 = x17475*x9528;
double x22793 = x13613*x19;
double x22794 = x13616*x19;
double x22795 = x22222*x9453;
double x22796 = x158*x22780;
double x22797 = -x22612 - x22613;
double x22798 = -x22216*x22725;
double x22799 = x22221*x9286;
double x22800 = -x22734;
double x22801 = x22728 + x22800;
double x22802 = x20242 + x22798 + x22799 + x22801;
double x22803 = p3_b*x22196;
double x22804 = x22196*x452;
double x22805 = x22615 + x22616;
double x22806 = p2_b*x22804 - x17587*x4078 + x17628*x3934 + x22216*x22714 - x22609*x452 + 8*x22717 - x22733*x423 - x22803*x423 + x22805;
double x22807 = x22274*x22714;
double x22808 = 18*x22717;
double x22809 = x13648*x22787;
double x22810 = x22755*x327;
double x22811 = x129*x22581;
double x22812 = x129*x22582;
double x22813 = x17587*x4014;
double x22814 = x13653*x22785;
double x22815 = 6*x22750;
double x22816 = p3_b_dot*x11328;
double x22817 = x22816*x9228;
double x22818 = x22816*x4083;
double x22819 = x22707*x327;
double x22820 = x22708*x327;
double x22821 = -x22258*x9286;
double x22822 = x13662*x19;
double x22823 = x158*x22706;
double x22824 = x22821 + x22822 + x22823;
double x22825 = x17490*x452;
double x22826 = x22274*x22725;
double x22827 = x20269 + x22825 + x22826;
double x22828 = x158*x22704;
double x22829 = p3_b_dot*x11331;
double x22830 = x11331*x479;
double x22831 = x129*x22585 - x129*x22780 - x17183*x9523 + x22258*x9445 + x22258*x9446 + x22578 + x22605 - x22710*x327 - x22711*x327 + 16*x22768 + x22772*x327 + x22828 - x22829*x4083 - x22829*x9228 + x22830*x444 - x22830*x473;
double x22832 = x11359*x2206;
double x22833 = 8*x22832;
double x22834 = x17144*x9582;
double x22835 = x13673*x19;
double x22836 = -x13676*x19 - x22835*x6674;
double x22837 = x11359*x488;
double x22838 = x11328*x9598;
double x22839 = x17669*x4097;
double x22840 = x11359*x158;
double x22841 = x22840*x482;
double x22842 = x11331*x9598;
double x22843 = x11331*x4105;
double x22844 = -x13707*x19 + x22835 - x22842 - x22843;
double x22845 = x22706*x6716;
double x22846 = p3_b*x4097;
double x22847 = x22141*x22846;
double x22848 = p4_b*x4013;
double x22849 = x22141*x22848;
double x22850 = 8*x22719;
double x22851 = x11359*x4121;
double x22852 = 18*x22851;
double x22853 = 24*x22832;
double x22854 = x17144*x4115;
double x22855 = p4_b*x452;
double x22856 = x17191*x22855;
double x22857 = p4_b*x4097;
double x22858 = x22228*x22857;
double x22859 = -x22858;
double x22860 = x13788*x19;
double x22861 = -x22860;
double x22862 = x22859 + x22861;
double x22863 = x17470*x9582;
double x22864 = x20303 + x22863;
double x22865 = p4_b_dot*x17208;
double x22866 = x22865*x482;
double x22867 = x20307 + x22866;
double x22868 = x158*x22842;
double x22869 = x158*x22843;
double x22870 = x22868 + x22869;
double x22871 = x158*x22838;
double x22872 = x17669*x4161;
double x22873 = -x22871 - x22872;
double x22874 = x20315 + x22870 + x22873;
double x22875 = p4_b*x11331;
double x22876 = x13722*x19 + x13726*x19 + x13742*x19 + x13745*x19 - x22704*x6716 - x22743*x503 + x22835*x6716 - x22875*x473;
double x22877 = x22706*x7713;
double x22878 = x17502*x22857;
double x22879 = x17144*x9738;
double x22880 = x17144*x9739;
double x22881 = 11*x22832;
double x22882 = x11328*x9810;
double x22883 = x11328*x9813;
double x22884 = x17628*x4098;
double x22885 = x11328*x9665;
double x22886 = p3_b*x11328*x4145;
double x22887 = 3*x17669*x4107;
double x22888 = x17191*x9598;
double x22889 = x17191*x4105;
double x22890 = x11328*x9782;
double x22891 = 6*x22851;
double x22892 = x13857*x19;
double x22893 = x22891 + x22892;
double x22894 = x11331*x4115;
double x22895 = x11331*x9810;
double x22896 = x11331*x9813;
double x22897 = x11331*x9782;
double x22898 = -x22897;
double x22899 = x11331*x13847 + x11331*x9665 - x13802*x19 - x13807*x19 - x13826*x19 - x13827*x19 + x17475*x9582 - x22704*x7713 + x22743*x4145 + x22835*x7713 + x22894 - x22895 - x22896 + x22898;
double x22900 = x17470*x9738;
double x22901 = x17470*x9739;
double x22902 = x22743*x482;
double x22903 = x22902*x286;
double x22904 = x22254*x9757;
double x22905 = x154*x22710;
double x22906 = x154*x22711;
double x22907 = 3*x22895;
double x22908 = 3*x22896;
double x22909 = 5*x22894;
double x22910 = x22875*x452;
double x22911 = x154*x22910;
double x22912 = x22842*x286;
double x22913 = x22843*x286;
double x22914 = x22859 + x22864;
double x22915 = x17628*x4097;
double x22916 = -x22890;
double x22917 = x11328*x482;
double x22918 = x17669*x4013;
double x22919 = x13894*x22917 - x13897*x22787 + x154*x22707 + x154*x22708 - x154*x22915 + x22228*x22846 + x22228*x22848 - x22838*x286 - x22839*x286 - 3*x22882 - 3*x22883 + x22916 + x22918*x286;
double x22920 = x22221*x9738;
double x22921 = x22221*x9739;
double x22922 = x158*x22902;
double x22923 = x11331*x9814;
double x22924 = x13913*x19;
double x22925 = x13916*x19;
double x22926 = x17475*x4115;
double x22927 = x158*x22910;
double x22928 = -x22736 - x22737;
double x22929 = -x22216*x22857;
double x22930 = x22221*x9582;
double x22931 = -x22866;
double x22932 = x22860 + x22931;
double x22933 = x20394 + x22929 + x22930 + x22932;
double x22934 = x22739 + x22740;
double x22935 = -p4_b*x22804 - x17628*x4161 + x17669*x4078 + x22216*x22846 + x22216*x22848 - x22733*x482 + x22803*x482 - x22865*x452 + x22934;
double x22936 = x22274*x22846;
double x22937 = x22274*x22848;
double x22938 = x13948*x22917;
double x22939 = x22918*x327;
double x22940 = x129*x22707;
double x22941 = x17628*x4014;
double x22942 = x129*x22915;
double x22943 = x13951*x22787;
double x22944 = 6*x22882;
double x22945 = 6*x22883;
double x22946 = x11328*x9839;
double x22947 = x22838*x327;
double x22948 = x22839*x327;
double x22949 = -x22258*x9582;
double x22950 = x13960*x19;
double x22951 = 4*x22832;
double x22952 = x22949 + x22950 + x22951;
double x22953 = x22821 + x22822 - x22823;
double x22954 = x17490*x482;
double x22955 = x22274*x22857;
double x22956 = x20420 + x22954 + x22955;
double x22957 = x158*x22835;
double x22958 = x11331*x509;
double x22959 = -x11331*x9839 + x129*x22710 - x129*x22910 - x17183*x9810 - x17183*x9813 + x22258*x9738 + x22258*x9739 + x22260*x9757 + x22729 - x22828 - x22842*x327 - x22843*x327 + x22902*x327 + x22957 + x22958*x473 - x22958*x503;
double x22960 = x11359*x518;
double x22961 = x22960*x5224;
double x22962 = x17144*x9869;
double x22963 = x13971*x19;
double x22964 = -x13974*x19 - x22963*x5224;
double x22965 = x11328*x9885;
double x22966 = x17710*x4180;
double x22967 = x11359*x154;
double x22968 = x22967*x512;
double x22969 = x11331*x9885;
double x22970 = x11331*x4189;
double x22971 = -x14004*x19 + x22963 - x22969 - x22970;
double x22972 = 30*x22832;
double x22973 = p4_b*x4180;
double x22974 = x22141*x22973;
double x22975 = p5_b*x4097;
double x22976 = x22141*x22975;
double x22977 = x22596*x4121;
double x22978 = x11359*x4205;
double x22979 = 22*x22978;
double x22980 = x22960*x7034;
double x22981 = x10035*x17191;
double x22982 = p5_b*x482;
double x22983 = x17191*x22982;
double x22984 = p5_b*x4180;
double x22985 = x22228*x22984;
double x22986 = -x22985;
double x22987 = x14084*x19;
double x22988 = -x22987;
double x22989 = x22986 + x22988;
double x22990 = x17470*x9869;
double x22991 = x20455 + x22990;
double x22992 = p5_b_dot*x17208;
double x22993 = x22992*x512;
double x22994 = x20460 + x22993;
double x22995 = x158*x22969;
double x22996 = x158*x22970;
double x22997 = x22995 + x22996;
double x22998 = x158*x22965;
double x22999 = x17710*x4245;
double x23000 = -x22998 - x22999;
double x23001 = x20466 + x22997 + x23000;
double x23002 = p5_b*x11331;
double x23003 = x14018*x19 + x14022*x19 + x14038*x19 + x14041*x19 - x22835*x7034 - x22875*x533 + x22963*x7034 - x23002*x503;
double x23004 = 13*x22832;
double x23005 = x17502*x22984;
double x23006 = x10028*x17144;
double x23007 = x10029*x17144;
double x23008 = x22960*x8032;
double x23009 = x10110*x11328;
double x23010 = x10113*x11328;
double x23011 = x17669*x4181;
double x23012 = x11328*x9954;
double x23013 = p4_b*x11328*x4229;
double x23014 = 3*x17710*x4098;
double x23015 = x17191*x9885;
double x23016 = x17191*x4189;
double x23017 = x10006*x22759;
double x23018 = 7*x22978;
double x23019 = x14147*x19;
double x23020 = x23018 + x23019;
double x23021 = x10110*x11331;
double x23022 = x10113*x11331;
double x23023 = x10006*x17475;
double x23024 = -x23023;
double x23025 = x10114*x11331;
double x23026 = x11331*x4199 + x11331*x9954 - x14098*x19 - x14103*x19 - x14119*x19 - x14120*x19 + x17475*x9869 - x22835*x8032 + x22875*x4229 + x22963*x8032 - x23021 - x23022 + x23024 + 3*x23025;
double x23027 = x10028*x17470;
double x23028 = x10029*x17470;
double x23029 = x22875*x512;
double x23030 = x23029*x286;
double x23031 = 7*x23025;
double x23032 = x154*x22842;
double x23033 = x154*x22843;
double x23034 = 3*x23021;
double x23035 = 3*x23022;
double x23036 = x10035*x22252;
double x23037 = x23002*x482;
double x23038 = x154*x23037;
double x23039 = x22969*x286;
double x23040 = x22970*x286;
double x23041 = x22986 + x22991;
double x23042 = x17669*x4180;
double x23043 = -x23017;
double x23044 = x11328*x512;
double x23045 = x17710*x4097;
double x23046 = x14180*x23044 - x14184*x22917 + x154*x22838 + x154*x22839 - x154*x23042 + x22228*x22973 + x22228*x22975 - x22965*x286 - x22966*x286 - 3*x23009 - 3*x23010 + x23043 + x23045*x286;
double x23047 = x10028*x22221;
double x23048 = x10029*x22221;
double x23049 = x158*x23029;
double x23050 = x10114*x17475;
double x23051 = x14199*x19;
double x23052 = x14202*x19;
double x23053 = x10035*x22222;
double x23054 = x158*x23037;
double x23055 = -x22868 - x22869;
double x23056 = -x22216*x22984;
double x23057 = x22221*x9869;
double x23058 = -x22993;
double x23059 = x22987 + x23058;
double x23060 = x20541 + x23056 + x23057 + x23059;
double x23061 = x22196*x512;
double x23062 = x22871 + x22872;
double x23063 = p4_b*x23061 - x17669*x4245 + x17710*x4161 - x22196*x22982 + x22216*x22973 + x22216*x22975 - x22865*x512 - x22992*x482 + x23062;
double x23064 = x22274*x22973;
double x23065 = x22274*x22975;
double x23066 = x14233*x23044;
double x23067 = x23045*x327;
double x23068 = x129*x22838;
double x23069 = x129*x22839;
double x23070 = x129*x23042;
double x23071 = x14237*x22917;
double x23072 = 6*x23009;
double x23073 = 6*x23010;
double x23074 = p5_b_dot*x4250;
double x23075 = x11328*x23074;
double x23076 = x22965*x327;
double x23077 = x22966*x327;
double x23078 = -x22258*x9869;
double x23079 = x14246*x19;
double x23080 = x158*x22960;
double x23081 = x23078 + x23079 + x23080;
double x23082 = x22949 + x22950 - x22951;
double x23083 = x17490*x512;
double x23084 = x22274*x22984;
double x23085 = x20566 + x23083 + x23084;
double x23086 = x158*x22963;
double x23087 = x11331*x539;
double x23088 = x10028*x22258 + x10029*x22258 - x10110*x17183 - x10113*x17183 - x11331*x23074 + x129*x22842 - x129*x23037 + x22861 - x22957 - x22969*x327 - x22970*x327 + 16*x23025 + x23029*x327 + x23086 + x23087*x503 - x23087*x533;
double x23089 = x11359*x2412;
double x23090 = 12*x23089;
double x23091 = x10167*x17144;
double x23092 = x14257*x19;
double x23093 = -x14260*x19 - x23092*x3943;
double x23094 = x11359*x548;
double x23095 = x10185*x11328;
double x23096 = x17751*x4264;
double x23097 = x11359*x129;
double x23098 = x23097*x542;
double x23099 = x10185*x11331;
double x23100 = x11331*x4272;
double x23101 = -x14290*x19 + x23092 - x23099 - x23100;
double x23102 = x22960*x7333;
double x23103 = p5_b*x4264;
double x23104 = x22141*x23103;
double x23105 = p6_b*x4180;
double x23106 = x22141*x23105;
double x23107 = x11359*x4250;
double x23108 = x11359*x4288;
double x23109 = 26*x23108;
double x23110 = 36*x23089;
double x23111 = x17144*x4282;
double x23112 = p6_b*x512;
double x23113 = x17191*x23112;
double x23114 = p6_b*x4264;
double x23115 = x22228*x23114;
double x23116 = -x23115;
double x23117 = x14370*x19;
double x23118 = -x23117;
double x23119 = x23116 + x23118;
double x23120 = x10167*x17470;
double x23121 = x20600 + x23120;
double x23122 = p6_b_dot*x17208;
double x23123 = x23122*x542;
double x23124 = x20605 + x23123;
double x23125 = x158*x23099;
double x23126 = x158*x23100;
double x23127 = x23125 + x23126;
double x23128 = x158*x23095;
double x23129 = x17751*x4328;
double x23130 = -x23128 - x23129;
double x23131 = x20614 + x23127 + x23130;
double x23132 = p6_b*x11331;
double x23133 = x14305*x19 + x14306*x19 + x14325*x19 + x14328*x19 - x22963*x7333 - x23002*x563 + x23092*x7333 - x23132*x533;
double x23134 = x22960*x8342;
double x23135 = x17502*x23114;
double x23136 = x10323*x17144;
double x23137 = x10324*x17144;
double x23138 = 15*x23089;
double x23139 = x10395*x11328;
double x23140 = x10398*x11328;
double x23141 = x17710*x4280;
double x23142 = x10252*x11328;
double x23143 = p5_b*x11328*x4312;
double x23144 = 3*x17751*x4181;
double x23145 = x10185*x17191;
double x23146 = x17191*x4272;
double x23147 = x10303*x22759;
double x23148 = 8*x23108;
double x23149 = x14440*x19;
double x23150 = x23148 + x23149;
double x23151 = x11331*x4282;
double x23152 = x10395*x11331;
double x23153 = x10398*x11331;
double x23154 = x10303*x17475;
double x23155 = -x23154;
double x23156 = x10167*x17475 + x10252*x11331 + x11331*x14430 - x14384*x19 - x14389*x19 - x14408*x19 - x14409*x19 - x22963*x8342 + x23002*x4312 + x23092*x8342 + x23151 - x23152 - x23153 + x23155;
double x23157 = x10323*x17470;
double x23158 = x10324*x17470;
double x23159 = x23002*x542;
double x23160 = x23159*x286;
double x23161 = x10341*x22254;
double x23162 = x154*x22969;
double x23163 = x154*x22970;
double x23164 = 3*x23152;
double x23165 = 3*x23153;
double x23166 = 5*x23151;
double x23167 = x23132*x512;
double x23168 = x154*x23167;
double x23169 = x23099*x286;
double x23170 = x23100*x286;
double x23171 = x23116 + x23121;
double x23172 = x17710*x4264;
double x23173 = -x23147;
double x23174 = x11328*x542;
double x23175 = x17751*x4180;
double x23176 = x14476*x23174 - x14478*x23044 + x154*x22965 + x154*x22966 - x154*x23172 + x22228*x23103 + x22228*x23105 - x23095*x286 - x23096*x286 - 3*x23139 - 3*x23140 + x23173 + x23175*x286;
double x23177 = x10323*x22221;
double x23178 = x10324*x22221;
double x23179 = x158*x23159;
double x23180 = x10341*x22222;
double x23181 = x14494*x19;
double x23182 = x14497*x19;
double x23183 = x17475*x4282;
double x23184 = x158*x23167;
double x23185 = -x22995 - x22996;
double x23186 = -x22216*x23114;
double x23187 = x10167*x22221;
double x23188 = -x23123;
double x23189 = x23117 + x23188;
double x23190 = x20692 + x23186 + x23187 + x23189;
double x23191 = x22196*x542;
double x23192 = x22998 + x22999;
double x23193 = p5_b*x23191 - p6_b*x23061 - x17710*x4328 + x17751*x4245 + x22216*x23103 + x22216*x23105 - x22992*x542 - x23122*x512 + x23192;
double x23194 = x22274*x23103;
double x23195 = x22274*x23105;
double x23196 = x14531*x23174;
double x23197 = x23175*x327;
double x23198 = x129*x22965;
double x23199 = x129*x22966;
double x23200 = x129*x23172;
double x23201 = x14534*x23044;
double x23202 = 6*x23139;
double x23203 = 6*x23140;
double x23204 = x10303*x22281;
double x23205 = x23095*x327;
double x23206 = x23096*x327;
double x23207 = -x10167*x22258;
double x23208 = x14543*x19;
double x23209 = 4*x23089;
double x23210 = x23207 + x23208 + x23209;
double x23211 = x23078 + x23079 - x23080;
double x23212 = x17490*x542;
double x23213 = x22274*x23114;
double x23214 = x20717 + x23212 + x23213;
double x23215 = x158*x23092;
double x23216 = x11331*x569;
double x23217 = -x10303*x17470 + x10323*x22258 + x10324*x22258 + x10341*x22260 - x10395*x17183 - x10398*x17183 + x129*x22969 - x129*x23167 + x22988 - x23086 - x23099*x327 - x23100*x327 + x23159*x327 + x23215 + x23216*x533 - x23216*x563;
double x23218 = x11359*x578;
double x23219 = x23218*x7622;
double x23220 = x10452*x17144;
double x23221 = x14554*x19;
double x23222 = -x14557*x19 - x23221*x7622;
double x23223 = x10470*x11328;
double x23224 = x17792*x4346;
double x23225 = x11359*x286;
double x23226 = x23225*x572;
double x23227 = x10470*x11331;
double x23228 = x11331*x4355;
double x23229 = -x14589*x19 + x23221 - x23227 - x23228;
double x23230 = 42*x23089;
double x23231 = p6_b*x4346;
double x23232 = x22141*x23231;
double x23233 = p7_b*x4264;
double x23234 = x22141*x23233;
double x23235 = 14*x23108;
double x23236 = x11359*x4370;
double x23237 = 30*x23236;
double x23238 = x23218*x7656;
double x23239 = x10619*x17191;
double x23240 = p7_b*x542;
double x23241 = x17191*x23240;
double x23242 = p7_b*x4346;
double x23243 = x22228*x23242;
double x23244 = -x23243;
double x23245 = x14667*x19;
double x23246 = -x23245;
double x23247 = x23244 + x23246;
double x23248 = x10452*x17470;
double x23249 = x20752 + x23248;
double x23250 = p7_b_dot*x17208;
double x23251 = x23250*x572;
double x23252 = x20757 + x23251;
double x23253 = x158*x23227;
double x23254 = x158*x23228;
double x23255 = x23253 + x23254;
double x23256 = x158*x23223;
double x23257 = x17792*x4409;
double x23258 = -x23256 - x23257;
double x23259 = x20763 + x23255 + x23258;
double x23260 = p7_b*x11331;
double x23261 = x14601*x19 + x14602*x19 + x14620*x19 + x14623*x19 - x23092*x7656 - x23132*x593 + x23221*x7656 - x23260*x563;
double x23262 = 17*x23089;
double x23263 = x17502*x23242;
double x23264 = x10612*x17144;
double x23265 = x10613*x17144;
double x23266 = x10600*x23218;
double x23267 = x10692*x11328;
double x23268 = x10695*x11328;
double x23269 = x17751*x4347;
double x23270 = x10537*x11328;
double x23271 = x11328*x572;
double x23272 = x14716*x23271;
double x23273 = 3*x17792*x4280;
double x23274 = x10470*x17191;
double x23275 = x17191*x4355;
double x23276 = x10589*x22759;
double x23277 = 9*x23236;
double x23278 = x14731*x19;
double x23279 = x23277 + x23278;
double x23280 = x10692*x11331;
double x23281 = x10695*x11331;
double x23282 = x10589*x17475;
double x23283 = -x23282;
double x23284 = x23132*x572;
double x23285 = x10696*x11331;
double x23286 = x10452*x17475 + x10537*x11331 - x10600*x23092 + x10600*x23221 + x11331*x4364 - x14681*x19 - x14686*x19 - x14702*x19 - x14703*x19 + x1858*x23284 - x23280 - x23281 + x23283 + 3*x23285;
double x23287 = x10612*x17470;
double x23288 = x10613*x17470;
double x23289 = x23284*x286;
double x23290 = 7*x23285;
double x23291 = x154*x23099;
double x23292 = x154*x23100;
double x23293 = 3*x23280;
double x23294 = 3*x23281;
double x23295 = x10619*x22252;
double x23296 = x23260*x542;
double x23297 = x154*x23296;
double x23298 = x23227*x286;
double x23299 = x23228*x286;
double x23300 = x23244 + x23249;
double x23301 = x17751*x4346;
double x23302 = -x23276;
double x23303 = x17792*x4264;
double x23304 = x14764*x23271 - x14769*x23174 + x154*x23095 + x154*x23096 - x154*x23301 + x22228*x23231 + x22228*x23233 - x23223*x286 - x23224*x286 - 3*x23267 - 3*x23268 + x23302 + x23303*x286;
double x23305 = x10612*x22221;
double x23306 = x10613*x22221;
double x23307 = x158*x23284;
double x23308 = x10696*x17475;
double x23309 = x14785*x19;
double x23310 = x14788*x19;
double x23311 = x10619*x22222;
double x23312 = x158*x23296;
double x23313 = -x23125 - x23126;
double x23314 = -x22216*x23242;
double x23315 = x10452*x22221;
double x23316 = -x23251;
double x23317 = x23245 + x23316;
double x23318 = x20840 + x23314 + x23315 + x23317;
double x23319 = x22196*x572;
double x23320 = x23128 + x23129;
double x23321 = p6_b*x23319 - p7_b*x23191 - x17751*x4409 + x17792*x4328 + x22216*x23231 + x22216*x23233 - x23122*x572 - x23250*x542 + x23320;
double x23322 = x22274*x23231;
double x23323 = x22274*x23233;
double x23324 = x14817*x23271;
double x23325 = x23303*x327;
double x23326 = x129*x23095;
double x23327 = x129*x23096;
double x23328 = x129*x23301;
double x23329 = x14821*x23174;
double x23330 = 6*x23267;
double x23331 = 6*x23268;
double x23332 = p7_b_dot*x4414;
double x23333 = x11328*x23332;
double x23334 = x23223*x327;
double x23335 = x23224*x327;
double x23336 = -x10452*x22258;
double x23337 = x14832*x19;
double x23338 = x158*x23218;
double x23339 = x23336 + x23337 + x23338;
double x23340 = x23207 + x23208 - x23209;
double x23341 = x17490*x572;
double x23342 = x22274*x23242;
double x23343 = x20865 + x23341 + x23342;
double x23344 = x158*x23221;
double x23345 = x11331*x599;
double x23346 = x10612*x22258 + x10613*x22258 - x10692*x17183 - x10695*x17183 - x11331*x23332 + x129*x23099 - x129*x23296 + x23118 - x23215 - x23227*x327 - x23228*x327 + x23284*x327 + 16*x23285 + x23344 + x23345*x563 - x23345*x593;
double x23347 = x11359*x2617;
double x23348 = 16*x23347;
double x23349 = x10751*x17144;
double x23350 = x14848*x19;
double x23351 = -x14845*x19 - x23350*x327;
double x23352 = x11359*x608;
double x23353 = x10768*x11328;
double x23354 = x17833*x4428;
double x23355 = 8*x11359;
double x23356 = x23355*x4472;
double x23357 = x10768*x11331;
double x23358 = x11331*x4436;
double x23359 = -x14868*x19 + x23350 - x23357 - x23358;
double x23360 = x23218*x6709;
double x23361 = p7_b*x4428;
double x23362 = x22141*x23361;
double x23363 = p8_b*x4346;
double x23364 = x22141*x23363;
double x23365 = 16*x23236;
double x23366 = x11359*x2575;
double x23367 = 34*x23366;
double x23368 = 48*x23347;
double x23369 = x17144*x4446;
double x23370 = p8_b*x572;
double x23371 = x17191*x23370;
double x23372 = p8_b*x4428;
double x23373 = x22228*x23372;
double x23374 = -x23373;
double x23375 = x14955*x19;
double x23376 = -x23375;
double x23377 = x23374 + x23376;
double x23378 = x10751*x17470;
double x23379 = x20896 + x23378;
double x23380 = p8_b_dot*x17208;
double x23381 = x23380*x602;
double x23382 = x20901 + x23381;
double x23383 = x158*x23357;
double x23384 = x158*x23358;
double x23385 = x23383 + x23384;
double x23386 = x158*x23353;
double x23387 = x17833*x4489;
double x23388 = -x23386 - x23387;
double x23389 = x20910 + x23385 + x23388;
double x23390 = p8_b*x11331;
double x23391 = x14890*x19 + x14891*x19 + x14909*x19 + x14912*x19 - x23221*x6709 - x23260*x623 + x23350*x6709 - x23390*x593;
double x23392 = x10905*x23218;
double x23393 = x17502*x23372;
double x23394 = x10916*x17144;
double x23395 = x10917*x17144;
double x23396 = 19*x23347;
double x23397 = x10990*x11328;
double x23398 = x10993*x11328;
double x23399 = x17792*x4444;
double x23400 = x10841*x11328;
double x23401 = x11328*x602;
double x23402 = x15009*x23401;
double x23403 = 3*x17833*x4347;
double x23404 = x10768*x17191;
double x23405 = x17191*x4436;
double x23406 = x10894*x22759;
double x23407 = x22596*x2575;
double x23408 = x15025*x19;
double x23409 = x23407 + x23408;
double x23410 = x11331*x4446;
double x23411 = x10990*x11331;
double x23412 = x10993*x11331;
double x23413 = x10894*x17475;
double x23414 = -x23413;
double x23415 = x23260*x602;
double x23416 = p8_b_dot*x11331;
double x23417 = x10751*x17475 + x10841*x11331 - x10905*x23221 + x10905*x23350 - x14969*x19 - x14974*x19 - x14993*x19 - x14994*x19 + x1858*x23415 + x23410 - x23411 - x23412 + x23414 + x23416*x2621;
double x23418 = x10916*x17470;
double x23419 = x10917*x17470;
double x23420 = x23415*x286;
double x23421 = x10979*x22254;
double x23422 = x154*x23227;
double x23423 = x154*x23228;
double x23424 = 3*x23411;
double x23425 = 3*x23412;
double x23426 = 5*x23410;
double x23427 = x23390*x572;
double x23428 = x154*x23427;
double x23429 = x23357*x286;
double x23430 = x23358*x286;
double x23431 = x23374 + x23379;
double x23432 = x17792*x4428;
double x23433 = -x23406;
double x23434 = x17833*x4346;
double x23435 = x15058*x23401 - x15061*x23271 + x154*x23223 + x154*x23224 - x154*x23432 + x22228*x23361 + x22228*x23363 - x23353*x286 - x23354*x286 - 3*x23397 - 3*x23398 + x23433 + x23434*x286;
double x23436 = x10916*x22221;
double x23437 = x10917*x22221;
double x23438 = x158*x23415;
double x23439 = x10979*x22222;
double x23440 = x15078*x19;
double x23441 = x15081*x19;
double x23442 = x17475*x4446;
double x23443 = x158*x23427;
double x23444 = -x23253 - x23254;
double x23445 = -x22216*x23372;
double x23446 = x10751*x22221;
double x23447 = -x23381;
double x23448 = x23375 + x23447;
double x23449 = x20990 + x23445 + x23446 + x23448;
double x23450 = p7_b*x602;
double x23451 = x23256 + x23257;
double x23452 = -p8_b*x23319 - x17792*x4489 + x17833*x4409 + x22196*x23450 + x22216*x23361 + x22216*x23363 - x23250*x602 - x23380*x572 + x23451;
double x23453 = x22274*x23361;
double x23454 = x22274*x23363;
double x23455 = x15114*x23401;
double x23456 = x23434*x327;
double x23457 = x129*x23223;
double x23458 = x129*x23224;
double x23459 = x129*x23432;
double x23460 = x11022*x11328;
double x23461 = 6*x23397;
double x23462 = 6*x23398;
double x23463 = x10894*x22281;
double x23464 = x23353*x327;
double x23465 = x17833*x4429;
double x23466 = -x10751*x22258;
double x23467 = x15125*x19;
double x23468 = 4*x23347;
double x23469 = x23466 + x23467 + x23468;
double x23470 = x23336 + x23337 - x23338;
double x23471 = x17490*x602;
double x23472 = x22274*x23372;
double x23473 = x21016 + x23471 + x23472;
double x23474 = x158*x23350;
double x23475 = x11331*x629;
double x23476 = -x10894*x17470 + x10916*x22258 + x10917*x22258 + x10979*x22260 - x10990*x17183 - x10993*x17183 - x11022*x11331 + x129*x23227 + x23246 - x23344 - x23357*x327 - x23358*x327 + x23415*x327 + x23474 + x23475*x593 - x23475*x623;
double x23477 = x17507*x1927;
double x23478 = x17144*x390;
double x23479 = p9_b*x23478;
double x23480 = -x15137*x19 - x22432*x4023;
double x23481 = x11359*x390;
double x23482 = 9*x11359*x3867;
double x23483 = -x15144*x19 + x22432 - x22502 - x22504;
double x23484 = 54*x23347;
double x23485 = p8_b*x22491;
double x23486 = 6*x23485;
double x23487 = x4428*x5;
double x23488 = x12748*x23487;
double x23489 = 18*x23366;
double x23490 = 38*x22454;
double x23491 = 54*x22457;
double x23492 = x17144*x4517;
double x23493 = x11121*x17191;
double x23494 = -x22536;
double x23495 = x22516 + x23494;
double x23496 = x21039 + x22538;
double x23497 = x15151*x19 + x15152*x19 + x15158*x19 + x15161*x19 - x22430*x623 + x22432*x8287 - x23350*x8287 - x23390*x414;
double x23498 = 21*x23347;
double x23499 = x22491*x8780;
double x23500 = p8_b*x23478;
double x23501 = x11111*x17144;
double x23502 = 21*x22457;
double x23503 = x11176*x11328;
double x23504 = x11179*x11328;
double x23505 = x17833*x3866;
double x23506 = x11085*x11328;
double x23507 = 3*x3867;
double x23508 = p8_b*x11328;
double x23509 = x23507*x23508;
double x23510 = x17544*x4428;
double x23511 = x1858*x23510;
double x23512 = x17191*x8833;
double x23513 = x17191*x3901;
double x23514 = x22759*x8861;
double x23515 = x11331*x4517;
double x23516 = x11176*x11331;
double x23517 = x11179*x11331;
double x23518 = x17475*x8861;
double x23519 = -x23518;
double x23520 = x11331*x15193;
double x23521 = -x15175*x19 - x15180*x19 - x15194*x19 - x15195*x19 + x15207*x22432 - x15207*x23350 + x22430*x4472 + x22430*x933 + x22462 + x23390*x23507 + x23515 - x23516 - x23517 + x23519 + 3*x23520;
double x23522 = x1896*x23390;
double x23523 = x11111*x17470;
double x23524 = 7*x3867;
double x23525 = x23390*x23524;
double x23526 = 7*x23520;
double x23527 = x154*x23357;
double x23528 = x154*x23358;
double x23529 = 3*x23516;
double x23530 = 3*x23517;
double x23531 = 5*x23515;
double x23532 = x11121*x22252;
double x23533 = x22430*x23524;
double x23534 = x22504*x286;
double x23535 = x11129*x11328;
double x23536 = x17544*x3866;
double x23537 = x17833*x3865;
double x23538 = -x23514;
double x23539 = -x11121*x11328*x154 + x154*x23353 + x154*x23354 - x154*x23537 + 12*x23485 + x23487*x8670 + x23494 - 3*x23503 - 3*x23504 + x23508*x23524 + x23510*x286 - 7*x23535 - 7*x23536 + x23538;
double x23540 = x1921*x23390;
double x23541 = x11111*x22221;
double x23542 = x23390*x4539;
double x23543 = x15193*x17475;
double x23544 = x15269*x19;
double x23545 = x15272*x19;
double x23546 = x1923*x23416;
double x23547 = x22514*x602;
double x23548 = -x23383 - x23384;
double x23549 = x23386 + x23387;
double x23550 = -x22492 + x22567;
double x23551 = p8_b*x22497 - p9_b_dot*x17208*x602 - x11176*x17144 + x17544*x4489 - x17833*x3927 - x23401*x8892 + 8*x23485 + x23487*x8907 + x23549 + x23550;
double x23552 = 18*x23485;
double x23553 = x23487*x8980;
double x23554 = 16*x3867;
double x23555 = x23508*x23554;
double x23556 = x17544*x4429;
double x23557 = x129*x23353;
double x23558 = x129*x23354;
double x23559 = x129*x23537;
double x23560 = x11192*x11328;
double x23561 = 6*x23503;
double x23562 = 6*x23504;
double x23563 = x22281*x8861;
double x23564 = 16*x23535;
double x23565 = 16*x23536;
double x23566 = x23466 + x23467 - x23468;
double x23567 = x11331*x633;
double x23568 = x22548 - x22550;
double x23569 = x11111*x22258 - x11176*x17183 - x11179*x17183 - x11192*x11331 + x129*x23357 - x17470*x8861 + x1927*x23390 - x22430*x23554 - x22504*x327 + x23376 + x23390*x23554 - x23474 + 16*x23520 - x23567*x414 + x23567*x623 + x23568;
double x23570 = q3_b*x22308;
double x23571 = x17507*x685;
double x23572 = -x12313*x19 + x12315*x19;
double x23573 = x17913*x3765;
double x23574 = x1858*x22292;
double x23575 = x12020*x19 + x12328*x19 - x22347 - x22349;
double x23576 = x22297*x4023;
double x23577 = 10*x22319;
double x23578 = x22290*x6593;
double x23579 = q3_b*x4568;
double x23580 = x22141*x23579;
double x23581 = q4_b*x3765;
double x23582 = x22141*x23581;
double x23583 = x11359*x695;
double x23584 = x23583*x4023;
double x23585 = q3_b*x704;
double x23586 = x17191*x23585;
double x23587 = x17191*x4572;
double x23588 = -x22381;
double x23589 = x22358 + x23588;
double x23590 = q4_b*x11331;
double x23591 = x12332*x19;
double x23592 = -x12342*x19 - x12343*x19 - x12344*x19 + x12356*x19 + x12361*x19 - x22304*x714 + x22379 - x23590*x685 + x23591*x4023;
double x23593 = x17502*x22354;
double x23594 = x1858*x22297;
double x23595 = x17144*x695;
double x23596 = q3_b*x23595;
double x23597 = q4_b*x22308;
double x23598 = x1858*x23583;
double x23599 = x11328*x6540;
double x23600 = x11328*x6543;
double x23601 = x11328*x6420;
double x23602 = x17950*x3766;
double x23603 = x17913*x4580;
double x23604 = x12429*x22373;
double x23605 = x17191*x6256;
double x23606 = x17191*x3805;
double x23607 = x21169*x3835;
double x23608 = -x23607;
double x23609 = x12450*x19;
double x23610 = -x23609;
double x23611 = x23608 + x23610;
double x23612 = x11331*x675;
double x23613 = -x23612*x6520;
double x23614 = x22373*x6520;
double x23615 = x21164 + x23613 + x23614;
double x23616 = x11331*x6540;
double x23617 = x11331*x6543;
double x23618 = x23590*x675;
double x23619 = -x12389*x19 - x12392*x19 - x12393*x19 - x12410*x19 - x12411*x19 + x1858*x23591 + x1858*x23618 + x22172*x4572 + x22174*x4590 + x22304*x4570 + x22304*x4581 - x23616 - x23617;
double x23620 = x22216*x23579;
double x23621 = x22216*x23581;
double x23622 = x17913*x4642;
double x23623 = q4_b*x22338;
double x23624 = x22336*x704;
double x23625 = q4_b_dot*x17208;
double x23626 = x23625*x675;
double x23627 = x11328*x6538;
double x23628 = q3_b*x23627;
double x23629 = x17950*x3839;
double x23630 = x23625*x704;
double x23631 = x21191 + x23630;
double x23632 = x11328*x6569;
double x23633 = x158*x23632;
double x23634 = x17950*x4642;
double x23635 = -x23633 - x23634;
double x23636 = x11331*x6569;
double x23637 = x158*x23636;
double x23638 = x11331*x4610;
double x23639 = x158*x23638;
double x23640 = x23637 + x23639;
double x23641 = x23631 + x23635 + x23640;
double x23642 = x22344 + x22345;
double x23643 = q4_b*x4568;
double x23644 = x22216*x23643;
double x23645 = x21199 + x23644;
double x23646 = x12523*x19;
double x23647 = -x23646;
double x23648 = -x23590*x4623;
double x23649 = x23647 + x23648;
double x23650 = -x12477*x19 - x12480*x19 - x22222*x4572 + x22222*x4590 + x22304*x4623 - x22304*x6538 - x22348 - x22350 + x23590*x3818 + x23590*x6545 + x23649;
double x23651 = x22228*x4568;
double x23652 = q3_b*x23651;
double x23653 = q4_b*x22362;
double x23654 = x17913*x4568;
double x23655 = x23654*x286;
double x23656 = x12556*x22373;
double x23657 = x154*x23632;
double x23658 = x17950*x4665;
double x23659 = 3*x23599;
double x23660 = 3*x23600;
double x23661 = x11328*x704;
double x23662 = x12557*x23661;
double x23663 = 5*x23602;
double x23664 = x22343*x286;
double x23665 = 7*x22369;
double x23666 = x23631 + x23647;
double x23667 = x23590*x4597;
double x23668 = -x23667;
double x23669 = q4_b*x23651;
double x23670 = x21233 + x23668 + x23669;
double x23671 = x22304*x704;
double x23672 = x154*x23636 + x154*x23638 - x154*x23671 - x22252*x4572 + x22254*x4590 + x22304*x4597 - x22347*x286 - x22349*x286 + x23590*x3792 - 3*x23616 - 3*x23617 + x23618*x286;
double x23673 = x22304*x4639;
double x23674 = x23590*x3836;
double x23675 = x22260*x4590;
double x23676 = x23618*x327;
double x23677 = x129*x23636;
double x23678 = x11331*x714;
double x23679 = x23678*x720;
double x23680 = x129*x23671;
double x23681 = x22391*x720;
double x23682 = x17183*x6540;
double x23683 = x17183*x6543;
double x23684 = x12290*x23612;
double x23685 = x22347*x327;
double x23686 = x22349*x327;
double x23687 = x22274*x4568;
double x23688 = -q4_b*x23687;
double x23689 = x158*x23591;
double x23690 = x23688 + x23689;
double x23691 = x22402 + x22403 - x22404;
double x23692 = x23590*x4639;
double x23693 = x21258 + x23611 + x23692;
double x23694 = x158*x23583;
double x23695 = -x23630;
double x23696 = x17950*x4568;
double x23697 = q3_b*x23687 + q4_b*x22401 - x12132*x23661 - x12290*x22373 + x12594*x22373 + x129*x23632 + x129*x23696 - x17950*x4559 - x22343*x327 - 16*x22369 - x22409 - 6*x23599 - 6*x23600 + x23654*x327 + x23694 + x23695;
double x23698 = q4_b*x23595;
double x23699 = x23583*x6674;
double x23700 = -x15305*x19 + x23591*x6674;
double x23701 = x22840*x704;
double x23702 = x15315*x19 + x23591 - x23636 - x23638;
double x23703 = x23583*x6716;
double x23704 = 14*x11359;
double x23705 = x23704*x6593;
double x23706 = x23355*x6787;
double x23707 = q4_b*x4658;
double x23708 = x22141*x23707;
double x23709 = q5_b*x4568;
double x23710 = x22141*x23709;
double x23711 = x11359*x724;
double x23712 = x23711*x6716;
double x23713 = q4_b*x733;
double x23714 = x17191*x23713;
double x23715 = x17191*x4663;
double x23716 = -x23669;
double x23717 = x23647 + x23716;
double x23718 = q5_b*x11331;
double x23719 = x15323*x19;
double x23720 = -x15333*x19 - x15334*x19 + x15346*x19 + x15350*x19 - x23590*x743 - x23591*x6716 + x23667 - x23718*x714 + x23719*x6716;
double x23721 = x154*x23583;
double x23722 = x17502*x23643;
double x23723 = x17144*x724;
double x23724 = q4_b*x23723;
double x23725 = q5_b*x23595;
double x23726 = x154*x23711;
double x23727 = x11328*x6857;
double x23728 = x11328*x6860;
double x23729 = x11328*x6755;
double x23730 = x17987*x4645;
double x23731 = x17950*x4658;
double x23732 = x1858*x23731;
double x23733 = x15421*x23661;
double x23734 = x17191*x6569;
double x23735 = x17191*x4610;
double x23736 = x11359*x6787;
double x23737 = 3*x23736;
double x23738 = -x15439*x19;
double x23739 = -x23737 + x23738;
double x23740 = -x11331*x6837;
double x23741 = x11328*x6837;
double x23742 = x21308 + x23740 + x23741;
double x23743 = x11331*x6857;
double x23744 = x11331*x6860;
double x23745 = x23718*x704;
double x23746 = -x15376*x19 - x15379*x19 - x154*x23591 + x154*x23719 - x15400*x19 - x15401*x19 + x1858*x23745 + x22172*x4663 + x22174*x4681 + x23590*x4661 + x23590*x4671 - x23743 - x23744;
double x23747 = x22216*x23707;
double x23748 = x22216*x23709;
double x23749 = x17950*x4733;
double x23750 = q5_b*x23627;
double x23751 = x23625*x733;
double x23752 = q5_b_dot*x17208;
double x23753 = x23752*x704;
double x23754 = x11328*x7171;
double x23755 = q4_b*x23754;
double x23756 = x17987*x4642;
double x23757 = x23752*x733;
double x23758 = x21335 + x23757;
double x23759 = x11328*x6883;
double x23760 = x158*x23759;
double x23761 = x17987*x4733;
double x23762 = -x23760 - x23761;
double x23763 = x11331*x6883;
double x23764 = x158*x23763;
double x23765 = x11331*x4701;
double x23766 = x158*x23765;
double x23767 = x23764 + x23766;
double x23768 = x23758 + x23762 + x23767;
double x23769 = x23633 + x23634;
double x23770 = q5_b*x4658;
double x23771 = x22216*x23770;
double x23772 = x21346 + x23771;
double x23773 = x15520*x19;
double x23774 = -x23773;
double x23775 = -x23718*x4714;
double x23776 = x23774 + x23775;
double x23777 = -x15471*x19 - x15474*x19 - x22222*x4663 + x22222*x4681 + x23590*x4714 - x23590*x7171 - x23637 - x23639 + x23718*x4623 + x23718*x6538 + x23776;
double x23778 = x22228*x4658;
double x23779 = q4_b*x23778;
double x23780 = q5_b*x23651;
double x23781 = x17950*x4753;
double x23782 = x15553*x23661;
double x23783 = x154*x23759;
double x23784 = x17987*x4673;
double x23785 = 3*x23727;
double x23786 = 3*x23728;
double x23787 = x11328*x733;
double x23788 = x15555*x23787;
double x23789 = x17987*x4665;
double x23790 = x23632*x286;
double x23791 = x23696*x286;
double x23792 = x23758 + x23774;
double x23793 = x23718*x4688;
double x23794 = -x23793;
double x23795 = q5_b*x23778;
double x23796 = x21383 + x23794 + x23795;
double x23797 = x23590*x733;
double x23798 = x154*x23763 + x154*x23765 - x154*x23797 - x22252*x4663 + x22254*x4681 + x23590*x4688 - x23636*x286 - x23638*x286 + x23718*x4597 - 3*x23743 - 3*x23744 + x23745*x286;
double x23799 = x23590*x4730;
double x23800 = x23718*x4639;
double x23801 = x22260*x4681;
double x23802 = x23745*x327;
double x23803 = x129*x23763;
double x23804 = x11331*x743;
double x23805 = x23804*x749;
double x23806 = x129*x23797;
double x23807 = x23678*x749;
double x23808 = x17183*x6857;
double x23809 = x17183*x6860;
double x23810 = x11331*x12596*x704;
double x23811 = x23636*x327;
double x23812 = x23638*x327;
double x23813 = x23688 - x23689;
double x23814 = x22274*x4658;
double x23815 = -q5_b*x23814;
double x23816 = -x21287*x3835;
double x23817 = x158*x23719;
double x23818 = x23815 + x23816 + x23817;
double x23819 = x15604*x19;
double x23820 = x23718*x4730;
double x23821 = x21408 - x23819 + x23820;
double x23822 = x158*x23711;
double x23823 = -x23757;
double x23824 = x17987*x4658;
double x23825 = q4_b*x23814 + q5_b*x23687 - x12438*x23787 - x12596*x23661 - x129*x17987*x4568 + x129*x23759 + x129*x23824 + x15589*x23661 - x23632*x327 - x23694 - x23696*x327 - 6*x23727 - 6*x23728 + x23731*x327 + x23822 + x23823;
double x23826 = q5_b*x23723;
double x23827 = x23711*x5224;
double x23828 = -x15612*x19 + x23719*x5224;
double x23829 = x22967*x733;
double x23830 = x15620*x19 + x23719 - x23763 - x23765;
double x23831 = x23711*x7034;
double x23832 = 18*x23736;
double x23833 = x22596*x7102;
double x23834 = q5_b*x4746;
double x23835 = x22141*x23834;
double x23836 = q6_b*x4658;
double x23837 = x22141*x23836;
double x23838 = x11359*x753;
double x23839 = x23838*x7034;
double x23840 = q5_b*x762;
double x23841 = x17191*x23840;
double x23842 = x17191*x4751;
double x23843 = -x23795;
double x23844 = x23774 + x23843;
double x23845 = q6_b*x11331;
double x23846 = x15628*x19;
double x23847 = -x15638*x19 - x15639*x19 + x15651*x19 + x15656*x19 - x23718*x772 - x23719*x7034 + x23793 - x23845*x743 + x23846*x7034;
double x23848 = x23711*x286;
double x23849 = x17502*x23770;
double x23850 = x17144*x753;
double x23851 = q5_b*x23850;
double x23852 = q6_b*x23723;
double x23853 = x23838*x286;
double x23854 = x11328*x7167;
double x23855 = x11328*x7170;
double x23856 = x11328*x7069;
double x23857 = x18024*x4659;
double x23858 = x17987*x4746;
double x23859 = x1858*x23858;
double x23860 = x15720*x23787;
double x23861 = x17191*x6883;
double x23862 = x17191*x4701;
double x23863 = x5540*x762;
double x23864 = x11359*x23863;
double x23865 = -x15748*x19;
double x23866 = -x23864 + x23865;
double x23867 = x11331*x733;
double x23868 = -x23867*x6912;
double x23869 = x23787*x6912;
double x23870 = x21454 + x23868 + x23869;
double x23871 = x11331*x7167;
double x23872 = x11331*x7170;
double x23873 = x23845*x733;
double x23874 = -x15681*x19 - x15684*x19 - x15702*x19 - x15703*x19 + x1858*x23873 + x22172*x4751 + x22174*x4769 + x23718*x4749 + x23718*x4759 - x23719*x286 + x23846*x286 - x23871 - x23872;
double x23875 = x22216*x23834;
double x23876 = x22216*x23836;
double x23877 = x17987*x4821;
double x23878 = q6_b*x23754;
double x23879 = x23752*x762;
double x23880 = q6_b_dot*x17208;
double x23881 = x23880*x733;
double x23882 = x11328*x7165;
double x23883 = q5_b*x23882;
double x23884 = x18024*x4733;
double x23885 = x23880*x762;
double x23886 = x21484 + x23885;
double x23887 = x11328*x7193;
double x23888 = x158*x23887;
double x23889 = x18024*x4821;
double x23890 = -x23888 - x23889;
double x23891 = x11331*x7193;
double x23892 = x158*x23891;
double x23893 = x11331*x4789;
double x23894 = x158*x23893;
double x23895 = x23892 + x23894;
double x23896 = x23886 + x23890 + x23895;
double x23897 = x23760 + x23761;
double x23898 = q6_b*x4746;
double x23899 = x22216*x23898;
double x23900 = x21492 + x23899;
double x23901 = x15817*x19;
double x23902 = -x23901;
double x23903 = -x23845*x4802;
double x23904 = x23902 + x23903;
double x23905 = -x15770*x19 - x15773*x19 - x22222*x4751 + x22222*x4769 + x23718*x4802 - x23718*x7165 - x23764 - x23766 + x23845*x4714 + x23845*x7171 + x23904;
double x23906 = x22228*x4746;
double x23907 = q5_b*x23906;
double x23908 = q6_b*x23778;
double x23909 = x17987*x4761;
double x23910 = x15850*x23787;
double x23911 = x154*x23887;
double x23912 = x18024*x4746;
double x23913 = x154*x23912;
double x23914 = 3*x23854;
double x23915 = 3*x23855;
double x23916 = x11328*x762;
double x23917 = x15852*x23916;
double x23918 = x18024*x4673;
double x23919 = x23759*x286;
double x23920 = x17987*x4753;
double x23921 = x23886 + x23902;
double x23922 = x23845*x4776;
double x23923 = -x23922;
double x23924 = q6_b*x23906;
double x23925 = x21529 + x23923 + x23924;
double x23926 = x23718*x762;
double x23927 = x154*x23891 + x154*x23893 - x154*x23926 - x22252*x4751 + x22254*x4769 + x23718*x4776 - x23763*x286 - x23765*x286 + x23845*x4688 - 3*x23871 - 3*x23872 + x23873*x286;
double x23928 = x23718*x4818;
double x23929 = x23845*x4730;
double x23930 = x22260*x4769;
double x23931 = x23873*x327;
double x23932 = x129*x23891;
double x23933 = x11331*x772;
double x23934 = x23933*x778;
double x23935 = x129*x23926;
double x23936 = x23804*x778;
double x23937 = x17183*x7167;
double x23938 = x17183*x7170;
double x23939 = x15591*x23867;
double x23940 = x23763*x327;
double x23941 = x23765*x327;
double x23942 = x22274*x4746;
double x23943 = -q6_b*x23942;
double x23944 = -x21459*x3835;
double x23945 = x158*x23846;
double x23946 = x23943 + x23944 + x23945;
double x23947 = x23815 + x23816 - x23817;
double x23948 = x15902*x19;
double x23949 = x23845*x4818;
double x23950 = x21555 - x23948 + x23949;
double x23951 = x158*x23838;
double x23952 = -x23885;
double x23953 = q5_b*x23942 + q6_b*x23814 - x129*x18024*x4658 + x129*x23887 + x129*x23912 - x15429*x23916 - x15591*x23787 + x15887*x23787 - x23759*x327 - x23822 - x23824*x327 - 6*x23854 - 6*x23855 + x23858*x327 + x23951 + x23952;
double x23954 = q6_b*x23850;
double x23955 = x23838*x3943;
double x23956 = -x15911*x19 + x23846*x3943;
double x23957 = x23097*x762;
double x23958 = x15919*x19 + x23846 - x23891 - x23893;
double x23959 = x23838*x7333;
double x23960 = 22*x11359*x7102;
double x23961 = x11359*x7408;
double x23962 = 12*x23961;
double x23963 = q6_b*x4834;
double x23964 = x22141*x23963;
double x23965 = q7_b*x4746;
double x23966 = x22141*x23965;
double x23967 = x11359*x782;
double x23968 = x23967*x7333;
double x23969 = q6_b*x791;
double x23970 = x17191*x23969;
double x23971 = x17191*x4839;
double x23972 = -x23924;
double x23973 = x23902 + x23972;
double x23974 = q7_b*x11331;
double x23975 = x15927*x19;
double x23976 = -x15937*x19 - x15938*x19 + x15950*x19 + x15954*x19 - x23845*x801 - x23846*x7333 + x23922 - x23974*x772 + x23975*x7333;
double x23977 = x23838*x4046;
double x23978 = x17502*x23898;
double x23979 = x17144*x782;
double x23980 = q6_b*x23979;
double x23981 = q7_b*x23850;
double x23982 = x23967*x4046;
double x23983 = x11328*x7486;
double x23984 = x11328*x7489;
double x23985 = x11328*x7372;
double x23986 = x18063*x4747;
double x23987 = x18024*x4834;
double x23988 = x1858*x23987;
double x23989 = x16026*x23916;
double x23990 = x17191*x7193;
double x23991 = x17191*x4789;
double x23992 = 5*x23961;
double x23993 = -x16044*x19;
double x23994 = -x23992 + x23993;
double x23995 = -x11331*x7465;
double x23996 = x11328*x7465;
double x23997 = x21605 + x23995 + x23996;
double x23998 = x11331*x7486;
double x23999 = x11331*x7489;
double x24000 = x23974*x762;
double x24001 = -x15982*x19 - x15985*x19 - x16006*x19 - x16007*x19 + x1858*x24000 + x22172*x4839 + x22174*x4857 + x23845*x4837 + x23845*x4847 - x23846*x4046 + x23975*x4046 - x23998 - x23999;
double x24002 = x22216*x23963;
double x24003 = x22216*x23965;
double x24004 = x18024*x4909;
double x24005 = q7_b*x23882;
double x24006 = x23880*x791;
double x24007 = q7_b_dot*x17208;
double x24008 = x24007*x762;
double x24009 = x11328*x7798;
double x24010 = q6_b*x24009;
double x24011 = x18063*x4821;
double x24012 = x24007*x791;
double x24013 = x21633 + x24012;
double x24014 = x11328*x7512;
double x24015 = x158*x24014;
double x24016 = x18063*x4909;
double x24017 = -x24015 - x24016;
double x24018 = x11331*x7512;
double x24019 = x158*x24018;
double x24020 = x11331*x4877;
double x24021 = x158*x24020;
double x24022 = x24019 + x24021;
double x24023 = x24013 + x24017 + x24022;
double x24024 = x23888 + x23889;
double x24025 = q7_b*x4834;
double x24026 = x22216*x24025;
double x24027 = x21644 + x24026;
double x24028 = x16113*x19;
double x24029 = -x24028;
double x24030 = -x23974*x4890;
double x24031 = x24029 + x24030;
double x24032 = -x16065*x19 - x16068*x19 - x22222*x4839 + x22222*x4857 + x23845*x4890 - x23845*x7798 - x23892 - x23894 + x23974*x4802 + x23974*x7165 + x24031;
double x24033 = x22228*x4834;
double x24034 = q6_b*x24033;
double x24035 = q7_b*x23906;
double x24036 = x23987*x286;
double x24037 = x16147*x23916;
double x24038 = x154*x24014;
double x24039 = x18063*x4834;
double x24040 = x154*x24039;
double x24041 = 3*x23983;
double x24042 = 3*x23984;
double x24043 = x11328*x791;
double x24044 = x16149*x24043;
double x24045 = x18063*x4746;
double x24046 = x154*x24045;
double x24047 = x23887*x286;
double x24048 = x18024*x4761;
double x24049 = x24013 + x24029;
double x24050 = x23974*x4864;
double x24051 = -x24050;
double x24052 = q7_b*x24033;
double x24053 = x21680 + x24051 + x24052;
double x24054 = x23845*x791;
double x24055 = x154*x24018 + x154*x24020 - x154*x24054 - x22252*x4839 + x22254*x4857 + x23845*x4864 - x23891*x286 - x23893*x286 + x23974*x4776 - 3*x23998 - 3*x23999 + x24000*x286;
double x24056 = x23845*x4906;
double x24057 = x23974*x4818;
double x24058 = x22260*x4857;
double x24059 = x24000*x327;
double x24060 = x129*x24018;
double x24061 = x11331*x801;
double x24062 = x24061*x807;
double x24063 = x129*x24054;
double x24064 = x23933*x807;
double x24065 = x17183*x7486;
double x24066 = x17183*x7489;
double x24067 = x11331*x15889*x762;
double x24068 = x23891*x327;
double x24069 = x23893*x327;
double x24070 = x22274*x4834;
double x24071 = -q7_b*x24070;
double x24072 = -x21585*x3835;
double x24073 = x158*x23975;
double x24074 = x24071 + x24072 + x24073;
double x24075 = x23943 + x23944 - x23945;
double x24076 = x16196*x19;
double x24077 = x23974*x4906;
double x24078 = x21705 - x24076 + x24077;
double x24079 = x158*x23967;
double x24080 = -x24012;
double x24081 = q6_b*x24070 + q7_b*x23942 + x129*x24014 + x129*x24039 - x129*x24045 - x15729*x24043 - x15889*x23916 + x16181*x23916 - x23887*x327 - x23912*x327 - x23951 - 6*x23983 - 6*x23984 + x23987*x327 + x24079 + x24080;
double x24082 = q7_b*x23979;
double x24083 = x23967*x7622;
double x24084 = -x16204*x19 + x23975*x7622;
double x24085 = x23225*x791;
double x24086 = x16212*x19 + x23975 - x24018 - x24020;
double x24087 = x23967*x7656;
double x24088 = x11359*x14316*x791;
double x24089 = x23704*x7729;
double x24090 = q7_b*x4921;
double x24091 = x22141*x24090;
double x24092 = q8_b*x4834;
double x24093 = x22141*x24092;
double x24094 = x11359*x811;
double x24095 = x24094*x7656;
double x24096 = q7_b*x820;
double x24097 = x17191*x24096;
double x24098 = x17191*x4926;
double x24099 = -x24052;
double x24100 = x24029 + x24099;
double x24101 = q8_b*x11331;
double x24102 = x16220*x19;
double x24103 = -x16230*x19 - x16231*x19 + x16243*x19 + x16248*x19 - x23974*x830 - x23975*x7656 + x24050 - x24101*x801 + x24102*x7656;
double x24104 = x23967*x7713;
double x24105 = x17502*x24025;
double x24106 = x17144*x811;
double x24107 = q7_b*x24106;
double x24108 = q8_b*x23979;
double x24109 = x24094*x7713;
double x24110 = x11328*x7793;
double x24111 = x11328*x7796;
double x24112 = x11328*x7692;
double x24113 = x18099*x4835;
double x24114 = x18063*x4921;
double x24115 = x1858*x24114;
double x24116 = x16312*x24043;
double x24117 = x17191*x7512;
double x24118 = x17191*x4877;
double x24119 = x22290*x7729;
double x24120 = -x16331*x19;
double x24121 = -x24119 + x24120;
double x24122 = x11331*x791;
double x24123 = -x24122*x7541;
double x24124 = x24043*x7541;
double x24125 = x21751 + x24123 + x24124;
double x24126 = x11331*x7793;
double x24127 = x11331*x7796;
double x24128 = x24101*x791;
double x24129 = -x16273*x19 - x16276*x19 - x16293*x19 - x16294*x19 + x1858*x24128 + x22172*x4926 + x22174*x4944 + x23974*x4924 + x23974*x4934 - x23975*x7713 + x24102*x7713 - x24126 - x24127;
double x24130 = x22216*x24090;
double x24131 = x22216*x24092;
double x24132 = x18063*x4996;
double x24133 = q8_b*x24009;
double x24134 = x24007*x820;
double x24135 = q8_b_dot*x17208;
double x24136 = x24135*x791;
double x24137 = x11328*x7791;
double x24138 = q7_b*x24137;
double x24139 = x18099*x4909;
double x24140 = x24135*x820;
double x24141 = x21780 + x24140;
double x24142 = x11328*x7822;
double x24143 = x158*x24142;
double x24144 = x18099*x4996;
double x24145 = -x24143 - x24144;
double x24146 = x11331*x7822;
double x24147 = x158*x24146;
double x24148 = x11331*x4964;
double x24149 = x158*x24148;
double x24150 = x24147 + x24149;
double x24151 = x24141 + x24145 + x24150;
double x24152 = x24015 + x24016;
double x24153 = q8_b*x4921;
double x24154 = x22216*x24153;
double x24155 = x21788 + x24154;
double x24156 = x16404*x19;
double x24157 = -x24156;
double x24158 = -x24101*x4977;
double x24159 = x24157 + x24158;
double x24160 = -x16357*x19 - x16360*x19 - x22222*x4926 + x22222*x4944 + x23974*x4977 - x23974*x7791 - x24019 - x24021 + x24101*x4890 + x24101*x7798 + x24159;
double x24161 = x22228*x4921;
double x24162 = q7_b*x24161;
double x24163 = q8_b*x24033;
double x24164 = x24114*x286;
double x24165 = x16436*x24043;
double x24166 = x154*x24142;
double x24167 = x18099*x4921;
double x24168 = x154*x24167;
double x24169 = 3*x24110;
double x24170 = 3*x24111;
double x24171 = x11328*x820;
double x24172 = x16437*x24171;
double x24173 = x18099*x4834;
double x24174 = x154*x24173;
double x24175 = x24014*x286;
double x24176 = x24039*x286;
double x24177 = x24141 + x24157;
double x24178 = x24101*x4951;
double x24179 = -x24178;
double x24180 = q8_b*x24161;
double x24181 = x21821 + x24179 + x24180;
double x24182 = x23974*x820;
double x24183 = x154*x24146 + x154*x24148 - x154*x24182 - x22252*x4926 + x22254*x4944 + x23974*x4951 - x24018*x286 - x24020*x286 + x24101*x4864 - 3*x24126 - 3*x24127 + x24128*x286;
double x24184 = x23974*x4993;
double x24185 = x24101*x4906;
double x24186 = x22260*x4944;
double x24187 = x24128*x327;
double x24188 = x129*x24146;
double x24189 = x11331*x830;
double x24190 = x24189*x836;
double x24191 = x129*x24182;
double x24192 = x24061*x836;
double x24193 = x17183*x7793;
double x24194 = x17183*x7796;
double x24195 = x16183*x24122;
double x24196 = x24018*x327;
double x24197 = x24020*x327;
double x24198 = x22274*x4921;
double x24199 = -q8_b*x24198;
double x24200 = -x21756*x3835;
double x24201 = x158*x24102;
double x24202 = x24199 + x24200 + x24201;
double x24203 = x24071 + x24072 - x24073;
double x24204 = x16491*x19;
double x24205 = x24101*x4993;
double x24206 = x21847 - x24204 + x24205;
double x24207 = x158*x24094;
double x24208 = -x24140;
double x24209 = q7_b*x24198 + q8_b*x24070 + x129*x24142 + x129*x24167 - x129*x24173 - x16034*x24171 - x16183*x24043 + x16472*x24043 + x18063*x4999 - x24014*x327 - x24039*x327 - x24079 - 6*x24110 - 6*x24111 + x24207 + x24208;
double x24210 = q8_b*x24106;
double x24211 = x24094*x327;
double x24212 = -x16499*x19 + x24102*x327;
double x24213 = x23355*x4924;
double x24214 = x16511*x19 + x24102 - x24146 - x24148;
double x24215 = x24094*x6709;
double x24216 = x11359*x70;
double x24217 = x24216*x5003;
double x24218 = x11359*x8046;
double x24219 = 16*x24218;
double x24220 = q8_b*x5010;
double x24221 = x22141*x24220;
double x24222 = q9_b*x4921;
double x24223 = x22141*x24222;
double x24224 = x11359*x840;
double x24225 = x24224*x6709;
double x24226 = q8_b*x849;
double x24227 = x17191*x24226;
double x24228 = x17191*x5015;
double x24229 = -x24180;
double x24230 = x24157 + x24229;
double x24231 = q9_b*x11331;
double x24232 = x16518*x19;
double x24233 = -x16528*x19 - x16529*x19 + x16539*x19 + x16543*x19 - x24101*x859 - x24102*x6709 + x24178 - x24231*x830 + x24232*x6709;
double x24234 = x24094*x8032;
double x24235 = 7*x24218;
double x24236 = x17502*x24153;
double x24237 = x17144*x840;
double x24238 = q8_b*x24237;
double x24239 = q9_b*x24106;
double x24240 = x24224*x8032;
double x24241 = x11328*x8119;
double x24242 = x11328*x8122;
double x24243 = x11328*x8006;
double x24244 = x18136*x4922;
double x24245 = x18099*x5010;
double x24246 = x1858*x24245;
double x24247 = x16611*x24171;
double x24248 = x17191*x7822;
double x24249 = x17191*x4964;
double x24250 = -x11331*x8097;
double x24251 = x11328*x8097;
double x24252 = x21895 + x24250 + x24251;
double x24253 = x16626*x19;
double x24254 = -x24253;
double x24255 = x11331*x8119;
double x24256 = x11331*x8122;
double x24257 = x24231*x820;
double x24258 = -x16567*x19 - x16570*x19 - x16591*x19 - x16592*x19 + x1858*x24257 + x22172*x5015 + x22174*x5032 + x24101*x5013 + x24101*x5022 - x24102*x8032 + x24232*x8032 + x24254 - x24255 - x24256;
double x24259 = x22216*x24220;
double x24260 = x22216*x24222;
double x24261 = q9_b*x5010;
double x24262 = x22216*x24261;
double x24263 = x18099*x5082;
double x24264 = q9_b*x24137;
double x24265 = x24135*x849;
double x24266 = x17208*x5028;
double x24267 = x22196*x24226;
double x24268 = x18136*x4996;
double x24269 = x16696*x19;
double x24270 = -x24269;
double x24271 = x17208*x849;
double x24272 = q9_b_dot*x24271;
double x24273 = x21943 + x24270 + x24272;
double x24274 = x24143 + x24144;
double x24275 = x24231*x5065;
double x24276 = -x24275;
double x24277 = x11328*x8146;
double x24278 = x158*x24277;
double x24279 = -x24278;
double x24280 = x18136*x5082;
double x24281 = -x24280;
double x24282 = x24276 + x24279 + x24281;
double x24283 = x11331*x8146;
double x24284 = x158*x24283;
double x24285 = x11331*x5052;
double x24286 = x158*x24285;
double x24287 = x24284 + x24286;
double x24288 = x21933 + x24287;
double x24289 = x24101*x849;
double x24290 = -x158*x24289 - x16647*x19 - x16651*x19 - x22222*x5015 + x22222*x5032 + x24101*x5065 - x24147 - x24149 + x24231*x4977 + x24231*x7791;
double x24291 = x24231*x5039;
double x24292 = -x24291;
double x24293 = x22228*x5010;
double x24294 = q8_b*x24293;
double x24295 = q9_b*x24161;
double x24296 = x24245*x286;
double x24297 = x16730*x24171;
double x24298 = x154*x24277;
double x24299 = x18136*x5010;
double x24300 = x154*x24299;
double x24301 = 3*x24241;
double x24302 = 3*x24242;
double x24303 = x11328*x849;
double x24304 = x16732*x24303;
double x24305 = x18136*x4921;
double x24306 = x154*x24305;
double x24307 = x24142*x286;
double x24308 = x24167*x286;
double x24309 = q9_b*x24293;
double x24310 = x21975 + x24309;
double x24311 = x154*x24283 + x154*x24285 - x154*x24289 - x22252*x5015 + x22254*x5032 + x24101*x5039 - x24146*x286 - x24148*x286 + x24231*x4951 - 3*x24255 - 3*x24256 + x24257*x286;
double x24312 = x24101*x5081;
double x24313 = x24231*x4993;
double x24314 = x16778*x19;
double x24315 = x24231*x5081;
double x24316 = x22260*x5032;
double x24317 = x24257*x327;
double x24318 = x129*x24283;
double x24319 = x11331*x859*x865;
double x24320 = x129*x24289;
double x24321 = x24189*x865;
double x24322 = x17183*x8119;
double x24323 = x17183*x8122;
double x24324 = x11331*x16474*x820;
double x24325 = x24146*x327;
double x24326 = x24148*x327;
double x24327 = -x24272;
double x24328 = x22001 + x24269;
double x24329 = x24327 + x24328;
double x24330 = x158*x24224;
double x24331 = x158*x24232;
double x24332 = x24330 + x24331;
double x24333 = x24199 + x24200 - x24201;
double x24334 = x22274*x5010;
double x24335 = q9_b*x24334;
double x24336 = x21875*x3835;
double x24337 = -x24335 - x24336;
double x24338 = q8_b*x24334 + q9_b*x24198 + x129*x24277 + x129*x24299 - x129*x24305 - x16321*x24303 - x16474*x24171 + x16765*x24171 - x18099*x4999 - x24142*x327 - x24207 - 6*x24241 - 6*x24242 + x24245*x327 + x24337;
double x24339 = q9_b*x24237;
double x24340 = x24224*x4023;
double x24341 = -x16789*x19 + x24232*x4023;
double x24342 = x11359*x4046*x849;
double x24343 = x16795*x19 + x24232 - x24283 - x24285;
double x24344 = x5091*x8287;
double x24345 = x24344*x5159;
double x24346 = q10_b*x11331;
double x24347 = x24346*x859;
double x24348 = q9_b*x877;
double x24349 = x17049*x24348;
double x24350 = x3607*x5096;
double x24351 = x24350*x5159;
double x24352 = x16807*x19;
double x24353 = x24232*x8287;
double x24354 = x16813*x19;
double x24355 = x16819*x19;
double x24356 = x24292 + x24327;
double x24357 = -x24284 - x24286;
double x24358 = x5*x5010;
double x24359 = x24278 + x24280;
double x24360 = q10_b_dot*x17191*x840 - x11359*x24344 + x11359*x24350 - x17051*x24348 + 34*x24218 + x24224*x8287 - x24358*x8320 + x24359 + x5098*x6*x872;
double x24361 = x5091*x8342;
double x24362 = x24361*x5159;
double x24363 = x24231*x5106;
double x24364 = x16841*x19;
double x24365 = x16846*x19;
double x24366 = x3607*x5107;
double x24367 = x24366*x5159;
double x24368 = x24232*x8342;
double x24369 = x11331*x8426;
double x24370 = x17049*x5109;
double x24371 = x11331*x5111;
double x24372 = x17049*x8491;
double x24373 = x24346*x849;
double x24374 = x1858*x24373;
double x24375 = q9_b_dot*x5091;
double x24376 = x22174*x24375;
double x24377 = x16860*x19;
double x24378 = x16861*x19;
double x24379 = -x24303*x8175;
double x24380 = x11331*x849;
double x24381 = x24380*x8175;
double x24382 = x22052 + x24379 + x24381;
double x24383 = x17051*x8491;
double x24384 = x11328*x8426;
double x24385 = x17051*x5109;
double x24386 = x11328*x24375;
double x24387 = -q10_b*x24237 - x11359*x24361 + x11359*x24366 + x16879*x24303 - x17191*x5052 - x17191*x8146 + x17502*x24261 - x18157*x5098 + x1858*x24386 + x24224*x8342 + x24235 + x24358*x876 + x24383 - x24384 - x24385;
double x24388 = x24346*x5039;
double x24389 = x17049*x3667;
double x24390 = q9_b*x24389;
double x24391 = q10_b*x24389;
double x24392 = x24373*x286;
double x24393 = x11331*x5091;
double x24394 = x24393*x8459;
double x24395 = x19608*x8493;
double x24396 = x17049*x8465;
double x24397 = 3*x24369;
double x24398 = 3*x24370;
double x24399 = x11331*x840;
double x24400 = x24399*x5129;
double x24401 = 5*x24372;
double x24402 = x24283*x286;
double x24403 = x24285*x286;
double x24404 = q10_b_dot*x5116*x6;
double x24405 = -x24404;
double x24406 = x16941*x19;
double x24407 = x22084 + x24405 + x24406;
double x24408 = x17051*x3667;
double x24409 = -x24309;
double x24410 = x11328*x5091;
double x24411 = q10_b*x24293 - q10_b*x24408 + q9_b*x24408 + x16970*x24303 + x17051*x8465 + x19588*x8493 - x24277*x286 - x24299*x286 - x24358*x5129 - 5*x24383 - 3*x24384 - 3*x24385 + x24409 + x24410*x8459;
double x24412 = x24346*x5065;
double x24413 = x17049*x3655;
double x24414 = q9_b*x24413;
double x24415 = q10_b*x24413;
double x24416 = x19523*x8493;
double x24417 = x158*x24373;
double x24418 = x24393*x5122;
double x24419 = x24393*x8019;
double x24420 = x16920*x19;
double x24421 = x16923*x19;
double x24422 = x24399*x5122;
double x24423 = 4*x24372;
double x24424 = x17051*x3655;
double x24425 = -x24262;
double x24426 = q10_b*x22216*x5010 - q10_b*x24424 - q10_b_dot*x24271 + q9_b*x24424 - x18163*x5082 + x19536*x8493 - x19546*x5109 + x24303*x8429 - 4*x24383 + x24410*x5122 + x24410*x8019 + x24425;
double x24427 = q10_b*x24334;
double x24428 = x17051*x3646;
double x24429 = q9_b*x24428;
double x24430 = x22840*x5091;
double x24431 = x10*x5116;
double x24432 = q10_b*x24428;
double x24433 = x17001*x24303;
double x24434 = x24386*x327;
double x24435 = x8320*x872;
double x24436 = x17051*x24435;
double x24437 = x17051*x8494;
double x24438 = x24358*x8482;
double x24439 = x19496*x8491;
double x24440 = 6*x24384;
double x24441 = x19496*x5109;
double x24442 = x24303*x8498;
double x24443 = x24277*x327;
double x24444 = x24299*x327;
double x24445 = x17049*x3646;
double x24446 = -x24406;
double x24447 = x24314 - x24315;
double x24448 = -q10_b*x24445 + q9_b*x24445 - x11331*x5139 - x158*x5091*x5159 + x17014*x19 + x17049*x24435 + x17049*x8494 - x17183*x8426 - x19505*x5109 - x19505*x8491 + x22260*x24375 - x24283*x327 - x24285*x327 + x24346*x5081 + x24373*x327 - x24380*x8498 + x24446 + x24447;
double x24449 = x5155*x5200;
double x24450 = x19*x5202;
double x24451 = (4.0/3.0)*x24450;
double x24452 = pow(theta_dt, 2);
double x24453 = x19*x24452;
double x24454 = x24453*x879;
double x24455 = pow(x5, 2);
double x24456 = x0*x24455;
double x24457 = x5160*x8;
double x24458 = x24456*x24457;
double x24459 = x11390*x5163;
double x24460 = c*x24452;
double x24461 = x11390*x24460;
double x24462 = x17037*x5163;
double x24463 = x17067*x5157;
double x24464 = x17067*x5152;
double x24465 = x17037*x24460;
double x24466 = q1_i*x5694;
double x24467 = pow(x19, 2);
double x24468 = psi_dt*x24467;
double x24469 = psi_dt*x24455;
double x24470 = x17034*x5275;
double x24471 = q1_i*x11328;
double x24472 = x17063*x8;
double x24473 = q1_b*x5322;
double x24474 = x24453*x5174;
double x24475 = q1_b*x24474;
double x24476 = x24453*x5171;
double x24477 = q1_b*x24476;
double x24478 = x120*x24474;
double x24479 = x24456*x879;
double x24480 = psi_dt*x24479;
double x24481 = x24467*x5160;
double x24482 = x2*x49;
double x24483 = x24481*x24482;
double x24484 = x24455*x5160;
double x24485 = x24482*x24484;
double x24486 = x20*x57;
double x24487 = x17037*x24486;
double x24488 = x17063*x4648;
double x24489 = x24488*x5930;
double x24490 = x120*x24476;
double x24491 = x24469*x5170;
double x24492 = x24479*x3;
double x24493 = x24492*x2741;
double x24494 = x19*x5203;
double x24495 = x24469*x5152;
double x24496 = x120*x57;
double x24497 = x24495*x24496;
double x24498 = x24469*x5157;
double x24499 = x24496*x24498;
double x24500 = x0*x4;
double x24501 = x19*x24500;
double x24502 = x24501*x5927;
double x24503 = 10*x24481;
double x24504 = x24469*x5174;
double x24505 = 10*x24504;
double x24506 = 10*x5226;
double x24507 = x10*x5163;
double x24508 = 5*x5868;
double x24509 = x24507*x5252;
double x24510 = x10*x24460;
double x24511 = x24510*x5252;
double x24512 = x17297*x5244;
double x24513 = q1_b*x11423;
double x24514 = 20*x19;
double x24515 = x24513*x24514;
double x24516 = x24512*x5157;
double x24517 = x24469*x5179;
double x24518 = 10*x5868;
double x24519 = x6*x6998;
double x24520 = x5224*x5252;
double x24521 = x11390*x5239;
double x24522 = x5186*x6;
double x24523 = x24522*x5224;
double x24524 = x4*x5248;
double x24525 = q1_b*x17067;
double x24526 = q1_b_dot*x17115;
double x24527 = x24512*x5152;
double x24528 = x24468*x5179;
double x24529 = x24454*x5248;
double x24530 = x170*x24484;
double x24531 = x24530*x6389;
double x24532 = x11347*x11359;
double x24533 = x11359*x5186;
double x24534 = x19*x8519;
double x24535 = x24534*x5157;
double x24536 = q1_i*q1_i_dot;
double x24537 = x24536*x5152;
double x24538 = x11379*x19;
double x24539 = x5200*x5302;
double x24540 = x24539*x5306;
double x24541 = x24481*x5295;
double x24542 = x24540*x5152;
double x24543 = x24510*x5318;
double x24544 = x24454*x5302;
double x24545 = x24544*x5322;
double x24546 = x24540*x5157;
double x24547 = x24507*x5318;
double x24548 = x24504*x5295;
double x24549 = x24469*x5297;
double x24550 = 24*x5157;
double x24551 = x24549*x24550;
double x24552 = x24549*x5152;
double x24553 = 24*x24552;
double x24554 = x11381*x19;
double x24555 = 24*x24554;
double x24556 = x5179*x5333;
double x24557 = 24*x24468;
double x24558 = x24556*x24557;
double x24559 = x24555*x5152;
double x24560 = pow(q1_i, 2)*x24450;
double x24561 = x24550*x24560;
double x24562 = 24*x5152;
double x24563 = x24560*x24562;
double x24564 = x24455*x24457;
double x24565 = x24564*x5302;
double x24566 = x24565*x5572;
double x24567 = x24469*x24556;
double x24568 = 24*x24567;
double x24569 = 24*x6;
double x24570 = x37*x5190;
double x24571 = x24569*x24570;
double x24572 = x11391*x6741;
double x24573 = x4*x5572;
double x24574 = q1_b*x17064;
double x24575 = x24573*x24574;
double x24576 = x11359*x5333;
double x24577 = x24576*x6741;
double x24578 = x17111 + x17228 - x24538 - x24540 + x24541 - x24542 - x24543 - x24545 + x24546 + x24547 + x24548 + x24551 + x24553 + x24555 - x24558 - x24559 - x24561 - x24563 + x24566 + x24568 + x24571 + x24572 + x24575 - x24577;
double x24579 = x17063*x3835;
double x24580 = x24579*x5270;
double x24581 = 4*x24481;
double x24582 = q1_b_dot*x3108;
double x24583 = q1_i_dot*x24582;
double x24584 = x0*x24454;
double x24585 = x24584*x3108;
double x24586 = 4*x24504;
double x24587 = x24498*x5540;
double x24588 = q1_i_dot*x51;
double x24589 = x24495*x5540;
double x24590 = x11823*x19;
double x24591 = q1_i_dot*x11368;
double x24592 = pow(q1_i_dot, 2);
double x24593 = x19*x6128;
double x24594 = x24593*x5157;
double x24595 = x24593*x5152;
double x24596 = x24456*x5160;
double x24597 = x24596*x362;
double x24598 = 4*x24597;
double x24599 = 4*x6;
double x24600 = x24599*x5695;
double x24601 = q1_i_dot*x5540;
double x24602 = x5238*x6;
double x24603 = x4*x5680;
double x24604 = q1_b_dot*x19508;
double x24605 = -x11367*x19 + x17122 + x17210 + x24507*x24583 - x24510*x24583 + x24517*x24591 - x24528*x24591 - x24533*x24591 - x24580*x5152 + x24580*x5157 - x24580 + x24581*x5266 - x24585*x5270 + x24586*x5266 + x24587*x24588 + x24588*x24589 - x24590*x5152 + x24590 - x24592*x24594 - x24592*x24595 + x24598*x5270 + x24600*x3702 + x24601*x24602 + x24603*x24604;
double x24606 = x17242 + x24605;
double x24607 = x17088 + x24606;
double x24608 = x24539*x5330;
double x24609 = x24481*x5294;
double x24610 = q1_i*x24510;
double x24611 = q1_i*x24507;
double x24612 = x24504*x5294;
double x24613 = x24549*x5157;
double x24614 = 16*x24554;
double x24615 = x24468*x24556;
double x24616 = 16*x24560;
double x24617 = 16*x24458;
double x24618 = x24570*x6;
double x24619 = x24574*x4;
double x24620 = x11391*x5643 - x11399*x19 + x17205 - x24544*x5336 + 16*x24552 + 16*x24567 - x24576*x5643 - x24608*x5152 + x24608*x5157 - x24608 + 16*x24609 - x24610*x5335 + x24611*x5335 + 16*x24612 + 16*x24613 - x24614*x5152 + x24614 - 16*x24615 - x24616*x5152 - x24616*x5157 + x24617*x5302 + 16*x24618 + x24619*x5928;
double x24621 = 8*x24481;
double x24622 = x24621*x5220;
double x24623 = x24621*x5222;
double x24624 = x11408*x19;
double x24625 = x11409*x19;
double x24626 = 8*x24504;
double x24627 = x24626*x5220;
double x24628 = x24626*x5222;
double x24629 = 8*x24469;
double x24630 = x24629*x5343;
double x24631 = x24630*x5157;
double x24632 = x24630*x5152;
double x24633 = x24629*x5226;
double x24634 = x24633*x5157;
double x24635 = x24633*x5152;
double x24636 = x49*x5737;
double x24637 = x24507*x24636;
double x24638 = x158*x24509;
double x24639 = x24510*x24636;
double x24640 = x158*x24511;
double x24641 = x17297*x5330;
double x24642 = x24641*x5261;
double x24643 = x19*x327;
double x24644 = x11358*x24643;
double x24645 = x24641*x5157;
double x24646 = x24645*x5261;
double x24647 = x49*x5335;
double x24648 = x24517*x24647;
double x24649 = x10776*x6;
double x24650 = x24649*x5235;
double x24651 = L*x5179;
double x24652 = x24651*x5252;
double x24653 = x24629*x24652;
double x24654 = x183*x24649;
double x24655 = 8*x24521;
double x24656 = x131*x6;
double x24657 = L*x5332;
double x24658 = x24656*x24657;
double x24659 = x4*x5336;
double x24660 = x24525*x24659;
double x24661 = x24526*x24659;
double x24662 = x24641*x5152;
double x24663 = x24662*x5261;
double x24664 = x24528*x24647;
double x24665 = 8*x24468;
double x24666 = x24652*x24665;
double x24667 = x24454*x5336;
double x24668 = x24667*x5243;
double x24669 = x170*x24596;
double x24670 = 16*x24669;
double x24671 = x24670*x5261;
double x24672 = x11359*x5332;
double x24673 = x24672*x5868;
double x24674 = x17507*x5332;
double x24675 = x24674*x5252;
double x24676 = x24644*x5152;
double x24677 = x19*x5645;
double x24678 = x24677*x5157;
double x24679 = x24536*x24678;
double x24680 = x24537*x24677;
double x24681 = x17222 - x24622 - x24623 + x24624 + x24625 - x24627 - x24628 - x24631 - x24632 - x24634 - x24635 - x24637 - x24638 + x24639 + x24640 + x24642 - x24644 - x24646 - x24648 - x24650 - x24653 - x24654 - x24655 - x24658 - x24660 - x24661 + x24663 + x24664 + x24666 + x24668 - x24671 + x24673 + x24675 + x24676 + x24679 + x24680;
double x24682 = 12*x24481;
double x24683 = x24481*x3943;
double x24684 = x158*x24477;
double x24685 = x17116*x5152;
double x24686 = x158*x24461;
double x24687 = x158*x24475;
double x24688 = x17116*x5157;
double x24689 = x158*x24459;
double x24690 = 12*x24504;
double x24691 = x24504*x3943;
double x24692 = 12*x5226;
double x24693 = L*x5356;
double x24694 = x24495*x24693;
double x24695 = L*x24469;
double x24696 = q1_i*x5536;
double x24697 = x24695*x24696;
double x24698 = x10776*x17057;
double x24699 = 6*x24507;
double x24700 = 6*x24510;
double x24701 = x24498*x24693;
double x24702 = x24629*x323;
double x24703 = x24702*x879;
double x24704 = q1_b_dt*x24703;
double x24705 = L*x24468;
double x24706 = x24696*x24705;
double x24707 = x17297*x5306;
double x24708 = 24*x19;
double x24709 = x170*x17063;
double x24710 = x24709*x5928;
double x24711 = q1_b*x24710;
double x24712 = x24707*x5157;
double x24713 = x49*x5213;
double x24714 = 12*x6;
double x24715 = x24714*x5184;
double x24716 = x120*x151;
double x24717 = x24473*x4;
double x24718 = x4*x5322;
double x24719 = x24471*x24657;
double x24720 = x24707*x5152;
double x24721 = x24584*x3943;
double x24722 = x24530*x5572;
double x24723 = x24500*x24677;
double x24724 = q1_b*x24723;
double x24725 = x11359*x5312;
double x24726 = x19*x24562;
double x24727 = x19*x6743;
double x24728 = x24727*x5157;
double x24729 = x24539*x5411;
double x24730 = x24474*x24582;
double x24731 = x17022*x5417;
double x24732 = x5163*x6;
double x24733 = q1_i_dot*x3108;
double x24734 = x24732*x24733;
double x24735 = x24476*x24582;
double x24736 = x17022*x5174;
double x24737 = x24736*x5265;
double x24738 = x24460*x6;
double x24739 = x24733*x24738;
double x24740 = 36*x24554;
double x24741 = 36*x24560;
double x24742 = x24498*x5414;
double x24743 = 4*x24480;
double x24744 = x24743*x5265;
double x24745 = q1_i_dot*x8989;
double x24746 = x24468*x24745;
double x24747 = x24495*x5414;
double x24748 = x24469*x24745;
double x24749 = x19529*x5695;
double x24750 = x11328*x5186;
double x24751 = x24601*x24750;
double x24752 = x18347*x362;
double x24753 = x24752*x5930;
double x24754 = x19*x5255;
double x24755 = 8*x24754;
double x24756 = x313*x4;
double x24757 = x24755*x24756;
double x24758 = x11391*x7357 - x11455*x19 + x22151 - x24544*x5429 + 36*x24552 + x24565*x5440 + 36*x24567 - x24576*x7357 + 36*x24609 - x24610*x5428 + x24611*x5428 + 36*x24612 + 36*x24613 - 36*x24615 + 36*x24618 + x24619*x5440 - x24729*x5152 + x24729*x5157 - x24729 - x24730 - x24731 - x24734 + x24735 + x24737 + x24739 - x24740*x5152 + x24740 - x24741*x5152 - x24741*x5157 - x24742 - x24744 - x24746 + x24747 + x24748 + x24749 + x24751 + x24753 + x24757;
double x24759 = x14*x17063;
double x24760 = x24759*x5454;
double x24761 = p1_b*x24476;
double x24762 = p1_b_dt*x17342;
double x24763 = x11469*x24460;
double x24764 = 2*x24510;
double x24765 = x24584*x5454;
double x24766 = p1_b*x24474;
double x24767 = x11469*x5163;
double x24768 = 2*x24507;
double x24769 = 4*x24469;
double x24770 = x24769*x5449;
double x24771 = x11611*x19;
double x24772 = p1_b*x6076;
double x24773 = p1_i*x5150;
double x24774 = x158*x24773;
double x24775 = x158*x20;
double x24776 = 4*x5157;
double x24777 = pow(p1_i, 2)*x24450;
double x24778 = x24777*x5152;
double x24779 = x24596*x274;
double x24780 = p1_b*x17352;
double x24781 = x24769*x5179;
double x24782 = x210*x5481;
double x24783 = p1_b_dt*x11469;
double x24784 = 4*x24458;
double x24785 = x0*x17063;
double x24786 = x24785*x4432;
double x24787 = x11359*x5547;
double x24788 = x19*x6679;
double x24789 = x24500*x24788;
double x24790 = x24579*x5157;
double x24791 = x24579*x5152;
double x24792 = -x24579 + x24585 + x24593 - x24594 - x24598 - x24790 + x24791;
double x24793 = x17352*x5152;
double x24794 = x17352*x5157;
double x24795 = x17063*x208;
double x24796 = x24467*x3;
double x24797 = c*x24796;
double x24798 = x24507*x5495;
double x24799 = x24507*x5497;
double x24800 = x24510*x5495;
double x24801 = x24510*x5497;
double x24802 = x19*x5365;
double x24803 = x24795*x5152;
double x24804 = x24584*x321;
double x24805 = x24759*x5500;
double x24806 = x24456*x3;
double x24807 = c*x24806;
double x24808 = p1_i*x2;
double x24809 = x24795*x5157;
double x24810 = x24455*x3;
double x24811 = x24810*x5174;
double x24812 = x24810*x5479;
double x24813 = x24810*x5480;
double x24814 = x450*x57;
double x24815 = x2*x249;
double x24816 = 2*x24584;
double x24817 = x24481*x9;
double x24818 = x5285*x6;
double x24819 = x24484*x9;
double x24820 = x5275*x6;
double x24821 = x5278*x6;
double x24822 = x24596*x4648;
double x24823 = x24802*x5157;
double x24824 = 4*x19;
double x24825 = x13292*x24824;
double x24826 = x24472*x5680;
double x24827 = p1_b_dot*x0;
double x24828 = x24450*x24776;
double x24829 = p1_i*p1_i_dot;
double x24830 = x24450*x5152;
double x24831 = 4*x24830;
double x24832 = x10*x57;
double x24833 = p1_i_dot*x24832;
double x24834 = x10*x20;
double x24835 = x24834*x57;
double x24836 = x24494*x5680;
double x24837 = x11547*x19;
double x24838 = x11548*x19;
double x24839 = x24621*x5510;
double x24840 = x24621*x5511;
double x24841 = x24641*x5500;
double x24842 = x158*x24800;
double x24843 = x158*x24801;
double x24844 = x158*x24798;
double x24845 = x158*x24799;
double x24846 = x24626*x5510;
double x24847 = x24626*x5511;
double x24848 = x24629*x5513;
double x24849 = x24848*x5157;
double x24850 = x24848*x5152;
double x24851 = x24629*x5515;
double x24852 = x24851*x5157;
double x24853 = x24851*x5152;
double x24854 = x24662*x5500;
double x24855 = x24667*x5529;
double x24856 = 8*x24528;
double x24857 = x24856*x5686;
double x24858 = x24856*x5687;
double x24859 = x24645*x5500;
double x24860 = x0*x18347;
double x24861 = x1974*x24860;
double x24862 = p1_b*x24861;
double x24863 = x24629*x5179;
double x24864 = x24863*x5686;
double x24865 = x24649*x5483;
double x24866 = x17352*x450;
double x24867 = x24659*x24866;
double x24868 = x24863*x5687;
double x24869 = x24649*x340;
double x24870 = 8*x5518;
double x24871 = x11469*x24870;
double x24872 = x283*x6;
double x24873 = x24657*x24872;
double x24874 = x13292*x24643;
double x24875 = x24874*x5152;
double x24876 = x24678*x24829;
double x24877 = x24829*x5152;
double x24878 = x24677*x24877;
double x24879 = x24672*x5686;
double x24880 = x24672*x5687;
double x24881 = x24670*x5500;
double x24882 = x24510*x3108;
double x24883 = x24507*x3108;
double x24884 = x24769*x5534;
double x24885 = x11524*x19;
double x24886 = p1_i_dot*x9258;
double x24887 = pow(p1_i_dot, 2);
double x24888 = x17063*x5680;
double x24889 = p1_b_dot*x24888;
double x24890 = x6*x6690;
double x24891 = x5541*x6;
double x24892 = -x11573*x19 + x17367 + x17454 + x17509 - x24528*x24886 - x24579*x5535 + x24581*x5533 - x24585*x5535 + x24586*x5533 - x24594*x24887 - x24595*x24887 + x24598*x5535 + x24781*x5606 - x24787*x5606 + x24790*x5535 - x24791*x5535 - x24882*x5546 + x24883*x5546 + x24884*x5152 + x24884*x5157 - x24885*x5152 + x24885 + x24889*x293 + x24890*x5539 + x24891*x5487;
double x24893 = x17433 + x24892;
double x24894 = x5200*x5454;
double x24895 = x24894*x5330;
double x24896 = 16*x24481;
double x24897 = 8*x24510;
double x24898 = 8*x24507;
double x24899 = 16*x24504;
double x24900 = 16*x19;
double x24901 = x11532*x24900;
double x24902 = 16*x24528;
double x24903 = 16*x24777;
double x24904 = x4*x5928;
double x24905 = 16*x24517;
double x24906 = 16*x6;
double x24907 = x11359*x5643;
double x24908 = -x11566*x19 + x17449 + x24495*x5612 + x24498*x5612 + x24617*x5454 - x24667*x5454 + x24780*x24904 + x24782*x24906 + x24783*x5643 - x24895*x5152 + x24895*x5157 - x24895 + x24896*x5448 - x24897*x5464 + x24898*x5464 + x24899*x5448 - x24901*x5152 + x24901 - x24902*x5464 - x24903*x5152 - x24903*x5157 + x24905*x5464 - x24907*x5464;
double x24909 = 14*x24481;
double x24910 = x17297*x5521;
double x24911 = 7*x24510;
double x24912 = 7*x24507;
double x24913 = 14*x24504;
double x24914 = 14*x5513;
double x24915 = 14*x5515;
double x24916 = x24910*x5152;
double x24917 = x24454*x5527;
double x24918 = 14*x24528;
double x24919 = x24910*x5157;
double x24920 = p1_b*x0;
double x24921 = 14*x24517;
double x24922 = 14*x5184;
double x24923 = x24922*x6;
double x24924 = x4*x5527;
double x24925 = x11469*x5518;
double x24926 = x24522*x7622;
double x24927 = 28*x19;
double x24928 = x11516*x24927;
double x24929 = x19*x5210;
double x24930 = 28*x24929;
double x24931 = x24930*x5157;
double x24932 = x11359*x11515;
double x24933 = x24530*x6714;
double x24934 = x5200*x70;
double x24935 = x24934*x5535;
double x24936 = x24935*x5413;
double x24937 = x24584*x5540;
double x24938 = x24629*x5534;
double x24939 = x19*x6750;
double x24940 = x24939*x5535;
double x24941 = x24887*x24939;
double x24942 = p1_b_dot*x293;
double x24943 = x6*x7943;
double x24944 = 8*p1_i_dot;
double x24945 = x17368*x5487;
double x24946 = x24484*x5336;
double x24947 = x362*x5535;
double x24948 = -x11522*x19 + x24507*x24886 - x24510*x24886 + x24621*x5533 + x24626*x5533 - x24672*x5606 - x24856*x5606 + x24860*x24942 + x24863*x5606 - x24936*x5152 + x24936*x5157 - x24936 - x24937*x5535 + x24938*x5152 + x24938*x5157 - x24940*x5152 + x24940 - x24941*x5152 - x24941*x5157 + x24943*x5539 + x24944*x24945 + x24946*x24947;
double x24949 = x11530*x19;
double x24950 = x24894*x5306;
double x24951 = 24*x24481;
double x24952 = x24951*x5448;
double x24953 = 12*x24510;
double x24954 = x24953*x5464;
double x24955 = x24950*x5152;
double x24956 = x24454*x5322;
double x24957 = x24956*x5454;
double x24958 = 12*x24507;
double x24959 = x24958*x5464;
double x24960 = x24950*x5157;
double x24961 = 24*x24504;
double x24962 = x24961*x5448;
double x24963 = x24469*x5449;
double x24964 = x24550*x24963;
double x24965 = x24562*x24963;
double x24966 = x11532*x24708;
double x24967 = x24557*x5179;
double x24968 = x24967*x5464;
double x24969 = x11532*x24726;
double x24970 = x24550*x24777;
double x24971 = x24562*x24777;
double x24972 = x24573*x24780;
double x24973 = 24*x24517;
double x24974 = x24973*x5464;
double x24975 = x24569*x24782;
double x24976 = x24783*x6741;
double x24977 = x24564*x5454;
double x24978 = x24977*x5572;
double x24979 = x11359*x6741;
double x24980 = x24979*x5464;
double x24981 = x17394 + x17472 - x24949 - x24950 + x24952 - x24954 - x24955 - x24957 + x24959 + x24960 + x24962 + x24964 + x24965 + x24966 - x24968 - x24969 - x24970 - x24971 + x24972 + x24974 + x24975 + x24976 + x24978 - x24980;
double x24982 = x24894*x5413;
double x24983 = x24629*x5449;
double x24984 = x11567*x19;
double x24985 = x158*x24481;
double x24986 = p1_b*x7010;
double x24987 = x24773*x5224;
double x24988 = 8*x6;
double x24989 = x17297*x5413;
double x24990 = x158*x24504;
double x24991 = x158*x5479;
double x24992 = x158*x5480;
double x24993 = 8*x5157;
double x24994 = x24989*x5152;
double x24995 = x158*x24584;
double x24996 = x158*x24528;
double x24997 = x24989*x5157;
double x24998 = x158*x17063;
double x24999 = x24920*x278;
double x25000 = x158*x24517;
double x25001 = x158*x202;
double x25002 = p1_b_dot*x24500;
double x25003 = x24775*x6;
double x25004 = x11613*x6;
double x25005 = x11555*x19;
double x25006 = x24709*x6389;
double x25007 = x24788*x5157;
double x25008 = x11359*x11613;
double x25009 = x24596*x4432;
double x25010 = x24500*x24534;
double x25011 = x24732*x70;
double x25012 = x24738*x70;
double x25013 = 6*p1_i_dot;
double x25014 = x24468*x8628;
double x25015 = x24469*x8628;
double x25016 = x11328*x5394;
double x25017 = p1_i_dot*x70;
double x25018 = x17063*x362;
double x25019 = p1_b_dot*x25018;
double x25020 = x19*x5498;
double x25021 = x10*x345*x5710 - x13296*x24474 + x13296*x24476 + x17418*x5152 - x17418*x5157 + x24495*x5692 - x24498*x5692 - 6*x24596*x293 + 12*x24756*x25020 - x25011*x5699 + x25012*x5699 - x25013*x25014 + x25013*x25015 + x25016*x25017 + x25019*x5322;
double x25022 = x24935*x5306;
double x25023 = x158*x24766;
double x25024 = x158*x24794;
double x25025 = x158*x24767;
double x25026 = x158*x24761;
double x25027 = x158*x24793;
double x25028 = x158*x24763;
double x25029 = 32*x24481;
double x25030 = x17297*x5641;
double x25031 = x25030*x5500;
double x25032 = 16*x24510;
double x25033 = x24454*x313;
double x25034 = 12*x25033;
double x25035 = x5330*x5462;
double x25036 = x24498*x25035;
double x25037 = x24484*x323;
double x25038 = x25037*x274;
double x25039 = 8*x25038;
double x25040 = p1_i*x5536;
double x25041 = x24705*x25040;
double x25042 = x24495*x25035;
double x25043 = x24695*x25040;
double x25044 = x10776*x17312;
double x25045 = 16*x24507;
double x25046 = x24469*x5534;
double x25047 = x19*x5700;
double x25048 = 24*x25047;
double x25049 = 32*x24504;
double x25050 = 32*x5513;
double x25051 = 32*x5515;
double x25052 = 32*x24584;
double x25053 = 32*x24528;
double x25054 = x24562*x25047;
double x25055 = x24550*x25047;
double x25056 = x11328*x24657;
double x25057 = p1_i*x25056;
double x25058 = p1_b*x24710;
double x25059 = x17063*x5572;
double x25060 = x20*x24569;
double x25061 = x24569*x70;
double x25062 = x24484*x5572;
double x25063 = x17063*x5652;
double x25064 = 32*x24517;
double x25065 = x5184*x6;
double x25066 = 32*x25065;
double x25067 = x4*x5652;
double x25068 = L*x11583;
double x25069 = 64*x19;
double x25070 = x11516*x25069;
double x25071 = x24929*x5157;
double x25072 = 64*x25071;
double x25073 = x24929*x5152;
double x25074 = 64*x25073;
double x25075 = x11359*x11583;
double x25076 = p1_b*x24723;
double x25077 = 64*x24669;
double x25078 = x24894*x5411;
double x25079 = 36*x24481;
double x25080 = 18*x24510;
double x25081 = x24454*x5429;
double x25082 = x24474*x3108;
double x25083 = x17022*x5171;
double x25084 = x24732*x3108;
double x25085 = x24476*x3108;
double x25086 = x24738*x3108;
double x25087 = 18*x24507;
double x25088 = 36*x24504;
double x25089 = 36*x19;
double x25090 = x11532*x25089;
double x25091 = 36*x24528;
double x25092 = 36*x24777;
double x25093 = x24498*x5413;
double x25094 = 4*x24596;
double x25095 = x24468*x8989;
double x25096 = x24495*x5413;
double x25097 = x24469*x8989;
double x25098 = x10*x6690;
double x25099 = x4*x5440;
double x25100 = 36*x24517;
double x25101 = 36*x6;
double x25102 = x11359*x7357;
double x25103 = x0*x24752;
double x25104 = 8*x19;
double x25105 = x24756*x25104;
double x25106 = -p1_b_dot*x25082 + p1_b_dot*x25085 + p1_b_dot*x25103 - p1_i_dot*x25084 + p1_i_dot*x25086 - p1_i_dot*x25095 + p1_i_dot*x25097 - x11602*x19 + x24495*x5656 + x24498*x5656 + x24736*x5604 + x24750*x5541 + x24780*x25099 + x24782*x25101 + x24783*x7357 + x24977*x5440 - x25078*x5152 + x25078*x5157 - x25078 + x25079*x5448 - x25080*x5464 - x25081*x5454 - x25083*x5604 + x25087*x5464 + x25088*x5448 - x25090*x5152 + x25090 - x25091*x5464 - x25092*x5152 - x25092*x5157 - x25093*x5531 - x25094*x293 + x25096*x5531 + x25098*x345 + x25100*x5464 - x25102*x5464 + x25105*x5498;
double x25107 = L*x24498;
double x25108 = x24773*x3943;
double x25109 = x24484*x5322;
double x25110 = p1_i_dot*x11586;
double x25111 = x24469*x5307;
double x25112 = 12*x5184;
double x25113 = x11328*x11433;
double x25114 = x11328*x5312;
double x25115 = x24709*x5572;
double x25116 = x24500*x24727;
double x25117 = x24708*x24756;
double x25118 = x17382 + x17384 + x17434 + x17458 + x17460 + x17464 + x24837 + x24838 - x24839 - x24840 + x24841 + x24842 + x24843 - x24844 - x24845 - x24846 - x24847 - x24849 - x24850 - x24852 - x24853 + x24854 + x24855 + x24857 + x24858 - x24859 - x24862 - x24864 - x24865 - x24867 - x24868 - x24869 - x24871 - x24873 - x24874 + x24875 + x24876 + x24878 + x24879 + x24880 - x24881 + x24892;
double x25119 = x24759*x5302;
double x25120 = q1_b_dt*x17342;
double x25121 = 2*q1_b;
double x25122 = x0*x24544;
double x25123 = x11743*x19;
double x25124 = q1_b*x6076;
double x25125 = q1_b_dt*x24480;
double x25126 = q1_i*x158*x5150;
double x25127 = x24560*x5152;
double x25128 = x0*x5737;
double x25129 = x25128*x4;
double x25130 = x24759*x5261;
double x25131 = q1_i*x2;
double x25132 = x24810*x5223;
double x25133 = x24810*x5735;
double x25134 = q1_b_dot*x24584;
double x25135 = x24754*x5737;
double x25136 = q1_i_dot*x24832;
double x25137 = q2_b*x5200;
double x25138 = x25137*x5750;
double x25139 = q2_b*x24474;
double x25140 = x11683*x5163;
double x25141 = q2_b_dot*x25085;
double x25142 = x24736*x2738;
double x25143 = x24738*x5907;
double x25144 = q2_b_dot*x25082;
double x25145 = x25083*x2738;
double x25146 = x24732*x5907;
double x25147 = q2_b*x24476;
double x25148 = x11683*x24460;
double x25149 = x151*x5150;
double x25150 = x24469*x879;
double x25151 = x25150*x5322;
double x25152 = x11757*x3943;
double x25153 = x5200*x5307;
double x25154 = x158*x5760;
double x25155 = x2794*x37;
double x25156 = x25096*x3726;
double x25157 = x2797*x5271;
double x25158 = x24469*x25157;
double x25159 = x19526*x5695;
double x25160 = 4*x25159;
double x25161 = x321*x5849;
double x25162 = x25093*x3726;
double x25163 = x24743*x2738;
double x25164 = x24468*x25157;
double x25165 = x24695*x5307;
double x25166 = x5190*x6;
double x25167 = x37*x5780;
double x25168 = q2_b*x17064;
double x25169 = x24450*x5778;
double x25170 = q1_i*q2_i;
double x25171 = x24450*x25170;
double x25172 = L*x24750;
double x25173 = x11849*x19;
double x25174 = q2_b_dot*x25103;
double x25175 = q1_b*x2794;
double x25176 = x17063*x24603;
double x25177 = q2_b_dot*x24500;
double x25178 = x11328*x2797*x5547;
double x25179 = x24564*x5778;
double x25180 = x25105*x5851;
double x25181 = q1_i*q2_i_dot;
double x25182 = x25181*x5152;
double x25183 = x24539*x5413;
double x25184 = x11401*x19;
double x25185 = 6*x24481;
double x25186 = x129*x24481;
double x25187 = x25137*x5720;
double x25188 = x24769*x5748;
double x25189 = x24507*x5925;
double x25190 = x24507*x5926;
double x25191 = x24510*x5925;
double x25192 = x24510*x5926;
double x25193 = 6*x24504;
double x25194 = x129*x24504;
double x25195 = x129*x5812;
double x25196 = q2_i*x24528;
double x25197 = 4*x24528;
double x25198 = x24584*x5778;
double x25199 = x1858*x5873;
double x25200 = 3*x24507;
double x25201 = q1_b*x5491;
double x25202 = x24810*x5157;
double x25203 = x24810*x5152;
double x25204 = q1_i*x5502;
double x25205 = x174*x57;
double x25206 = q2_b_dot*x24579;
double x25207 = x138*x2;
double x25208 = 3*x24510;
double x25209 = x158*x5223;
double x25210 = x24769*x5226;
double x25211 = x2850*x5186;
double x25212 = x17297*x5169;
double x25213 = 8*x25169;
double x25214 = q2_b*x24754*x3943;
double x25215 = x24450*x24993;
double x25216 = x24830*x25170;
double x25217 = x25212*x5157;
double x25218 = x129*x24517;
double x25219 = x5207*x6;
double x25220 = x11683*x5239;
double x25221 = 6*x24517;
double x25222 = x5394*x6;
double x25223 = x5780*x6;
double x25224 = x4*x5930;
double x25225 = q2_b*x17067;
double x25226 = x11700*x19;
double x25227 = x5723*x6;
double x25228 = x11376*x24481;
double x25229 = q2_b_dot*x321;
double x25230 = x19546*x5695;
double x25231 = x6*x6354;
double x25232 = x11376*x24484;
double x25233 = x0*x24488;
double x25234 = x11856*x19;
double x25235 = x25212*x5152;
double x25236 = x129*x24528;
double x25237 = 6*x24528;
double x25238 = x129*x24584;
double x25239 = x11424*x19;
double x25240 = x24530*x5322;
double x25241 = q1_i_dot*q2_i_dot;
double x25242 = q2_i_dot*x24832;
double x25243 = x10*x5467;
double x25244 = x24500*x24802;
double x25245 = x4*x5897;
double x25246 = x11359*x5394;
double x25247 = x19*x6120;
double x25248 = x25247*x5157;
double x25249 = q1_i_dot*q2_i;
double x25250 = x25249*x5152;
double x25251 = q2_b*x5491;
double x25252 = q2_i*x5502;
double x25253 = L*x25139 + L*x25140 - L*x25147 - L*x25148 - q2_b*x25233 - q2_b*x25244 - x11683*x5467 - x18216*x5723 - x19491*x5152 + x19491*x5157 + x24481*x25252 - x24484*x25252 + x24492*x2743 - x24495*x25251 + x24498*x25251;
double x25254 = x24934*x5270;
double x25255 = x25254*x5413;
double x25256 = x24629*x5268;
double x25257 = x24939*x5270;
double x25258 = x24592*x24939;
double x25259 = x362*x5270;
double x25260 = x3702*x5695;
double x25261 = x138*x5238;
double x25262 = -x11821*x19 + x24507*x24591 - x24510*x24591 + x24604*x24659 + x24621*x5266 + x24626*x5266 - x24672*x5284 - x24856*x5284 + x24863*x5284 - x24937*x5270 + x24946*x25259 + x24988*x25260 + x24988*x25261 - x25255*x5152 + x25255*x5157 - x25255 + x25256*x5152 + x25256*x5157 - x25257*x5152 + x25257 - x25258*x5152 - x25258*x5157;
double x25263 = x5200*x5911;
double x25264 = x25263*x5778;
double x25265 = 32*x25169;
double x25266 = x5190*x637;
double x25267 = q2_b_dt*x5643;
double x25268 = x24906*x5780;
double x25269 = q1_b*x19490;
double x25270 = x24629*x5906;
double x25271 = x158*x24507;
double x25272 = x158*x24510;
double x25273 = 4*x11802;
double x25274 = x5200*x5413;
double x25275 = x25274*x5871;
double x25276 = q1_b_dot*x5907;
double x25277 = q2_b_dot*x24733;
double x25278 = q1_i_dot*x646;
double x25279 = x24769*x5825;
double x25280 = x24629*x5817;
double x25281 = x24629*x5818;
double x25282 = x24458*x5778;
double x25283 = x11981*x24754;
double x25284 = x24528*x663;
double x25285 = x5332*x6;
double x25286 = q1_b_dot*x19491;
double x25287 = q1_i_dot*x5929;
double x25288 = x2797*x5238;
double x25289 = x5829*x6;
double x25290 = x51*x6125;
double x25291 = q2_b_dot*x19508;
double x25292 = x18347*x24500;
double x25293 = q2_b_dot*x17115;
double x25294 = x24755*x3726;
double x25295 = q1_b*x24643*x5851;
double x25296 = x24450*x5157;
double x25297 = x25170*x25296;
double x25298 = x24939*x25241;
double x25299 = x362*x5865;
double x25300 = x24621*x5932;
double x25301 = x24621*x5934;
double x25302 = x11867*x19;
double x25303 = x11868*x19;
double x25304 = x24626*x5932;
double x25305 = x24626*x5934;
double x25306 = x24629*x5936;
double x25307 = x25306*x5157;
double x25308 = x25306*x5152;
double x25309 = x24498*x5939;
double x25310 = x24495*x5939;
double x25311 = x24507*x5958;
double x25312 = x158*x25311;
double x25313 = x24507*x5960;
double x25314 = x158*x25313;
double x25315 = x24510*x5958;
double x25316 = x158*x25315;
double x25317 = x24510*x5960;
double x25318 = x158*x25317;
double x25319 = x24641*x5966;
double x25320 = x19*x5851;
double x25321 = x11981*x25320;
double x25322 = x24645*x5966;
double x25323 = x24863*x6199;
double x25324 = x24649*x5946;
double x25325 = x24863*x6198;
double x25326 = x24649*x3720;
double x25327 = x11683*x11838;
double x25328 = x25285*x5952;
double x25329 = x25292*x5932;
double x25330 = q2_b_dot*x19491;
double x25331 = x24659*x25330;
double x25332 = x24662*x5966;
double x25333 = x11859*x25284;
double x25334 = x24856*x6198;
double x25335 = x24667*x5954;
double x25336 = x24670*x5966;
double x25337 = x24672*x6199;
double x25338 = x24672*x6198;
double x25339 = x25321*x5152;
double x25340 = q2_i*q2_i_dot;
double x25341 = x24678*x25340;
double x25342 = x25340*x5152;
double x25343 = x24677*x25342;
double x25344 = -x11898*x19;
double x25345 = -x24579*x5971;
double x25346 = x24581*x5969;
double x25347 = -x24791*x5971;
double x25348 = q2_b_dot*x5907;
double x25349 = -x24510*x25348;
double x25350 = -x24585*x5971;
double x25351 = x24790*x5971;
double x25352 = x24507*x25348;
double x25353 = x24586*x5969;
double x25354 = x24769*x5970;
double x25355 = x25354*x5157;
double x25356 = x25354*x5152;
double x25357 = x12149*x19;
double x25358 = -x25197*x5974;
double x25359 = -x25357*x5152;
double x25360 = pow(q2_i_dot, 2);
double x25361 = -x24594*x25360;
double x25362 = -x24595*x25360;
double x25363 = x24598*x5971;
double x25364 = x24781*x5974;
double x25365 = x6125*x646;
double x25366 = x24599*x25365;
double x25367 = x2797*x5829;
double x25368 = x24599*x25367;
double x25369 = x25176*x5969;
double x25370 = -x24787*x5974;
double x25371 = x19633 + x22282 + x25344 + x25345 + x25346 + x25347 + x25349 + x25350 + x25351 + x25352 + x25353 + x25355 + x25356 + x25357 + x25358 + x25359 + x25361 + x25362 + x25363 + x25364 + x25366 + x25368 + x25369 + x25370;
double x25372 = x19719 + x22214 + x22353 - x25300 - x25301 + x25302 + x25303 - x25304 - x25305 - x25307 - x25308 - x25309 - x25310 - x25312 - x25314 + x25316 + x25318 + x25319 - x25321 - x25322 - x25323 - x25324 - x25325 - x25326 - x25327 - x25328 - x25329 - x25331 + x25332 + x25333 + x25334 + x25335 - x25336 + x25337 + x25338 + x25339 + x25341 + x25343 + x25371;
double x25373 = x5200*x5982;
double x25374 = x25373*x5330;
double x25375 = x11904*x24900;
double x25376 = pow(q2_i, 2)*x24450;
double x25377 = x25376*x5157;
double x25378 = x25376*x5152;
double x25379 = q2_b*x19490;
double x25380 = x11683*x25267 - x11903*x19 + x19562 - x19563 - x22218 + x24495*x5981 + x24498*x5981 + x24617*x5982 - x24667*x5982 + x24896*x5979 - x24897*x5984 + x24898*x5984 + x24899*x5979 - x24902*x5984 + x24904*x25379 + x24905*x5984 - x24907*x5984 + x25268*x637 - x25374*x5152 + x25374*x5157 - x25374 - x25375*x5152 + x25375 - 16*x25377 - 16*x25378;
double x25381 = x24469*x5901;
double x25382 = x24469*x5748;
double x25383 = x5200*x5998;
double x25384 = 48*x25169;
double x25385 = x24569*x637;
double x25386 = q2_b_dt*x6741;
double x25387 = 14*x5988;
double x25388 = 14*x5906;
double x25389 = 10*x5936;
double x25390 = 10*x5990;
double x25391 = x286*x5873;
double x25392 = x5169*x5200;
double x25393 = x25392*x5871;
double x25394 = q1_b*x2764;
double x25395 = x154*x24510;
double x25396 = x154*x24507;
double x25397 = 6*x5824;
double x25398 = 6*x5825;
double x25399 = 10*x5817;
double x25400 = 10*x5818;
double x25401 = 14*x5343;
double x25402 = 14*x5226;
double x25403 = x24454*x5778;
double x25404 = q2_b*x11423;
double x25405 = x24927*x25404;
double x25406 = x24514*x5852;
double x25407 = q2_b*x25406;
double x25408 = 14*x24652;
double x25409 = 14*x6;
double x25410 = x5207*x637;
double x25411 = x11515*x6;
double x25412 = x51*x5892;
double x25413 = 10*x24528;
double x25414 = 10*x24517;
double x25415 = x11347*x6;
double x25416 = x19991*x24500;
double x25417 = x19491*x24524;
double x25418 = q1_i_dot*x6012;
double x25419 = 6*x6;
double x25420 = x3695*x5695;
double x25421 = x25419*x5829;
double x25422 = x25196*x662;
double x25423 = x11984*x19;
double x25424 = q1_b*x25406;
double x25425 = x24513*x24927;
double x25426 = 48*x25296;
double x25427 = x24534*x5152;
double x25428 = x24533*x7622;
double x25429 = x19*x7367;
double x25430 = x25241*x25429;
double x25431 = x11944*x19;
double x25432 = x25373*x5306;
double x25433 = x24951*x5979;
double x25434 = x25432*x5152;
double x25435 = x24953*x5984;
double x25436 = x24956*x5982;
double x25437 = x25432*x5157;
double x25438 = x24958*x5984;
double x25439 = x24961*x5979;
double x25440 = x24469*x5980;
double x25441 = x24550*x25440;
double x25442 = x24562*x25440;
double x25443 = x11904*x24708;
double x25444 = x24967*x5984;
double x25445 = x11904*x24726;
double x25446 = x24550*x25376;
double x25447 = x24562*x25376;
double x25448 = x24564*x5982;
double x25449 = x25448*x5572;
double x25450 = x24973*x5984;
double x25451 = x25385*x5780;
double x25452 = x11683*x25386;
double x25453 = x24573*x25379;
double x25454 = x24979*x5984;
double x25455 = x19602 + x22247 - x25431 - x25432 + x25433 - x25434 - x25435 - x25436 + x25437 + x25438 + x25439 + x25441 + x25442 + x25443 - x25444 - x25445 - x25446 - x25447 + x25449 + x25450 + x25451 + x25452 + x25453 - x25454;
double x25456 = x25254*x5306;
double x25457 = x158*x25147;
double x25458 = x19610*x5152;
double x25459 = x158*x25148;
double x25460 = x158*x25139;
double x25461 = x19610*x5157;
double x25462 = x158*x25140;
double x25463 = x5200*x6048;
double x25464 = 72*x25169;
double x25465 = q2_b_dt*x7357;
double x25466 = x25101*x5780;
double x25467 = x25030*x5261;
double x25468 = 32*x5988;
double x25469 = 32*x5906;
double x25470 = x327*x5873;
double x25471 = x3943*x6031;
double x25472 = x5200*x6096;
double x25473 = q1_b_dot*x25472;
double x25474 = q1_i_dot*x11975;
double x25475 = L*x5330;
double x25476 = q2_b*x25475;
double x25477 = x24495*x25476;
double x25478 = q2_i*x5536;
double x25479 = x24695*x25478;
double x25480 = x10776*x18216;
double x25481 = q1_b*x2826;
double x25482 = x129*x24510;
double x25483 = x129*x24507;
double x25484 = x24498*x25476;
double x25485 = x25150*x5336;
double x25486 = x25485*x2743;
double x25487 = x24705*x25478;
double x25488 = 12*x5818;
double x25489 = 12*x5824;
double x25490 = 12*x5825;
double x25491 = x24469*x5268;
double x25492 = x25030*x5883;
double x25493 = 32*x5343;
double x25494 = 32*x5226;
double x25495 = x25069*x25404;
double x25496 = 32*x24652;
double x25497 = 32*x6;
double x25498 = x11583*x6;
double x25499 = 32*x25224;
double x25500 = x24708*x5852;
double x25501 = q2_b*x24710;
double x25502 = 12*x24528;
double x25503 = x151*x662;
double x25504 = 12*x24517;
double x25505 = x3943*x5960;
double x25506 = x5312*x6;
double x25507 = x17063*x24718;
double x25508 = q1_i_dot*x11983;
double x25509 = q2_i*x25056;
double x25510 = x3726*x5255;
double x25511 = x24513*x25069;
double x25512 = 64*x24929;
double x25513 = x11583*x17507;
double x25514 = x24726*x5852;
double x25515 = q2_b*x24723;
double x25516 = x11359*x11433;
double x25517 = x19575 + x22224;
double x25518 = x25373*x5411;
double x25519 = x11904*x25089;
double x25520 = x11683*x25465 - x11998*x19 + x19628 - x19629 + x22154 + x22155 - x22277 + x24495*x6066 + x24498*x6066 + x25079*x5979 - x25080*x5984 - x25081*x5982 + x25087*x5984 + x25088*x5979 - x25091*x5984 + x25099*x25379 + x25100*x5984 - x25102*x5984 + x25141 + x25142 + x25143 - x25144 - x25145 - x25146 + x25156 + x25158 + x25160 - x25162 - x25163 - x25164 + x25174 + x25178 + x25180 - 36*x25377 - 36*x25378 + x25448*x5440 + x25466*x637 - x25518*x5152 + x25518*x5157 - x25518 - x25519*x5152 + x25519;
double x25521 = x24759*x5982;
double x25522 = x24584*x5982;
double x25523 = x12087*x19;
double x25524 = x24934*x5330;
double x25525 = x19*x8001;
double x25526 = -16*x24597 + 8*x25033 + x25524*x5152 - x25524*x5157 - x25524 - x25525*x5157 + x25525;
double x25527 = x22385 + x25457 + x25458 + x25459 - x25460 - x25461 - x25462 + x25477 + x25479 + x25480 - x25484 - x25486 - x25487 + x25501 + x25509 + x25515;
double x25528 = 2*x663;
double x25529 = x24759*x5966;
double x25530 = q2_i*x2;
double x25531 = x24810*x6031;
double x25532 = x24810*x6075;
double x25533 = x2794*x5150;
double x25534 = q2_b*x24824*x5851;
double x25535 = q2_i*x2807;
double x25536 = x19*x24659;
double x25537 = q3_b*x24474;
double x25538 = x12040*x5163;
double x25539 = x25137*x6358;
double x25540 = q3_b*x24476;
double x25541 = x12040*x24460;
double x25542 = L*x24495;
double x25543 = x11757*x6716;
double x25544 = 24*x5184;
double x25545 = 24*x24469;
double x25546 = q3_b_dt*x323*x879;
double x25547 = x12228*x6716;
double x25548 = x2797*x5712;
double x25549 = x24629*x8628;
double x25550 = x19658*x5695;
double x25551 = x158*x6105;
double x25552 = x6222*x637;
double x25553 = x321*x6187;
double x25554 = q3_i_dot*x25014;
double x25555 = x12040*x5186;
double x25556 = q3_b_dt*x11683;
double x25557 = x6*x6341;
double x25558 = q2_b*x19648;
double x25559 = q3_b*x19490;
double x25560 = x25150*x5572;
double x25561 = x18903*x5184;
double x25562 = x24450*x6117;
double x25563 = x0*x24709;
double x25564 = 48*x25563;
double x25565 = x11328*x6741;
double x25566 = L*x25565;
double x25567 = q2_i*q3_i;
double x25568 = x24450*x25567;
double x25569 = q3_b_dot*x25018;
double x25570 = x12169*x19;
double x25571 = x11328*x5332;
double x25572 = q2_b*x6222;
double x25573 = x5547*x6;
double x25574 = x17063*x24500;
double x25575 = q3_b_dot*x24500;
double x25576 = x24564*x6117;
double x25577 = x24501*x7995;
double x25578 = x24756*x24900;
double x25579 = q2_i*q3_i_dot;
double x25580 = x25579*x5152;
double x25581 = q3_b*x19;
double x25582 = x24500*x7995;
double x25583 = x25373*x5413;
double x25584 = x11905*x19;
double x25585 = x25274*x6117;
double x25586 = x24507*x6237;
double x25587 = x24507*x6238;
double x25588 = x24510*x6237;
double x25589 = x24510*x6238;
double x25590 = x129*x6154;
double x25591 = q2_b*x2910;
double x25592 = x24584*x6117;
double x25593 = x1858*x6202;
double x25594 = q3_b*x2863;
double x25595 = q3_b*x5491;
double x25596 = q3_i*x5502;
double x25597 = x158*x6031;
double x25598 = x158*x6075;
double x25599 = 8*x25562;
double x25600 = x11982*x25581;
double x25601 = x24830*x25567;
double x25602 = q2_b_dot*x25065;
double x25603 = x12040*x5830;
double x25604 = q3_b*x2826;
double x25605 = x17429*x24500;
double x25606 = x12056*x19;
double x25607 = x12176*x19;
double x25608 = x11889*x19;
double x25609 = q2_i_dot*q3_i_dot;
double x25610 = q3_i_dot*x24832;
double x25611 = q2_i_dot*q3_i;
double x25612 = x25611*x5152;
double x25613 = x24474*x3811;
double x25614 = x24732*x6167;
double x25615 = x24476*x3811;
double x25616 = x24738*x6167;
double x25617 = x2*x6167;
double x25618 = x19*x6188;
double x25619 = -q3_i_dot*x25230 - x19646*x5152 + x19646*x5157 - x19658*x6354 + x22319 + x22320 + x24481*x25617 - x24484*x25617 + x24492*x2856 - x24495*x6497 + x24498*x6497 - x25245*x25618 - x25569*x5680 + x25613 + x25614 - x25615 - x25616;
double x25620 = x24934*x5971;
double x25621 = x25620*x5413;
double x25622 = x24629*x5970;
double x25623 = x24939*x5971;
double x25624 = x24939*x25360;
double x25625 = x362*x5971;
double x25626 = -x12147*x19 + x12150*x24507 - x12150*x24510 + x19679 - x19680 + x22322 - x22323 + x24621*x5969 + x24626*x5969 - x24672*x5974 - x24856*x5974 + x24863*x5974 - x24937*x5971 + x24946*x25625 + x24988*x25365 + x24988*x25367 + x25292*x5969 - x25621*x5152 + x25621*x5157 - x25621 + x25622*x5152 + x25622*x5157 - x25623*x5152 + x25623 - x25624*x5152 - x25624*x5157;
double x25627 = x25263*x6117;
double x25628 = 32*x25562;
double x25629 = x24906*x6341;
double x25630 = x24629*x6220;
double x25631 = q3_b*x2794;
double x25632 = x25274*x6200;
double x25633 = q3_b_dot*x5907;
double x25634 = x24769*x6166;
double x25635 = x646*x6521;
double x25636 = x24629*x6158;
double x25637 = x24458*x6117;
double x25638 = x12288*x25320;
double x25639 = q3_b_dt*x18210;
double x25640 = q2_b_dot*x19649;
double x25641 = q3_i_dot*x5929;
double x25642 = q3_b_dot*x24584;
double x25643 = x6125*x675;
double x25644 = x6*x6521;
double x25645 = x2797*x6171;
double x25646 = x6127*x646;
double x25647 = q3_b_dot*x25065;
double x25648 = q3_b_dot*x24659;
double x25649 = x3811*x5851;
double x25650 = x25104*x25649;
double x25651 = x11981*x25618;
double x25652 = x25296*x25567;
double x25653 = x24939*x25609;
double x25654 = x362*x6196;
double x25655 = x24621*x6241;
double x25656 = x24621*x6244;
double x25657 = x12181*x19;
double x25658 = x12182*x19;
double x25659 = x24626*x6241;
double x25660 = x24626*x6244;
double x25661 = x24629*x6246;
double x25662 = x25661*x5157;
double x25663 = x25661*x5152;
double x25664 = x24498*x6249;
double x25665 = x24495*x6249;
double x25666 = x24507*x6268;
double x25667 = x158*x25666;
double x25668 = x24507*x6270;
double x25669 = x158*x25668;
double x25670 = x24510*x6268;
double x25671 = x158*x25670;
double x25672 = x24510*x6270;
double x25673 = x158*x25672;
double x25674 = x24641*x6276;
double x25675 = x12288*x25618;
double x25676 = x24645*x6276;
double x25677 = x24863*x6496;
double x25678 = x24649*x6256;
double x25679 = x24863*x6495;
double x25680 = x24649*x3805;
double x25681 = x12040*x12161;
double x25682 = x2883*x6;
double x25683 = x24657*x25682;
double x25684 = x25292*x6241;
double x25685 = x19649*x25648;
double x25686 = x24662*x6276;
double x25687 = x24528*x692;
double x25688 = x12178*x25687;
double x25689 = x24856*x6495;
double x25690 = x24667*x6264;
double x25691 = x24670*x6276;
double x25692 = x24672*x6496;
double x25693 = x24672*x6495;
double x25694 = x25675*x5152;
double x25695 = q3_i*q3_i_dot;
double x25696 = x24678*x25695;
double x25697 = x25695*x5152;
double x25698 = x24677*x25697;
double x25699 = -x12212*x19;
double x25700 = -x24579*x6282;
double x25701 = x24581*x6279;
double x25702 = -x24791*x6282;
double x25703 = -x24882*x6523;
double x25704 = -x24585*x6282;
double x25705 = x24790*x6282;
double x25706 = x24883*x6523;
double x25707 = x24586*x6279;
double x25708 = x6521*x675;
double x25709 = x24498*x25708;
double x25710 = x24495*x25708;
double x25711 = x12461*x19;
double x25712 = q3_i_dot*x6520;
double x25713 = -x24528*x25712;
double x25714 = -x25711*x5152;
double x25715 = pow(q3_i_dot, 2);
double x25716 = -x24594*x25715;
double x25717 = -x24595*x25715;
double x25718 = x24598*x6282;
double x25719 = x24517*x25712;
double x25720 = x6127*x675;
double x25721 = x24599*x25720;
double x25722 = x25644*x6171;
double x25723 = x19647*x25575;
double x25724 = -x24533*x25712;
double x25725 = x19783 + x22410 + x25699 + x25700 + x25701 + x25702 + x25703 + x25704 + x25705 + x25706 + x25707 + x25709 + x25710 + x25711 + x25713 + x25714 + x25716 + x25717 + x25718 + x25719 + x25721 + x25722 + x25723 + x25724;
double x25726 = x21203 + x22351 + x23642 - x25655 - x25656 + x25657 + x25658 - x25659 - x25660 - x25662 - x25663 - x25664 - x25665 - x25667 - x25669 + x25671 + x25673 + x25674 - x25675 - x25676 - x25677 - x25678 - x25679 - x25680 - x25681 - x25683 - x25684 - x25685 + x25686 + x25688 + x25689 + x25690 - x25691 + x25692 + x25693 + x25694 + x25696 + x25698 + x25725;
double x25727 = x5200*x6293;
double x25728 = x25727*x5330;
double x25729 = x12218*x24900;
double x25730 = pow(q3_i, 2)*x24450;
double x25731 = x25730*x5157;
double x25732 = x25730*x5152;
double x25733 = q3_b_dt*x12040;
double x25734 = q3_b*x19648;
double x25735 = -x12217*x19 + x19716 - x19717 - x22355 + x24495*x6292 + x24498*x6292 + x24617*x6293 - x24667*x6293 + x24896*x6290 - x24897*x6296 + x24898*x6296 + x24899*x6290 - x24902*x6296 + x24904*x25734 + x24905*x6296 - x24907*x6296 + x25629*x666 - x25728*x5152 + x25728*x5157 - x25728 - x25729*x5152 + x25729 - 16*x25731 - 16*x25732 + x25733*x5643;
double x25736 = x24469*x6214;
double x25737 = x24469*x6216;
double x25738 = q3_b*x5200;
double x25739 = x25738*x5997;
double x25740 = 48*x25562;
double x25741 = x24569*x666;
double x25742 = 14*x6300;
double x25743 = 14*x6220;
double x25744 = 10*x6246;
double x25745 = 10*x6301;
double x25746 = x286*x6202;
double x25747 = x25392*x6200;
double x25748 = 6*x6166;
double x25749 = 6*x6168;
double x25750 = 10*x6158;
double x25751 = 10*x6159;
double x25752 = 14*x5936;
double x25753 = 14*x5990;
double x25754 = x24454*x6117;
double x25755 = x24927*x5852;
double x25756 = q3_b*x25755;
double x25757 = x24514*x6189;
double x25758 = q3_b*x25757;
double x25759 = x6121*x646;
double x25760 = q2_b_dot*x24924;
double x25761 = x18572*x24500;
double x25762 = q3_b_dot*x19649;
double x25763 = 6*x19646;
double x25764 = x12291*x19;
double x25765 = x11683*x5830;
double x25766 = q2_b*x25757;
double x25767 = q2_b*x25755;
double x25768 = x25429*x25609;
double x25769 = x12256*x19;
double x25770 = x25727*x5306;
double x25771 = x24951*x6290;
double x25772 = x25770*x5152;
double x25773 = x24953*x6296;
double x25774 = x24956*x6293;
double x25775 = x25770*x5157;
double x25776 = x24958*x6296;
double x25777 = x24961*x6290;
double x25778 = x24469*x6291;
double x25779 = x24550*x25778;
double x25780 = x24562*x25778;
double x25781 = x12218*x24708;
double x25782 = x24967*x6296;
double x25783 = x12218*x24726;
double x25784 = x24550*x25730;
double x25785 = x24562*x25730;
double x25786 = x24564*x6293;
double x25787 = x25786*x5572;
double x25788 = x24973*x6296;
double x25789 = x25741*x6341;
double x25790 = x25733*x6741;
double x25791 = x24573*x25734;
double x25792 = x24979*x6296;
double x25793 = x19753 + x22380 - x25769 - x25770 + x25771 - x25772 - x25773 - x25774 + x25775 + x25776 + x25777 + x25779 + x25780 + x25781 - x25782 - x25783 - x25784 - x25785 + x25787 + x25788 + x25789 + x25790 + x25791 - x25792;
double x25794 = x25620*x5306;
double x25795 = x158*x25540;
double x25796 = x19758*x5152;
double x25797 = x158*x25541;
double x25798 = x158*x25537;
double x25799 = x19758*x5157;
double x25800 = x158*x25538;
double x25801 = x25137*x6337;
double x25802 = 72*x25562;
double x25803 = x25101*x6341;
double x25804 = x25030*x5966;
double x25805 = 32*x6300;
double x25806 = 32*x6220;
double x25807 = x327*x6202;
double x25808 = x3943*x6327;
double x25809 = q3_b_dot*x25472;
double x25810 = q3_b*x25475;
double x25811 = x24495*x25810;
double x25812 = q3_i*x5536;
double x25813 = x24695*x25812;
double x25814 = x10776*x18903;
double x25815 = x24498*x25810;
double x25816 = q3_b_dt*x24703;
double x25817 = x24705*x25812;
double x25818 = x3943*x6105;
double x25819 = 12*x6166;
double x25820 = 12*x6168;
double x25821 = x24469*x5970;
double x25822 = x25030*x6206;
double x25823 = 32*x5936;
double x25824 = 32*x5990;
double x25825 = x25069*x5852;
double x25826 = q3_b*x25825;
double x25827 = x25063*x4;
double x25828 = x24708*x6189;
double x25829 = q3_b*x24710;
double x25830 = x3943*x6187;
double x25831 = x3943*x6270;
double x25832 = x3045*x3726;
double x25833 = q3_i*x25056;
double x25834 = x24714*x6167;
double x25835 = x19646*x24718;
double x25836 = x17063*x24573;
double x25837 = q2_b*x25825;
double x25838 = x24726*x6189;
double x25839 = q3_b*x24723;
double x25840 = x19726 + x22358;
double x25841 = x25727*x5411;
double x25842 = x12218*x25089;
double x25843 = x12090*x5540;
double x25844 = -q3_b_dot*x25082 + q3_b_dot*x25085 + q3_b_dot*x25103 - q3_i_dot*x25084 + q3_i_dot*x25086 - x12303*x19 + x19777 - x19778 + x22406 - x22407 - x24468*x25843 + x24469*x25843 + x24495*x6353 + x24498*x6353 + x24736*x2856 - x24743*x2856 + x24750*x6521 + x25079*x6290 - x25080*x6296 - x25081*x6293 - x25083*x2856 + x25087*x6296 + x25088*x6290 - x25091*x6296 - x25093*x3811 + x25096*x3811 + x25099*x25734 + x25100*x6296 - x25102*x6296 + x25105*x6188 + 4*x25550 - 36*x25731 - 36*x25732 + x25733*x7357 + x25786*x5440 + x25803*x666 - x25841*x5152 + x25841*x5157 - x25841 - x25842*x5152 + x25842;
double x25845 = x24759*x6293;
double x25846 = x24584*x6293;
double x25847 = x12396*x19;
double x25848 = q3_b_dt*x24480;
double x25849 = x12228*x3943;
double x25850 = x24934*x5411;
double x25851 = 36*x25047;
double x25852 = x362*x5440;
double x25853 = -x24484*x25852 + 18*x25033 + x25850*x5152 - x25850*x5157 - x25850 - x25851*x5157 + x25851;
double x25854 = x24759*x6276;
double x25855 = q3_i*x2;
double x25856 = x24810*x6327;
double x25857 = x24810*x6363;
double x25858 = x12090*x129;
double x25859 = q3_b*x24824*x6188;
double x25860 = q3_i_dot*x2910;
double x25861 = x24709*x5322;
double x25862 = q4_b*x24474;
double x25863 = x21137*x5157;
double x25864 = x12351*x5163;
double x25865 = q4_b*x5200;
double x25866 = x25865*x6358;
double x25867 = 6*q4_i_dot;
double x25868 = x24481*x3021;
double x25869 = q4_b*x24476;
double x25870 = x21137*x5152;
double x25871 = x12351*x24460;
double x25872 = x12228*x7333;
double x25873 = x25150*x5440;
double x25874 = x12407*x7333;
double x25875 = 20*x25015;
double x25876 = x21169*x5695;
double x25877 = x24504*x3021;
double x25878 = x158*x6400;
double x25879 = x3012*x666;
double x25880 = x321*x6483;
double x25881 = q3_b_dt*x12351;
double x25882 = x6*x6655;
double x25883 = q3_b*x21137;
double x25884 = q4_b*x19648;
double x25885 = x25150*x6389;
double x25886 = x24450*x6409;
double x25887 = x24469*x323;
double x25888 = x25887*x879;
double x25889 = x18978*x5184;
double x25890 = 72*x25563;
double x25891 = 40*x0;
double x25892 = x11328*x7357;
double x25893 = L*x25892;
double x25894 = q4_b_dot*x25018;
double x25895 = q3_i*q4_i;
double x25896 = x24450*x25895;
double x25897 = 20*x24750;
double x25898 = x12484*x19;
double x25899 = q3_b*x3012;
double x25900 = x21271*x24500;
double x25901 = q4_b_dot*x24500;
double x25902 = x24584*x6436;
double x25903 = x24564*x6409;
double x25904 = q4_b*x25563;
double x25905 = 72*x0;
double x25906 = 40*x24756;
double x25907 = q3_i*q4_i_dot;
double x25908 = x25907*x5152;
double x25909 = q4_b*x19;
double x25910 = x25909*x5211;
double x25911 = x25727*x5413;
double x25912 = x12219*x19;
double x25913 = x25274*x6409;
double x25914 = x24507*x6551;
double x25915 = x24507*x6552;
double x25916 = x24510*x6551;
double x25917 = x24510*x6552;
double x25918 = q3_b*x6365;
double x25919 = q4_b*x6365;
double x25920 = x12228*x129;
double x25921 = x129*x6450;
double x25922 = x12407*x129;
double x25923 = q4_b*x2910;
double x25924 = x24584*x6409;
double x25925 = q4_b*x24507;
double x25926 = q4_b_dot*x24579;
double x25927 = q4_b*x24510;
double x25928 = x158*x6327;
double x25929 = x158*x6363;
double x25930 = x3070*x5186;
double x25931 = 8*x25886;
double x25932 = x12289*x25909;
double x25933 = x24830*x25895;
double x25934 = x11328*x5794;
double x25935 = x129*x6499;
double x25936 = x12351*x6172;
double x25937 = q3_i_dot*x12438;
double x25938 = x12371*x19;
double x25939 = x12487*x19;
double x25940 = x12203*x19;
double x25941 = x24500*x25247;
double x25942 = q3_i_dot*q4_i_dot;
double x25943 = q4_i_dot*x24832;
double x25944 = q4_i_dot*x2910;
double x25945 = q3_i_dot*q4_i;
double x25946 = x25945*x5152;
double x25947 = q4_b_dot*x25085;
double x25948 = x24736*x2958;
double x25949 = q4_i_dot*x25086;
double x25950 = q4_b_dot*x25082;
double x25951 = x25083*x2958;
double x25952 = q4_i_dot*x25084;
double x25953 = x25096*x4616;
double x25954 = q4_i_dot*x25097;
double x25955 = x21307*x5695;
double x25956 = x25093*x4616;
double x25957 = x24743*x2958;
double x25958 = q4_i_dot*x25095;
double x25959 = q4_b_dot*x25103;
double x25960 = x24750*x5540;
double x25961 = q4_i_dot*x25960;
double x25962 = x25105*x6484;
double x25963 = x23607 + x23610 - x25947 - x25948 - x25949 + x25950 + x25951 + x25952 - x25953 - x25954 - x25955 + x25956 + x25957 + x25958 - x25959 - x25961 - x25962;
double x25964 = x24934*x6282;
double x25965 = x25964*x5413;
double x25966 = x24629*x6281;
double x25967 = x24939*x6282;
double x25968 = x24939*x25715;
double x25969 = x362*x6282;
double x25970 = x6167*x6171;
double x25971 = -x12459*x19 + x19646*x25648 + x21166 - x21167 + x23613 - x23614 + x24507*x25712 - x24510*x25712 + x24621*x6279 + x24626*x6279 - x24672*x6285 - x24856*x6285 + x24863*x6285 - x24937*x6282 + x24946*x25969 + x24988*x25720 + x24988*x25970 - x25965*x5152 + x25965*x5157 - x25965 + x25966*x5152 + x25966*x5157 - x25967*x5152 + x25967 - x25968*x5152 - x25968*x5157;
double x25972 = x25738*x6536;
double x25973 = 32*x25886;
double x25974 = q4_b_dt*x12040;
double x25975 = x24906*x6655;
double x25976 = x24629*x6531;
double x25977 = x25274*x6550;
double x25978 = x6521*x704;
double x25979 = q4_i_dot*x675;
double x25980 = x24629*x6455;
double x25981 = x24458*x6409;
double x25982 = x12594*x25618;
double x25983 = q4_i_dot*x6520;
double x25984 = q3_i_dot*x6836;
double x25985 = q4_b_dot*x24584;
double x25986 = x6127*x704;
double x25987 = x5540*x6;
double x25988 = q4_i_dot*x25987;
double x25989 = x6418*x675;
double x25990 = q4_b_dot*x25065;
double x25991 = q4_b_dot*x19649;
double x25992 = x4616*x6188;
double x25993 = x25104*x25992;
double x25994 = x19*x6484;
double x25995 = x12288*x25994;
double x25996 = x25296*x25895;
double x25997 = x24939*x25942;
double x25998 = x11359*x6676;
double x25999 = x362*x6493;
double x26000 = x24621*x6555;
double x26001 = x24621*x6557;
double x26002 = x12492*x19;
double x26003 = x12493*x19;
double x26004 = x24626*x6555;
double x26005 = x24626*x6557;
double x26006 = x24629*x6559;
double x26007 = x26006*x5157;
double x26008 = x26006*x5152;
double x26009 = x24498*x6562;
double x26010 = x24495*x6562;
double x26011 = x24507*x6581;
double x26012 = x158*x26011;
double x26013 = x24507*x6583;
double x26014 = x158*x26013;
double x26015 = x24510*x6581;
double x26016 = x158*x26015;
double x26017 = x24510*x6583;
double x26018 = x158*x26017;
double x26019 = x24641*x6589;
double x26020 = x12594*x25994;
double x26021 = x24645*x6589;
double x26022 = x24863*x6820;
double x26023 = x24649*x6569;
double x26024 = x24863*x6819;
double x26025 = x24649*x4610;
double x26026 = x12351*x12473;
double x26027 = x25285*x6575;
double x26028 = x25292*x6555;
double x26029 = x24659*x720;
double x26030 = x21137*x26029;
double x26031 = x24662*x6589;
double x26032 = x24528*x721;
double x26033 = x12489*x26032;
double x26034 = x24856*x6819;
double x26035 = x24667*x6577;
double x26036 = x24670*x6589;
double x26037 = x24672*x6820;
double x26038 = x25998*x720;
double x26039 = x26020*x5152;
double x26040 = q4_i*q4_i_dot;
double x26041 = x24678*x26040;
double x26042 = x26040*x5152;
double x26043 = x24677*x26042;
double x26044 = -x12522*x19;
double x26045 = -x24579*x6595;
double x26046 = x24581*x6592;
double x26047 = -x24791*x6595;
double x26048 = -x24882*x6839;
double x26049 = -x24585*x6595;
double x26050 = x24790*x6595;
double x26051 = x24883*x6839;
double x26052 = x24586*x6592;
double x26053 = q4_i_dot*x704;
double x26054 = x24587*x26053;
double x26055 = x24589*x26053;
double x26056 = x15455*x19;
double x26057 = q4_i_dot*x6836;
double x26058 = -x24528*x26057;
double x26059 = -x26056*x5152;
double x26060 = pow(q4_i_dot, 2);
double x26061 = -x24594*x26060;
double x26062 = -x24595*x26060;
double x26063 = x24598*x6595;
double x26064 = x24517*x26057;
double x26065 = x6418*x704;
double x26066 = x24599*x26065;
double x26067 = x25988*x6466;
double x26068 = x25176*x6592;
double x26069 = -x24533*x26057;
double x26070 = x21263 + x23695 + x26044 + x26045 + x26046 + x26047 + x26048 + x26049 + x26050 + x26051 + x26052 + x26054 + x26055 + x26056 + x26058 + x26059 + x26061 + x26062 + x26063 + x26064 + x26066 + x26067 + x26068 + x26069;
double x26071 = x21350 + x23640 + x23769 - x26000 - x26001 + x26002 + x26003 - x26004 - x26005 - x26007 - x26008 - x26009 - x26010 - x26012 - x26014 + x26016 + x26018 + x26019 - x26020 - x26021 - x26022 - x26023 - x26024 - x26025 - x26026 - x26027 - x26028 - x26030 + x26031 + x26033 + x26034 + x26035 - x26036 + x26037 + x26038 + x26039 + x26041 + x26043 + x26070;
double x26072 = x5200*x6606;
double x26073 = x26072*x5330;
double x26074 = x12528*x24900;
double x26075 = pow(q4_i, 2)*x24450;
double x26076 = x26075*x5157;
double x26077 = x26075*x5152;
double x26078 = q4_b_dt*x12351;
double x26079 = q4_b*x21137;
double x26080 = -x12527*x19 + x21200 - x21201 - x23644 + x24495*x6605 + x24498*x6605 + x24617*x6606 - x24667*x6606 + x24896*x6603 - x24897*x6609 + x24898*x6609 + x24899*x6603 - x24902*x6609 + x24904*x26079 + x24905*x6609 - x24907*x6609 + x25975*x695 - x26073*x5152 + x26073*x5157 - x26073 - x26074*x5152 + x26074 - 16*x26076 - 16*x26077 + x26078*x5643;
double x26081 = x24469*x6526;
double x26082 = x24469*x6528;
double x26083 = x25865*x6093;
double x26084 = 48*x25886;
double x26085 = x24569*x695;
double x26086 = 14*x6613;
double x26087 = 14*x6531;
double x26088 = 10*x6559;
double x26089 = 10*x6614;
double x26090 = x286*x6499;
double x26091 = x25392*x6550;
double x26092 = q3_b*x2983;
double x26093 = 6*x6461;
double x26094 = 6*x6462;
double x26095 = 10*x6455;
double x26096 = 10*x6456;
double x26097 = 14*x6246;
double x26098 = 14*x6301;
double x26099 = x24454*x6409;
double x26100 = x24927*x6189;
double x26101 = q4_b*x26100;
double x26102 = x24514*x6485;
double x26103 = q4_b*x26102;
double x26104 = x6678*x675;
double x26105 = x21137*x4;
double x26106 = x26105*x691;
double x26107 = x17368*x6171;
double x26108 = x25419*x6466;
double x26109 = x12597*x19;
double x26110 = x12040*x6172;
double x26111 = q3_b*x26102;
double x26112 = q3_b*x26100;
double x26113 = x25429*x25942;
double x26114 = x12564*x19;
double x26115 = x26072*x5306;
double x26116 = x24951*x6603;
double x26117 = x26115*x5152;
double x26118 = x24953*x6609;
double x26119 = x24956*x6606;
double x26120 = x26115*x5157;
double x26121 = x24958*x6609;
double x26122 = x24961*x6603;
double x26123 = x24469*x6604;
double x26124 = x24550*x26123;
double x26125 = x24562*x26123;
double x26126 = x12528*x24708;
double x26127 = x24967*x6609;
double x26128 = x12528*x24726;
double x26129 = x24550*x26075;
double x26130 = x24562*x26075;
double x26131 = x24564*x6606;
double x26132 = x26131*x5572;
double x26133 = x24973*x6609;
double x26134 = x26085*x6655;
double x26135 = x26078*x6741;
double x26136 = x24573*x26079;
double x26137 = x24979*x6609;
double x26138 = x21236 + x23668 - x26114 - x26115 + x26116 - x26117 - x26118 - x26119 + x26120 + x26121 + x26122 + x26124 + x26125 + x26126 - x26127 - x26128 - x26129 - x26130 + x26132 + x26133 + x26134 + x26135 + x26136 - x26137;
double x26139 = x25964*x5306;
double x26140 = x158*x25869;
double x26141 = x158*x25870;
double x26142 = x158*x25871;
double x26143 = x158*x25862;
double x26144 = x158*x25863;
double x26145 = x158*x25864;
double x26146 = x25865*x6337;
double x26147 = 72*x25886;
double x26148 = x25101*x6655;
double x26149 = x25030*x6276;
double x26150 = 32*x6613;
double x26151 = 32*x6531;
double x26152 = x327*x6499;
double x26153 = x3943*x6643;
double x26154 = x5200*x5306;
double x26155 = x26154*x6550;
double x26156 = x3045*x3811;
double x26157 = q4_b*x25475;
double x26158 = x24495*x26157;
double x26159 = q4_i*x5536;
double x26160 = x24695*x26159;
double x26161 = x10776*x18978;
double x26162 = q3_b*x3044;
double x26163 = x24498*x26157;
double x26164 = x24480*x6672;
double x26165 = x24705*x26159;
double x26166 = x3943*x6400;
double x26167 = 12*x6461;
double x26168 = x6280*x6976;
double x26169 = x24469*x6281;
double x26170 = x25030*x6503;
double x26171 = 32*x6246;
double x26172 = 32*x6301;
double x26173 = x25069*x6189;
double x26174 = q4_b*x26173;
double x26175 = x24708*x6485;
double x26176 = q4_b*x24710;
double x26177 = x3943*x6483;
double x26178 = x3943*x6583;
double x26179 = x21137*x3943;
double x26180 = x3811*x6976;
double x26181 = x3045*x4616;
double x26182 = L*x11328*x6676;
double x26183 = q3_b*x26173;
double x26184 = x24726*x6485;
double x26185 = q4_b*x24723;
double x26186 = x21210 + x23647;
double x26187 = x26072*x5411;
double x26188 = x12528*x25089;
double x26189 = -x12609*x19 + x21259 - x21260 + x23608 + x23609 - x23692 + x24495*x6668 + x24498*x6668 + x25079*x6603 - x25080*x6609 - x25081*x6606 + x25087*x6609 + x25088*x6603 - x25091*x6609 + x25099*x26079 + x25100*x6609 - x25102*x6609 + x25947 + x25948 + x25949 - x25950 - x25951 - x25952 + x25953 + x25954 + x25955 - x25956 - x25957 - x25958 + x25959 + x25961 + x25962 - 36*x26076 - 36*x26077 + x26078*x7357 + x26131*x5440 + x26148*x695 - x26187*x5152 + x26187*x5157 - x26187 - x26188*x5152 + x26188;
double x26190 = x24759*x6606;
double x26191 = x24584*x6606;
double x26192 = x15382*x19;
double x26193 = q4_b*x7940;
double x26194 = x12407*x327;
double x26195 = 16*x5184;
double x26196 = q4_i*x24750;
double x26197 = 32*x25563;
double x26198 = x24934*x5641;
double x26199 = 64*x25047;
double x26200 = -64*x24597 + 32*x25033 + x26198*x5152 - x26198*x5157 - x26198 - x26199*x5157 + x26199;
double x26201 = x24759*x6589;
double x26202 = q4_i*x2;
double x26203 = x24810*x6643;
double x26204 = x24810*x6686;
double x26205 = x24454*x323;
double x26206 = 8*x26205;
double x26207 = x5536*x721;
double x26208 = q4_b*x24824*x6484;
double x26209 = q4_i*x3023;
double x26210 = x24500*x24643;
double x26211 = q5_b*x24474;
double x26212 = x21277*x5157;
double x26213 = x15342*x5163;
double x26214 = 14*x4616;
double x26215 = x5200*x6746;
double x26216 = x26215*x5306;
double x26217 = 8*x4707;
double x26218 = 8*q5_i_dot;
double x26219 = q5_b*x24476;
double x26220 = x21277*x5152;
double x26221 = x15342*x24460;
double x26222 = x24495*x5154;
double x26223 = x6709*x7030;
double x26224 = x12407*x6709;
double x26225 = x15395*x6709;
double x26226 = 28*q4_i_dot;
double x26227 = 16*q5_i_dot;
double x26228 = x21287*x5695;
double x26229 = x158*x6731;
double x26230 = x6850*x695;
double x26231 = x321*x6810;
double x26232 = x15342*x5186;
double x26233 = q5_b_dt*x12351;
double x26234 = x6*x6801;
double x26235 = q4_b*x21277;
double x26236 = q5_b*x21137;
double x26237 = 16*x24480;
double x26238 = x24450*x6746;
double x26239 = x24498*x5154;
double x26240 = x25150*x6714;
double x26241 = x19053*x5184;
double x26242 = 56*x0;
double x26243 = x24750*x6709;
double x26244 = q5_b_dot*x25018;
double x26245 = q4_i*q5_i;
double x26246 = x24450*x26245;
double x26247 = x11328*x5643;
double x26248 = x15477*x19;
double x26249 = q4_b*x6850;
double x26250 = q5_b_dot*x24500;
double x26251 = x24564*x6746;
double x26252 = q5_i*x24750;
double x26253 = q5_b*x25563;
double x26254 = 96*x0;
double x26255 = x19*x6811;
double x26256 = x24756*x26255;
double x26257 = q4_i*q5_i_dot;
double x26258 = x26257*x5152;
double x26259 = q5_b*x19;
double x26260 = x26259*x5211;
double x26261 = x26072*x5413;
double x26262 = x12529*x19;
double x26263 = x26215*x5413;
double x26264 = q4_b*x7010;
double x26265 = q5_b*x7010;
double x26266 = x12407*x5224;
double x26267 = x15395*x5224;
double x26268 = x129*x6778;
double x26269 = q4_b*x3131;
double x26270 = x24584*x6746;
double x26271 = x1858*x6823;
double x26272 = q5_b*x3082;
double x26273 = x158*x6643;
double x26274 = x158*x6686;
double x26275 = 8*x26238;
double x26276 = x25150*x5248;
double x26277 = x12595*x26259;
double x26278 = x24830*x26245;
double x26279 = x129*x6823;
double x26280 = x15342*x6467;
double x26281 = q5_b*x3044;
double x26282 = x15360*x19;
double x26283 = x15482*x19;
double x26284 = x12513*x19;
double x26285 = q4_i_dot*q5_i_dot;
double x26286 = q5_i_dot*x24832;
double x26287 = q4_i_dot*q5_i;
double x26288 = x26287*x5152;
double x26289 = 6*q5_i_dot;
double x26290 = x15558*x24474 - x15558*x24476 - x21291*x5152 + x21291*x5157 - x21336*x25016 + x23737 + x23738 + 6*x24480*x6724 - x24495*x6829 + x24498*x6829 + x25011*x6833 - x25012*x6833 + x25014*x26289 - x25015*x26289 - 6*x26228 - x26244*x5322 - 12*x26256;
double x26291 = x24934*x6595;
double x26292 = x26291*x5413;
double x26293 = x24629*x6594;
double x26294 = x24939*x6595;
double x26295 = x24939*x26060;
double x26296 = x362*x6595;
double x26297 = x21330*x6466;
double x26298 = -x15453*x19 + x21310 - x21311 + x23740 - x23741 + x24507*x26057 - x24510*x26057 + x24621*x6592 + x24626*x6592 - x24672*x6598 - x24856*x6598 + x24863*x6598 - x24937*x6595 + x24946*x26296 + x24988*x26065 + x24988*x26297 + x25292*x6592 - x26292*x5152 + x26292*x5157 - x26292 + x26293*x5152 + x26293*x5157 - x26294*x5152 + x26294 - x26295*x5152 - x26295*x5157;
double x26299 = q5_b_dot_dt*x24481;
double x26300 = q5_b*x5200;
double x26301 = x26300*x6536;
double x26302 = 32*x26238;
double x26303 = q4_b_dt*x15342;
double x26304 = x24906*x6801;
double x26305 = x24629*x6848;
double x26306 = q5_b*x24507;
double x26307 = x25274*x6821;
double x26308 = x24507*x6850;
double x26309 = q5_b*x24510;
double x26310 = q5_b_dot_dt*x24504;
double x26311 = q4_i_dot*x733;
double x26312 = q5_i_dot*x704;
double x26313 = x24629*x6781;
double x26314 = x24458*x6746;
double x26315 = x15589*x25994;
double x26316 = q5_b_dt*x18966;
double x26317 = q5_i_dot*x24528;
double x26318 = q4_i_dot*x6912;
double x26319 = q5_b_dot*x24584;
double x26320 = q5_i_dot*x24517;
double x26321 = x6418*x733;
double x26322 = q5_i_dot*x25987;
double x26323 = x6749*x704;
double x26324 = q5_b_dot_dt*x25574;
double x26325 = q5_b_dot*x25065;
double x26326 = x24659*x749;
double x26327 = x25994*x26217;
double x26328 = x12594*x26255;
double x26329 = x25296*x26245;
double x26330 = x24939*x26285;
double x26331 = q5_i_dot*x24533;
double x26332 = x362*x6817;
double x26333 = x24621*x6868;
double x26334 = x24621*x6871;
double x26335 = x15488*x19;
double x26336 = x15489*x19;
double x26337 = x24626*x6868;
double x26338 = x24626*x6871;
double x26339 = x24629*x6873;
double x26340 = x26339*x5157;
double x26341 = x26339*x5152;
double x26342 = x24498*x6876;
double x26343 = x24495*x6876;
double x26344 = x24507*x6895;
double x26345 = x158*x26344;
double x26346 = x24507*x6897;
double x26347 = x158*x26346;
double x26348 = x24510*x6895;
double x26349 = x158*x26348;
double x26350 = x24510*x6897;
double x26351 = x158*x26350;
double x26352 = x24641*x6903;
double x26353 = x15589*x26255;
double x26354 = x24645*x6903;
double x26355 = x24863*x7138;
double x26356 = x24649*x6883;
double x26357 = x24863*x7137;
double x26358 = x24649*x4701;
double x26359 = x15342*x15467;
double x26360 = x3102*x6;
double x26361 = x24657*x26360;
double x26362 = x25292*x6868;
double x26363 = x21277*x26326;
double x26364 = x24662*x6903;
double x26365 = x24528*x750;
double x26366 = x15484*x26365;
double x26367 = x24856*x7137;
double x26368 = x24667*x6891;
double x26369 = x24670*x6903;
double x26370 = x24672*x7138;
double x26371 = x24672*x7137;
double x26372 = x26353*x5152;
double x26373 = q5_i*q5_i_dot;
double x26374 = x24678*x26373;
double x26375 = x26373*x5152;
double x26376 = x24677*x26375;
double x26377 = -x15519*x19;
double x26378 = -x24579*x6908;
double x26379 = x26299*x6912;
double x26380 = -x24791*x6908;
double x26381 = -x24882*x7151;
double x26382 = -x24585*x6908;
double x26383 = x24790*x6908;
double x26384 = x24883*x7151;
double x26385 = x26310*x6912;
double x26386 = q5_i_dot*x733;
double x26387 = x24587*x26386;
double x26388 = x24589*x26386;
double x26389 = x15753*x19;
double x26390 = q5_i_dot*x6912;
double x26391 = -x24528*x26390;
double x26392 = -x26389*x5152;
double x26393 = pow(q5_i_dot, 2);
double x26394 = -x24594*x26393;
double x26395 = -x24595*x26393;
double x26396 = x24598*x6908;
double x26397 = x24517*x26390;
double x26398 = x6749*x733;
double x26399 = x24599*x26398;
double x26400 = x26322*x6791;
double x26401 = x26324*x6912;
double x26402 = -x24533*x26390;
double x26403 = x21413 + x23823 + x26377 + x26378 + x26379 + x26380 + x26381 + x26382 + x26383 + x26384 + x26385 + x26387 + x26388 + x26389 + x26391 + x26392 + x26394 + x26395 + x26396 + x26397 + x26399 + x26400 + x26401 + x26402;
double x26404 = x21496 + x23767 + x23897 - x26333 - x26334 + x26335 + x26336 - x26337 - x26338 - x26340 - x26341 - x26342 - x26343 - x26345 - x26347 + x26349 + x26351 + x26352 - x26353 - x26354 - x26355 - x26356 - x26357 - x26358 - x26359 - x26361 - x26362 - x26363 + x26364 + x26366 + x26367 + x26368 - x26369 + x26370 + x26371 + x26372 + x26374 + x26376 + x26403;
double x26405 = x5200*x6920;
double x26406 = x26405*x5330;
double x26407 = x15526*x24900;
double x26408 = pow(q5_i, 2)*x24450;
double x26409 = x26408*x5157;
double x26410 = x26408*x5152;
double x26411 = q5_b_dt*x15342;
double x26412 = q5_b*x21277;
double x26413 = -x15525*x19 + x21347 - x21348 - x23771 + x24495*x6919 + x24498*x6919 + x24617*x6920 - x24667*x6920 + x24896*x6917 - x24897*x6923 + x24898*x6923 + x24899*x6917 - x24902*x6923 + x24904*x26412 + x24905*x6923 - x24907*x6923 + x26304*x724 - x26406*x5152 + x26406*x5157 - x26406 - x26407*x5152 + x26407 - 16*x26409 - 16*x26410 + x26411*x5643;
double x26414 = x24469*x6842;
double x26415 = x24469*x6844;
double x26416 = x26215*x5996;
double x26417 = 48*x26238;
double x26418 = x24569*x724;
double x26419 = 14*x6927;
double x26420 = 14*x6848;
double x26421 = 10*x6873;
double x26422 = 10*x6928;
double x26423 = x286*x6823;
double x26424 = x24507*x3106;
double x26425 = x25392*x6821;
double x26426 = x4616*x6833;
double x26427 = q4_i_dot*x15558;
double x26428 = 10*x6781;
double x26429 = 10*x6782;
double x26430 = 14*x6559;
double x26431 = 14*x6614;
double x26432 = x24454*x6746;
double x26433 = x24927*x6485;
double x26434 = q5_b*x26433;
double x26435 = x24514*x6812;
double x26436 = q5_b*x26435;
double x26437 = x6745*x704;
double x26438 = x21277*x4;
double x26439 = x5527*x720;
double x26440 = x6997*x749;
double x26441 = x24524*x749;
double x26442 = x17368*x6791;
double x26443 = x15592*x19;
double x26444 = x12351*x6467;
double x26445 = q4_b*x26435;
double x26446 = q4_b*x26433;
double x26447 = x25429*x26285;
double x26448 = x15560*x19;
double x26449 = x26405*x5306;
double x26450 = x24951*x6917;
double x26451 = x26449*x5152;
double x26452 = x24953*x6923;
double x26453 = x24956*x6920;
double x26454 = x26449*x5157;
double x26455 = x24958*x6923;
double x26456 = x24961*x6917;
double x26457 = x24469*x6918;
double x26458 = x24550*x26457;
double x26459 = x24562*x26457;
double x26460 = x15526*x24708;
double x26461 = x24967*x6923;
double x26462 = x15526*x24726;
double x26463 = x24550*x26408;
double x26464 = x24562*x26408;
double x26465 = x24564*x6920;
double x26466 = x26465*x5572;
double x26467 = x24973*x6923;
double x26468 = x26418*x6801;
double x26469 = x26411*x6741;
double x26470 = x24573*x26412;
double x26471 = x24979*x6923;
double x26472 = x21386 + x23794 - x26448 - x26449 + x26450 - x26451 - x26452 - x26453 + x26454 + x26455 + x26456 + x26458 + x26459 + x26460 - x26461 - x26462 - x26463 - x26464 + x26466 + x26467 + x26468 + x26469 + x26470 - x26471;
double x26473 = x26291*x5306;
double x26474 = x158*x26219;
double x26475 = x158*x26220;
double x26476 = x158*x26221;
double x26477 = x158*x26211;
double x26478 = x158*x26212;
double x26479 = x158*x26213;
double x26480 = x26300*x6386;
double x26481 = 72*x26238;
double x26482 = x25101*x6801;
double x26483 = x25030*x6589;
double x26484 = x327*x6823;
double x26485 = x3943*x6966;
double x26486 = q5_b_dot*x5200*x6391;
double x26487 = x4616*x6976;
double x26488 = q5_b*x25475;
double x26489 = x24495*x26488;
double x26490 = q5_i*x5536;
double x26491 = x24695*x26490;
double x26492 = x10776*x19053;
double x26493 = x24498*x26488;
double x26494 = q5_b_dt*x24703;
double x26495 = x24705*x26490;
double x26496 = x3943*x6731;
double x26497 = 12*x6788;
double x26498 = x3262*x6593;
double x26499 = x24469*x6594;
double x26500 = x25030*x6827;
double x26501 = x25069*x6485;
double x26502 = q5_b*x26501;
double x26503 = x5652*x720;
double x26504 = x24708*x6812;
double x26505 = q5_b*x24710;
double x26506 = x3943*x6810;
double x26507 = x3943*x6897;
double x26508 = x21277*x3943;
double x26509 = x3262*x4616;
double x26510 = x4707*x6976;
double x26511 = q5_i*x25056;
double x26512 = x4707*x6484;
double x26513 = q4_b*x26501;
double x26514 = x24726*x6812;
double x26515 = q5_b*x24723;
double x26516 = x21358 + x23774;
double x26517 = x26405*x5411;
double x26518 = x15526*x25089;
double x26519 = x15385*x5540;
double x26520 = -q5_b_dot*x25082 + q5_b_dot*x25085 + q5_b_dot*x25103 - q5_i_dot*x25084 + q5_i_dot*x25086 + q5_i_dot*x25960 - x15603*x19 - x15754*x24480 + x21409 - x21410 + x23819 - x23820 - x24468*x26519 + x24469*x26519 + x24495*x6991 + x24498*x6991 + x24736*x6724 + x25079*x6917 - x25080*x6923 - x25081*x6920 - x25083*x6724 + x25087*x6923 + x25088*x6917 - x25091*x6923 - x25093*x4707 + x25096*x4707 + x25099*x26412 + x25100*x6923 - x25102*x6923 + x25105*x6811 + 4*x26228 - 36*x26409 - 36*x26410 + x26411*x7357 + x26465*x5440 + x26482*x724 - x26517*x5152 + x26517*x5157 - x26517 - x26518*x5152 + x26518;
double x26521 = x24759*x6920;
double x26522 = x24584*x6920;
double x26523 = x15687*x19;
double x26524 = q5_b*x8554;
double x26525 = q5_b_dt*x25888;
double x26526 = x15395*x8518;
double x26527 = 40*x25563;
double x26528 = x24934*x5154;
double x26529 = 50*x26528;
double x26530 = 100*x25047;
double x26531 = -100*x24597 + 50*x25033 + x26529*x5152 - x26529*x5157 - x26529 - x26530*x5157 + x26530;
double x26532 = q5_b_dot*x154;
double x26533 = x24759*x6903;
double x26534 = q5_i*x2;
double x26535 = x24810*x6966;
double x26536 = x24810*x7008;
double x26537 = x24454*x5675;
double x26538 = x750*x9491;
double x26539 = q5_b*x24824*x6811;
double x26540 = q5_i_dot*x3131;
double x26541 = x11328*x11347;
double x26542 = x19*x4;
double x26543 = x26542*x6389;
double x26544 = q6_b*x24474;
double x26545 = x21425*x5157;
double x26546 = x15646*x5163;
double x26547 = 18*x4707;
double x26548 = 18*q5_i_dot;
double x26549 = x5200*x7060;
double x26550 = x26549*x5306;
double x26551 = 10*x4795;
double x26552 = q6_b*x24476;
double x26553 = x21425*x5152;
double x26554 = x15646*x24460;
double x26555 = x7030*x8589;
double x26556 = x7031*x8589;
double x26557 = x15395*x8589;
double x26558 = 60*x24480;
double x26559 = x15697*x8589;
double x26560 = 36*q5_i_dot;
double x26561 = x21459*x5695;
double x26562 = x158*x7047;
double x26563 = x3234*x724;
double x26564 = x321*x7125;
double x26565 = q5_b_dt*x15646;
double x26566 = x6*x7284;
double x26567 = q5_b*x21425;
double x26568 = q6_b*x21277;
double x26569 = q6_i_dot*x25014;
double x26570 = x24450*x7060;
double x26571 = x19128*x5184;
double x26572 = x24750*x8589;
double x26573 = q6_b_dot*x25018;
double x26574 = x0*x26573;
double x26575 = q5_i*q6_i;
double x26576 = x24450*x26575;
double x26577 = x15777*x19;
double x26578 = q5_b*x3234;
double x26579 = q6_b_dot*x24500;
double x26580 = x24564*x7060;
double x26581 = q6_b*x25563;
double x26582 = 120*x0;
double x26583 = x19*x7126;
double x26584 = x24756*x26583;
double x26585 = q5_i*q6_i_dot;
double x26586 = x26585*x5152;
double x26587 = q6_b*x19;
double x26588 = x26587*x5211;
double x26589 = x26405*x5413;
double x26590 = x15527*x19;
double x26591 = x26549*x5413;
double x26592 = q5_b*x7633;
double x26593 = q6_b*x7633;
double x26594 = x15395*x7622;
double x26595 = x25150*x5527;
double x26596 = x15697*x7622;
double x26597 = x129*x7091;
double x26598 = q6_b*x3131;
double x26599 = x24584*x7060;
double x26600 = x1858*x7141;
double x26601 = q6_b_dot*x24579;
double x26602 = x158*x6966;
double x26603 = x158*x7008;
double x26604 = x3287*x5186;
double x26605 = 8*x26570;
double x26606 = x24709*x6714;
double x26607 = x15590*x26587;
double x26608 = x24830*x26575;
double x26609 = x129*x7141;
double x26610 = x15646*x6792;
double x26611 = x15665*x19;
double x26612 = x15780*x19;
double x26613 = x15510*x19;
double x26614 = x24750*x7622;
double x26615 = q5_i_dot*q6_i_dot;
double x26616 = q6_i_dot*x24832;
double x26617 = q6_i_dot*x3131;
double x26618 = q5_i_dot*q6_i;
double x26619 = x26618*x5152;
double x26620 = -q6_i_dot*x25549 - x21438*x5152 + x21438*x5157 - x21475*x25571 + x23864 + x23865 + x24474*x7178 - x24476*x7178 - x24495*x7147 + x24498*x7147 + x24732*x7466 - x24738*x7466 + x25485*x3180 - x25578*x7126 - 8*x26561 + 8*x26569 - x26573*x5928;
double x26621 = x24934*x6908;
double x26622 = x26621*x5413;
double x26623 = x24629*x6907;
double x26624 = x24939*x6908;
double x26625 = x24939*x26393;
double x26626 = x362*x6908;
double x26627 = -x15751*x19 + x21456 - x21457 + x23868 - x23869 + x24507*x26390 - x24510*x26390 + x24621*x6906 + x24626*x6906 - x24672*x6911 + x24863*x6911 - x24937*x6908 + x24946*x26626 + x24988*x26398 + x25292*x6906 - x26217*x26317 + x26218*x26442 - x26622*x5152 + x26622*x5157 - x26622 + x26623*x5152 + x26623*x5157 - x26624*x5152 + x26624 - x26625*x5152 - x26625*x5157;
double x26628 = x26549*x5911;
double x26629 = 32*x26570;
double x26630 = q6_b_dt*x15342;
double x26631 = x24906*x7284;
double x26632 = x24629*x7159;
double x26633 = x25274*x7139;
double x26634 = q6_b*x24510;
double x26635 = x24504*x3302;
double x26636 = q5_i_dot*x23863;
double x26637 = x733*x7466;
double x26638 = x24629*x7096;
double x26639 = x24458*x7060;
double x26640 = x15887*x26255;
double x26641 = q6_i_dot*x6912;
double x26642 = q6_b_dot*x24584;
double x26643 = x6749*x762;
double x26644 = x6*x7466;
double x26645 = x25987*x7106;
double x26646 = x7064*x733;
double x26647 = q6_b_dot*x25065;
double x26648 = x24659*x778;
double x26649 = x4795*x6811;
double x26650 = x25104*x26649;
double x26651 = x15589*x26583;
double x26652 = x25296*x26575;
double x26653 = x24939*x26615;
double x26654 = x362*x7135;
double x26655 = x24621*x7179;
double x26656 = x24621*x7181;
double x26657 = x15785*x19;
double x26658 = x15786*x19;
double x26659 = x24626*x7179;
double x26660 = x24626*x7181;
double x26661 = x24629*x7183;
double x26662 = x26661*x5157;
double x26663 = x26661*x5152;
double x26664 = x24498*x7186;
double x26665 = x24495*x7186;
double x26666 = x24507*x7205;
double x26667 = x158*x26666;
double x26668 = x24507*x7207;
double x26669 = x158*x26668;
double x26670 = x24510*x7205;
double x26671 = x158*x26670;
double x26672 = x24510*x7207;
double x26673 = x158*x26672;
double x26674 = x24641*x7213;
double x26675 = x15887*x26583;
double x26676 = x24645*x7213;
double x26677 = x24863*x7447;
double x26678 = x24649*x7193;
double x26679 = x24863*x7446;
double x26680 = x24649*x4789;
double x26681 = x15646*x15766;
double x26682 = x25285*x7199;
double x26683 = x25292*x7179;
double x26684 = x21425*x26648;
double x26685 = x24662*x7213;
double x26686 = x24528*x779;
double x26687 = x15782*x26686;
double x26688 = x24856*x7446;
double x26689 = x24667*x7201;
double x26690 = x24670*x7213;
double x26691 = x24672*x7447;
double x26692 = x24672*x7446;
double x26693 = x26675*x5152;
double x26694 = q6_i*q6_i_dot;
double x26695 = x24678*x26694;
double x26696 = x26694*x5152;
double x26697 = x24677*x26696;
double x26698 = -x15816*x19;
double x26699 = -x24579*x7218;
double x26700 = x24581*x7216;
double x26701 = -x24791*x7218;
double x26702 = -x24882*x7468;
double x26703 = -x24585*x7218;
double x26704 = x24790*x7218;
double x26705 = x24883*x7468;
double x26706 = q6_b_dot*x26635;
double x26707 = q6_i_dot*x23863;
double x26708 = x24498*x26707;
double x26709 = x24495*x26707;
double x26710 = x16049*x19;
double x26711 = q6_i_dot*x7178;
double x26712 = -x24528*x26711;
double x26713 = -x26710*x5152;
double x26714 = pow(q6_i_dot, 2);
double x26715 = -x24594*x26714;
double x26716 = -x24595*x26714;
double x26717 = x24598*x7218;
double x26718 = x24517*x26711;
double x26719 = x7064*x762;
double x26720 = x24599*x26719;
double x26721 = x26644*x7106;
double x26722 = x21438*x26579;
double x26723 = -x24533*x26711;
double x26724 = x21560 + x23952 + x26698 + x26699 + x26700 + x26701 + x26702 + x26703 + x26704 + x26705 + x26706 + x26708 + x26709 + x26710 + x26712 + x26713 + x26715 + x26716 + x26717 + x26718 + x26720 + x26721 + x26722 + x26723;
double x26725 = x21648 + x23895 + x24024 - x26655 - x26656 + x26657 + x26658 - x26659 - x26660 - x26662 - x26663 - x26664 - x26665 - x26667 - x26669 + x26671 + x26673 + x26674 - x26675 - x26676 - x26677 - x26678 - x26679 - x26680 - x26681 - x26682 - x26683 - x26684 + x26685 + x26687 + x26688 + x26689 - x26690 + x26691 + x26692 + x26693 + x26695 + x26697 + x26724;
double x26726 = x5200*x7229;
double x26727 = x26726*x5330;
double x26728 = x15822*x24900;
double x26729 = pow(q6_i, 2)*x24450;
double x26730 = x26729*x5157;
double x26731 = x26729*x5152;
double x26732 = q6_b_dt*x15646;
double x26733 = q6_b*x21425;
double x26734 = -x15821*x19 + x21493 - x21494 - x23899 + x24495*x7228 + x24498*x7228 + x24617*x7229 - x24667*x7229 + x24896*x7226 - x24897*x7232 + x24898*x7232 + x24899*x7226 - x24902*x7232 + x24904*x26733 + x24905*x7232 - x24907*x7232 + x26631*x753 - x26727*x5152 + x26727*x5157 - x26727 - x26728*x5152 + x26728 - 16*x26730 - 16*x26731 + x26732*x5643;
double x26735 = x24469*x7154;
double x26736 = x24469*x7156;
double x26737 = x5200*x7241;
double x26738 = q5_b*x26737;
double x26739 = 48*x26570;
double x26740 = x24569*x753;
double x26741 = 14*x7236;
double x26742 = 14*x7159;
double x26743 = 10*x7183;
double x26744 = 10*x7237;
double x26745 = x286*x7141;
double x26746 = x5200*x7249;
double x26747 = q5_b*x3205;
double x26748 = q6_i_dot*x15558;
double x26749 = x4795*x6833;
double x26750 = 10*x7096;
double x26751 = 10*x7097;
double x26752 = 14*x6873;
double x26753 = 14*x6928;
double x26754 = x24454*x7060;
double x26755 = x24927*x6812;
double x26756 = q6_b*x26755;
double x26757 = x24514*x7127;
double x26758 = q6_b*x26757;
double x26759 = x7303*x733;
double x26760 = x21425*x4;
double x26761 = x5527*x749;
double x26762 = x24524*x778;
double x26763 = x21475*x6791;
double x26764 = x25419*x7106;
double x26765 = x15890*x19;
double x26766 = x15342*x6792;
double x26767 = q5_b*x26757;
double x26768 = q5_b*x26755;
double x26769 = x25429*x26615;
double x26770 = x15858*x19;
double x26771 = x26726*x5306;
double x26772 = x24951*x7226;
double x26773 = x26771*x5152;
double x26774 = x24953*x7232;
double x26775 = x24956*x7229;
double x26776 = x26771*x5157;
double x26777 = x24958*x7232;
double x26778 = x24961*x7226;
double x26779 = x24469*x7227;
double x26780 = x24550*x26779;
double x26781 = x24562*x26779;
double x26782 = x15822*x24708;
double x26783 = x24967*x7232;
double x26784 = x15822*x24726;
double x26785 = x24550*x26729;
double x26786 = x24562*x26729;
double x26787 = x24564*x7229;
double x26788 = x26787*x5572;
double x26789 = x24973*x7232;
double x26790 = x26740*x7284;
double x26791 = x26732*x6741;
double x26792 = x24573*x26733;
double x26793 = x24979*x7232;
double x26794 = x21532 + x23923 - x26770 - x26771 + x26772 - x26773 - x26774 - x26775 + x26776 + x26777 + x26778 + x26780 + x26781 + x26782 - x26783 - x26784 - x26785 - x26786 + x26788 + x26789 + x26790 + x26791 + x26792 - x26793;
double x26795 = x26621*x5306;
double x26796 = x158*x26552;
double x26797 = x158*x26553;
double x26798 = x158*x26554;
double x26799 = x158*x26544;
double x26800 = x158*x26545;
double x26801 = x158*x26546;
double x26802 = x26549*x6047;
double x26803 = 72*x26570;
double x26804 = x25101*x7284;
double x26805 = x25030*x6903;
double x26806 = x327*x7141;
double x26807 = x3943*x7270;
double x26808 = x26154*x7139;
double x26809 = x3262*x4707;
double x26810 = q6_b*x25475;
double x26811 = x24495*x26810;
double x26812 = q6_i*x5536;
double x26813 = x24695*x26812;
double x26814 = x10776*x19128;
double x26815 = q5_b*x3261;
double x26816 = x24498*x26810;
double x26817 = x25485*x3186;
double x26818 = x24705*x26812;
double x26819 = x3943*x7047;
double x26820 = 12*x7103;
double x26821 = 12*x7104;
double x26822 = x24469*x6907;
double x26823 = x25030*x7145;
double x26824 = x25069*x6812;
double x26825 = q6_b*x26824;
double x26826 = x5652*x749;
double x26827 = x24708*x7127;
double x26828 = q6_b*x24710;
double x26829 = x3943*x7125;
double x26830 = x3943*x7207;
double x26831 = q6_i_dot*x15591;
double x26832 = x3262*x4795;
double x26833 = q6_i*x25056;
double x26834 = x17368*x7106;
double x26835 = x21423*x24718;
double x26836 = q5_b*x26824;
double x26837 = x24726*x7127;
double x26838 = q6_b*x24723;
double x26839 = x21504 + x23902;
double x26840 = x26726*x5411;
double x26841 = x15822*x25089;
double x26842 = -q6_b_dot*x25082 + q6_b_dot*x25085 + q6_b_dot*x25103 - q6_i_dot*x25084 + q6_i_dot*x25086 - q6_i_dot*x25095 + q6_i_dot*x25097 - x15901*x19 + x21556 - x21557 + x23948 - x23949 - x24480*x3302 + x24495*x7297 + x24498*x7297 + x24736*x3180 + x24750*x7466 + x25079*x7226 - x25080*x7232 - x25081*x7229 - x25083*x3180 + x25087*x7232 + x25088*x7226 - x25091*x7232 - x25093*x4795 + x25096*x4795 + x25099*x26733 + x25100*x7232 - x25102*x7232 + x25105*x7126 + 4*x26561 - 36*x26730 - 36*x26731 + x26732*x7357 + x26787*x5440 + x26804*x753 - x26840*x5152 + x26840*x5157 - x26840 - x26841*x5152 + x26841;
double x26843 = x24759*x7229;
double x26844 = x24584*x7229;
double x26845 = x15988*x19;
double x26846 = x15697*x6716;
double x26847 = 72*x26528;
double x26848 = 144*x25047;
double x26849 = -144*x24597 + 72*x25033 + x26847*x5152 - x26847*x5157 - x26847 - x26848*x5157 + x26848;
double x26850 = x24759*x7213;
double x26851 = q6_i*x2;
double x26852 = x24810*x7270;
double x26853 = x24810*x7308;
double x26854 = x5712*x779;
double x26855 = q6_b*x24824*x7126;
double x26856 = x19*x24573;
double x26857 = q7_b*x24474;
double x26858 = x21575*x5157;
double x26859 = x15946*x5163;
double x26860 = 22*x4795;
double x26861 = x5200*x7362;
double x26862 = x26861*x5306;
double x26863 = q7_b*x24476;
double x26864 = x21575*x5152;
double x26865 = x15946*x24460;
double x26866 = 72*x7031;
double x26867 = 72*x7329;
double x26868 = 72*x15697;
double x26869 = q7_b_dt*x25888;
double x26870 = 72*x16001;
double x26871 = 44*x25015;
double x26872 = q7_i_dot*x8628;
double x26873 = x21585*x5695;
double x26874 = x158*x7347;
double x26875 = x7479*x753;
double x26876 = x321*x7434;
double x26877 = x15946*x5186;
double x26878 = q7_b_dt*x15646;
double x26879 = x6*x7604;
double x26880 = q6_b*x21575;
double x26881 = q7_b*x21425;
double x26882 = x24450*x7362;
double x26883 = x25150*x7340;
double x26884 = x19203*x5184;
double x26885 = 72*x25172;
double x26886 = q7_b_dot*x25018;
double x26887 = x0*x26886;
double x26888 = x11328*x21634;
double x26889 = q6_i*q7_i;
double x26890 = x24450*x26889;
double x26891 = x16071*x19;
double x26892 = q6_b*x7479;
double x26893 = q7_b_dot*x24500;
double x26894 = x24564*x7362;
double x26895 = q7_i*x25172;
double x26896 = q7_b*x25563;
double x26897 = 144*x0;
double x26898 = x19*x7435;
double x26899 = x24756*x26898;
double x26900 = q6_i*q7_i_dot;
double x26901 = x26900*x5152;
double x26902 = q7_b*x19;
double x26903 = x26902*x5211;
double x26904 = x26726*x5413;
double x26905 = x15823*x19;
double x26906 = x26861*x5413;
double x26907 = x24507*x7493;
double x26908 = x24507*x7494;
double x26909 = x24510*x7493;
double x26910 = x24510*x7494;
double x26911 = x4023*x7329;
double x26912 = x15697*x4023;
double x26913 = 18*x5184;
double x26914 = x16001*x4023;
double x26915 = x129*x7399;
double x26916 = q6_b*x3347;
double x26917 = x24584*x7362;
double x26918 = x1858*x7450;
double x26919 = q7_b*x24507;
double x26920 = q7_b*x24510;
double x26921 = x158*x7270;
double x26922 = x158*x7308;
double x26923 = q7_b*x24603;
double x26924 = 8*x26882;
double x26925 = x24469*x5429;
double x26926 = x24709*x5440;
double x26927 = x24750*x4023;
double x26928 = x15888*x26902;
double x26929 = x24830*x26889;
double x26930 = q7_i*x7315;
double x26931 = x15946*x7107;
double x26932 = q7_b*x3261;
double x26933 = q7_b*x24500;
double x26934 = x15965*x19;
double x26935 = x16076*x19;
double x26936 = x15807*x19;
double x26937 = x19*x7359;
double x26938 = x24500*x26937;
double x26939 = q6_i_dot*q7_i_dot;
double x26940 = q7_i_dot*x24832;
double x26941 = q6_i_dot*q7_i;
double x26942 = x26941*x5152;
double x26943 = 5*x4883;
double x26944 = 10*q7_i_dot;
double x26945 = x24514*x24756;
double x26946 = -x11347*x26888 - x21589*x5152 + x21589*x5157 + x23992 + x23993 + x24474*x26943 - x24476*x26943 - x24495*x7457 + x24498*x7457 + x25011*x7461 - x25012*x7461 + x25014*x26944 - x25015*x26944 - 10*x26873 + x26883*x5248 - x26886*x6389 - x26945*x7435;
double x26947 = x24934*x7218;
double x26948 = x26947*x5413;
double x26949 = x24629*x7217;
double x26950 = x24939*x7218;
double x26951 = x24939*x26714;
double x26952 = x362*x7218;
double x26953 = x21475*x7106;
double x26954 = -x16047*x19 + x21607 - x21608 + x23995 - x23996 + x24507*x26711 - x24510*x26711 + x24621*x7216 + x24626*x7216 - x24672*x7221 - x24856*x7221 + x24863*x7221 - x24937*x7218 + x24946*x26952 + x24988*x26719 + x24988*x26953 + x25292*x7216 - x26948*x5152 + x26948*x5157 - x26948 + x26949*x5152 + x26949*x5157 - x26950*x5152 + x26950 - x26951*x5152 - x26951*x5157;
double x26955 = q7_b_dot_dt*x24481;
double x26956 = x26861*x5911;
double x26957 = 32*x26882;
double x26958 = q6_b_dt*x15946;
double x26959 = x753*x7604;
double x26960 = x24629*x7477;
double x26961 = x25274*x7448;
double x26962 = x24507*x7479;
double x26963 = q7_b_dot_dt*x24504;
double x26964 = q7_b_dot*x24504;
double x26965 = x7466*x791;
double x26966 = q7_i_dot*x23863;
double x26967 = x24629*x7402;
double x26968 = x24458*x7362;
double x26969 = x16181*x26583;
double x26970 = q7_b_dt*x19116;
double x26971 = q7_i_dot*x7178;
double x26972 = q6_i_dot*x7541;
double x26973 = q7_b_dot*x24584;
double x26974 = x7064*x791;
double x26975 = x7366*x762;
double x26976 = q7_b_dot_dt*x25574;
double x26977 = q7_b_dot*x25065;
double x26978 = x21425*x807;
double x26979 = x4883*x7126;
double x26980 = x25104*x26979;
double x26981 = x15887*x26898;
double x26982 = x25296*x26889;
double x26983 = x24939*x26939;
double x26984 = x362*x7444;
double x26985 = x24621*x7497;
double x26986 = x24621*x7500;
double x26987 = x16081*x19;
double x26988 = x16082*x19;
double x26989 = x24626*x7497;
double x26990 = x24626*x7500;
double x26991 = x24629*x7502;
double x26992 = x26991*x5157;
double x26993 = x26991*x5152;
double x26994 = x24498*x7505;
double x26995 = x24495*x7505;
double x26996 = x24507*x7524;
double x26997 = x158*x26996;
double x26998 = x24507*x7526;
double x26999 = x158*x26998;
double x27000 = x24510*x7524;
double x27001 = x158*x27000;
double x27002 = x24510*x7526;
double x27003 = x158*x27002;
double x27004 = x24641*x7532;
double x27005 = x16181*x26898;
double x27006 = x24645*x7532;
double x27007 = x24863*x7762;
double x27008 = x24649*x7512;
double x27009 = x24863*x7761;
double x27010 = x24649*x4877;
double x27011 = x15946*x16061;
double x27012 = x3320*x6;
double x27013 = x24657*x27012;
double x27014 = x25292*x7497;
double x27015 = x21575*x807;
double x27016 = x24659*x27015;
double x27017 = x24662*x7532;
double x27018 = x24528*x808;
double x27019 = x16078*x27018;
double x27020 = x24856*x7761;
double x27021 = x24667*x7520;
double x27022 = x24670*x7532;
double x27023 = x24672*x7762;
double x27024 = x24672*x7761;
double x27025 = x27005*x5152;
double x27026 = q7_i*q7_i_dot;
double x27027 = x24678*x27026;
double x27028 = x27026*x5152;
double x27029 = x24677*x27028;
double x27030 = -x16112*x19;
double x27031 = -x24579*x7537;
double x27032 = x26955*x7541;
double x27033 = -x24791*x7537;
double x27034 = -x24882*x7777;
double x27035 = -x24585*x7537;
double x27036 = x24790*x7537;
double x27037 = x24883*x7777;
double x27038 = x26963*x7541;
double x27039 = q7_i_dot*x791;
double x27040 = x24587*x27039;
double x27041 = x24589*x27039;
double x27042 = x16340*x19;
double x27043 = q7_i_dot*x7541;
double x27044 = -x24528*x27043;
double x27045 = -x27042*x5152;
double x27046 = pow(q7_i_dot, 2);
double x27047 = -x24594*x27046;
double x27048 = -x24595*x27046;
double x27049 = x24598*x7537;
double x27050 = x24517*x27043;
double x27051 = x7366*x791;
double x27052 = x24599*x27051;
double x27053 = x25987*x7414;
double x27054 = q7_i_dot*x27053;
double x27055 = x26976*x7541;
double x27056 = -x24533*x27043;
double x27057 = x21710 + x24080 + x27030 + x27031 + x27032 + x27033 + x27034 + x27035 + x27036 + x27037 + x27038 + x27040 + x27041 + x27042 + x27044 + x27045 + x27047 + x27048 + x27049 + x27050 + x27052 + x27054 + x27055 + x27056;
double x27058 = x21792 + x24022 + x24152 - x26985 - x26986 + x26987 + x26988 - x26989 - x26990 - x26992 - x26993 - x26994 - x26995 - x26997 - x26999 + x27001 + x27003 + x27004 - x27005 - x27006 - x27007 - x27008 - x27009 - x27010 - x27011 - x27013 - x27014 - x27016 + x27017 + x27019 + x27020 + x27021 - x27022 + x27023 + x27024 + x27025 + x27027 + x27029 + x27057;
double x27059 = x5200*x7549;
double x27060 = x27059*x5330;
double x27061 = x16119*x24900;
double x27062 = pow(q7_i, 2)*x24450;
double x27063 = x27062*x5157;
double x27064 = x27062*x5152;
double x27065 = x7604*x782;
double x27066 = q7_b_dt*x15946;
double x27067 = q7_b*x21575;
double x27068 = -x16118*x19 + x21645 - x21646 - x24026 + x24495*x7548 + x24498*x7548 + x24617*x7549 - x24667*x7549 + x24896*x7546 - x24897*x7552 + x24898*x7552 + x24899*x7546 - x24902*x7552 + x24904*x27067 + x24905*x7552 + x24906*x27065 - x24907*x7552 - x27060*x5152 + x27060*x5157 - x27060 - x27061*x5152 + x27061 - 16*x27063 - 16*x27064 + x27066*x5643;
double x27069 = x24469*x7471;
double x27070 = x24469*x7473;
double x27071 = q7_b*x26737;
double x27072 = 48*x26882;
double x27073 = x24569*x782;
double x27074 = 14*x7556;
double x27075 = 14*x7477;
double x27076 = 10*x7502;
double x27077 = 10*x7557;
double x27078 = x286*x7450;
double x27079 = x25392*x7448;
double x27080 = 10*x7402;
double x27081 = 10*x7403;
double x27082 = 14*x7183;
double x27083 = 14*x7237;
double x27084 = x24454*x7362;
double x27085 = x24927*x7127;
double x27086 = q7_b*x27085;
double x27087 = x24514*x7436;
double x27088 = q7_b*x27087;
double x27089 = x7361*x762;
double x27090 = x21575*x4;
double x27091 = x5527*x778;
double x27092 = x21475*x7414;
double x27093 = x16184*x19;
double x27094 = x15646*x7107;
double x27095 = q6_b*x27087;
double x27096 = q6_b*x27085;
double x27097 = x25429*x26939;
double x27098 = x16152*x19;
double x27099 = x27059*x5306;
double x27100 = x24951*x7546;
double x27101 = x27099*x5152;
double x27102 = x24953*x7552;
double x27103 = x24956*x7549;
double x27104 = x27099*x5157;
double x27105 = x24958*x7552;
double x27106 = x24961*x7546;
double x27107 = x24469*x7547;
double x27108 = x24550*x27107;
double x27109 = x24562*x27107;
double x27110 = x16119*x24708;
double x27111 = x24967*x7552;
double x27112 = x16119*x24726;
double x27113 = x24550*x27062;
double x27114 = x24562*x27062;
double x27115 = x24564*x7549;
double x27116 = x27115*x5572;
double x27117 = x24973*x7552;
double x27118 = x27073*x7604;
double x27119 = x27066*x6741;
double x27120 = x24573*x27067;
double x27121 = x24979*x7552;
double x27122 = x21683 + x24051 - x27098 - x27099 + x27100 - x27101 - x27102 - x27103 + x27104 + x27105 + x27106 + x27108 + x27109 + x27110 - x27111 - x27112 - x27113 - x27114 + x27116 + x27117 + x27118 + x27119 + x27120 - x27121;
double x27123 = x26947*x5306;
double x27124 = x158*x26863;
double x27125 = x158*x26864;
double x27126 = x158*x26865;
double x27127 = x158*x26857;
double x27128 = x158*x26858;
double x27129 = x158*x26859;
double x27130 = x26861*x6047;
double x27131 = 72*x26882;
double x27132 = x25030*x7213;
double x27133 = x327*x7450;
double x27134 = x3943*x7590;
double x27135 = x26154*x7448;
double x27136 = q6_i_dot*x15889;
double x27137 = q7_b*x25475;
double x27138 = x24495*x27137;
double x27139 = q7_i*x5536;
double x27140 = x24695*x27139;
double x27141 = x10776*x19203;
double x27142 = x24498*x27137;
double x27143 = q7_b_dt*x24703;
double x27144 = x24705*x27139;
double x27145 = x3943*x7347;
double x27146 = 12*x7409;
double x27147 = x3480*x7102;
double x27148 = x24469*x7217;
double x27149 = x25030*x7454;
double x27150 = x25069*x7127;
double x27151 = q7_b*x27150;
double x27152 = x5652*x778;
double x27153 = x24708*x7436;
double x27154 = q7_b*x24710;
double x27155 = x3943*x7434;
double x27156 = x3943*x7526;
double x27157 = x21575*x3943;
double x27158 = x3480*x4795;
double x27159 = q6_i_dot*x16183;
double x27160 = q7_i*x25056;
double x27161 = x6*x7376;
double x27162 = q6_b*x27150;
double x27163 = x24726*x7436;
double x27164 = x24677*x26933;
double x27165 = x21656 + x24029;
double x27166 = x27059*x5411;
double x27167 = x16119*x25089;
double x27168 = x15991*x5540;
double x27169 = -q7_b_dot*x25082 + q7_b_dot*x25085 + q7_b_dot*x25103 - q7_i_dot*x25084 + q7_i_dot*x25086 + q7_i_dot*x25960 - x16195*x19 - x16341*x24480 + x21706 - x21707 + x24076 - x24077 - x24468*x27168 + x24469*x27168 + x24495*x7617 + x24498*x7617 + x24736*x7340 + x25079*x7546 - x25080*x7552 - x25081*x7549 - x25083*x7340 + x25087*x7552 + x25088*x7546 - x25091*x7552 - x25093*x4883 + x25096*x4883 + x25099*x27067 + x25100*x7552 + x25101*x27065 - x25102*x7552 + x25105*x7435 + 4*x26873 - 36*x27063 - 36*x27064 + x27066*x7357 + x27115*x5440 - x27166*x5152 + x27166*x5157 - x27166 - x27167*x5152 + x27167;
double x27170 = x24759*x7549;
double x27171 = x24584*x7549;
double x27172 = x16279*x19;
double x27173 = 28*x16001;
double x27174 = 98*x26528;
double x27175 = 196*x25047;
double x27176 = -196*x24597 + 98*x25033 + x27174*x5152 - x27174*x5157 - x27174 - x27175*x5157 + x27175;
double x27177 = x24759*x7532;
double x27178 = q7_i*x2;
double x27179 = x24810*x7590;
double x27180 = x24810*x7631;
double x27181 = 14*x26205;
double x27182 = x10073*x808;
double x27183 = q7_b*x24824*x7435;
double x27184 = q7_i_dot*x3347;
double x27185 = x11328*x11515;
double x27186 = x26542*x6714;
double x27187 = q8_b*x24474;
double x27188 = x21722*x5157;
double x27189 = x16238*x5163;
double x27190 = 26*x4883;
double x27191 = q7_i_dot*x14316;
double x27192 = 14*x4970;
double x27193 = x5200*x7685;
double x27194 = x27193*x5306;
double x27195 = q8_b*x24476;
double x27196 = x21722*x5152;
double x27197 = x16238*x24460;
double x27198 = q8_b*x7654;
double x27199 = 84*x16001;
double x27200 = x24480*x3401;
double x27201 = 84*x16289;
double x27202 = 52*q7_i_dot;
double x27203 = 28*q8_i_dot;
double x27204 = x21756*x5695;
double x27205 = x158*x7669;
double x27206 = x3450*x782;
double x27207 = x321*x7749;
double x27208 = q7_b_dt*x16238;
double x27209 = x6*x7911;
double x27210 = x21722*x4;
double x27211 = q7_b*x27210;
double x27212 = q8_b*x21575;
double x27213 = x24450*x7685;
double x27214 = x19278*x5184;
double x27215 = q8_b_dot*x25018;
double x27216 = x0*x27215;
double x27217 = x21771*x24750;
double x27218 = q7_i*q8_i;
double x27219 = x24450*x27218;
double x27220 = x16364*x19;
double x27221 = q7_b*x3450;
double x27222 = q8_b_dot*x24500;
double x27223 = x24564*x7685;
double x27224 = L*q8_i;
double x27225 = q8_b*x25563;
double x27226 = 168*x0;
double x27227 = x19*x7750;
double x27228 = x24756*x27227;
double x27229 = q7_i*q8_i_dot;
double x27230 = x27229*x5152;
double x27231 = q8_b*x19;
double x27232 = x27231*x5211;
double x27233 = x27059*x5413;
double x27234 = x16120*x19;
double x27235 = x27193*x5413;
double x27236 = x24507*x7803;
double x27237 = x24507*x7804;
double x27238 = x24510*x7803;
double x27239 = x24510*x7804;
double x27240 = q8_b*x7712;
double x27241 = 22*x16001;
double x27242 = 22*x16289;
double x27243 = x129*x7718;
double x27244 = q8_b*x3347;
double x27245 = x24584*x7685;
double x27246 = x1858*x7765;
double x27247 = q8_b_dot*x24579;
double x27248 = x158*x7590;
double x27249 = x158*x7631;
double x27250 = x3506*x5186;
double x27251 = 8*x27213;
double x27252 = 22*x24750;
double x27253 = L*x27252;
double x27254 = x16182*x27231;
double x27255 = x24830*x27218;
double x27256 = x129*x7765;
double x27257 = x16238*x7415;
double x27258 = q7_i_dot*x16321;
double x27259 = x0*x27210;
double x27260 = x16257*x19;
double x27261 = x16367*x19;
double x27262 = x16103*x19;
double x27263 = 44*x0;
double x27264 = q7_i_dot*q8_i_dot;
double x27265 = q8_i_dot*x24832;
double x27266 = q8_i_dot*x3347;
double x27267 = q7_i_dot*q8_i;
double x27268 = x27267*x5152;
double x27269 = 6*q8_i_dot;
double x27270 = x24756*x7750;
double x27271 = -x21735*x5152 + x21735*x5157 - x21771*x25114 + x24119 + x24120 + x24474*x8203 - x24476*x8203 + x24480*x3584 + x24498*x7771 - x24708*x27270 + x25011*x27269 - x25012*x27269 + x25014*x8234 - x25015*x8234 - x25111*x4970 - 12*x27204 - x27215*x5572;
double x27272 = x24934*x7537;
double x27273 = x27272*x5413;
double x27274 = x24629*x7536;
double x27275 = x24939*x7537;
double x27276 = x24939*x27046;
double x27277 = x362*x7537;
double x27278 = x21634*x7414;
double x27279 = -x16338*x19 + x21753 - x21754 + x24123 - x24124 + x24507*x27043 - x24510*x27043 + x24621*x7535 + x24626*x7535 - x24672*x7540 - x24856*x7540 + x24863*x7540 - x24937*x7537 + x24946*x27277 + x24988*x27051 + x24988*x27278 + x25292*x7535 - x27273*x5152 + x27273*x5157 - x27273 + x27274*x5152 + x27274*x5157 - x27275*x5152 + x27275 - x27276*x5152 - x27276*x5157;
double x27280 = x27193*x5911;
double x27281 = 32*x27213;
double x27282 = 16*x811;
double x27283 = q8_b_dt*x15946;
double x27284 = x27209*x782;
double x27285 = x24629*x7785;
double x27286 = x25274*x7763;
double x27287 = q8_b*x24510;
double x27288 = q7_i_dot*x820;
double x27289 = q8_i_dot*x791;
double x27290 = x24504*x7806;
double x27291 = x24629*x7723;
double x27292 = x24458*x7685;
double x27293 = x16472*x26898;
double x27294 = x24528*x7948;
double x27295 = 8*x836;
double x27296 = x24528*x27295;
double x27297 = q8_i_dot*x7541;
double x27298 = q7_i_dot*x7805;
double x27299 = q8_b_dot*x24584;
double x27300 = x7366*x820;
double x27301 = x25987*x7733;
double x27302 = x24599*x7687;
double x27303 = q7_b_dot*x21720;
double x27304 = x6*x7949;
double x27305 = x21859*x24500;
double x27306 = x21575*x836;
double x27307 = x4970*x7435;
double x27308 = x25104*x27307;
double x27309 = x16181*x27227;
double x27310 = x25296*x27218;
double x27311 = x24939*x27264;
double x27312 = x362*x7759;
double x27313 = x24621*x7808;
double x27314 = x24621*x7810;
double x27315 = x16372*x19;
double x27316 = x16373*x19;
double x27317 = q8_b*x27290;
double x27318 = x24626*x7810;
double x27319 = x24629*x7812;
double x27320 = x27319*x5157;
double x27321 = x27319*x5152;
double x27322 = x24498*x7815;
double x27323 = x24495*x7815;
double x27324 = x24507*x7834;
double x27325 = x158*x27324;
double x27326 = x24507*x7836;
double x27327 = x158*x27326;
double x27328 = x24510*x7834;
double x27329 = x158*x27328;
double x27330 = x24510*x7836;
double x27331 = x158*x27330;
double x27332 = x24641*x7842;
double x27333 = x16472*x27227;
double x27334 = x24645*x7842;
double x27335 = x24863*x8080;
double x27336 = x24649*x7822;
double x27337 = x24863*x8079;
double x27338 = x24649*x4964;
double x27339 = x16238*x16353;
double x27340 = x25285*x7828;
double x27341 = q8_b*x27305;
double x27342 = x27210*x836;
double x27343 = x27342*x5336;
double x27344 = x24662*x7842;
double x27345 = q8_b*x27294;
double x27346 = q8_i*x27296;
double x27347 = x24667*x7830;
double x27348 = x24670*x7842;
double x27349 = x24672*x8080;
double x27350 = x24672*x8079;
double x27351 = x27333*x5152;
double x27352 = q8_i*q8_i_dot;
double x27353 = x24678*x27352;
double x27354 = x27352*x5152;
double x27355 = x24677*x27354;
double x27356 = -x16403*x19;
double x27357 = -x24579*x7847;
double x27358 = x24581*x7845;
double x27359 = -x24791*x7847;
double x27360 = -x24882*x8099;
double x27361 = -x24585*x7847;
double x27362 = x24790*x7847;
double x27363 = x24883*x8099;
double x27364 = x24586*x7845;
double x27365 = q8_i_dot*x820;
double x27366 = x24587*x27365;
double x27367 = x24589*x27365;
double x27368 = x16631*x19;
double x27369 = q8_i_dot*x7805;
double x27370 = -x24528*x27369;
double x27371 = -x27368*x5152;
double x27372 = pow(q8_i_dot, 2);
double x27373 = -x24594*x27372;
double x27374 = -x24595*x27372;
double x27375 = x24598*x7847;
double x27376 = x24517*x27369;
double x27377 = x7687*x820;
double x27378 = x24599*x27377;
double x27379 = q8_i_dot*x27301;
double x27380 = q8_b_dot*x21720;
double x27381 = x24603*x27380;
double x27382 = -x24533*x27369;
double x27383 = x21852 + x24208 + x27356 + x27357 + x27358 + x27359 + x27360 + x27361 + x27362 + x27363 + x27364 + x27366 + x27367 + x27368 + x27370 + x27371 + x27373 + x27374 + x27375 + x27376 + x27378 + x27379 + x27381 + x27382;
double x27384 = x21947 + x24150 + x24274 - x27313 - x27314 + x27315 + x27316 - x27317 - x27318 - x27320 - x27321 - x27322 - x27323 - x27325 - x27327 + x27329 + x27331 + x27332 - x27333 - x27334 - x27335 - x27336 - x27337 - x27338 - x27339 - x27340 - x27341 - x27343 + x27344 + x27345 + x27346 + x27347 - x27348 + x27349 + x27350 + x27351 + x27353 + x27355 + x27383;
double x27385 = x5200*x7858;
double x27386 = x27385*x5330;
double x27387 = x16409*x24900;
double x27388 = pow(q8_i, 2)*x24450;
double x27389 = x27388*x5157;
double x27390 = x27388*x5152;
double x27391 = q8_b_dt*x16238;
double x27392 = q8_b*x21722;
double x27393 = x27392*x4;
double x27394 = -x16408*x19 + x21789 - x21790 - x24154 + x24495*x7857 + x24498*x7857 + x24617*x7858 - x24667*x7858 + x24896*x7855 - x24897*x7861 + x24898*x7861 + x24899*x7855 - x24902*x7861 + x24905*x7861 - x24907*x7861 + x27209*x27282 - x27386*x5152 + x27386*x5157 - x27386 - x27387*x5152 + x27387 - 16*x27389 - 16*x27390 + x27391*x5643 + x27393*x5928;
double x27395 = x24469*x7780;
double x27396 = x24469*x7782;
double x27397 = x24481*x7773;
double x27398 = x27193*x5996;
double x27399 = 48*x27213;
double x27400 = x24569*x811;
double x27401 = x21722*x24573;
double x27402 = 14*x7866;
double x27403 = 14*x7785;
double x27404 = 10*x7812;
double x27405 = 10*x7867;
double x27406 = x24507*x7638;
double x27407 = x25392*x7763;
double x27408 = x24504*x7773;
double x27409 = 10*x7723;
double x27410 = 10*x7724;
double x27411 = 14*x7502;
double x27412 = 14*x7557;
double x27413 = x24454*x7685;
double x27414 = x24927*x7436;
double x27415 = q8_b*x27414;
double x27416 = x24514*x7751;
double x27417 = q8_b*x27416;
double x27418 = x791*x7933;
double x27419 = x5527*x807;
double x27420 = x27269*x4883;
double x27421 = q7_i_dot*x8203;
double x27422 = x17368*x7414;
double x27423 = x25419*x7733;
double x27424 = x7687*x791;
double x27425 = x16475*x19;
double x27426 = x15946*x7415;
double x27427 = q7_b*x27416;
double x27428 = q7_b*x27414;
double x27429 = x25429*x27264;
double x27430 = x16443*x19;
double x27431 = x27385*x5306;
double x27432 = x24951*x7855;
double x27433 = x27431*x5152;
double x27434 = x24953*x7861;
double x27435 = x24956*x7858;
double x27436 = x27431*x5157;
double x27437 = x24958*x7861;
double x27438 = x24961*x7855;
double x27439 = x24469*x7856;
double x27440 = x24550*x27439;
double x27441 = x24562*x27439;
double x27442 = x16409*x24708;
double x27443 = x24967*x7861;
double x27444 = x16409*x24726;
double x27445 = x24550*x27388;
double x27446 = x24562*x27388;
double x27447 = x24564*x7858;
double x27448 = x27447*x5572;
double x27449 = x24973*x7861;
double x27450 = x27400*x7911;
double x27451 = x27391*x6741;
double x27452 = x24573*x27392;
double x27453 = x24979*x7861;
double x27454 = x21824 + x24179 - x27430 - x27431 + x27432 - x27433 - x27434 - x27435 + x27436 + x27437 + x27438 + x27440 + x27441 + x27442 - x27443 - x27444 - x27445 - x27446 + x27448 + x27449 + x27450 + x27451 + x27452 - x27453;
double x27455 = x27272*x5306;
double x27456 = x158*x27195;
double x27457 = x158*x27196;
double x27458 = x158*x27197;
double x27459 = x158*x27187;
double x27460 = x158*x27188;
double x27461 = x158*x27189;
double x27462 = x27193*x6047;
double x27463 = 72*x27213;
double x27464 = 36*x811;
double x27465 = x25030*x7532;
double x27466 = x327*x7765;
double x27467 = x3943*x7897;
double x27468 = x26154*x7763;
double x27469 = x3480*x4883;
double x27470 = q8_b*x25475;
double x27471 = x24495*x27470;
double x27472 = q8_i*x5536;
double x27473 = x24695*x27472;
double x27474 = x10776*x19278;
double x27475 = x24498*x27470;
double x27476 = x25485*x3401;
double x27477 = x24705*x27472;
double x27478 = x3943*x7669;
double x27479 = 12*x7730;
double x27480 = x7408*x8234;
double x27481 = x24469*x7536;
double x27482 = x17297*x7921;
double x27483 = q7_b_dot*x27482;
double x27484 = x25069*x7436;
double x27485 = q8_b*x27484;
double x27486 = x5652*x807;
double x27487 = x24708*x7751;
double x27488 = q8_b*x24710;
double x27489 = x3943*x7749;
double x27490 = x3943*x7836;
double x27491 = x4883*x8234;
double x27492 = x3480*x4970;
double x27493 = q8_i*x25056;
double x27494 = x17368*x7733;
double x27495 = q7_b*x27484;
double x27496 = x24726*x7751;
double x27497 = q8_b*x24723;
double x27498 = x21800 + x24157;
double x27499 = x27385*x5411;
double x27500 = x16409*x25089;
double x27501 = -q8_b_dot*x25082 + q8_b_dot*x25085 + q8_b_dot*x25103 - q8_i_dot*x25084 + q8_i_dot*x25086 - q8_i_dot*x25095 + q8_i_dot*x25097 + q8_i_dot*x25960 - x16490*x19 + x21848 - x21849 - x21894*x24480 + x24204 - x24205 + x24495*x7927 + x24498*x7927 + x24736*x3395 + x25079*x7855 - x25080*x7861 - x25081*x7858 - x25083*x3395 + x25087*x7861 + x25088*x7855 - x25091*x7861 - x25093*x4970 + x25096*x4970 + x25100*x7861 - x25102*x7861 + x25104*x27270 + 4*x27204 + x27209*x27464 - 36*x27389 - 36*x27390 + x27391*x7357 + x27393*x5440 + x27447*x5440 - x27499*x5152 + x27499*x5157 - x27499 - x27500*x5152 + x27500;
double x27502 = x24759*x7858;
double x27503 = x24584*x7858;
double x27504 = x16573*x19;
double x27505 = L*x7921;
double x27506 = 32*L;
double x27507 = x16289*x27506;
double x27508 = x11328*x25068;
double x27509 = x25069*x5211;
double x27510 = 128*x26528;
double x27511 = 256*x25047;
double x27512 = -256*x24597 + 128*x25033 + x27510*x5152 - x27510*x5157 - x27510 - x27511*x5157 + x27511;
double x27513 = x17297*x5911;
double x27514 = x27513*x5157;
double x27515 = x24759*x7842;
double x27516 = q8_i*x2;
double x27517 = x24810*x7897;
double x27518 = x24810*x7938;
double x27519 = x27513*x5152;
double x27520 = x24584*x327;
double x27521 = 32*x24929;
double x27522 = 32*x24669;
double x27523 = x27521*x5157;
double x27524 = x3583*x5150;
double x27525 = q8_b*x24824*x7750;
double x27526 = q8_i*x3460;
double x27527 = q9_b*x24474;
double x27528 = x21866*x5157;
double x27529 = x16535*x5163;
double x27530 = 30*x4970;
double x27531 = 16*x5061;
double x27532 = 16*q9_i_dot;
double x27533 = x5200*x7998;
double x27534 = x27533*x5306;
double x27535 = q9_b*x24476;
double x27536 = x21866*x5152;
double x27537 = x16535*x24460;
double x27538 = q9_b*x7964;
double x27539 = 96*x16289;
double x27540 = x25887*x3591;
double x27541 = 96*x16586;
double x27542 = 60*q8_i_dot;
double x27543 = 32*q9_i_dot;
double x27544 = x21875*x5695;
double x27545 = x158*x7982;
double x27546 = x811*x8111;
double x27547 = x321*x7985;
double x27548 = x16535*x5186;
double x27549 = q9_b_dt*x16238;
double x27550 = x6*x8240;
double x27551 = x21866*x4;
double x27552 = q8_b*x27551;
double x27553 = q9_b*x27210;
double x27554 = x24450*x7998;
double x27555 = x24480*x7975;
double x27556 = x19352*x5184;
double x27557 = 96*L;
double x27558 = q9_b_dot*x25018;
double x27559 = x0*x27558;
double x27560 = x11328*x21944;
double x27561 = q8_i*q9_i;
double x27562 = x24450*x27561;
double x27563 = x16654*x19;
double x27564 = q8_b*x8111;
double x27565 = x158*x849;
double x27566 = q9_b_dot*x24500;
double x27567 = x24564*x7998;
double x27568 = L*q9_i;
double x27569 = q9_b*x25563;
double x27570 = 192*x0;
double x27571 = x24756*x8068;
double x27572 = q8_i*q9_i_dot;
double x27573 = x27572*x5152;
double x27574 = q9_b*x19;
double x27575 = x27574*x5211;
double x27576 = x27385*x5413;
double x27577 = x16410*x19;
double x27578 = q9_b_dt*x8034;
double x27579 = x27533*x5413;
double x27580 = x24507*x8127;
double x27581 = x24507*x8128;
double x27582 = x24510*x8127;
double x27583 = x24510*x8128;
double x27584 = L*x8030;
double x27585 = q9_b*x8029;
double x27586 = 26*x16289;
double x27587 = 26*x16586;
double x27588 = x129*x8037;
double x27589 = x24584*x7998;
double x27590 = x1858*x8083;
double x27591 = q9_b*x24507;
double x27592 = q9_b*x24510;
double x27593 = x158*x7897;
double x27594 = x158*x7938;
double x27595 = x5106*x6;
double x27596 = x3614*x5186;
double x27597 = q9_b*x5680;
double x27598 = 8*x27554;
double x27599 = 26*x24750;
double x27600 = x16473*x27574;
double x27601 = x24830*x27561;
double x27602 = q9_i*x8034;
double x27603 = x16535*x7734;
double x27604 = q9_b*x3479;
double x27605 = x0*x27551;
double x27606 = x16551*x19;
double x27607 = x16657*x19;
double x27608 = q9_b*x24584;
double x27609 = x16394*x19;
double x27610 = 52*x0;
double x27611 = q8_i_dot*q9_i_dot;
double x27612 = q8_i_dot*q9_i;
double x27613 = x27612*x5152;
double x27614 = 7*x5061;
double x27615 = 14*q9_i_dot;
double x27616 = -x11515*x27560 - x21879*x5152 + x21879*x5157 + x24474*x27614 - x24476*x27614 - x24495*x8090 + x24498*x8090 - x24927*x27571 + x25011*x8094 - x25012*x8094 + x25014*x27615 - x25015*x27615 + x26595*x7975 - 14*x27544 - x27558*x6714;
double x27617 = x24934*x7847;
double x27618 = x27617*x5413;
double x27619 = x24629*x7846;
double x27620 = x24939*x7847;
double x27621 = x24939*x27372;
double x27622 = x362*x7847;
double x27623 = x21771*x7733;
double x27624 = -x16629*x19 + x21897 - x21898 + x24250 - x24251 + x24507*x27369 - x24510*x27369 + x24621*x7845 + x24626*x7845 - x24672*x7850 - x24856*x7850 + x24863*x7850 - x24937*x7847 + x24946*x27622 + x24988*x27377 + x24988*x27623 + x25292*x7845 - x27618*x5152 + x27618*x5157 - x27618 + x27619*x5152 + x27619*x5157 - x27620*x5152 + x27620 - x27621*x5152 - x27621*x5157;
double x27625 = q9_b_dot_dt*x24481;
double x27626 = x27533*x5911;
double x27627 = 32*x27554;
double x27628 = 16*x840;
double x27629 = q8_b_dt*x16535;
double x27630 = x24629*x8108;
double x27631 = x25274*x8081;
double x27632 = q9_b_dot_dt*x24504;
double x27633 = q8_i_dot*x849;
double x27634 = q9_i_dot*x820;
double x27635 = x24629*x8040;
double x27636 = x24458*x7998;
double x27637 = x16765*x27227;
double x27638 = q9_b_dt*x19266;
double x27639 = q9_b*x820;
double x27640 = x27551*x836;
double x27641 = q9_i_dot*x7805;
double x27642 = q8_i_dot*x8175;
double x27643 = q9_b_dot*x24584;
double x27644 = x25987*x8051;
double x27645 = q9_b_dot_dt*x25574;
double x27646 = q9_b_dot*x21720;
double x27647 = q9_b_dot*x25065;
double x27648 = x27210*x865;
double x27649 = x5061*x7750;
double x27650 = x25104*x27649;
double x27651 = x19*x8068;
double x27652 = x16472*x27651;
double x27653 = x25296*x27561;
double x27654 = x24939*x27611;
double x27655 = x362*x8077;
double x27656 = x24621*x8131;
double x27657 = x24621*x8134;
double x27658 = x16662*x19;
double x27659 = x16663*x19;
double x27660 = x24626*x8131;
double x27661 = x24626*x8134;
double x27662 = x24629*x8136;
double x27663 = x27662*x5157;
double x27664 = x27662*x5152;
double x27665 = x24498*x8139;
double x27666 = x24495*x8139;
double x27667 = x24507*x8158;
double x27668 = x158*x27667;
double x27669 = x24507*x8160;
double x27670 = x158*x27669;
double x27671 = x24510*x8158;
double x27672 = x158*x27671;
double x27673 = x24510*x8160;
double x27674 = x158*x27673;
double x27675 = x24641*x8166;
double x27676 = x16765*x27651;
double x27677 = x24645*x8166;
double x27678 = x24863*x8387;
double x27679 = x24649*x8146;
double x27680 = x24863*x8386;
double x27681 = x24649*x5052;
double x27682 = x16535*x16643;
double x27683 = x3538*x6;
double x27684 = x24657*x27683;
double x27685 = x25292*x8131;
double x27686 = x27551*x865;
double x27687 = x27686*x5336;
double x27688 = x24662*x8166;
double x27689 = x24528*x866;
double x27690 = x16659*x27689;
double x27691 = x24856*x8386;
double x27692 = x24667*x8154;
double x27693 = x24670*x8166;
double x27694 = x24672*x8387;
double x27695 = x24672*x8386;
double x27696 = x27676*x5152;
double x27697 = q9_i*q9_i_dot;
double x27698 = x24678*x27697;
double x27699 = x27697*x5152;
double x27700 = x24677*x27699;
double x27701 = q9_i_dot*x849;
double x27702 = x16893*x19;
double x27703 = q9_i_dot*x8175;
double x27704 = pow(q9_i_dot, 2);
double x27705 = x8000*x849;
double x27706 = q9_i_dot*x27644 - x16694*x19 + x24270 + x24517*x27703 - x24528*x27703 - x24533*x27703 - x24579*x8171 - x24585*x8171 + x24587*x27701 + x24589*x27701 - x24594*x27704 - x24595*x27704 + x24598*x8171 + x24599*x27705 + x24790*x8171 - x24791*x8171 - x24882*x8395 + x24883*x8395 + x27625*x8175 + x27632*x8175 + x27645*x8175 - x27702*x5152 + x27702;
double x27707 = x22000 + x24327 + x27706;
double x27708 = x24287 - x27656 - x27657 + x27658 + x27659 - x27660 - x27661 - x27663 - x27664 - x27665 - x27666 - x27668 - x27670 + x27672 + x27674 + x27675 - x27676 - x27677 - x27678 - x27679 - x27680 - x27681 - x27682 - x27684 - x27685 - x27687 + x27688 + x27690 + x27691 + x27692 - x27693 + x27694 + x27695 + x27696 + x27698 + x27700 + x27707;
double x27709 = x5200*x8182;
double x27710 = x27709*x5330;
double x27711 = x16701*x24900;
double x27712 = x24528*x8185;
double x27713 = pow(q9_i, 2)*x24450;
double x27714 = x27713*x5157;
double x27715 = x27713*x5152;
double x27716 = q9_b_dt*x16535;
double x27717 = q9_b*x27551;
double x27718 = -x16700*x19 + x24495*x8181 + x24498*x8181 + x24617*x8182 - x24667*x8182 + x24896*x8179 - x24897*x8185 + x24898*x8185 + x24899*x8179 + x24905*x8185 - x24907*x8185 + x27550*x27628 - x27710*x5152 + x27710*x5157 - x27710 - x27711*x5152 + x27711 - 16*x27712 - 16*x27714 - 16*x27715 + x27716*x5643 + x27717*x5928;
double x27719 = x24469*x8102;
double x27720 = x24469*x8104;
double x27721 = x27533*x5996;
double x27722 = 48*x27554;
double x27723 = x24569*x840;
double x27724 = x21866*x24573;
double x27725 = 14*x8190;
double x27726 = 14*x8108;
double x27727 = 10*x8136;
double x27728 = 10*x8191;
double x27729 = x286*x8083;
double x27730 = x25392*x8081;
double x27731 = 10*x8040;
double x27732 = 10*x8041;
double x27733 = 14*x7812;
double x27734 = 14*x7867;
double x27735 = x24454*x7998;
double x27736 = x24927*x7751;
double x27737 = q9_b*x27736;
double x27738 = x24514*x8069;
double x27739 = q9_b*x27738;
double x27740 = x5527*x836;
double x27741 = q9_i_dot*x8203;
double x27742 = x27269*x5061;
double x27743 = x6*x849;
double x27744 = 6*x27743;
double x27745 = x17368*x8051;
double x27746 = x5028*x5695;
double x27747 = x16767*x19;
double x27748 = x16238*x7734;
double x27749 = q8_b*x27738;
double x27750 = q8_b*x27736;
double x27751 = x25429*x27611;
double x27752 = x16736*x19;
double x27753 = x27709*x5306;
double x27754 = x24951*x8179;
double x27755 = x27753*x5152;
double x27756 = x16744*x24510;
double x27757 = x24956*x8182;
double x27758 = x27753*x5157;
double x27759 = x16744*x24507;
double x27760 = x24961*x8179;
double x27761 = x24469*x8180;
double x27762 = x24550*x27761;
double x27763 = x24562*x27761;
double x27764 = x16701*x24708;
double x27765 = x24967*x8185;
double x27766 = x16701*x24726;
double x27767 = x24550*x27713;
double x27768 = x24562*x27713;
double x27769 = x24564*x8182;
double x27770 = x27769*x5572;
double x27771 = x24973*x8185;
double x27772 = x27723*x8240;
double x27773 = x27716*x6741;
double x27774 = q9_b*x27724;
double x27775 = x24979*x8185;
double x27776 = -x27752 - x27753 + x27754 - x27755 - x27756 - x27757 + x27758 + x27759 + x27760 + x27762 + x27763 + x27764 - x27765 - x27766 - x27767 - x27768 + x27770 + x27771 + x27772 + x27773 + x27774 - x27775;
double x27777 = x27617*x5306;
double x27778 = x158*x27535;
double x27779 = x158*x27536;
double x27780 = x158*x27537;
double x27781 = x158*x27527;
double x27782 = x158*x27528;
double x27783 = x158*x27529;
double x27784 = x5200*x8237;
double x27785 = q8_b*x27784;
double x27786 = 72*x27554;
double x27787 = 36*x840;
double x27788 = q8_b_dot*x27482;
double x27789 = x327*x8083;
double x27790 = x3943*x8224;
double x27791 = q9_b_dot*x5200*x7771;
double x27792 = x4970*x8234;
double x27793 = q9_b*x25475;
double x27794 = x24495*x27793;
double x27795 = q9_i*x5536;
double x27796 = x24695*x27795;
double x27797 = x10776*x19352;
double x27798 = x24498*x27793;
double x27799 = x24702*x3591;
double x27800 = x24705*x27795;
double x27801 = x3943*x7982;
double x27802 = 12*x8047;
double x27803 = x3629*x7729;
double x27804 = x24469*x7846;
double x27805 = x25030*x8087;
double x27806 = x25069*x7751;
double x27807 = q9_b*x27806;
double x27808 = x24708*x8069;
double x27809 = q9_b*x24710;
double x27810 = x3943*x7985;
double x27811 = x3943*x8160;
double x27812 = q9_b_dot*x3943;
double x27813 = x3629*x4970;
double x27814 = x5061*x8234;
double x27815 = q9_i*x25056;
double x27816 = x24714*x849;
double x27817 = q8_b*x27806;
double x27818 = x24726*x8069;
double x27819 = q9_b*x24723;
double x27820 = x21936 + x27707;
double x27821 = x27709*x5411;
double x27822 = x16701*x25089;
double x27823 = x16576*x5540;
double x27824 = x24756*x27651;
double x27825 = -q9_b_dot*x25082 + q9_b_dot*x25085 + q9_b_dot*x25103 - q9_i_dot*x25084 + q9_i_dot*x25086 + q9_i_dot*x25960 - x16785*x19 - x16894*x24480 - x24468*x27823 + x24469*x27823 + x24495*x8254 + x24498*x8254 + x24736*x7975 + x25079*x8179 - x25080*x8185 - x25081*x8182 - x25083*x7975 + x25087*x8185 + x25088*x8179 - x25093*x5061 + x25096*x5061 + x25100*x8185 - x25102*x8185 + 4*x27544 + x27550*x27787 - 36*x27712 - 36*x27714 - 36*x27715 + x27716*x7357 + x27717*x5440 + x27769*x5440 - x27821*x5152 + x27821*x5157 - x27821 - x27822*x5152 + x27822 + 8*x27824;
double x27826 = x24759*x8182;
double x27827 = 2*x8185;
double x27828 = x24584*x8182;
double x27829 = x16849*x19;
double x27830 = L*x8237;
double x27831 = x16586*x7333;
double x27832 = 162*x26528;
double x27833 = 324*x25047;
double x27834 = -324*x24597 + 162*x25033 + x27832*x5152 - x27832*x5157 - x27832 - x27833*x5157 + x27833;
double x27835 = x17297*x5411;
double x27836 = x27835*x5157;
double x27837 = q9_b_dot*x4046;
double x27838 = x24759*x8166;
double x27839 = q9_i*x2;
double x27840 = x24810*x8224;
double x27841 = x24810*x8262;
double x27842 = x27835*x5152;
double x27843 = x24584*x4023;
double x27844 = x24530*x5440;
double x27845 = x26937*x5157;
double x27846 = x10658*x866;
double x27847 = q9_b*x24824*x8068;
double x27848 = q9_i*x3602;
double x27849 = x24834*x5098;
double x27850 = x11328*x5412;
double x27851 = x19*x25099;
double x27852 = q10_b*x8287;
double x27853 = 34*x5061;
double x27854 = 18*x5125;
double x27855 = x5200*x8313;
double x27856 = x27855*x5306;
double x27857 = x24469*x5171;
double x27858 = L*x8284;
double x27859 = q10_b*x27858;
double x27860 = q9_b*x27858;
double x27861 = x25887*x3647;
double x27862 = 108*x16911;
double x27863 = 108*x16586;
double x27864 = 68*q9_i_dot;
double x27865 = 36*q10_i_dot;
double x27866 = x10*x3607;
double x27867 = x158*x8300;
double x27868 = x24769*x5171;
double x27869 = q10_b*x20;
double x27870 = x27869*x6;
double x27871 = q9_b*x24522;
double x27872 = q10_b*x27551;
double x27873 = x17063*x8279;
double x27874 = x27873*x4;
double x27875 = x24450*x8313;
double x27876 = x17028*x5186;
double x27877 = q10_i_dt*x27876;
double x27878 = 108*L;
double x27879 = x24750*x27878;
double x27880 = x25018*x5117;
double x27881 = 68*x24750;
double x27882 = q10_i*q9_i;
double x27883 = x24450*x27882;
double x27884 = x24788*x8331;
double x27885 = x20*x6;
double x27886 = x4*x5117;
double x27887 = x24564*x8313;
double x27888 = q10_b*x25563;
double x27889 = 216*x0;
double x27890 = x19*x27886;
double x27891 = x24484*x4432;
double x27892 = q10_i_dot*q9_i;
double x27893 = x27892*x5152;
double x27894 = q10_b*x19;
double x27895 = x27709*x5413;
double x27896 = q10_b*x8342;
double x27897 = x16702*x19;
double x27898 = 8*x5125;
double x27899 = x27855*x5413;
double x27900 = x24507*x8442;
double x27901 = x24507*x8441;
double x27902 = x24510*x8442;
double x27903 = x24510*x8441;
double x27904 = L*x8339;
double x27905 = q10_b*x27904;
double x27906 = q9_b*x27904;
double x27907 = x16911*x7034;
double x27908 = x16586*x7034;
double x27909 = 16*q10_i_dot;
double x27910 = x129*x8347;
double x27911 = x24584*x8313;
double x27912 = q10_b*x3619;
double x27913 = x24810*x5171;
double x27914 = x158*x8224;
double x27915 = x158*x8262;
double x27916 = q10_b_dt*x16535;
double x27917 = 8*x27875;
double x27918 = x24750*x7034;
double x27919 = x16766*x27894;
double x27920 = 8*q10_i;
double x27921 = q9_i*x27920;
double x27922 = q9_i_dot*x16884;
double x27923 = x129*x8445;
double x27924 = x24522*x865;
double x27925 = x24500*x8407;
double x27926 = x24802*x8331;
double x27927 = x24454*x5117;
double x27928 = x16928*x19;
double x27929 = x16685*x19;
double x27930 = x24500*x8634;
double x27931 = x24484*x5117;
double x27932 = q10_i_dot*q9_i_dot;
double x27933 = x10*x5695;
double x27934 = x27933*x57;
double x27935 = q9_b_dot*x27931;
double x27936 = q9_i_dot*x3670;
double x27937 = x24934*x8171;
double x27938 = x27937*x5413;
double x27939 = x24629*x8170;
double x27940 = x24939*x8171;
double x27941 = x24939*x27704;
double x27942 = x362*x8171;
double x27943 = x21944*x8051;
double x27944 = -x16891*x19 + x22054 - x22055 + x24379 - x24381 + x24507*x27703 - x24510*x27703 + x24621*x8169 + x24626*x8169 - x24672*x8174 - x24856*x8174 + x24863*x8174 - x24937*x8171 + x24946*x27942 + x24988*x27705 + x24988*x27943 + x25292*x8169 - x27938*x5152 + x27938*x5157 - x27938 + x27939*x5152 + x27939*x5157 - x27940*x5152 + x27940 - x27941*x5152 - x27941*x5157;
double x27945 = x5200*x8404;
double x27946 = x27945*x5330;
double x27947 = 16*x27857;
double x27948 = x24481*x876;
double x27949 = x27855*x5911;
double x27950 = x16904*x24900;
double x27951 = 32*x27875;
double x27952 = x6*x8420;
double x27953 = x18157*x5643;
double x27954 = pow(q10_i, 2)*x24450;
double x27955 = 16*x27954;
double x27956 = x24504*x876;
double x27957 = x24629*x5171;
double x27958 = x24629*x8411;
double x27959 = q10_b*x24507;
double x27960 = q10_i*x24507;
double x27961 = q9_i*x24510;
double x27962 = x25274*x8388;
double x27963 = q10_b*x24510;
double x27964 = q10_i*x24510;
double x27965 = q9_i*x24507;
double x27966 = q10_i_dot*x849;
double x27967 = q10_b_dt*x18162;
double x27968 = x17063*x8402;
double x27969 = x27968*x4;
double x27970 = x24458*x8313;
double x27971 = x24677*x8448;
double x27972 = x17001*x27651;
double x27973 = q10_b*x875;
double x27974 = q10_b*x849;
double x27975 = q10_i*x876;
double x27976 = x16829*x6;
double x27977 = x24522*x875;
double x27978 = x25574*x876;
double x27979 = x5540*x8336;
double x27980 = q10_i_dot*x8175;
double x27981 = x8315*x849;
double x27982 = x24528*x27920;
double x27983 = x27885*x876;
double x27984 = x16535*x8360;
double x27985 = x27551*x876;
double x27986 = x27651*x27898;
double x27987 = x24677*x8331;
double x27988 = x25296*x27882;
double x27989 = x24830*x27882;
double x27990 = x24530*x5117;
double x27991 = 16*x27990;
double x27992 = x24939*x27932;
double x27993 = q10_i*q10_i_dot;
double x27994 = x27993*x5152;
double x27995 = q10_i*q9_i_dot;
double x27996 = x27995*x5152;
double x27997 = x24593*x8453;
double x27998 = q10_i_dot*x8447;
double x27999 = pow(q10_i_dot, 2);
double x28000 = -x16939*x19 + x16940*x25573 + x22086 + x24405 + x24517*x27998 - x24528*x27998 - x24533*x27998 - x24579*x8453 + x24581*x8451 - x24585*x8453 + x24586*x8451 + x24586*x8452 - x24594*x27999 - x24595*x27999 + x24598*x8453 + x24790*x8453 - x24791*x8453 - x24882*x8450 + x24883*x8450 + x25176*x8451 + x25573*x3636 + x27868*x8452 - x27997*x5152 + x27997;
double x28001 = x22132 + x24446 + x28000;
double x28002 = x27945*x5306;
double x28003 = x24469*x8398;
double x28004 = 24*x27857;
double x28005 = x27855*x5996;
double x28006 = 48*x27875;
double x28007 = x18157*x6741;
double x28008 = 14*x8411;
double x28009 = x27857*x8456;
double x28010 = 10*x27857;
double x28011 = x25392*x8388;
double x28012 = x24510*x5129;
double x28013 = x27857*x8358;
double x28014 = 10*x8352;
double x28015 = 14*x8136;
double x28016 = 14*x8191;
double x28017 = x24564*x8404;
double x28018 = x24454*x8313;
double x28019 = x24927*x8069;
double x28020 = q10_b*x28019;
double x28021 = x24534*x8448;
double x28022 = q10_b_dt*x19344;
double x28023 = x18157*x865;
double x28024 = x3664*x8051;
double x28025 = x6*x9078;
double x28026 = x17002*x19;
double x28027 = x24534*x8331;
double x28028 = q9_b*x28019;
double x28029 = 20*x27990;
double x28030 = x25429*x27932;
double x28031 = x24216*x8336;
double x28032 = x27945*x5411;
double x28033 = 36*x27857;
double x28034 = x27937*x5306;
double x28035 = q10_b*x27784;
double x28036 = x16904*x25089;
double x28037 = 72*x27875;
double x28038 = x18157*x7357;
double x28039 = 36*x27954;
double x28040 = x25030*x8166;
double x28041 = x327*x8445;
double x28042 = x26154*x8388;
double x28043 = x3629*x5061;
double x28044 = q10_b*x25475;
double x28045 = q10_i*x5536;
double x28046 = 12*x8357;
double x28047 = x24469*x8170;
double x28048 = x25030*x8392;
double x28049 = x25069*x8069;
double x28050 = q10_b*x28049;
double x28051 = x24708*x8376;
double x28052 = x8469*x875;
double x28053 = x3670*x876;
double x28054 = q10_i_dot*x8498;
double x28055 = q9_b*x28049;
double x28056 = 24*x27990;
double x28057 = x24726*x8376;
double x28058 = 200*x26528;
double x28059 = x24759*x8528;
double x28060 = x24481*x8501;
double x28061 = x24453*x8539;
double x28062 = x19785*x5152;
double x28063 = x12643*x24460;
double x28064 = 2*p10_b;
double x28065 = p10_i*x24510;
double x28066 = x24584*x8528;
double x28067 = x24507*x28064;
double x28068 = p10_b*x8525;
double x28069 = x24769*x8505;
double x28070 = x12789*x19;
double x28071 = p10_b*x24474;
double x28072 = x19785*x5157;
double x28073 = x12643*x5163;
double x28074 = 400*x25047;
double x28075 = 40*x12626;
double x28076 = x1838*x24834;
double x28077 = x5179*x8769;
double x28078 = pow(p10_i, 2)*x24450;
double x28079 = x28078*x5152;
double x28080 = 4*x8511;
double x28081 = x19785*x4;
double x28082 = x6*x8543;
double x28083 = p10_b_dt*x12643;
double x28084 = x1795*x25037;
double x28085 = x24709*x8511;
double x28086 = 40*x24750;
double x28087 = L*p10_i;
double x28088 = x19*x5211;
double x28089 = x28088*x8511;
double x28090 = x17297*x6387;
double x28091 = x24507*x8534;
double x28092 = x24507*x8556;
double x28093 = x24510*x8534;
double x28094 = x24510*x8556;
double x28095 = 40*x24929;
double x28096 = 10*x8551;
double x28097 = x24759*x8559;
double x28098 = x24469*x8521;
double x28099 = p10_i*x2;
double x28100 = x5152*x8538;
double x28101 = x24810*x8525;
double x28102 = x24810*x8541;
double x28103 = x24810*x8542;
double x28104 = x898*x9083;
double x28105 = x10*x5184;
double x28106 = x24454*x8511;
double x28107 = p10_b_dot*x28106;
double x28108 = x2*x6;
double x28109 = p10_b*x8557;
double x28110 = x24824*x28109;
double x28111 = 20*x25037;
double x28112 = p10_i_dot*x1850;
double x28113 = L*x8557;
double x28114 = 24*x28060;
double x28115 = x5200*x8528;
double x28116 = x28115*x5306;
double x28117 = x12657*x19;
double x28118 = p9_b*x24476;
double x28119 = x19804*x5152;
double x28120 = x12700*x24460;
double x28121 = 42*x8587;
double x28122 = x24469*x28068;
double x28123 = 24*x28122;
double x28124 = x24469*x8505;
double x28125 = x24550*x28124;
double x28126 = x24562*x28124;
double x28127 = x12685*x24708;
double x28128 = p10_i*x24507;
double x28129 = x28128*x8658;
double x28130 = x5200*x8640;
double x28131 = x28130*x5306;
double x28132 = x28116*x5157;
double x28133 = x24468*x8538;
double x28134 = x28133*x6674;
double x28135 = x24621*x8600;
double x28136 = p9_i*x24510;
double x28137 = p9_b_dot_dt*x24481;
double x28138 = p9_i*x24507;
double x28139 = x12672*x19;
double x28140 = x12673*x19;
double x28141 = x28065*x8658;
double x28142 = x24504*x8573;
double x28143 = x24469*x8525;
double x28144 = x24469*x8575;
double x28145 = x24469*x8576;
double x28146 = 12*x28145;
double x28147 = x28116*x5152;
double x28148 = x24956*x8528;
double x28149 = p9_b*x24474;
double x28150 = x19804*x5157;
double x28151 = x12700*x5163;
double x28152 = 120*x12626;
double x28153 = 120*x12914;
double x28154 = x1845*x24834;
double x28155 = x24484*x313;
double x28156 = x1799*x28155;
double x28157 = p10_i_dot*x8628;
double x28158 = 84*x28157;
double x28159 = x1826*x28155;
double x28160 = p9_i_dot*x8628;
double x28161 = 40*x28160;
double x28162 = x28081*x8511;
double x28163 = 24*x28162;
double x28164 = x5179*x8656;
double x28165 = x25545*x28164;
double x28166 = x24569*x8543;
double x28167 = x28166*x385;
double x28168 = x28083*x6741;
double x28169 = x24564*x8528;
double x28170 = x28169*x5572;
double x28171 = x24469*x28100;
double x28172 = x28171*x6674;
double x28173 = x24629*x8525;
double x28174 = x28173*x8551;
double x28175 = x24629*x8602;
double x28176 = x28175*x5157;
double x28177 = x28175*x5152;
double x28178 = x24629*x8605;
double x28179 = x28178*x5157;
double x28180 = x28178*x5152;
double x28181 = x158*x28091;
double x28182 = p9_b_dot_dt*x24504;
double x28183 = x158*x28092;
double x28184 = x158*x28143;
double x28185 = x24769*x8617;
double x28186 = x321*x8772;
double x28187 = x24510*x421;
double x28188 = x158*x28093;
double x28189 = x158*x28094;
double x28190 = x24641*x8559;
double x28191 = x19804*x4;
double x28192 = x28191*x8511;
double x28193 = p9_b*x28081;
double x28194 = p10_b_dt*x12700;
double x28195 = x6*x8972;
double x28196 = x24557*x28164;
double x28197 = x24450*x8640;
double x28198 = x12685*x24726;
double x28199 = x24550*x28078;
double x28200 = x24562*x28078;
double x28201 = x19861*x20;
double x28202 = x1822*x24834;
double x28203 = x1821*x25037;
double x28204 = p9_b*x25563;
double x28205 = L*x18793;
double x28206 = x28205*x5186;
double x28207 = p10_i*p9_i;
double x28208 = x24450*x28207;
double x28209 = x24643*x28109;
double x28210 = x11359*x8645;
double x28211 = x11359*x8647;
double x28212 = x24645*x8559;
double x28213 = x0*x1799;
double x28214 = x18347*x28213;
double x28215 = x28214*x8514;
double x28216 = x24629*x24651;
double x28217 = x28216*x8534;
double x28218 = x24649*x8828;
double x28219 = x12948*x19;
double x28220 = x28081*x8551;
double x28221 = x28220*x5336;
double x28222 = x28216*x8556;
double x28223 = x24649*x3851;
double x28224 = x12643*x8652;
double x28225 = 8*x28224;
double x28226 = x1805*x6;
double x28227 = x24657*x28226;
double x28228 = x158*x8511;
double x28229 = x17063*x1826;
double x28230 = p9_i_dot*x8612;
double x28231 = x19944*x4;
double x28232 = x158*x8772;
double x28233 = p9_b_dot*x28106;
double x28234 = x24662*x8559;
double x28235 = x24667*x8697;
double x28236 = x24651*x24665;
double x28237 = x28236*x8534;
double x28238 = x28236*x8556;
double x28239 = x11359*x8656;
double x28240 = x28239*x6741;
double x28241 = x24564*x8511;
double x28242 = p9_b*x28241;
double x28243 = p9_i_dot*x70;
double x28244 = x11151*x25018;
double x28245 = x19974*x70;
double x28246 = x24750*x28087;
double x28247 = x25018*x8793;
double x28248 = p9_b*x0;
double x28249 = x28088*x28248;
double x28250 = p10_b_dot*x8511;
double x28251 = x24530*x28250;
double x28252 = 16*x28251;
double x28253 = x24484*x8987;
double x28254 = x24674*x8534;
double x28255 = x24674*x8556;
double x28256 = p10_i*p9_i_dot;
double x28257 = x28256*x5152;
double x28258 = x28209*x5152;
double x28259 = p10_i*p10_i_dot;
double x28260 = x24678*x28259;
double x28261 = x28259*x5152;
double x28262 = x24677*x28261;
double x28263 = x19*x8773;
double x28264 = x24756*x28263;
double x28265 = x19*x8557;
double x28266 = x24756*x28265;
double x28267 = x24579*x8704;
double x28268 = x12644*x24467;
double x28269 = x12644*x24455;
double x28270 = x28269*x5152;
double x28271 = x24769*x8703;
double x28272 = x12848*x19;
double x28273 = p10_i_dot*x8708;
double x28274 = pow(p10_i_dot, 2);
double x28275 = x17063*x1799;
double x28276 = x0*x28275;
double x28277 = x6*x8705;
double x28278 = -x12762*x19 + x24517*x28273 - x24528*x28273 - x24533*x28273 - x24585*x8704 - x24594*x28274 - x24595*x28274 + x24598*x8704 - x24882*x8804 + x24883*x8804 + x25987*x8802 - x28267*x5152 + x28267*x5157 - x28267 + x28268*x8708 + x28270*x8708 + x28271*x5152 + x28271*x5157 - x28272*x5152 + x28272 + x28276*x8708 + x28277*x6690;
double x28279 = x28115*x5413;
double x28280 = 12*p10_i_dot;
double x28281 = x24629*x8505;
double x28282 = x12930*x19;
double x28283 = x24481*x8723;
double x28284 = x28130*x5413;
double x28285 = 2*p9_b;
double x28286 = x24469*x8713;
double x28287 = x24769*x8576;
double x28288 = x24507*x8913;
double x28289 = x24510*x8913;
double x28290 = 46*x12626;
double x28291 = 46*x12914;
double x28292 = x24504*x8723;
double x28293 = x129*x8728;
double x28294 = x24528*x8645;
double x28295 = p9_b*x1850;
double x28296 = p10_b_dot*x1858;
double x28297 = x8731*x898;
double x28298 = x24810*x8734;
double x28299 = x24810*x8617;
double x28300 = p9_b_dot*x24579;
double x28301 = x24769*x8605;
double x28302 = x5179*x8645;
double x28303 = x0*x8780;
double x28304 = p9_b_dt*x12643;
double x28305 = 8*x28197;
double x28306 = x28078*x5157;
double x28307 = x15299*x28265;
double x28308 = x24830*x28207;
double x28309 = x129*x8786;
double x28310 = p10_b_dot*x6;
double x28311 = x28310*x5184;
double x28312 = x12700*x8652;
double x28313 = p10_i_dot*x8726;
double x28314 = x6*x8840;
double x28315 = x12742*x19;
double x28316 = x11376*x8775;
double x28317 = x3851*x6;
double x28318 = x12951*x19;
double x28319 = p10_b_dot*x24584;
double x28320 = x12751*x19;
double x28321 = p10_i_dot*p9_i_dot;
double x28322 = p9_i_dot*x24832;
double x28323 = p9_i_dot*x1850;
double x28324 = p10_i_dot*p9_i;
double x28325 = x28324*x5152;
double x28326 = 22*x28160;
double x28327 = x19844*x5152 - x19844*x5157 - x24468*x28326 + x24469*x28326 - x24474*x8797 + x24476*x8797 - x25011*x8799 + x25012*x8799 + x26222*x8795 - x26239*x8795 + x27252*x28243 - 22*x28159 + 22*x28201 + 44*x28244 + 44*x28264;
double x28328 = x24934*x8704;
double x28329 = x28328*x5413;
double x28330 = x28268*x8587;
double x28331 = 8*x28270;
double x28332 = x24629*x8703;
double x28333 = x24939*x8704;
double x28334 = x24939*x28274;
double x28335 = 8*x17368;
double x28336 = x362*x8704;
double x28337 = -x12846*x19 + x24507*x28273 - x24510*x28273 - x24672*x8707 - x24856*x8707 + x24863*x8707 - x24937*x8704 + x24946*x28336 + x28214*x8587 + x28277*x7943 - x28329*x5152 + x28329*x5157 - x28329 + 8*x28330 + x28331*x8587 + x28332*x5152 + x28332*x5157 - x28333*x5152 + x28333 - x28334*x5152 - x28334*x5157 + x28335*x8802;
double x28338 = x28115*x5330;
double x28339 = p9_b*x28143;
double x28340 = x24469*x8888;
double x28341 = 16*x28145;
double x28342 = x28268*x8582;
double x28343 = x28130*x5911;
double x28344 = 16*x28124;
double x28345 = x12685*x24900;
double x28346 = 32*x28197;
double x28347 = 16*x28164;
double x28348 = x24469*x28302;
double x28349 = 16*x28082;
double x28350 = 16*x8647;
double x28351 = 16*x28195;
double x28352 = x24629*x8890;
double x28353 = p10_b_dot*x158;
double x28354 = p10_i_dot*x24507;
double x28355 = x25274*x8784;
double x28356 = p10_i_dot*x24510;
double x28357 = x24769*x8739;
double x28358 = x24769*x8740;
double x28359 = x24629*x8734;
double x28360 = x24629*x8617;
double x28361 = p9_b*x28106;
double x28362 = x13014*x28265;
double x28363 = x28191*x5336;
double x28364 = x24517*x8907;
double x28365 = p9_b*x379;
double x28366 = p9_i_dot*x8708;
double x28367 = p10_i_dot*x8916;
double x28368 = x0*x1826;
double x28369 = x17063*x28368;
double x28370 = x5540*x8745;
double x28371 = x1827*x18347;
double x28372 = x6*x8743;
double x28373 = x420*x5336;
double x28374 = 8*x8746;
double x28375 = x24528*x8907;
double x28376 = x3868*x6;
double x28377 = 8*x8594;
double x28378 = x28265*x28377;
double x28379 = p10_b*x28263*x327;
double x28380 = x25296*x28207;
double x28381 = x28321*x5157;
double x28382 = x28321*x5152;
double x28383 = x362*x8781;
double x28384 = x24530*x8987;
double x28385 = x24621*x8813;
double x28386 = x24621*x8814;
double x28387 = x12955*x19;
double x28388 = x12956*x19;
double x28389 = x24626*x8813;
double x28390 = x24626*x8814;
double x28391 = x24629*x8815;
double x28392 = x28391*x5157;
double x28393 = x28391*x5152;
double x28394 = x24498*x8922;
double x28395 = x24495*x8922;
double x28396 = x24507*x8850;
double x28397 = x158*x28396;
double x28398 = x24507*x8852;
double x28399 = x158*x28398;
double x28400 = x24510*x8850;
double x28401 = x158*x28400;
double x28402 = x24510*x8852;
double x28403 = x158*x28402;
double x28404 = x24641*x8855;
double x28405 = x13014*x28263;
double x28406 = x24645*x8855;
double x28407 = x28248*x28371;
double x28408 = x28364*x421;
double x28409 = x24649*x8833;
double x28410 = x28363*x420;
double x28411 = x11143*x24863;
double x28412 = p9_b_dot*x25065;
double x28413 = x1921*x28412;
double x28414 = x12700*x28374;
double x28415 = x25285*x8837;
double x28416 = x24662*x8855;
double x28417 = x24667*x8848;
double x28418 = x28375*x421;
double x28419 = x11143*x24856;
double x28420 = x24670*x8855;
double x28421 = p9_b*x421;
double x28422 = x24672*x28421;
double x28423 = x11143*x24672;
double x28424 = x28405*x5152;
double x28425 = p9_i*p9_i_dot;
double x28426 = x24678*x28425;
double x28427 = x28425*x5152;
double x28428 = x24677*x28427;
double x28429 = x19900 + x19902 + x19903 + x22506 + x22508 + x22509 - x28385 - x28386 + x28387 + x28388 - x28389 - x28390 - x28392 - x28393 - x28394 - x28395 - x28397 - x28399 + x28401 + x28403 + x28404 - x28405 - x28406 - x28407 - x28408 - x28409 - x28410 - x28411 - x28413 - x28414 - x28415 + x28416 + x28417 + x28418 + x28419 - x28420 + x28422 + x28423 + x28424 + x28426 + x28428;
double x28430 = x5200*x8874;
double x28431 = x28430*x5330;
double x28432 = x24504*x8869;
double x28433 = x24469*x8942;
double x28434 = x12910*x24900;
double x28435 = 16*x8944;
double x28436 = pow(p9_i, 2)*x24450;
double x28437 = 16*x28436;
double x28438 = p9_b*x28191;
double x28439 = p9_b_dt*x12700;
double x28440 = x11359*x8944;
double x28441 = x24579*x8860;
double x28442 = x24769*x8859;
double x28443 = x15224*x19;
double x28444 = p9_i_dot*x8916;
double x28445 = pow(p9_i_dot, 2);
double x28446 = -x11157*x24882 + x11157*x24883 - x12904*x19 + x19883*x28370 + x24517*x28444 - x24528*x28444 + x24581*x8858 - x24585*x8860 + x24586*x8858 - x24594*x28445 - x24595*x28445 + x24598*x8860 - x24787*x8863 + x24890*x8861 + x28369*x8916 - x28441*x5152 + x28441*x5157 - x28441 + x28442*x5152 + x28442*x5157 - x28443*x5152 + x28443;
double x28447 = -x12976*x19 + x24517*x28435 - x24528*x28435 + x24617*x8874 - x24667*x8874 + x24896*x8869 - x28136*x8907 + x28138*x8907 + x28351*x390 - x28431*x5152 + x28431*x5157 - x28431 + 16*x28432 + x28433*x5152 + x28433*x5157 - x28434*x5152 + x28434 - x28437*x5152 - x28437*x5157 + x28438*x5928 + x28439*x5643 - x28440*x5643 + x28446;
double x28448 = x24469*x8809;
double x28449 = x24481*x8600;
double x28450 = x28130*x5996;
double x28451 = 48*x28197;
double x28452 = p9_b*x24573;
double x28453 = x24569*x8972;
double x28454 = x28270*x8582;
double x28455 = 14*x8811;
double x28456 = 14*x8890;
double x28457 = 10*x8815;
double x28458 = 10*x8816;
double x28459 = p10_b_dot*x286;
double x28460 = x25392*x8784;
double x28461 = x2685*x8587;
double x28462 = x1862*x8594;
double x28463 = x12840*x24510;
double x28464 = 10*x420;
double x28465 = 10*x8734;
double x28466 = 10*x8617;
double x28467 = x28143*x8551;
double x28468 = L*x8826;
double x28469 = 14*x8605;
double x28470 = x12953*x24927;
double x28471 = 20*x28263;
double x28472 = x28471*x8582;
double x28473 = 14*x24651;
double x28474 = x24468*x28473;
double x28475 = x5527*x8551;
double x28476 = x1845*x28310;
double x28477 = x18572*x28213;
double x28478 = x1827*x19991;
double x28479 = x420*x5248;
double x28480 = p9_i*x28464;
double x28481 = 6*x8913;
double x28482 = p10_i_dot*x8820;
double x28483 = x17429*x28368;
double x28484 = x5710*x6;
double x28485 = x17429*x8594;
double x28486 = x17368*x8751;
double x28487 = x13016*x19;
double x28488 = x24469*x28473;
double x28489 = x28471*x8514;
double x28490 = x12750*x24927;
double x28491 = x19971 + x22567 + x28446;
double x28492 = x12908*x19;
double x28493 = x28430*x5306;
double x28494 = x24951*x8869;
double x28495 = x28136*x8670;
double x28496 = x28493*x5152;
double x28497 = x24956*x8874;
double x28498 = x28138*x8670;
double x28499 = x28493*x5157;
double x28500 = 24*x28432;
double x28501 = x24469*x8871;
double x28502 = x24550*x28501;
double x28503 = x24562*x28501;
double x28504 = x12910*x24708;
double x28505 = x24967*x8944;
double x28506 = x12910*x24726;
double x28507 = x24550*x28436;
double x28508 = x24562*x28436;
double x28509 = x19804*x28452;
double x28510 = x24973*x8944;
double x28511 = x28453*x390;
double x28512 = x28439*x6741;
double x28513 = x24564*x8874;
double x28514 = x28513*x5572;
double x28515 = x24979*x8944;
double x28516 = -x28492 - x28493 + x28494 - x28495 - x28496 - x28497 + x28498 + x28499 + x28500 + x28502 + x28503 + x28504 - x28505 - x28506 - x28507 - x28508 + x28509 + x28510 + x28511 + x28512 + x28514 - x28515;
double x28517 = x28115*x5411;
double x28518 = x24469*x8946;
double x28519 = 36*x28145;
double x28520 = x28328*x5306;
double x28521 = x158*x28118;
double x28522 = x158*x28119;
double x28523 = x158*x28120;
double x28524 = x158*x28149;
double x28525 = x158*x28150;
double x28526 = x158*x28151;
double x28527 = x28130*x6047;
double x28528 = 36*x28124;
double x28529 = x12685*x25089;
double x28530 = 72*x28197;
double x28531 = 36*x28164;
double x28532 = 36*x28082;
double x28533 = 36*x8647;
double x28534 = 36*x28195;
double x28535 = x25030*x8559;
double x28536 = 32*x8890;
double x28537 = p10_b_dot*x327;
double x28538 = 12*x8815;
double x28539 = x26154*x8784;
double x28540 = x12626*x6674;
double x28541 = x24495*x8910;
double x28542 = x12914*x6674;
double x28543 = x24469*x28542;
double x28544 = x1921*x28105;
double x28545 = x24596*x5540;
double x28546 = x10*x7943;
double x28547 = x24498*x8910;
double x28548 = 8*x28203;
double x28549 = x24468*x28542;
double x28550 = p9_b_dot*x3943;
double x28551 = 12*x8734;
double x28552 = 12*x8617;
double x28553 = 12*x8739;
double x28554 = 12*x8740;
double x28555 = x24469*x8703;
double x28556 = x25030*x8790;
double x28557 = 32*x8602;
double x28558 = x12953*x25069;
double x28559 = 32*x24651;
double x28560 = x24468*x28559;
double x28561 = x0*x28191;
double x28562 = 32*x28561;
double x28563 = 32*x20;
double x28564 = x24708*x8773;
double x28565 = p9_b*x24710;
double x28566 = x3943*x8772;
double x28567 = x17063*x1827;
double x28568 = x421*x8670;
double x28569 = x3943*x8852;
double x28570 = 12*x8746;
double x28571 = p9_i_dot*x8964;
double x28572 = p10_i_dot*x13006;
double x28573 = x18793*x24657;
double x28574 = x20*x24714;
double x28575 = x5322*x8594;
double x28576 = x17368*x8745;
double x28577 = x24708*x8594;
double x28578 = x24469*x28559;
double x28579 = x12750*x25069;
double x28580 = x24726*x8773;
double x28581 = x24726*x8594;
double x28582 = x24677*x4;
double x28583 = x28248*x28582;
double x28584 = x28430*x5411;
double x28585 = x24469*x8988;
double x28586 = x12910*x25089;
double x28587 = 36*x8944;
double x28588 = 36*x28436;
double x28589 = -p9_b_dot*x25082 + p9_b_dot*x25085 - p9_i_dot*x25084 + p9_i_dot*x25086 - p9_i_dot*x25095 + p9_i_dot*x25097 + p9_i_dot*x25960 + x11151*x24752 + x12947*x19*x24756 - x13037*x19 - x1826*x28545 + x1842*x24736 - x1842*x25083 + x19861*x6690 + x24517*x28587 - x24528*x28587 + x25079*x8869 - x25081*x8874 - x25093*x8594 + x25096*x8594 - x28136*x8980 + x28138*x8980 + 36*x28432 + x28438*x5440 + x28439*x7357 - x28440*x7357 + x28513*x5440 + x28534*x390 - x28584*x5152 + x28584*x5157 - x28584 + x28585*x5152 + x28585*x5157 - x28586*x5152 + x28586 - x28588*x5152 - x28588*x5157;
double x28590 = x24759*x8995;
double x28591 = x24584*x8995;
double x28592 = x24769*x8994;
double x28593 = x13190*x19;
double x28594 = pow(p2_i, 2)*x24450;
double x28595 = x28594*x5152;
double x28596 = p2_b*x19976;
double x28597 = x429*x9015;
double x28598 = p2_b_dt*x13105;
double x28599 = p2_b*x24476;
double x28600 = x158*x28599;
double x28601 = x19976*x5152;
double x28602 = x158*x28601;
double x28603 = x13105*x24460;
double x28604 = x158*x28603;
double x28605 = p2_b*x24474;
double x28606 = x158*x28605;
double x28607 = x19976*x5157;
double x28608 = x158*x28607;
double x28609 = x13105*x5163;
double x28610 = x158*x28609;
double x28611 = x24495*x9004;
double x28612 = x13087*x6674;
double x28613 = x24469*x28612;
double x28614 = x2000*x28546;
double x28615 = x24498*x9004;
double x28616 = x1933*x25037;
double x28617 = 8*x28616;
double x28618 = x24468*x28612;
double x28619 = p2_b*x24710;
double x28620 = p2_i*x25056;
double x28621 = p2_b*x24723;
double x28622 = x22573 - x28600 - x28602 - x28604 + x28606 + x28608 + x28610 - x28611 - x28613 - x28614 + x28615 + x28617 + x28618 - x28619 - x28620 - x28621;
double x28623 = x24507*x9036;
double x28624 = x24507*x9037;
double x28625 = x24510*x9036;
double x28626 = x24510*x9037;
double x28627 = p2_b_dot*x321;
double x28628 = 2*x480;
double x28629 = x24759*x9040;
double x28630 = p2_i*x2;
double x28631 = x24810*x9030;
double x28632 = x24810*x9031;
double x28633 = x2034*x5150;
double x28634 = x158*x423;
double x28635 = p2_b*x24824*x9038;
double x28636 = p2_i*p2_i_dot;
double x28637 = p2_i_dot*x24832;
double x28638 = x24951*x8993;
double x28639 = x5200*x8995;
double x28640 = x28639*x5306;
double x28641 = x13082*x19;
double x28642 = x24961*x8993;
double x28643 = x24469*x8994;
double x28644 = x24550*x28643;
double x28645 = x24562*x28643;
double x28646 = x13097*x24708;
double x28647 = p2_b*x5200;
double x28648 = x28647*x5706;
double x28649 = x24958*x9000;
double x28650 = x28640*x5157;
double x28651 = 10*x9060;
double x28652 = x24953*x9000;
double x28653 = x28640*x5152;
double x28654 = x24956*x8995;
double x28655 = x24773*x6716;
double x28656 = x13087*x6716;
double x28657 = x24573*x28596;
double x28658 = x24973*x9000;
double x28659 = x24569*x28597;
double x28660 = x28598*x6741;
double x28661 = x24564*x8995;
double x28662 = x28661*x5572;
double x28663 = p2_i_dot*x25014;
double x28664 = x5200*x9086;
double x28665 = x24769*x9073;
double x28666 = x158*x9074;
double x28667 = x321*x9191;
double x28668 = p1_b*x19976;
double x28669 = x429*x5481;
double x28670 = p2_b*x17352;
double x28671 = x1954*x5186;
double x28672 = x210*x9015;
double x28673 = x2000*x24834;
double x28674 = x24450*x9086;
double x28675 = x24967*x9000;
double x28676 = x13097*x24726;
double x28677 = x24550*x28594;
double x28678 = x24562*x28594;
double x28679 = p1_i*p2_i;
double x28680 = x24450*x28679;
double x28681 = x13312*x19;
double x28682 = p2_b*x0;
double x28683 = x278*x28682;
double x28684 = x6*x9015;
double x28685 = p2_i_dot*x70;
double x28686 = x24564*x9086;
double x28687 = x24979*x9000;
double x28688 = p2_b_dot*x25018;
double x28689 = p1_i_dot*p2_i;
double x28690 = x28689*x5152;
double x28691 = x19*x9038;
double x28692 = x13257*x19;
double x28693 = p2_i_dot*x13260;
double x28694 = pow(p2_i_dot, 2);
double x28695 = p2_b_dot*x24888;
double x28696 = x2005*x6;
double x28697 = x6*x9217;
double x28698 = -x13164*x19 + x1957*x28695 + x22676 + x24495*x9148 + x24498*x9148 - x24528*x28693 - x24579*x9149 + x24581*x9147 - x24585*x9149 + x24586*x9147 - x24594*x28694 - x24595*x28694 + x24598*x9149 + x24781*x9152 - x24787*x9152 + x24790*x9149 - x24791*x9149 - x24882*x9220 + x24883*x9220 - x28692*x5152 + x28692 + x28696*x9091 + x28697*x9035;
double x28699 = x20097 + x28698;
double x28700 = x24621*x9116;
double x28701 = x24621*x9118;
double x28702 = x13141*x19;
double x28703 = x13142*x19;
double x28704 = x24626*x9116;
double x28705 = x24626*x9118;
double x28706 = x24629*x9120;
double x28707 = x28706*x5157;
double x28708 = x28706*x5152;
double x28709 = x24629*x9123;
double x28710 = x28709*x5157;
double x28711 = x28709*x5152;
double x28712 = x158*x28623;
double x28713 = x158*x28624;
double x28714 = x158*x28625;
double x28715 = x158*x28626;
double x28716 = x24641*x9040;
double x28717 = x13648*x28691;
double x28718 = x24645*x9040;
double x28719 = p2_b*x2003;
double x28720 = x24860*x28719;
double x28721 = x24863*x9202;
double x28722 = x24649*x9032;
double x28723 = x19976*x24659;
double x28724 = x28723*x479;
double x28725 = x24863*x9203;
double x28726 = x24649*x3941;
double x28727 = 8*x9130;
double x28728 = x13105*x28727;
double x28729 = x25285*x9133;
double x28730 = x24662*x9040;
double x28731 = x24667*x9135;
double x28732 = x24856*x9202;
double x28733 = x24856*x9203;
double x28734 = x24670*x9040;
double x28735 = x24672*x9202;
double x28736 = x24672*x9203;
double x28737 = x28717*x5152;
double x28738 = x24678*x28636;
double x28739 = x28636*x5152;
double x28740 = x24677*x28739;
double x28741 = x20002 + x22605;
double x28742 = x20020 + x22614 - x28700 - x28701 + x28702 + x28703 - x28704 - x28705 - x28707 - x28708 - x28710 - x28711 - x28712 - x28713 + x28714 + x28715 + x28716 - x28717 - x28718 - x28720 - x28721 - x28722 - x28724 - x28725 - x28726 - x28728 - x28729 + x28730 + x28731 + x28732 + x28733 - x28734 + x28735 + x28736 + x28737 + x28738 + x28740 + x28741;
double x28743 = x28639*x5413;
double x28744 = x24629*x8994;
double x28745 = x13325*x19;
double x28746 = x28647*x5450;
double x28747 = x24769*x9053;
double x28748 = x24769*x9055;
double x28749 = p1_b*x7633;
double x28750 = x24469*x7622;
double x28751 = x24468*x7622;
double x28752 = x129*x9161;
double x28753 = x24584*x9086;
double x28754 = p1_b*x1994;
double x28755 = x1858*x9208;
double x28756 = x158*x9030;
double x28757 = x24769*x9123;
double x28758 = p1_b_dt*x13105;
double x28759 = p2_b_dt*x11469;
double x28760 = 8*x28674;
double x28761 = x10*x6723;
double x28762 = p1_b*x28691*x3943;
double x28763 = x24830*x28679;
double x28764 = x2003*x24920;
double x28765 = x129*x6;
double x28766 = p2_b_dot*x24500;
double x28767 = x11469*x9130;
double x28768 = p2_b_dot*x25065;
double x28769 = x13126*x19;
double x28770 = x13317*x19;
double x28771 = x13158*x19;
double x28772 = x28088*x6714;
double x28773 = p1_i_dot*p2_i_dot;
double x28774 = p1_i*p2_i_dot;
double x28775 = x28774*x5152;
double x28776 = p2_i_dot*x25549 - x13260*x24474 + x13260*x24476 - x1957*x24946 + x20028*x5152 - x20028*x5157 - x22637 + x22638 + x24495*x9211 - x24498*x9211 - x24732*x9217 + x24738*x9217 + x25571*x28685 + x25578*x9038 + x28546*x3957 - 8*x28663 + x28688*x5928;
double x28777 = x24934*x9149;
double x28778 = x28777*x5413;
double x28779 = x24629*x9215;
double x28780 = x24939*x9149;
double x28781 = x24939*x28694;
double x28782 = p2_b_dot*x1957;
double x28783 = p2_i_dot*x9035;
double x28784 = x362*x9149;
double x28785 = -x13256*x19 + x24507*x28693 - x24510*x28693 + x24621*x9147 + x24626*x9147 - x24672*x9152 - x24856*x9152 + x24860*x28782 + x24863*x9152 - x24937*x9149 + x24943*x9150 + x24946*x28784 + x28335*x28783 - x28778*x5152 + x28778*x5157 - x28778 + x28779*x5152 + x28779*x5157 - x28780*x5152 + x28780 - x28781*x5152 - x28781*x5157;
double x28786 = x28664*x5911;
double x28787 = 32*x28674;
double x28788 = x24629*x9225;
double x28789 = x24629*x9226;
double x28790 = p1_b*x2034;
double x28791 = x25274*x9204;
double x28792 = p1_i_dot*x3976;
double x28793 = x24769*x9172;
double x28794 = x24629*x9073;
double x28795 = x24629*x9166;
double x28796 = x24458*x9086;
double x28797 = x13345*x28691;
double x28798 = p1_b*x2003;
double x28799 = x17352*x479;
double x28800 = p2_b_dot*x24584;
double x28801 = x5498*x9060;
double x28802 = x25104*x28801;
double x28803 = x13648*x25020;
double x28804 = x25296*x28679;
double x28805 = x24939*x28773;
double x28806 = x362*x9200;
double x28807 = x28639*x5330;
double x28808 = x13097*x24900;
double x28809 = 16*x28594;
double x28810 = -x13324*x19 - x20094 + x20098 + x22674 - x22675 + x24495*x9259 + x24498*x9259 + x24617*x8995 - x24667*x8995 + x24896*x8993 - x24897*x9000 + x24898*x9000 + x24899*x8993 - x24902*x9000 + x24904*x28596 + x24905*x9000 + x24906*x28597 - x24907*x9000 + x28598*x5643 + x28698 - x28807*x5152 + x28807*x5157 - x28807 - x28808*x5152 + x28808 - x28809*x5152 - x28809*x5157;
double x28811 = x24469*x9053;
double x28812 = x24469*x9055;
double x28813 = x28647*x9057;
double x28814 = 48*x28674;
double x28815 = 14*x9225;
double x28816 = 14*x9226;
double x28817 = 10*x5513;
double x28818 = x286*x9208;
double x28819 = p2_b_dot*x5200;
double x28820 = x28819*x5692;
double x28821 = p2_i_dot*x13296;
double x28822 = x5699*x9060;
double x28823 = p1_i_dot*x9228;
double x28824 = 6*x9172;
double x28825 = 10*x9073;
double x28826 = 10*x9166;
double x28827 = 14*x9120;
double x28828 = 14*x9123;
double x28829 = x24454*x9086;
double x28830 = x13293*x24927;
double x28831 = x11516*x24514;
double x28832 = x1974*x19991;
double x28833 = x24524*x450;
double x28834 = 10*x5518;
double x28835 = 6*p2_i_dot;
double x28836 = x28835*x5531;
double x28837 = p1_i_dot*x13288;
double x28838 = x17429*x1957;
double x28839 = x17368*x9035;
double x28840 = x13349*x19;
double x28841 = x19976*x4;
double x28842 = x28841*x479;
double x28843 = x13105*x9130;
double x28844 = x13286*x24514;
double x28845 = x13157*x24927;
double x28846 = x25429*x28773;
double x28847 = -x20005 - x22607 + x28638 - x28640 - x28641 + x28642 + x28644 + x28645 + x28646 + x28649 + x28650 - x28652 - x28653 - x28654 + x28657 + x28658 + x28659 + x28660 + x28662 - x28675 - x28676 - x28677 - x28678 - x28687;
double x28848 = x28777*x5306;
double x28849 = x28664*x6047;
double x28850 = 72*x28674;
double x28851 = 32*x9225;
double x28852 = 32*x9226;
double x28853 = x25030*x9040;
double x28854 = x327*x9208;
double x28855 = 12*x5513;
double x28856 = 12*x5515;
double x28857 = x28819*x5707;
double x28858 = x13341*x9060;
double x28859 = 12*x9073;
double x28860 = 12*x9166;
double x28861 = p1_i_dot*x3999;
double x28862 = 12*x9172;
double x28863 = x24469*x9215;
double x28864 = x25030*x9210;
double x28865 = 32*x9120;
double x28866 = 32*x9123;
double x28867 = x13293*x25069;
double x28868 = x3943*x5497;
double x28869 = x3943*x9191;
double x28870 = 12*x5518;
double x28871 = x13341*x5531;
double x28872 = x17063*x5322;
double x28873 = p2_b_dot*x28872;
double x28874 = x13157*x25069;
double x28875 = x28639*x5411;
double x28876 = x13097*x25089;
double x28877 = 36*x28594;
double x28878 = -p2_b_dot*x25082 + p2_b_dot*x25085 + p2_b_dot*x25103 - p2_i_dot*x25084 + p2_i_dot*x25086 - x13259*x24468 + x13259*x24469 - x13362*x19 - x1957*x25094 + x2005*x27933 + x20121 - x20122 - x22695 - x22696 + x22697 + x24495*x9272 + x24498*x9272 + x24736*x9064 + x24750*x9217 + x25079*x8993 - x25080*x9000 - x25081*x8995 - x25083*x9064 + x25087*x9000 + x25088*x8993 - x25091*x9000 - x25093*x9060 + x25096*x9060 + x25099*x28596 + x25100*x9000 + x25101*x28597 - x25102*x9000 + x25105*x9038 + x28598*x7357 + x28661*x5440 - x28875*x5152 + x28875*x5157 - x28875 - x28876*x5152 + x28876 - x28877*x5152 - x28877*x5157;
double x28879 = x24759*x9284;
double x28880 = p3_b*x24476;
double x28881 = x20127*x5152;
double x28882 = x13434*x24460;
double x28883 = x24584*x9284;
double x28884 = x24769*x9278;
double x28885 = x13514*x19;
double x28886 = p3_b*x24474;
double x28887 = x20127*x5157;
double x28888 = x13434*x5163;
double x28889 = x13419*x3943;
double x28890 = pow(p3_i, 2)*x24450;
double x28891 = x28890*x5152;
double x28892 = p3_b*x20127;
double x28893 = x458*x9290;
double x28894 = p3_b_dt*x13434;
double x28895 = x2038*x24596;
double x28896 = x24507*x9311;
double x28897 = x24507*x9312;
double x28898 = x24510*x9311;
double x28899 = x24510*x9312;
double x28900 = x24759*x9315;
double x28901 = p3_i*x2;
double x28902 = x24810*x9301;
double x28903 = x24810*x9302;
double x28904 = p3_i_dot*x9310;
double x28905 = x129*x452;
double x28906 = p3_b*x24824*x9313;
double x28907 = p3_i*p3_i_dot;
double x28908 = p3_i_dot*x24832;
double x28909 = x19*x9313;
double x28910 = x24951*x9277;
double x28911 = x5200*x9284;
double x28912 = x28911*x5306;
double x28913 = x13412*x19;
double x28914 = x24961*x9277;
double x28915 = x24469*x9278;
double x28916 = x24550*x28915;
double x28917 = x24562*x28915;
double x28918 = x13426*x24708;
double x28919 = 14*x9336;
double x28920 = x5200*x9361;
double x28921 = x28920*x5306;
double x28922 = x24958*x9293;
double x28923 = x28912*x5157;
double x28924 = x24953*x9293;
double x28925 = x28912*x5152;
double x28926 = x24956*x9284;
double x28927 = x13087*x7333;
double x28928 = x2038*x25037;
double x28929 = x13419*x7333;
double x28930 = x24484*x6714;
double x28931 = 28*p3_i_dot;
double x28932 = x24573*x28892;
double x28933 = x24973*x9293;
double x28934 = x24569*x28893;
double x28935 = x28894*x6741;
double x28936 = x24564*x9284;
double x28937 = x28936*x5572;
double x28938 = p2_i_dot*x11586;
double x28939 = x158*x9348;
double x28940 = x158*x9349;
double x28941 = x321*x9470;
double x28942 = p2_b*x20127;
double x28943 = x458*x9015;
double x28944 = p3_b*x19976;
double x28945 = x2061*x5186;
double x28946 = x429*x9290;
double x28947 = x24450*x9361;
double x28948 = x24967*x9293;
double x28949 = x13426*x24726;
double x28950 = x24550*x28890;
double x28951 = x24562*x28890;
double x28952 = x24834*x4038;
double x28953 = x18397*x5184;
double x28954 = p2_i*p3_i;
double x28955 = x24450*x28954;
double x28956 = x13618*x19;
double x28957 = p3_b*x2003;
double x28958 = p3_b*x2034;
double x28959 = x6*x9290;
double x28960 = x24564*x9361;
double x28961 = x24979*x9293;
double x28962 = x24750*x70;
double x28963 = p3_b_dot*x25018;
double x28964 = p3_b*x25563;
double x28965 = x25905*x28088;
double x28966 = p2_i_dot*p3_i;
double x28967 = x28966*x5152;
double x28968 = x24756*x28909;
double x28969 = x24769*x9420;
double x28970 = x13559*x19;
double x28971 = p3_i_dot*x13562;
double x28972 = pow(p3_i_dot, 2);
double x28973 = p3_b_dot*x24888;
double x28974 = p3_i_dot*x25987;
double x28975 = -x13488*x19 + x2064*x28973 + x22800 - x24528*x28971 - x24579*x9421 + x24581*x9419 - x24585*x9421 + x24586*x9419 - x24594*x28972 - x24595*x28972 + x24598*x9421 + x24781*x9424 - x24787*x9424 + x24790*x9421 - x24791*x9421 - x24882*x9499 + x24883*x9499 + x24890*x9422 + x28969*x5152 + x28969*x5157 - x28970*x5152 + x28970 + x28974*x9306;
double x28976 = x20243 + x28975;
double x28977 = x24621*x9389;
double x28978 = x24621*x9391;
double x28979 = x13466*x19;
double x28980 = x13467*x19;
double x28981 = x24626*x9389;
double x28982 = x24626*x9391;
double x28983 = x24629*x9393;
double x28984 = x28983*x5157;
double x28985 = x28983*x5152;
double x28986 = x24629*x9396;
double x28987 = x28986*x5157;
double x28988 = x28986*x5152;
double x28989 = x158*x28896;
double x28990 = x158*x28897;
double x28991 = x158*x28898;
double x28992 = x158*x28899;
double x28993 = x24641*x9315;
double x28994 = x13948*x28909;
double x28995 = x24645*x9315;
double x28996 = x2181*x24860;
double x28997 = p3_b*x28996;
double x28998 = x24863*x9480;
double x28999 = x24649*x9303;
double x29000 = x20127*x24659;
double x29001 = x29000*x509;
double x29002 = x24863*x9481;
double x29003 = x24649*x4021;
double x29004 = 8*x9403;
double x29005 = x13434*x29004;
double x29006 = x2047*x6;
double x29007 = x24657*x29006;
double x29008 = x24662*x9315;
double x29009 = x24667*x9407;
double x29010 = x24856*x9480;
double x29011 = x24856*x9481;
double x29012 = x24670*x9315;
double x29013 = x24672*x9480;
double x29014 = x24672*x9481;
double x29015 = x28994*x5152;
double x29016 = x24678*x28907;
double x29017 = x28907*x5152;
double x29018 = x24677*x29017;
double x29019 = x20151 + x22729;
double x29020 = x20167 + x22738 - x28977 - x28978 + x28979 + x28980 - x28981 - x28982 - x28984 - x28985 - x28987 - x28988 - x28989 - x28990 + x28991 + x28992 + x28993 - x28994 - x28995 - x28997 - x28998 - x28999 - x29001 - x29002 - x29003 - x29005 - x29007 + x29008 + x29009 + x29010 + x29011 - x29012 + x29013 + x29014 + x29015 + x29016 + x29018 + x29019;
double x29021 = x28911*x5413;
double x29022 = x24629*x9278;
double x29023 = x13629*x19;
double x29024 = x28920*x5413;
double x29025 = x24769*x9329;
double x29026 = x24769*x9331;
double x29027 = x24507*x9531;
double x29028 = x24510*x9531;
double x29029 = x13087*x4023;
double x29030 = x13419*x4023;
double x29031 = x129*x9436;
double x29032 = x24584*x9361;
double x29033 = p2_b*x9319;
double x29034 = p3_b_dot*x24579;
double x29035 = x158*x9301;
double x29036 = x158*x9302;
double x29037 = p2_b_dt*x13434;
double x29038 = p3_b_dt*x13105;
double x29039 = 8*x28947;
double x29040 = x13347*x28909;
double x29041 = x24830*x28954;
double x29042 = p3_b_dot*x24500;
double x29043 = x129*x9486;
double x29044 = x13105*x9403;
double x29045 = x13456*x19;
double x29046 = p3_b*x0;
double x29047 = x2042*x29046;
double x29048 = x158*x452;
double x29049 = x13623*x19;
double x29050 = p3_i_dot*x24528;
double x29051 = x13482*x19;
double x29052 = p2_i_dot*p3_i_dot;
double x29053 = p2_i*p3_i_dot;
double x29054 = x29053*x5152;
double x29055 = x24484*x5248;
double x29056 = 10*p3_i_dot;
double x29057 = p3_i_dot*x26541*x70 + x10*x4038*x9078 + x20176*x5152 - x20176*x5157 - x2064*x29055 - x22761 + x22762 - x24474*x9492 + x24476*x9492 + x24495*x9489 - x24498*x9489 - x25011*x9493 + x25012*x9493 - x25014*x29056 + x25015*x29056 + x26945*x9313 + x28963*x6389;
double x29058 = x24934*x9421;
double x29059 = x29058*x5413;
double x29060 = x24629*x9420;
double x29061 = x24939*x9421;
double x29062 = 8*x9336;
double x29063 = x24939*x28972;
double x29064 = p3_b_dot*x2064;
double x29065 = 8*p3_i_dot;
double x29066 = x17368*x9306;
double x29067 = x362*x9421;
double x29068 = -x13558*x19 + x24507*x28971 - x24510*x28971 + x24621*x9419 + x24626*x9419 - x24672*x9424 + x24860*x29064 + x24863*x9424 - x24937*x9421 + x24943*x9422 + x24946*x29067 - x29050*x29062 - x29059*x5152 + x29059*x5157 - x29059 + x29060*x5152 + x29060*x5157 - x29061*x5152 + x29061 - x29063*x5152 - x29063*x5157 + x29065*x29066;
double x29069 = x28920*x5911;
double x29070 = 32*x28947;
double x29071 = x24629*x9503;
double x29072 = x24629*x9504;
double x29073 = x25274*x9482;
double x29074 = x24769*x9449;
double x29075 = p3_i_dot*x3976;
double x29076 = x24629*x9443;
double x29077 = x24629*x9444;
double x29078 = x24458*x9361;
double x29079 = x13648*x28909;
double x29080 = p2_b*x452;
double x29081 = x22723*x423;
double x29082 = x28691*x29062;
double x29083 = x13948*x28691;
double x29084 = x25296*x28954;
double x29085 = x24939*x29052;
double x29086 = x362*x9478;
double x29087 = x28911*x5330;
double x29088 = x13426*x24900;
double x29089 = 16*x28890;
double x29090 = -x13628*x19 - x20240 + x20244 + x22798 - x22799 + x24495*x9534 + x24498*x9534 + x24617*x9284 - x24667*x9284 + x24896*x9277 - x24897*x9293 + x24898*x9293 + x24899*x9277 - x24902*x9293 + x24904*x28892 + x24905*x9293 + x24906*x28893 - x24907*x9293 + x28894*x5643 + x28975 - x29087*x5152 + x29087*x5157 - x29087 - x29088*x5152 + x29088 - x29089*x5152 - x29089*x5157;
double x29091 = x24469*x9329;
double x29092 = x24469*x9331;
double x29093 = x28920*x5996;
double x29094 = 48*x28947;
double x29095 = 14*x9503;
double x29096 = 14*x9504;
double x29097 = 10*x9120;
double x29098 = 10*x9123;
double x29099 = x286*x9486;
double x29100 = x25392*x9482;
double x29101 = x2094*x9060;
double x29102 = 6*x9450;
double x29103 = 10*x9444;
double x29104 = 14*x9393;
double x29105 = 14*x9396;
double x29106 = x24454*x9361;
double x29107 = x13625*x24927;
double x29108 = x13157*x24514;
double x29109 = x18572*x2181;
double x29110 = x509*x5527;
double x29111 = x19991*x2003;
double x29112 = x24524*x479;
double x29113 = 10*x9130;
double x29114 = 6*x24584;
double x29115 = x17429*x2064;
double x29116 = p3_b_dot*x0;
double x29117 = 6*p3_i_dot;
double x29118 = x13650*x19;
double x29119 = x20127*x4;
double x29120 = x13434*x9403;
double x29121 = x13591*x24514;
double x29122 = x13481*x24927;
double x29123 = x25429*x29052;
double x29124 = -x20154 - x22731 + x28910 - x28912 - x28913 + x28914 + x28916 + x28917 + x28918 + x28922 + x28923 - x28924 - x28925 - x28926 + x28932 + x28933 + x28934 + x28935 + x28937 - x28948 - x28949 - x28950 - x28951 - x28961;
double x29125 = x29058*x5306;
double x29126 = x158*x28886;
double x29127 = x158*x28887;
double x29128 = x158*x28888;
double x29129 = x158*x28880;
double x29130 = x158*x28881;
double x29131 = x158*x28882;
double x29132 = x28920*x6047;
double x29133 = 72*x28947;
double x29134 = 32*x9504;
double x29135 = x25030*x9315;
double x29136 = x327*x9486;
double x29137 = x3943*x9030;
double x29138 = 12*x9123;
double x29139 = x26154*x9482;
double x29140 = x13645*x9336;
double x29141 = x24498*x9541;
double x29142 = 8*x28928;
double x29143 = p3_i*x5536;
double x29144 = x24705*x29143;
double x29145 = x24495*x9541;
double x29146 = x24695*x29143;
double x29147 = x10776*x18397;
double x29148 = 12*x9443;
double x29149 = x3943*x9349;
double x29150 = p2_i_dot*x4083;
double x29151 = p3_i_dot*x3999;
double x29152 = x24469*x9420;
double x29153 = x25030*x9488;
double x29154 = 32*x9393;
double x29155 = 32*x9396;
double x29156 = x13625*x25069;
double x29157 = x2181*x25063;
double x29158 = x509*x5652;
double x29159 = p3_b_dot*x27885;
double x29160 = x3943*x9037;
double x29161 = x3943*x9470;
double x29162 = 12*x9130;
double x29163 = x13645*x9060;
double x29164 = x13341*x9336;
double x29165 = p3_i*x25056;
double x29166 = x20127*x3943;
double x29167 = x27885*x4083;
double x29168 = p3_b_dot*x28872;
double x29169 = p3_b*x24710;
double x29170 = x13481*x25069;
double x29171 = p3_b*x24723;
double x29172 = x28911*x5411;
double x29173 = x13426*x25089;
double x29174 = 36*x28890;
double x29175 = -p3_b_dot*x25082 + p3_b_dot*x25085 + p3_b_dot*x25103 - p3_i_dot*x25084 + p3_i_dot*x25086 - p3_i_dot*x25095 + p3_i_dot*x25097 + p3_i_dot*x25960 - x13669*x19 + x20270 - x20271 - x2064*x25094 - x22825 - x22826 + x24495*x9565 + x24498*x9565 + x24736*x9339 + x25079*x9277 - x25080*x9293 - x25081*x9284 - x25083*x9339 + x25087*x9293 + x25088*x9277 - x25091*x9293 - x25093*x9336 + x25096*x9336 + x25098*x4038 + x25099*x28892 + x25100*x9293 + x25101*x28893 - x25102*x9293 + x25105*x9313 + x28894*x7357 + x28936*x5440 - x29172*x5152 + x29172*x5157 - x29172 - x29173*x5152 + x29173 - x29174*x5152 - x29174*x5157;
double x29176 = x24759*x9580;
double x29177 = p4_b*x24476;
double x29178 = x20276*x5152;
double x29179 = x13738*x24460;
double x29180 = x24584*x9580;
double x29181 = x24769*x9572;
double x29182 = x13811*x19;
double x29183 = p4_b*x24474;
double x29184 = x20276*x5157;
double x29185 = x13738*x5163;
double x29186 = x13724*x327;
double x29187 = x2206*x24834;
double x29188 = pow(p4_i, 2)*x24450;
double x29189 = x29188*x5152;
double x29190 = p4_b*x20276;
double x29191 = x488*x9596;
double x29192 = p4_b_dt*x13738;
double x29193 = x24596*x327;
double x29194 = p4_i*x24750;
double x29195 = x24507*x9605;
double x29196 = x24507*x9606;
double x29197 = x24510*x9605;
double x29198 = x24510*x9606;
double x29199 = x24759*x9609;
double x29200 = p4_i*x2;
double x29201 = x24810*x9594;
double x29202 = x24810*x9595;
double x29203 = x540*x5536;
double x29204 = x10776*x482;
double x29205 = p4_b*x24824*x9607;
double x29206 = p4_i*p4_i_dot;
double x29207 = x24832*x9596;
double x29208 = x24951*x9571;
double x29209 = x5200*x9580;
double x29210 = x29209*x5306;
double x29211 = x13717*x19;
double x29212 = x24961*x9571;
double x29213 = x24469*x9572;
double x29214 = x24550*x29213;
double x29215 = x24562*x29213;
double x29216 = x13730*x24708;
double x29217 = 18*x9631;
double x29218 = 18*p4_i_dot;
double x29219 = x5200*x9656;
double x29220 = x29219*x5306;
double x29221 = x24958*x9587;
double x29222 = x29210*x5157;
double x29223 = x24953*x9587;
double x29224 = x29210*x5152;
double x29225 = x24956*x9580;
double x29226 = x13419*x6709;
double x29227 = x24596*x6709;
double x29228 = x13724*x6709;
double x29229 = x2164*x24484;
double x29230 = 36*p4_i_dot;
double x29231 = x24573*x29190;
double x29232 = x24973*x9587;
double x29233 = x24569*x29191;
double x29234 = x29192*x6741;
double x29235 = x24564*x9580;
double x29236 = x29235*x5572;
double x29237 = x24769*x9643;
double x29238 = x158*x9644;
double x29239 = x321*x9758;
double x29240 = p3_b*x20276;
double x29241 = x488*x9290;
double x29242 = p4_b*x20127;
double x29243 = x2161*x5186;
double x29244 = x458*x9596;
double x29245 = x24450*x9656;
double x29246 = x24967*x9587;
double x29247 = x13730*x24726;
double x29248 = x24550*x29188;
double x29249 = x24562*x29188;
double x29250 = x24834*x4121;
double x29251 = p3_i*p4_i;
double x29252 = x24450*x29251;
double x29253 = x13917*x19;
double x29254 = x2042*x9777;
double x29255 = x6*x9596;
double x29256 = x26247*x70;
double x29257 = x24564*x9656;
double x29258 = x24979*x9587;
double x29259 = p4_i_dot*x70;
double x29260 = p4_b_dot*x25018;
double x29261 = x0*x29260;
double x29262 = p4_b*x25563;
double x29263 = x28088*x29046;
double x29264 = p3_i_dot*p4_i;
double x29265 = x29264*x5152;
double x29266 = x19*x9607;
double x29267 = x24756*x29266;
double x29268 = x28088*x9777;
double x29269 = x24481*x9720;
double x29270 = x24504*x9720;
double x29271 = x13866*x19;
double x29272 = p4_i_dot*x9720;
double x29273 = pow(p4_i_dot, 2);
double x29274 = p4_b_dot*x24888;
double x29275 = x2211*x6;
double x29276 = p4_i_dot*x25987;
double x29277 = p4_b_dot_dt*x29269 + p4_b_dot_dt*x29270 - x13787*x19 + x2164*x29274 + x22931 + x24495*x9715 + x24498*x9715 + x24517*x29272 - x24528*x29272 - x24533*x29272 - x24579*x9716 - x24585*x9716 - x24594*x29273 - x24595*x29273 + x24598*x9716 + x24790*x9716 - x24791*x9716 - x24882*x9785 + x24883*x9785 - x29271*x5152 + x29271 + x29275*x9659 + x29276*x9602;
double x29278 = x20395 + x29277;
double x29279 = x24621*x9683;
double x29280 = x24621*x9685;
double x29281 = x13765*x19;
double x29282 = x13766*x19;
double x29283 = x24626*x9683;
double x29284 = x24626*x9685;
double x29285 = x24629*x9687;
double x29286 = x29285*x5157;
double x29287 = x29285*x5152;
double x29288 = x24629*x9690;
double x29289 = x29288*x5157;
double x29290 = x29288*x5152;
double x29291 = x158*x29195;
double x29292 = x158*x29196;
double x29293 = x158*x29197;
double x29294 = x158*x29198;
double x29295 = x24641*x9609;
double x29296 = x14233*x29266;
double x29297 = x24645*x9609;
double x29298 = p4_b*x2209;
double x29299 = x24860*x29298;
double x29300 = x24863*x9768;
double x29301 = x24649*x9598;
double x29302 = x20276*x24659;
double x29303 = x29302*x539;
double x29304 = x24863*x9769;
double x29305 = x24649*x4105;
double x29306 = 8*x9697;
double x29307 = x13738*x29306;
double x29308 = x25285*x9700;
double x29309 = x24662*x9609;
double x29310 = x24667*x9702;
double x29311 = x24856*x9768;
double x29312 = x24856*x9769;
double x29313 = x24670*x9609;
double x29314 = x24672*x9768;
double x29315 = x24672*x9769;
double x29316 = x29296*x5152;
double x29317 = x24678*x29206;
double x29318 = x29206*x5152;
double x29319 = x24677*x29318;
double x29320 = x20301 + x22861;
double x29321 = x20319 + x22870 - x29279 - x29280 + x29281 + x29282 - x29283 - x29284 - x29286 - x29287 - x29289 - x29290 - x29291 - x29292 + x29293 + x29294 + x29295 - x29296 - x29297 - x29299 - x29300 - x29301 - x29303 - x29304 - x29305 - x29307 - x29308 + x29309 + x29310 + x29311 + x29312 - x29313 + x29314 + x29315 + x29316 + x29317 + x29319 + x29320;
double x29322 = x29209*x5413;
double x29323 = x24629*x9572;
double x29324 = x13929*x19;
double x29325 = x29219*x5413;
double x29326 = x24769*x9624;
double x29327 = x24769*x9626;
double x29328 = x24507*x9816;
double x29329 = x24510*x9816;
double x29330 = x7712*x9279;
double x29331 = 22*x13419;
double x29332 = x7712*x9573;
double x29333 = x2140*x25037;
double x29334 = 22*x13724;
double x29335 = x129*x9731;
double x29336 = x24584*x9656;
double x29337 = x1858*x9774;
double x29338 = x158*x9594;
double x29339 = x24769*x9690;
double x29340 = p3_b_dt*x13738;
double x29341 = p4_b_dt*x13434;
double x29342 = 8*x29245;
double x29343 = x13649*x29266;
double x29344 = x24830*x29251;
double x29345 = x2209*x29046;
double x29346 = p4_i_dot*x13653;
double x29347 = p4_b_dot*x24500;
double x29348 = x129*x9774;
double x29349 = x13434*x9697;
double x29350 = p4_b_dot*x25065;
double x29351 = x13757*x19;
double x29352 = x158*x482;
double x29353 = x13921*x19;
double x29354 = x13782*x19;
double x29355 = p3_i_dot*p4_i_dot;
double x29356 = p3_i*p4_i_dot;
double x29357 = x29356*x5152;
double x29358 = 6*p4_i_dot;
double x29359 = p4_i_dot*x11586;
double x29360 = -x13887*x24474 + x13887*x24476 + x20328*x5152 - x20328*x5157 - x2164*x25109 - x22891 + x22892 - x24468*x29359 + x24469*x29359 - x24498*x9778 + x24834*x4166 - x25011*x29358 + x25012*x29358 + x25111*x9631 + x25114*x29259 + x25117*x9607 + x29260*x5572;
double x29361 = x24934*x9716;
double x29362 = x29361*x5413;
double x29363 = x24629*x9781;
double x29364 = x24939*x9716;
double x29365 = x24939*x29273;
double x29366 = p4_b_dot*x2164;
double x29367 = p4_i_dot*x9602;
double x29368 = x362*x9716;
double x29369 = -x13864*x19 + x24507*x29272 - x24510*x29272 + x24621*x9714 + x24626*x9714 - x24672*x9719 - x24856*x9719 + x24860*x29366 + x24863*x9719 - x24937*x9716 + x24943*x9717 + x24946*x29368 + x28335*x29367 - x29362*x5152 + x29362*x5157 - x29362 + x29363*x5152 + x29363*x5157 - x29364*x5152 + x29364 - x29365*x5152 - x29365*x5157;
double x29370 = x29219*x5911;
double x29371 = 32*x29245;
double x29372 = x24629*x9790;
double x29373 = x24629*x9791;
double x29374 = p3_b*x9612;
double x29375 = x25274*x9770;
double x29376 = p3_i_dot*x4140;
double x29377 = x24769*x9743;
double x29378 = x24629*x9643;
double x29379 = x24629*x9737;
double x29380 = x24458*x9656;
double x29381 = x13948*x29266;
double x29382 = p3_b*x2209;
double x29383 = p4_b_dot*x24584;
double x29384 = p3_i_dot*x9720;
double x29385 = x9313*x9631;
double x29386 = x25104*x29385;
double x29387 = x14233*x28909;
double x29388 = x25296*x29251;
double x29389 = x24939*x29355;
double x29390 = x362*x9766;
double x29391 = x29209*x5330;
double x29392 = x13730*x24900;
double x29393 = 16*x29188;
double x29394 = -x13928*x19 - x20392 + x20396 + x22929 - x22930 + x24495*x9819 + x24498*x9819 + x24617*x9580 - x24667*x9580 + x24896*x9571 - x24897*x9587 + x24898*x9587 + x24899*x9571 - x24902*x9587 + x24904*x29190 + x24905*x9587 + x24906*x29191 - x24907*x9587 + x29192*x5643 + x29277 - x29391*x5152 + x29391*x5157 - x29391 - x29392*x5152 + x29392 - x29393*x5152 - x29393*x5157;
double x29395 = x24469*x9624;
double x29396 = x24469*x9626;
double x29397 = x29219*x5996;
double x29398 = 48*x29245;
double x29399 = 14*x9790;
double x29400 = 14*x9791;
double x29401 = 10*x9393;
double x29402 = x286*x9774;
double x29403 = x25392*x9770;
double x29404 = x2094*x9631;
double x29405 = 10*x9643;
double x29406 = 10*x9737;
double x29407 = 14*x9687;
double x29408 = 14*x9690;
double x29409 = x24454*x9656;
double x29410 = x13924*x24927;
double x29411 = x13481*x24514;
double x29412 = x482*x9655;
double x29413 = x539*x5527;
double x29414 = x19991*x2181;
double x29415 = x24524*x509;
double x29416 = 10*x9403;
double x29417 = x29358*x9336;
double x29418 = p3_i_dot*x13887;
double x29419 = x17429*x2164;
double x29420 = x17368*x9602;
double x29421 = x13950*x19;
double x29422 = x20276*x4;
double x29423 = x13738*x9697;
double x29424 = x13893*x24514;
double x29425 = x13781*x24927;
double x29426 = x25429*x29355;
double x29427 = -x20304 - x22863 + x29208 - x29210 - x29211 + x29212 + x29214 + x29215 + x29216 + x29221 + x29222 - x29223 - x29224 - x29225 + x29231 + x29232 + x29233 + x29234 + x29236 - x29246 - x29247 - x29248 - x29249 - x29258;
double x29428 = x29361*x5306;
double x29429 = x158*x29183;
double x29430 = x158*x29184;
double x29431 = x158*x29185;
double x29432 = x158*x29177;
double x29433 = x158*x29178;
double x29434 = x158*x29179;
double x29435 = x29219*x6047;
double x29436 = 72*x29245;
double x29437 = x25030*x9609;
double x29438 = x327*x9774;
double x29439 = x3943*x9301;
double x29440 = 12*x9396;
double x29441 = x26154*x9770;
double x29442 = p4_i_dot*x9835;
double x29443 = x24498*x9826;
double x29444 = 8*x29333;
double x29445 = p4_i*x5536;
double x29446 = x24705*x29445;
double x29447 = x24495*x9826;
double x29448 = x24695*x29445;
double x29449 = x2206*x28546;
double x29450 = 12*x9643;
double x29451 = x3943*x9644;
double x29452 = p3_i_dot*x4166;
double x29453 = p4_i_dot*x4083;
double x29454 = x24469*x9781;
double x29455 = x25030*x9776;
double x29456 = x13924*x25069;
double x29457 = x539*x5652;
double x29458 = x3943*x9312;
double x29459 = x3943*x9758;
double x29460 = 12*x9403;
double x29461 = x13945*x9336;
double x29462 = p3_i_dot*x9835;
double x29463 = p4_i*x25056;
double x29464 = x20276*x3943;
double x29465 = x27885*x4166;
double x29466 = p4_b_dot*x28872;
double x29467 = p4_b*x24710;
double x29468 = x13781*x25069;
double x29469 = p4_b*x24723;
double x29470 = x29209*x5411;
double x29471 = x13730*x25089;
double x29472 = 36*x29188;
double x29473 = -p4_b_dot*x25082 + p4_b_dot*x25085 + p4_b_dot*x25103 - p4_i_dot*x25084 + p4_i_dot*x25086 - p4_i_dot*x25095 + p4_i_dot*x25097 + p4_i_dot*x25960 - x13967*x19 + x20351*x5695 + x20421 - x20422 - x2164*x25094 - x22954 - x22955 + x24495*x9852 + x24498*x9852 + x24736*x9634 + x25079*x9571 - x25080*x9587 - x25081*x9580 - x25083*x9634 + x25087*x9587 + x25088*x9571 - x25091*x9587 - x25093*x9631 + x25096*x9631 + x25099*x29190 + x25100*x9587 + x25101*x29191 - x25102*x9587 + x25105*x9607 + x29192*x7357 + x29235*x5440 - x29470*x5152 + x29470*x5157 - x29470 - x29471*x5152 + x29471 - x29472*x5152 - x29472*x5157;
double x29474 = x24759*x9867;
double x29475 = p5_b*x24476;
double x29476 = x20427*x5152;
double x29477 = x14034*x24460;
double x29478 = x24584*x9867;
double x29479 = x24769*x9859;
double x29480 = x14107*x19;
double x29481 = p5_b*x24474;
double x29482 = x20427*x5157;
double x29483 = x14034*x5163;
double x29484 = x14020*x8518;
double x29485 = x18547*x5184;
double x29486 = pow(p5_i, 2)*x24450;
double x29487 = x29486*x5152;
double x29488 = p5_b*x20427;
double x29489 = x518*x9883;
double x29490 = p5_b_dt*x14034;
double x29491 = p5_i*x24750;
double x29492 = x28088*x9971;
double x29493 = x24507*x9894;
double x29494 = x24507*x9895;
double x29495 = x24510*x9894;
double x29496 = x24510*x9895;
double x29497 = p5_b_dot*x154;
double x29498 = x24759*x9900;
double x29499 = p5_i*x2;
double x29500 = x24810*x9881;
double x29501 = x24810*x9882;
double x29502 = x570*x9491;
double x29503 = p5_b*x24824*x9896;
double x29504 = p5_i*p5_i_dot;
double x29505 = p5_i_dot*x24832;
double x29506 = x24951*x9858;
double x29507 = x5200*x9867;
double x29508 = x29507*x5306;
double x29509 = x14014*x19;
double x29510 = x24961*x9858;
double x29511 = x24469*x9859;
double x29512 = x24550*x29511;
double x29513 = x24562*x29511;
double x29514 = x14026*x24708;
double x29515 = x5200*x9944;
double x29516 = x29515*x5306;
double x29517 = x24958*x9874;
double x29518 = x29508*x5157;
double x29519 = 10*x9631;
double x29520 = x24953*x9874;
double x29521 = x29508*x5152;
double x29522 = x24956*x9867;
double x29523 = x13724*x8589;
double x29524 = x2245*x25037;
double x29525 = x14020*x8589;
double x29526 = x2271*x24596;
double x29527 = 44*p5_i_dot;
double x29528 = x24573*x29488;
double x29529 = x24973*x9874;
double x29530 = x24569*x29489;
double x29531 = x29490*x6741;
double x29532 = x24564*x9867;
double x29533 = x29532*x5572;
double x29534 = 20*p4_i_dot;
double x29535 = x158*x9931;
double x29536 = x158*x9932;
double x29537 = x10052*x321;
double x29538 = p4_b*x20427;
double x29539 = x518*x9596;
double x29540 = p5_b*x20276;
double x29541 = x2268*x5186;
double x29542 = x488*x9883;
double x29543 = x24450*x9944;
double x29544 = x24967*x9874;
double x29545 = x14026*x24726;
double x29546 = x24550*x29486;
double x29547 = x24562*x29486;
double x29548 = x24834*x4205;
double x29549 = p4_i*p5_i;
double x29550 = x24450*x29549;
double x29551 = x14204*x19;
double x29552 = p5_b*x2209;
double x29553 = p5_b*x9612;
double x29554 = x6*x9883;
double x29555 = p5_b*x24584;
double x29556 = x24564*x9944;
double x29557 = x24979*x9874;
double x29558 = p5_b_dot*x25018;
double x29559 = x0*x29558;
double x29560 = p5_b*x25563;
double x29561 = p4_i_dot*p5_i;
double x29562 = x29561*x5152;
double x29563 = x19*x9896;
double x29564 = x24756*x29563;
double x29565 = x10004*x24769;
double x29566 = x14150*x19;
double x29567 = p5_i_dot*x14153;
double x29568 = pow(p5_i_dot, 2);
double x29569 = p5_b_dot*x24888;
double x29570 = p5_i_dot*x25987;
double x29571 = x10003*x24581 + x10003*x24586 - x10005*x24579 - x10005*x24585 + x10005*x24598 + x10005*x24790 - x10005*x24791 + x10006*x24890 + x10008*x24781 - x10008*x24787 - x10080*x24882 + x10080*x24883 - x14082*x19 + x2271*x29569 + x23058 - x24528*x29567 - x24594*x29568 - x24595*x29568 + x29565*x5152 + x29565*x5157 - x29566*x5152 + x29566 + x29570*x9889;
double x29572 = x20542 + x29571;
double x29573 = x24621*x9973;
double x29574 = x24621*x9975;
double x29575 = x14060*x19;
double x29576 = x14061*x19;
double x29577 = x24626*x9973;
double x29578 = x24626*x9975;
double x29579 = x24629*x9977;
double x29580 = x29579*x5157;
double x29581 = x29579*x5152;
double x29582 = x24629*x9980;
double x29583 = x29582*x5157;
double x29584 = x29582*x5152;
double x29585 = x158*x29493;
double x29586 = x158*x29494;
double x29587 = x158*x29495;
double x29588 = x158*x29496;
double x29589 = x24641*x9900;
double x29590 = x14531*x29563;
double x29591 = x24645*x9900;
double x29592 = x18347*x2387;
double x29593 = x29592*x9971;
double x29594 = x10062*x24863;
double x29595 = x24649*x9885;
double x29596 = x20427*x24659;
double x29597 = x29596*x569;
double x29598 = x10063*x24863;
double x29599 = x24649*x4189;
double x29600 = 8*x9987;
double x29601 = x14034*x29600;
double x29602 = x2254*x6;
double x29603 = x24657*x29602;
double x29604 = x24662*x9900;
double x29605 = x24667*x9991;
double x29606 = x10062*x24856;
double x29607 = x10063*x24856;
double x29608 = x24670*x9900;
double x29609 = x10062*x24672;
double x29610 = x10063*x24672;
double x29611 = x29590*x5152;
double x29612 = x24678*x29504;
double x29613 = x29504*x5152;
double x29614 = x24677*x29613;
double x29615 = x20453 + x22988;
double x29616 = x20469 + x22997 - x29573 - x29574 + x29575 + x29576 - x29577 - x29578 - x29580 - x29581 - x29583 - x29584 - x29585 - x29586 + x29587 + x29588 + x29589 - x29590 - x29591 - x29593 - x29594 - x29595 - x29597 - x29598 - x29599 - x29601 - x29603 + x29604 + x29605 + x29606 + x29607 - x29608 + x29609 + x29610 + x29611 + x29612 + x29614 + x29615;
double x29617 = x29507*x5413;
double x29618 = x24629*x9859;
double x29619 = x14214*x19;
double x29620 = x29515*x5413;
double x29621 = x24769*x9912;
double x29622 = x24769*x9914;
double x29623 = x10117*x24507;
double x29624 = x10117*x24510;
double x29625 = x8029*x9573;
double x29626 = 26*x13724;
double x29627 = x8029*x9860;
double x29628 = 26*x14020;
double x29629 = x10019*x129;
double x29630 = x24584*x9944;
double x29631 = x10068*x1858;
double x29632 = p5_b_dot*x24579;
double x29633 = x158*x9881;
double x29634 = x158*x9882;
double x29635 = p4_b_dt*x14034;
double x29636 = p5_b_dt*x13738;
double x29637 = 8*x29543;
double x29638 = L*x27599;
double x29639 = x13949*x29563;
double x29640 = x24830*x29549;
double x29641 = x17063*x2249;
double x29642 = x0*x29641;
double x29643 = p5_i_dot*x13951;
double x29644 = p5_b_dot*x24500;
double x29645 = x10068*x129;
double x29646 = x13738*x9987;
double x29647 = x14052*x19;
double x29648 = x158*x512;
double x29649 = x14208*x19;
double x29650 = x14076*x19;
double x29651 = p4_i_dot*p5_i_dot;
double x29652 = p4_i*p5_i_dot;
double x29653 = x29652*x5152;
double x29654 = x24484*x5527;
double x29655 = 14*p5_i_dot;
double x29656 = p5_i_dot*x70;
double x29657 = x10071*x24495 - x10071*x24498 - x10074*x24474 + x10074*x24476 - x10075*x25011 + x10075*x25012 + x20478*x5152 - x20478*x5157 - x2271*x29654 - x23018 + x23019 + x24756*x24927*x9896 - x25014*x29655 + x25015*x29655 + x27185*x29656 + x28761*x4205 + x29558*x6714;
double x29658 = x10005*x24934;
double x29659 = x29658*x5413;
double x29660 = x10004*x24629;
double x29661 = x10005*x24939;
double x29662 = x24939*x29568;
double x29663 = p5_b_dot*x2271;
double x29664 = p5_i_dot*x9889;
double x29665 = x10005*x362;
double x29666 = x10003*x24621 + x10003*x24626 - x10005*x24937 + x10006*x24943 - x10008*x24672 - x10008*x24856 + x10008*x24863 - x14149*x19 + x24507*x29567 - x24510*x29567 + x24860*x29663 + x24946*x29665 + x28335*x29664 - x29659*x5152 + x29659*x5157 - x29659 + x29660*x5152 + x29660*x5157 - x29661*x5152 + x29661 - x29662*x5152 - x29662*x5157;
double x29667 = x29515*x5911;
double x29668 = 32*x29543;
double x29669 = x10084*x24629;
double x29670 = x10085*x24629;
double x29671 = x10064*x25274;
double x29672 = x10032*x24769;
double x29673 = p5_i_dot*x4140;
double x29674 = x10026*x24629;
double x29675 = x10027*x24629;
double x29676 = x24458*x9944;
double x29677 = x14233*x29563;
double x29678 = p4_b*x2387;
double x29679 = p5_i_dot*x9720;
double x29680 = x9607*x9919;
double x29681 = x25104*x29680;
double x29682 = x14531*x29266;
double x29683 = x25296*x29549;
double x29684 = x24939*x29651;
double x29685 = x10060*x362;
double x29686 = x29507*x5330;
double x29687 = x14026*x24900;
double x29688 = 16*x29486;
double x29689 = x10119*x24495 + x10119*x24498 - x14213*x19 - x20539 + x20543 + x23056 - x23057 + x24617*x9867 - x24667*x9867 + x24896*x9858 - x24897*x9874 + x24898*x9874 + x24899*x9858 - x24902*x9874 + x24904*x29488 + x24905*x9874 + x24906*x29489 - x24907*x9874 + x29490*x5643 + x29571 - x29686*x5152 + x29686*x5157 - x29686 - x29687*x5152 + x29687 - x29688*x5152 - x29688*x5157;
double x29690 = x24469*x9912;
double x29691 = x24469*x9914;
double x29692 = x29515*x5996;
double x29693 = 48*x29543;
double x29694 = 14*x10084;
double x29695 = 14*x10085;
double x29696 = 10*x9687;
double x29697 = 10*x9690;
double x29698 = x10068*x286;
double x29699 = x10064*x25392;
double x29700 = x2301*x9631;
double x29701 = 10*x10027;
double x29702 = 14*x9977;
double x29703 = 14*x9980;
double x29704 = x24454*x9944;
double x29705 = x14210*x24927;
double x29706 = x13781*x24514;
double x29707 = x18572*x2387;
double x29708 = x512*x9585;
double x29709 = x5527*x569;
double x29710 = x10114*x6;
double x29711 = x19991*x2209;
double x29712 = x24524*x539;
double x29713 = 10*x9697;
double x29714 = p5_i_dot*x13887;
double x29715 = x29358*x9919;
double x29716 = x17429*x2271;
double x29717 = p5_b_dot*x0;
double x29718 = 6*p5_i_dot;
double x29719 = x17368*x9889;
double x29720 = x14235*x19;
double x29721 = x20427*x4;
double x29722 = x14034*x9987;
double x29723 = x14179*x24514;
double x29724 = x14075*x24927;
double x29725 = x25429*x29651;
double x29726 = -x20456 - x22990 + x29506 - x29508 - x29509 + x29510 + x29512 + x29513 + x29514 + x29517 + x29518 - x29520 - x29521 - x29522 + x29528 + x29529 + x29530 + x29531 + x29533 - x29544 - x29545 - x29546 - x29547 - x29557;
double x29727 = x29658*x5306;
double x29728 = x158*x29481;
double x29729 = x158*x29482;
double x29730 = x158*x29483;
double x29731 = x158*x29475;
double x29732 = x158*x29476;
double x29733 = x158*x29477;
double x29734 = x29515*x6047;
double x29735 = 72*x29543;
double x29736 = x25030*x9900;
double x29737 = x10068*x327;
double x29738 = x3943*x9594;
double x29739 = 12*x9690;
double x29740 = x10064*x26154;
double x29741 = x14230*x9919;
double x29742 = x10126*x24498;
double x29743 = 8*x29524;
double x29744 = p5_i*x5536;
double x29745 = x24705*x29744;
double x29746 = x10126*x24495;
double x29747 = x24695*x29744;
double x29748 = x10776*x18547;
double x29749 = 12*x10026;
double x29750 = x3943*x9932;
double x29751 = p4_i_dot*x4250;
double x29752 = p5_i_dot*x4166;
double x29753 = x10004*x24469;
double x29754 = x10070*x25030;
double x29755 = x14210*x25069;
double x29756 = x5652*x569;
double x29757 = x3943*x9606;
double x29758 = x10052*x3943;
double x29759 = 12*x9697;
double x29760 = p5_i_dot*x9835;
double x29761 = x13945*x9919;
double x29762 = p5_i*x25056;
double x29763 = x20427*x24500;
double x29764 = x29763*x3943;
double x29765 = x27885*x4250;
double x29766 = p5_b_dot*x28872;
double x29767 = p5_b*x24710;
double x29768 = p5_b*x25063;
double x29769 = x14075*x25069;
double x29770 = p5_b*x24723;
double x29771 = x29507*x5411;
double x29772 = x14026*x25089;
double x29773 = 36*x29486;
double x29774 = -p5_b_dot*x25082 + p5_b_dot*x25085 + p5_b_dot*x25103 - p5_i_dot*x25084 + p5_i_dot*x25086 - p5_i_dot*x25095 + p5_i_dot*x25097 + p5_i_dot*x25960 + x10151*x24495 + x10151*x24498 - x14253*x19 + x20567 - x20568 - x23083 - x23084 + x24736*x9922 + x25079*x9858 - x25080*x9874 - x25081*x9867 - x25083*x9922 + x25087*x9874 + x25088*x9858 - x25091*x9874 - x25093*x9919 + x25096*x9919 + x25098*x4205 + x25099*x29488 + x25100*x9874 + x25101*x29489 - x25102*x9874 + x25105*x9896 + x29490*x7357 - 4*x29526 + x29532*x5440 - x29771*x5152 + x29771*x5157 - x29771 - x29772*x5152 + x29772 - x29773*x5152 - x29773*x5157;
double x29775 = x10165*x24759;
double x29776 = p6_b*x24476;
double x29777 = x20573*x5152;
double x29778 = x14321*x24460;
double x29779 = x10165*x24584;
double x29780 = x10157*x24769;
double x29781 = x14393*x19;
double x29782 = p6_b*x24474;
double x29783 = x20573*x5157;
double x29784 = x14321*x5163;
double x29785 = x14308*x6716;
double x29786 = x2412*x24834;
double x29787 = pow(p6_i, 2)*x24450;
double x29788 = x29787*x5152;
double x29789 = p6_b*x20573;
double x29790 = x10183*x548;
double x29791 = p6_b_dt*x14321;
double x29792 = x2346*x25037;
double x29793 = p6_b*x25563;
double x29794 = p6_b*x24501;
double x29795 = x10192*x24507;
double x29796 = x10193*x24507;
double x29797 = x10192*x24510;
double x29798 = x10193*x24510;
double x29799 = p6_i_dot*x129;
double x29800 = x10197*x24759;
double x29801 = p6_i*x2;
double x29802 = x10181*x24810;
double x29803 = x10182*x24810;
double x29804 = x5712*x600;
double x29805 = p6_b*x10194*x24824;
double x29806 = p6_i*p6_i_dot;
double x29807 = x10183*x24832;
double x29808 = x10156*x24951;
double x29809 = x10165*x5200;
double x29810 = x29809*x5306;
double x29811 = x14300*x19;
double x29812 = 26*x10218;
double x29813 = p6_i_dot*x14316;
double x29814 = x10156*x24961;
double x29815 = x10157*x24469;
double x29816 = x24550*x29815;
double x29817 = x24562*x29815;
double x29818 = x14313*x24708;
double x29819 = x10244*x5200;
double x29820 = x29819*x5306;
double x29821 = x10172*x24958;
double x29822 = x29810*x5157;
double x29823 = x10172*x24953;
double x29824 = x29810*x5152;
double x29825 = x10165*x24956;
double x29826 = 72*x14020;
double x29827 = 72*x14308;
double x29828 = x2370*x24596;
double x29829 = 52*p6_i_dot;
double x29830 = p5_i_dot*x8628;
double x29831 = p6_b*x24573;
double x29832 = x20573*x29831;
double x29833 = x10172*x24973;
double x29834 = x24569*x29790;
double x29835 = x29791*x6741;
double x29836 = x10165*x24564;
double x29837 = x29836*x5572;
double x29838 = x10230*x24769;
double x29839 = x10231*x158;
double x29840 = x10343*x321;
double x29841 = p5_b*x20573;
double x29842 = x548*x9883;
double x29843 = p6_b*x20427;
double x29844 = x2367*x5186;
double x29845 = x10183*x518;
double x29846 = x10244*x24450;
double x29847 = x10172*x24967;
double x29848 = x14313*x24726;
double x29849 = x24550*x29787;
double x29850 = x24562*x29787;
double x29851 = x24834*x4288;
double x29852 = p5_i*p6_i;
double x29853 = x24450*x29852;
double x29854 = x14499*x19;
double x29855 = x10183*x6;
double x29856 = x10244*x24564;
double x29857 = x10172*x24979;
double x29858 = p6_i*x25172;
double x29859 = p6_b_dot*x25018;
double x29860 = x0*x29859;
double x29861 = p5_i_dot*p6_i;
double x29862 = x29861*x5152;
double x29863 = x10194*x19;
double x29864 = x24756*x29863;
double x29865 = p6_b*x0;
double x29866 = x28088*x29865;
double x29867 = x10306*x24481;
double x29868 = x10306*x24504;
double x29869 = x10301*x24769;
double x29870 = x14449*x19;
double x29871 = p6_i_dot*x10306;
double x29872 = pow(p6_i_dot, 2);
double x29873 = p6_b_dot*x2370;
double x29874 = p6_i_dot*x25987;
double x29875 = p6_b_dot_dt*x29867 + p6_b_dot_dt*x29868 + x10189*x29874 - x10302*x24579 - x10302*x24585 + x10302*x24598 + x10302*x24790 - x10302*x24791 + x10303*x24890 - x10368*x24882 + x10368*x24883 - x14369*x19 + x23188 + x24517*x29871 - x24528*x29871 - x24533*x29871 - x24594*x29872 - x24595*x29872 + x24888*x29873 + x29869*x5152 + x29869*x5157 - x29870*x5152 + x29870;
double x29876 = x20693 + x29875;
double x29877 = x10269*x24621;
double x29878 = x10271*x24621;
double x29879 = x14347*x19;
double x29880 = x14348*x19;
double x29881 = x10269*x24626;
double x29882 = x10271*x24626;
double x29883 = x10273*x24629;
double x29884 = x29883*x5157;
double x29885 = x29883*x5152;
double x29886 = x10276*x24629;
double x29887 = x29886*x5157;
double x29888 = x29886*x5152;
double x29889 = x158*x29795;
double x29890 = x158*x29796;
double x29891 = x158*x29797;
double x29892 = x158*x29798;
double x29893 = x10197*x24641;
double x29894 = x14817*x29863;
double x29895 = x10197*x24645;
double x29896 = x18347*x2415;
double x29897 = x29865*x29896;
double x29898 = x10354*x24863;
double x29899 = x10185*x24649;
double x29900 = x20573*x599;
double x29901 = x24659*x29900;
double x29902 = x10355*x24863;
double x29903 = x24649*x4272;
double x29904 = 8*x10283;
double x29905 = x14321*x29904;
double x29906 = x10286*x25285;
double x29907 = x10197*x24662;
double x29908 = x10288*x24667;
double x29909 = x10354*x24856;
double x29910 = x10355*x24856;
double x29911 = x10197*x24670;
double x29912 = x10354*x24672;
double x29913 = x10355*x24672;
double x29914 = x29894*x5152;
double x29915 = x24678*x29806;
double x29916 = x29806*x5152;
double x29917 = x24677*x29916;
double x29918 = x20598 + x23118;
double x29919 = x20618 + x23127 - x29877 - x29878 + x29879 + x29880 - x29881 - x29882 - x29884 - x29885 - x29887 - x29888 - x29889 - x29890 + x29891 + x29892 + x29893 - x29894 - x29895 - x29897 - x29898 - x29899 - x29901 - x29902 - x29903 - x29905 - x29906 + x29907 + x29908 + x29909 + x29910 - x29911 + x29912 + x29913 + x29914 + x29915 + x29917 + x29918;
double x29920 = x29809*x5413;
double x29921 = x10157*x24629;
double x29922 = x14512*x19;
double x29923 = x29819*x5413;
double x29924 = x10210*x24769;
double x29925 = x10212*x24769;
double x29926 = x10401*x24507;
double x29927 = x10401*x24510;
double x29928 = x8339*x9860;
double x29929 = x14020*x7034;
double x29930 = x10158*x8339;
double x29931 = x14308*x7034;
double x29932 = x10316*x129;
double x29933 = x10244*x24584;
double x29934 = x10360*x1858;
double x29935 = x10181*x158;
double x29936 = x10276*x24769;
double x29937 = p5_b_dt*x14321;
double x29938 = p6_b_dt*x14034;
double x29939 = 8*x29846;
double x29940 = x14234*x29863;
double x29941 = x24830*x29852;
double x29942 = x2415*x9971;
double x29943 = p5_b*x29799;
double x29944 = p5_i*x10199;
double x29945 = x10283*x14034;
double x29946 = p6_b_dot*x25065;
double x29947 = x14339*x19;
double x29948 = p6_b*x2415;
double x29949 = x158*x542;
double x29950 = p6_b_dot*x24500;
double x29951 = x14504*x19;
double x29952 = x14364*x19;
double x29953 = p5_i_dot*p6_i_dot;
double x29954 = p5_i*p6_i_dot;
double x29955 = x29954*x5152;
double x29956 = 8*x10218;
double x29957 = 8*p6_i_dot;
double x29958 = 16*p6_i_dot;
double x29959 = p6_i_dot*x29256 + x10363*x24495 - x10363*x24498 + x20627*x5152 - x20627*x5157 - x23148 + x23149 - x24474*x29956 + x24476*x29956 - x25011*x29957 + x25012*x29957 - x25014*x29958 + x25015*x29958 - 16*x29828 + 16*x29851 + x29859*x5652 + 32*x29864;
double x29960 = x10302*x24934;
double x29961 = x29960*x5413;
double x29962 = x10301*x24629;
double x29963 = x10302*x24939;
double x29964 = x24939*x29872;
double x29965 = x10189*x17368;
double x29966 = x10302*x362;
double x29967 = -p6_i_dot*x24528*x29956 + x10300*x24621 + x10300*x24626 - x10302*x24937 + x10303*x24943 - x10305*x24672 + x10305*x24863 - x14447*x19 + x24507*x29871 - x24510*x29871 + x24860*x29873 + x24946*x29966 + x29957*x29965 - x29961*x5152 + x29961*x5157 - x29961 + x29962*x5152 + x29962*x5157 - x29963*x5152 + x29963 - x29964*x5152 - x29964*x5157;
double x29968 = x29819*x5911;
double x29969 = 32*x29846;
double x29970 = x10373*x24629;
double x29971 = x10374*x24629;
double x29972 = p5_b*x10399;
double x29973 = x10356*x25274;
double x29974 = x10327*x24769;
double x29975 = x10328*x24769;
double x29976 = x10230*x24629;
double x29977 = x10322*x24629;
double x29978 = x10244*x24458;
double x29979 = x14531*x29863;
double x29980 = p6_b_dot*x24584;
double x29981 = p5_i_dot*x10306;
double x29982 = p6_b_dot*x2271;
double x29983 = x20573*x24659;
double x29984 = x29563*x29956;
double x29985 = x14817*x29563;
double x29986 = x25296*x29852;
double x29987 = x24939*x29953;
double x29988 = x10352*x362;
double x29989 = x29809*x5330;
double x29990 = x14313*x24900;
double x29991 = 16*x29787;
double x29992 = x10156*x24896 + x10156*x24899 + x10165*x24617 - x10165*x24667 - x10172*x24897 + x10172*x24898 - x10172*x24902 + x10172*x24905 - x10172*x24907 + x10404*x24495 + x10404*x24498 - x14511*x19 - x20690 + x20694 + x23186 - x23187 + x24904*x29789 + x24906*x29790 + x29791*x5643 + x29875 - x29989*x5152 + x29989*x5157 - x29989 - x29990*x5152 + x29990 - x29991*x5152 - x29991*x5157;
double x29993 = x10210*x24469;
double x29994 = x10212*x24469;
double x29995 = x29819*x5996;
double x29996 = 48*x29846;
double x29997 = 14*x10373;
double x29998 = 14*x10374;
double x29999 = 10*x9977;
double x30000 = x10360*x286;
double x30001 = x10356*x25392;
double x30002 = p6_b*x9902;
double x30003 = x10218*x2301;
double x30004 = 10*x10230;
double x30005 = 10*x10322;
double x30006 = 14*x10273;
double x30007 = 14*x10276;
double x30008 = x10244*x24454;
double x30009 = x14507*x24927;
double x30010 = x14075*x24514;
double x30011 = x10241*x542;
double x30012 = x5527*x599;
double x30013 = x19991*x2387;
double x30014 = x24524*x569;
double x30015 = 10*x9987;
double x30016 = p5_i_dot*x14470;
double x30017 = x17429*x2370;
double x30018 = p6_i_dot*x17368;
double x30019 = x14533*x19;
double x30020 = x20573*x4;
double x30021 = x10283*x14321;
double x30022 = x14475*x24514;
double x30023 = x14363*x24927;
double x30024 = x25429*x29953;
double x30025 = -x20601 - x23120 + x29808 - x29810 - x29811 + x29814 + x29816 + x29817 + x29818 + x29821 + x29822 - x29823 - x29824 - x29825 + x29832 + x29833 + x29834 + x29835 + x29837 - x29847 - x29848 - x29849 - x29850 - x29857;
double x30026 = x29960*x5306;
double x30027 = x158*x29782;
double x30028 = x158*x29783;
double x30029 = x158*x29784;
double x30030 = x158*x29776;
double x30031 = x158*x29777;
double x30032 = x158*x29778;
double x30033 = x29819*x6047;
double x30034 = 72*x29846;
double x30035 = x10197*x25030;
double x30036 = x10360*x327;
double x30037 = x3943*x9881;
double x30038 = 12*x9980;
double x30039 = x10356*x26154;
double x30040 = p6_i_dot*x10420;
double x30041 = x10411*x24498;
double x30042 = 8*x29792;
double x30043 = p6_i*x5536;
double x30044 = x24705*x30043;
double x30045 = x10411*x24495;
double x30046 = x24695*x30043;
double x30047 = x2412*x28546;
double x30048 = 12*x10230;
double x30049 = x10231*x3943;
double x30050 = 12*x10327;
double x30051 = p6_i_dot*x4250;
double x30052 = x10301*x24469;
double x30053 = x10362*x25030;
double x30054 = x14507*x25069;
double x30055 = x5652*x599;
double x30056 = x18498*x2249;
double x30057 = x3943*x9895;
double x30058 = x10343*x3943;
double x30059 = 12*x9987;
double x30060 = x14528*x9919;
double x30061 = p5_i_dot*x10420;
double x30062 = p6_i*x25056;
double x30063 = p6_b*x24710;
double x30064 = x10218*x9896;
double x30065 = p6_b*x25063;
double x30066 = x14363*x25069;
double x30067 = p6_b*x24723;
double x30068 = x29809*x5411;
double x30069 = x14313*x25089;
double x30070 = 36*x29787;
double x30071 = -p6_b_dot*x25082 + p6_b_dot*x25085 + p6_b_dot*x25103 - p6_i_dot*x25084 + p6_i_dot*x25086 - p6_i_dot*x25095 + p6_i_dot*x25097 + p6_i_dot*x25960 + x10156*x25079 + x10156*x25088 - x10165*x25081 - x10172*x25080 + x10172*x25087 - x10172*x25091 + x10172*x25100 - x10172*x25102 + x10194*x25105 - x10218*x25093 + x10218*x25096 + x10221*x24736 - x10221*x25083 + x10435*x24495 + x10435*x24498 - x14550*x19 + x20718 - x20719 - x23212 - x23213 + x25098*x4288 + x25099*x29789 + x25101*x29790 + x29791*x7357 - 4*x29828 + x29836*x5440 - x30068*x5152 + x30068*x5157 - x30068 - x30069*x5152 + x30069 - x30070*x5152 - x30070*x5157;
double x30072 = x10450*x24759;
double x30073 = p7_b*x24476;
double x30074 = x20724*x5152;
double x30075 = x14616*x24460;
double x30076 = x10450*x24584;
double x30077 = x10442*x24769;
double x30078 = x14690*x19;
double x30079 = p7_b*x24474;
double x30080 = x20724*x5157;
double x30081 = x14616*x5163;
double x30082 = 28*x14604;
double x30083 = x18698*x5184;
double x30084 = pow(p7_i, 2)*x24450;
double x30085 = x30084*x5152;
double x30086 = x20724*x24603;
double x30087 = x10468*x578;
double x30088 = p7_b_dt*x14616;
double x30089 = x2449*x25037;
double x30090 = p7_b*x25563;
double x30091 = p7_i*x24750;
double x30092 = L*x30091;
double x30093 = p7_b*x0;
double x30094 = x28088*x30093;
double x30095 = x10478*x24507;
double x30096 = x10479*x24507;
double x30097 = x10478*x24510;
double x30098 = x10479*x24510;
double x30099 = x10484*x24759;
double x30100 = p7_i*x2;
double x30101 = x10466*x24810;
double x30102 = x10467*x24810;
double x30103 = x10073*x630;
double x30104 = 14*x572;
double x30105 = p7_b*x10480*x24824;
double x30106 = p7_i*p7_i_dot;
double x30107 = p7_i_dot*x24832;
double x30108 = x10441*x24951;
double x30109 = x10450*x5200;
double x30110 = x30109*x5306;
double x30111 = x14597*x19;
double x30112 = x10441*x24961;
double x30113 = x10442*x24469;
double x30114 = x24550*x30113;
double x30115 = x24562*x30113;
double x30116 = x14609*x24708;
double x30117 = 14*x10218;
double x30118 = x10529*x5200;
double x30119 = x30118*x5306;
double x30120 = x14630*x24507;
double x30121 = x30110*x5157;
double x30122 = x14630*x24510;
double x30123 = x30110*x5152;
double x30124 = x10450*x24956;
double x30125 = 84*x14308;
double x30126 = 84*x14604;
double x30127 = x24596*x2475;
double x30128 = 60*p7_i_dot;
double x30129 = 28*p6_i_dot;
double x30130 = p7_b*x24573;
double x30131 = x20724*x30130;
double x30132 = x10457*x24973;
double x30133 = x24569*x30087;
double x30134 = x30088*x6741;
double x30135 = x10450*x24564;
double x30136 = x30135*x5572;
double x30137 = x10515*x158;
double x30138 = x10516*x158;
double x30139 = x10636*x321;
double x30140 = x20724*x4;
double x30141 = p6_b*x30140;
double x30142 = x10183*x578;
double x30143 = p7_b*x20573;
double x30144 = x30143*x4;
double x30145 = x2472*x5186;
double x30146 = x10468*x548;
double x30147 = x10529*x24450;
double x30148 = x10457*x24967;
double x30149 = x14609*x24726;
double x30150 = x24550*x30084;
double x30151 = x24562*x30084;
double x30152 = x24834*x4370;
double x30153 = p6_i*p7_i;
double x30154 = x24450*x30153;
double x30155 = x14790*x19;
double x30156 = p7_b*x2415;
double x30157 = p7_b*x10399;
double x30158 = x10468*x6;
double x30159 = x10529*x24564;
double x30160 = x10457*x24979;
double x30161 = p7_b_dot*x0;
double x30162 = x25018*x30161;
double x30163 = p6_i_dot*p7_i;
double x30164 = x30163*x5152;
double x30165 = x10480*x19;
double x30166 = x24756*x30165;
double x30167 = x10587*x24769;
double x30168 = x14734*x19;
double x30169 = p7_i_dot*x24528;
double x30170 = pow(p7_i_dot, 2);
double x30171 = p7_b_dot*x17063;
double x30172 = x2475*x5680;
double x30173 = p7_i_dot*x25987;
double x30174 = x10474*x30173 + x10586*x24581 + x10586*x24586 - x10588*x24579 - x10588*x24585 + x10588*x24598 + x10588*x24790 - x10588*x24791 + x10589*x24890 + x10591*x24781 - x10591*x24787 - x10666*x24882 + x10666*x24883 - x14665*x19 - x14737*x30169 + x23316 - x24594*x30170 - x24595*x30170 + x30167*x5152 + x30167*x5157 - x30168*x5152 + x30168 + x30171*x30172;
double x30175 = x20841 + x30174;
double x30176 = x10556*x24621;
double x30177 = x10558*x24621;
double x30178 = x14643*x19;
double x30179 = x14644*x19;
double x30180 = x10556*x24626;
double x30181 = x10558*x24626;
double x30182 = x10560*x24629;
double x30183 = x30182*x5157;
double x30184 = x30182*x5152;
double x30185 = x10563*x24629;
double x30186 = x30185*x5157;
double x30187 = x30185*x5152;
double x30188 = x158*x30095;
double x30189 = x158*x30096;
double x30190 = x158*x30097;
double x30191 = x158*x30098;
double x30192 = x10484*x24641;
double x30193 = x15114*x30165;
double x30194 = x10484*x24645;
double x30195 = x18347*x2592;
double x30196 = x30093*x30195;
double x30197 = x10646*x24863;
double x30198 = x10470*x24649;
double x30199 = x5336*x629;
double x30200 = x30140*x30199;
double x30201 = x10647*x24863;
double x30202 = x24649*x4355;
double x30203 = 8*x10570;
double x30204 = x14616*x30203;
double x30205 = x2458*x6;
double x30206 = x24657*x30205;
double x30207 = x10484*x24662;
double x30208 = x10574*x24667;
double x30209 = x10646*x24856;
double x30210 = x10647*x24856;
double x30211 = x10484*x24670;
double x30212 = x10646*x24672;
double x30213 = x10647*x24672;
double x30214 = x30193*x5152;
double x30215 = x24678*x30106;
double x30216 = x30106*x5152;
double x30217 = x24677*x30216;
double x30218 = x20750 + x23246;
double x30219 = x20766 + x23255 - x30176 - x30177 + x30178 + x30179 - x30180 - x30181 - x30183 - x30184 - x30186 - x30187 - x30188 - x30189 + x30190 + x30191 + x30192 - x30193 - x30194 - x30196 - x30197 - x30198 - x30200 - x30201 - x30202 - x30204 - x30206 + x30207 + x30208 + x30209 + x30210 - x30211 + x30212 + x30213 + x30214 + x30215 + x30217 + x30218;
double x30220 = x30109*x5413;
double x30221 = x10442*x24629;
double x30222 = x14798*x19;
double x30223 = x30118*x5413;
double x30224 = x10496*x24769;
double x30225 = x10498*x24769;
double x30226 = x10700*x24507;
double x30227 = x10700*x24510;
double x30228 = 34*x14308;
double x30229 = 34*x14604;
double x30230 = p7_b*x30140;
double x30231 = x30087*x6;
double x30232 = x10603*x129;
double x30233 = x10529*x24584;
double x30234 = x10652*x1858;
double x30235 = p7_b_dot*x24579;
double x30236 = x14728*x24510;
double x30237 = x10466*x158;
double x30238 = x10467*x158;
double x30239 = p6_b_dt*x14616;
double x30240 = p7_b_dt*x14321;
double x30241 = 8*x30147;
double x30242 = x14532*x30165;
double x30243 = x24830*x30153;
double x30244 = x17063*x2453;
double x30245 = p7_i_dot*x24517;
double x30246 = p7_b_dot*x24500;
double x30247 = x10652*x129;
double x30248 = x10570*x14321;
double x30249 = x14634*x19;
double x30250 = x158*x572;
double x30251 = x14794*x19;
double x30252 = x14659*x19;
double x30253 = p6_i_dot*p7_i_dot;
double x30254 = p6_i*p7_i_dot;
double x30255 = x30254*x5152;
double x30256 = 9*x10503;
double x30257 = x24484*x5429;
double x30258 = 18*p7_i_dot;
double x30259 = p7_i_dot*x70;
double x30260 = x10480*x24756;
double x30261 = x10655*x24495 - x10655*x24498 - x10660*x25011 + x10660*x25012 + x20776*x5152 - x20776*x5157 - x23277 + x23278 - x24474*x30256 + x24476*x30256 - x2475*x30257 - x25014*x30258 + x25015*x30258 + x25089*x30260 + x25852*x30171 + x27850*x30259 + 18*x30152;
double x30262 = x10588*x24934;
double x30263 = x30262*x5413;
double x30264 = p7_i_dot*x24510;
double x30265 = p7_i_dot*x24507;
double x30266 = x10587*x24629;
double x30267 = x10588*x24939;
double x30268 = x24939*x30170;
double x30269 = p7_i_dot*x10474;
double x30270 = x10588*x362;
double x30271 = x10586*x24621 + x10586*x24626 - x10588*x24937 + x10589*x24943 - x10591*x24672 - x10591*x24856 + x10591*x24863 - x14733*x19 - x14737*x30264 + x14737*x30265 + x18347*x2475*x30161 + x24946*x30270 + x28335*x30269 - x30263*x5152 + x30263*x5157 - x30263 + x30266*x5152 + x30266*x5157 - x30267*x5152 + x30267 - x30268*x5152 - x30268*x5157;
double x30272 = p7_b_dot_dt*x24481;
double x30273 = x30118*x5911;
double x30274 = 32*x30147;
double x30275 = x10670*x24629;
double x30276 = x10671*x24629;
double x30277 = x10648*x25274;
double x30278 = p7_b_dot_dt*x24504;
double x30279 = x10616*x24769;
double x30280 = x10617*x24769;
double x30281 = x10610*x24629;
double x30282 = x10611*x24629;
double x30283 = x10529*x24458;
double x30284 = x14817*x30165;
double x30285 = p6_b_dot*x17063;
double x30286 = x2370*x30171;
double x30287 = x30140*x599;
double x30288 = x14765*x25104;
double x30289 = x15114*x29863;
double x30290 = x25296*x30153;
double x30291 = x24939*x30253;
double x30292 = p7_i_dot*x24533;
double x30293 = x10644*x362;
double x30294 = x30109*x5330;
double x30295 = x14609*x24900;
double x30296 = 16*x30084;
double x30297 = x10441*x24896 + x10441*x24899 + x10450*x24617 - x10450*x24667 - x10457*x24897 + x10457*x24898 - x10457*x24902 + x10457*x24905 - x10457*x24907 + x10703*x24495 + x10703*x24498 - x14797*x19 - x20838 + x20842 + x23314 - x23315 + x30088*x5643 + x30174 + x30230*x5928 + 16*x30231 - x30294*x5152 + x30294*x5157 - x30294 - x30295*x5152 + x30295 - x30296*x5152 - x30296*x5157;
double x30298 = x10496*x24469;
double x30299 = x10498*x24469;
double x30300 = x30118*x5996;
double x30301 = 48*x30147;
double x30302 = 14*x10670;
double x30303 = 14*x10671;
double x30304 = 10*x10273;
double x30305 = 10*x10276;
double x30306 = x10648*x25392;
double x30307 = x10218*x2505;
double x30308 = 10*x10611;
double x30309 = 14*x10560;
double x30310 = 14*x10563;
double x30311 = x10529*x24454;
double x30312 = x14796*x24927;
double x30313 = x14363*x24514;
double x30314 = x18572*x2592;
double x30315 = x10170*x6;
double x30316 = x5527*x629;
double x30317 = x10696*x6;
double x30318 = x19991*x2415;
double x30319 = 10*x10283;
double x30320 = x17429*x2475;
double x30321 = 6*p7_i_dot;
double x30322 = 6*x10474;
double x30323 = x14819*x19;
double x30324 = x10570*x14616;
double x30325 = x14763*x24514;
double x30326 = x10444*x30165;
double x30327 = x25429*x30253;
double x30328 = -x20753 - x23248 + x30108 - x30110 - x30111 + x30112 + x30114 + x30115 + x30116 + x30120 + x30121 - x30122 - x30123 - x30124 + x30131 + x30132 + x30133 + x30134 + x30136 - x30148 - x30149 - x30150 - x30151 - x30160;
double x30329 = x30262*x5306;
double x30330 = x158*x30079;
double x30331 = x158*x30080;
double x30332 = x158*x30081;
double x30333 = x158*x30073;
double x30334 = x158*x30074;
double x30335 = x158*x30075;
double x30336 = x30118*x6047;
double x30337 = 72*x30147;
double x30338 = x10484*x25030;
double x30339 = x10652*x327;
double x30340 = x10181*x3943;
double x30341 = 12*x10276;
double x30342 = x10648*x26154;
double x30343 = x10503*x14814;
double x30344 = x10710*x24498;
double x30345 = 8*x30089;
double x30346 = p7_i*x5536;
double x30347 = x24705*x30346;
double x30348 = p7_b*x29799;
double x30349 = x10710*x24495;
double x30350 = x24695*x30346;
double x30351 = x10776*x18698;
double x30352 = 12*x10610;
double x30353 = x10516*x3943;
double x30354 = p6_i_dot*x4414;
double x30355 = 12*x10617;
double x30356 = x10587*x24469;
double x30357 = x10654*x25030;
double x30358 = x14796*x25069;
double x30359 = x5652*x629;
double x30360 = x10193*x3943;
double x30361 = x10636*x3943;
double x30362 = 12*x10283;
double x30363 = x10503*x14528;
double x30364 = p7_i*x25056;
double x30365 = x30140*x3943;
double x30366 = x2475*x5322;
double x30367 = x27885*x4414;
double x30368 = x10474*x17368;
double x30369 = p7_b*x24710;
double x30370 = p7_b*x25063;
double x30371 = x14658*x25069;
double x30372 = p7_b*x24723;
double x30373 = x30109*x5411;
double x30374 = x14609*x25089;
double x30375 = 36*x30084;
double x30376 = -p7_b_dot*x25082 + p7_b_dot*x25085 + p7_b_dot*x25103 - p7_i_dot*x25084 + p7_i_dot*x25086 - p7_i_dot*x25095 + p7_i_dot*x25097 + p7_i_dot*x25960 + x10441*x25079 + x10441*x25088 - x10450*x25081 - x10457*x25080 + x10457*x25087 - x10457*x25091 + x10457*x25100 - x10457*x25102 - x10503*x25093 + x10503*x25096 + x10506*x24736 - x10506*x25083 + x10734*x24495 + x10734*x24498 - x14839*x19 + x20866 - x20867 - x23341 - x23342 + x25098*x4370 + x30088*x7357 - 4*x30127 + x30135*x5440 + 8*x30166 + x30230*x5440 + 36*x30231 - x30373*x5152 + x30373*x5157 - x30373 - x30374*x5152 + x30374 - x30375*x5152 - x30375*x5157;
double x30377 = x10749*x24759;
double x30378 = p8_b*x24476;
double x30379 = x20872*x5152;
double x30380 = x14905*x24460;
double x30381 = x10749*x24584;
double x30382 = x10740*x24769;
double x30383 = x14978*x19;
double x30384 = p8_b*x24474;
double x30385 = x20872*x5157;
double x30386 = x14905*x5163;
double x30387 = x14893*x27506;
double x30388 = x24834*x2617;
double x30389 = pow(p8_i, 2)*x24450;
double x30390 = x30389*x5152;
double x30391 = x20872*x4;
double x30392 = p8_b*x30391;
double x30393 = x10766*x6;
double x30394 = x30393*x608;
double x30395 = p8_b_dt*x14905;
double x30396 = x25037*x2551;
double x30397 = x10857*x24709;
double x30398 = x10777*x24507;
double x30399 = x10778*x24507;
double x30400 = x10777*x24510;
double x30401 = x10778*x24510;
double x30402 = 8*x633;
double x30403 = x10783*x24759;
double x30404 = p8_i*x2;
double x30405 = x10764*x24810;
double x30406 = x10765*x24810;
double x30407 = x12284*x634;
double x30408 = p8_b*x10779*x24824;
double x30409 = p8_i*p8_i_dot;
double x30410 = x10766*x24832;
double x30411 = x10739*x24951;
double x30412 = x10749*x5200;
double x30413 = x30412*x5306;
double x30414 = x14886*x19;
double x30415 = 34*x10804;
double x30416 = x10739*x24961;
double x30417 = x10740*x24469;
double x30418 = x24550*x30417;
double x30419 = x24562*x30417;
double x30420 = x14898*x24708;
double x30421 = 16*x10503;
double x30422 = 16*p7_i_dot;
double x30423 = x10833*x5200;
double x30424 = x30423*x5306;
double x30425 = x14919*x24507;
double x30426 = x30413*x5157;
double x30427 = x14919*x24510;
double x30428 = x30413*x5152;
double x30429 = x10749*x24956;
double x30430 = 96*x14604;
double x30431 = 96*x14893;
double x30432 = x2555*x28155;
double x30433 = p8_i_dot*x8628;
double x30434 = 68*x30433;
double x30435 = 32*p7_i_dot;
double x30436 = p8_b*x24573;
double x30437 = x20872*x30436;
double x30438 = x10756*x24973;
double x30439 = x10766*x24569;
double x30440 = x30439*x608;
double x30441 = x30395*x6741;
double x30442 = x10749*x24564;
double x30443 = x30442*x5572;
double x30444 = x10816*x24769;
double x30445 = x10817*x158;
double x30446 = x10938*x321;
double x30447 = p7_b*x30391;
double x30448 = x10468*x608;
double x30449 = x30448*x6;
double x30450 = p8_b*x20724;
double x30451 = x30450*x4;
double x30452 = x2572*x5186;
double x30453 = x30393*x578;
double x30454 = x10833*x24450;
double x30455 = x10756*x24967;
double x30456 = x14898*x24726;
double x30457 = x24550*x30389;
double x30458 = x24562*x30389;
double x30459 = x24834*x2575;
double x30460 = p7_i*p8_i;
double x30461 = x24450*x30460;
double x30462 = x15082*x19;
double x30463 = x10857*x158;
double x30464 = x10833*x24564;
double x30465 = x10756*x24979;
double x30466 = p8_i_dot*x70;
double x30467 = p8_i*x24750;
double x30468 = x11092*x25018;
double x30469 = p7_i_dot*p8_i;
double x30470 = x30469*x5152;
double x30471 = x10779*x19;
double x30472 = x24756*x30471;
double x30473 = x10857*x28088;
double x30474 = p8_b_dot_dt*x24481;
double x30475 = p8_b_dot_dt*x24504;
double x30476 = x10892*x24769;
double x30477 = x15030*x19;
double x30478 = p8_i_dot*x24528;
double x30479 = pow(p8_i_dot, 2);
double x30480 = x0*x2555;
double x30481 = x17063*x30480;
double x30482 = p8_i_dot*x24517;
double x30483 = x10772*x5540;
double x30484 = p8_i_dot*x24533;
double x30485 = -x10893*x24579 - x10893*x24585 + x10893*x24598 + x10893*x24790 - x10893*x24791 + x10894*x24890 + x10897*x30474 + x10897*x30475 - x10897*x30478 + x10897*x30481 + x10897*x30482 - x10897*x30484 - x10965*x24882 + x10965*x24883 - x14954*x19 + x21103*x30483 + x23447 - x24594*x30479 - x24595*x30479 + x30476*x5152 + x30476*x5157 - x30477*x5152 + x30477;
double x30486 = x20991 + x30485;
double x30487 = x10859*x24621;
double x30488 = x10861*x24621;
double x30489 = x14932*x19;
double x30490 = x14933*x19;
double x30491 = x10859*x24626;
double x30492 = x10861*x24626;
double x30493 = x10863*x24629;
double x30494 = x30493*x5157;
double x30495 = x30493*x5152;
double x30496 = x10866*x24629;
double x30497 = x30496*x5157;
double x30498 = x30496*x5152;
double x30499 = x158*x30398;
double x30500 = x158*x30399;
double x30501 = x158*x30400;
double x30502 = x158*x30401;
double x30503 = x10783*x24641;
double x30504 = x15298*x30471;
double x30505 = x10783*x24645;
double x30506 = x18347*x2669;
double x30507 = x10857*x30506;
double x30508 = x10949*x24863;
double x30509 = x10768*x24649;
double x30510 = x30391*x633;
double x30511 = x30510*x5336;
double x30512 = x10950*x24863;
double x30513 = x24649*x4436;
double x30514 = 8*x10873;
double x30515 = x14905*x30514;
double x30516 = x10933*x25285;
double x30517 = x10783*x24662;
double x30518 = x10879*x24667;
double x30519 = x10785*x24528;
double x30520 = p8_b*x30519;
double x30521 = x24528*x30402;
double x30522 = p8_i*x30521;
double x30523 = x10783*x24670;
double x30524 = x10949*x24672;
double x30525 = x10950*x24672;
double x30526 = x30504*x5152;
double x30527 = x24678*x30409;
double x30528 = x30409*x5152;
double x30529 = x24677*x30528;
double x30530 = x20894 + x23376;
double x30531 = x20914 + x23385 - x30487 - x30488 + x30489 + x30490 - x30491 - x30492 - x30494 - x30495 - x30497 - x30498 - x30499 - x30500 + x30501 + x30502 + x30503 - x30504 - x30505 - x30507 - x30508 - x30509 - x30511 - x30512 - x30513 - x30515 - x30516 + x30517 + x30518 + x30520 + x30522 - x30523 + x30524 + x30525 + x30526 + x30527 + x30529 + x30530;
double x30532 = x30412*x5413;
double x30533 = x10740*x24629;
double x30534 = x15094*x19;
double x30535 = x30423*x5413;
double x30536 = x10796*x24769;
double x30537 = x10798*x24769;
double x30538 = x10997*x24507;
double x30539 = x10997*x24510;
double x30540 = 38*x14604;
double x30541 = 38*x14893;
double x30542 = x10909*x129;
double x30543 = x10833*x24584;
double x30544 = x10956*x1858;
double x30545 = x15022*x24510;
double x30546 = x10764*x158;
double x30547 = x10866*x24769;
double x30548 = p7_b_dt*x14905;
double x30549 = p8_b_dt*x14616;
double x30550 = 8*x30454;
double x30551 = 38*L;
double x30552 = x14818*x30471;
double x30553 = x24830*x30460;
double x30554 = x10956*x129;
double x30555 = x10873*x14616;
double x30556 = x10781*x6;
double x30557 = x14923*x19;
double x30558 = x17063*x2555;
double x30559 = x158*x602;
double x30560 = x15086*x19;
double x30561 = x14949*x19;
double x30562 = p7_i_dot*p8_i_dot;
double x30563 = p7_i*p8_i_dot;
double x30564 = x30563*x5152;
double x30565 = 10*x10804;
double x30566 = 20*x30433;
double x30567 = x10959*x24495 - x10959*x24498 - x10961*x25011 + x10961*x25012 + x20923*x5152 - x20923*x5157 - x23407 + x23408 - x24468*x30566 + x24469*x30566 - x24474*x30565 + x24476*x30565 + x25897*x30466 - 20*x30432 + 20*x30459 + 40*x30468 + 40*x30472;
double x30568 = x10893*x24934;
double x30569 = x30568*x5413;
double x30570 = p8_i_dot*x24510;
double x30571 = p8_i_dot*x24507;
double x30572 = x10892*x24629;
double x30573 = x10893*x24939;
double x30574 = x24939*x30479;
double x30575 = p8_i_dot*x10772;
double x30576 = x10893*x362;
double x30577 = x10804*x18347*x30480 + x10891*x24621 + x10891*x24626 - x10893*x24937 + x10894*x24943 - x10896*x24672 - x10896*x24856 + x10896*x24863 - x10897*x30570 + x10897*x30571 - x15028*x19 + x24946*x30576 + x28335*x30575 - x30569*x5152 + x30569*x5157 - x30569 + x30572*x5152 + x30572*x5157 - x30573*x5152 + x30573 - x30574*x5152 - x30574*x5157;
double x30578 = x30423*x5911;
double x30579 = 32*x30454;
double x30580 = 16*x10857;
double x30581 = 16*x30393;
double x30582 = x10970*x24629;
double x30583 = x10971*x24629;
double x30584 = p7_b*x10994;
double x30585 = x10952*x25274;
double x30586 = x10920*x24769;
double x30587 = x10921*x24769;
double x30588 = x10816*x24629;
double x30589 = x10915*x24629;
double x30590 = x10833*x24458;
double x30591 = x15114*x30471;
double x30592 = x30140*x633;
double x30593 = p8_b_dot*x24584;
double x30594 = x10503*x30558;
double x30595 = p8_b_dot*x17063;
double x30596 = x10480*x10804;
double x30597 = x25104*x30596;
double x30598 = x15298*x30165;
double x30599 = x25296*x30460;
double x30600 = x24939*x30562;
double x30601 = x10947*x362;
double x30602 = x30412*x5330;
double x30603 = x14898*x24900;
double x30604 = 16*x10756;
double x30605 = 16*x30389;
double x30606 = x10739*x24896 + x10739*x24899 + x10749*x24617 - x10749*x24667 - x10756*x24907 + x11000*x24495 + x11000*x24498 - x15093*x19 + x15095*x24507 - x15095*x24510 - x20988 + x20992 + x23445 - x23446 + x24517*x30604 - x24528*x30604 + x30391*x30580 + x30395*x5643 + x30485 + x30581*x608 - x30602*x5152 + x30602*x5157 - x30602 - x30603*x5152 + x30603 - x30605*x5152 - x30605*x5157;
double x30607 = x10796*x24469;
double x30608 = x10798*x24469;
double x30609 = x30423*x5996;
double x30610 = 48*x30454;
double x30611 = 14*x10970;
double x30612 = 14*x10971;
double x30613 = 10*x10560;
double x30614 = x10956*x286;
double x30615 = x10949*x24510;
double x30616 = x10952*x25392;
double x30617 = x10804*x2505;
double x30618 = 10*x10816;
double x30619 = 10*x10915;
double x30620 = 14*x10863;
double x30621 = 14*x10866;
double x30622 = x10833*x24454;
double x30623 = x10444*x30471;
double x30624 = x14658*x24514;
double x30625 = x18572*x2669;
double x30626 = x30556*x578;
double x30627 = x19991*x2592;
double x30628 = x5248*x629;
double x30629 = 10*x10570;
double x30630 = p8_i_dot*x17368;
double x30631 = x10772*x17368;
double x30632 = x15116*x19;
double x30633 = x10873*x14905;
double x30634 = x15057*x24514;
double x30635 = x14948*x24927;
double x30636 = x25429*x30562;
double x30637 = -x20897 - x23378 + x30411 - x30413 - x30414 + x30416 + x30418 + x30419 + x30420 + x30425 + x30426 - x30427 - x30428 - x30429 + x30437 + x30438 + x30440 + x30441 + x30443 - x30455 - x30456 - x30457 - x30458 - x30465;
double x30638 = x30568*x5306;
double x30639 = x158*x30384;
double x30640 = x158*x30385;
double x30641 = x158*x30386;
double x30642 = x158*x30378;
double x30643 = x158*x30379;
double x30644 = x158*x30380;
double x30645 = x30423*x6047;
double x30646 = 72*x30454;
double x30647 = 36*x30393;
double x30648 = x10783*x25030;
double x30649 = x10956*x327;
double x30650 = x10466*x3943;
double x30651 = 12*x10563;
double x30652 = x10952*x26154;
double x30653 = x11007*x24498;
double x30654 = 8*x30396;
double x30655 = p8_i*x5536;
double x30656 = x24705*x30655;
double x30657 = x11007*x24495;
double x30658 = x24695*x30655;
double x30659 = x2617*x28546;
double x30660 = 12*x10816;
double x30661 = x10817*x3943;
double x30662 = 12*x10920;
double x30663 = p8_i_dot*x4414;
double x30664 = x10892*x24469;
double x30665 = x10958*x25030;
double x30666 = x15088*x25069;
double x30667 = x18498*x2453;
double x30668 = x10479*x3943;
double x30669 = x10938*x3943;
double x30670 = 12*x10570;
double x30671 = x10503*x15110;
double x30672 = p8_i*x25056;
double x30673 = x30391*x3943;
double x30674 = x24709*x30580;
double x30675 = x30391*x5652;
double x30676 = x14948*x25069;
double x30677 = x10857*x28582;
double x30678 = x30412*x5411;
double x30679 = x14898*x25089;
double x30680 = 36*x10756;
double x30681 = 36*x30389;
double x30682 = -p8_b_dot*x25082 + p8_b_dot*x25085 - p8_i_dot*x25084 + p8_i_dot*x25086 - p8_i_dot*x25095 + p8_i_dot*x25097 + p8_i_dot*x25960 + x10739*x25079 + x10739*x25088 - x10749*x25081 - x10756*x25102 - x10804*x25093 + x10804*x25096 + x10807*x24736 - x10807*x25083 + x11035*x24495 + x11035*x24498 + x11092*x24752 - x15132*x19 + x15133*x24507 - x15133*x24510 + x21017 - x21018 - x23471 - x23472 + x24517*x30680 - x24528*x30680 + x25098*x2575 - x2555*x28545 + x30392*x5440 + x30395*x7357 + x30442*x5440 + 8*x30472 + x30647*x608 - x30678*x5152 + x30678*x5157 - x30678 - x30679*x5152 + x30679 - x30681*x5152 - x30681*x5157;
double x30683 = x24759*x8874;
double x30684 = x24584*x8874;
double x30685 = x11037*x24469;
double x30686 = x15183*x19;
double x30687 = x12914*x7333;
double x30688 = x28436*x5152;
double x30689 = p9_b_dot*x4046;
double x30690 = x24759*x8855;
double x30691 = p9_i*x2;
double x30692 = x11043*x24810;
double x30693 = x11044*x24810;
double x30694 = x10658*x421;
double x30695 = p9_b_dot*x24584;
double x30696 = x28263*x8780;
double x30697 = 18*x10804;
double x30698 = 18*p8_i_dot;
double x30699 = x11079*x5200;
double x30700 = x30699*x5306;
double x30701 = 12*x11056;
double x30702 = 108*x14893;
double x30703 = 108*x12914;
double x30704 = 76*x28160;
double x30705 = 36*x30433;
double x30706 = x11070*x158;
double x30707 = x11134*x321;
double x30708 = x28285*x634;
double x30709 = p8_b*x28191;
double x30710 = p9_b*x30391;
double x30711 = x28195*x608;
double x30712 = x11079*x24450;
double x30713 = p8_i*p9_i;
double x30714 = x24450*x30713;
double x30715 = x15273*x19;
double x30716 = x19947*x4;
double x30717 = x11134*x158;
double x30718 = x11079*x24564;
double x30719 = p8_i_dot*p9_i;
double x30720 = x30719*x5152;
double x30721 = x28430*x5413;
double x30722 = x12977*x19;
double x30723 = x30699*x5413;
double x30724 = 2*x11082;
double x30725 = p8_i*x28285;
double x30726 = x11056*x24769;
double x30727 = x11182*x24507;
double x30728 = x11182*x24510;
double x30729 = x14893*x7656;
double x30730 = x12914*x7656;
double x30731 = x11103*x129;
double x30732 = x11079*x24584;
double x30733 = x11082*x24528;
double x30734 = p8_i*x8780;
double x30735 = x24507*x421;
double x30736 = 3*p8_b;
double x30737 = x11148*x1858;
double x30738 = p8_b_dt*x12700;
double x30739 = p9_b_dt*x14905;
double x30740 = 8*x30712;
double x30741 = p8_b*x13015*x19;
double x30742 = x24830*x30713;
double x30743 = p9_i_dot*x11012;
double x30744 = x11167*x6;
double x30745 = x11148*x129;
double x30746 = x14905*x8746;
double x30747 = x15162*x19;
double x30748 = x11195*x11376;
double x30749 = x6*x8837;
double x30750 = x15277*x19;
double x30751 = x12970*x19;
double x30752 = p8_i_dot*p9_i_dot;
double x30753 = p8_i*p9_i_dot;
double x30754 = x30753*x5152;
double x30755 = x24934*x8860;
double x30756 = x30755*x5413;
double x30757 = x24629*x8859;
double x30758 = x24939*x8860;
double x30759 = x24939*x28445;
double x30760 = x362*x8860;
double x30761 = -x15222*x19 + x18347*x28368*x8594 + 8*x21102*x8745 + x24507*x28444 - x24510*x28444 + x24621*x8858 + x24626*x8858 - x24672*x8863 - x24856*x8863 + x24863*x8863 - x24937*x8860 + x24943*x8861 + x24946*x30760 - x30756*x5152 + x30756*x5157 - x30756 + x30757*x5152 + x30757*x5157 - x30758*x5152 + x30758 - x30759*x5152 - x30759*x5157;
double x30762 = 16*x11056;
double x30763 = x30699*x5911;
double x30764 = 32*x30712;
double x30765 = x11162*x24629;
double x30766 = x11163*x24629;
double x30767 = p8_b*x19886;
double x30768 = x11148*x158;
double x30769 = x11144*x25274;
double x30770 = x11114*x24769;
double x30771 = x11115*x24769;
double x30772 = x11110*x24629;
double x30773 = x11083*x24528;
double x30774 = x11079*x24458;
double x30775 = x15298*x28263;
double x30776 = p9_i_dot*x10897;
double x30777 = x28377*x30471;
double x30778 = x13014*x30471;
double x30779 = x25296*x30713;
double x30780 = x24939*x30752;
double x30781 = x11141*x362;
double x30782 = x11160*x24469;
double x30783 = x11056*x24469;
double x30784 = x30699*x5996;
double x30785 = 48*x30712;
double x30786 = 14*x11162;
double x30787 = 14*x11163;
double x30788 = 10*x10863;
double x30789 = 10*x10866;
double x30790 = x24912*x421;
double x30791 = x11148*x286;
double x30792 = 7*x28187;
double x30793 = x11144*x25392;
double x30794 = x10804*x2685;
double x30795 = 10*x11109;
double x30796 = 10*x11110;
double x30797 = 14*x8815;
double x30798 = 14*x8816;
double x30799 = x11079*x24454;
double x30800 = 28*x28263;
double x30801 = x10742*x30800;
double x30802 = x14948*x24514;
double x30803 = x1827*x18572;
double x30804 = p8_b*x28372;
double x30805 = x420*x5527;
double x30806 = x15193*x6;
double x30807 = x19991*x2669;
double x30808 = x5248*x633;
double x30809 = 10*x10873;
double x30810 = p9_i_dot*x15051;
double x30811 = x10772*x21102;
double x30812 = x15300*x19;
double x30813 = x12700*x8746;
double x30814 = x15252*x24514;
double x30815 = x30800*x8582;
double x30816 = x25429*x30752;
double x30817 = 36*x11056;
double x30818 = x30755*x5306;
double x30819 = x30699*x6047;
double x30820 = 72*x30712;
double x30821 = x25030*x8855;
double x30822 = x25045*x421;
double x30823 = x11148*x327;
double x30824 = 16*x28187;
double x30825 = 12*x10866;
double x30826 = x11144*x26154;
double x30827 = p9_i_dot*x24510;
double x30828 = p9_i_dot*x24507;
double x30829 = x11070*x3943;
double x30830 = 12*x11114;
double x30831 = 12*x11115;
double x30832 = x24469*x8859;
double x30833 = x11150*x25030;
double x30834 = 64*x28263;
double x30835 = x10742*x30834;
double x30836 = 32*x28567;
double x30837 = x18498*x2555;
double x30838 = x10778*x3943;
double x30839 = x11134*x3943;
double x30840 = 12*x10873;
double x30841 = x634*x8670;
double x30842 = p9_i_dot*x11016;
double x30843 = x30834*x8582;
double x30844 = x11348 + x11360 + x5161;
double x30845 = q1_b_dt*x5437;
double x30846 = q1_b_dt*x17015;
double x30847 = q1_b*x11440;
double x30848 = x5727*x8675;
double x30849 = q1_b*x11444;
double x30850 = -x30845 - x30846 + x30847 - x30848 + x30849;
double x30851 = L*x5423;
double x30852 = q1_b_dot_dt*x5215;
double x30853 = q1_b_dot*x11323;
double x30854 = L*x30852 - L*x30853 + x11329*x120 - x11332*x120 + x30851;
double x30855 = x2741*x5437;
double x30856 = x178*x5188;
double x30857 = 6*x30856;
double x30858 = q1_b_dt*x5215;
double x30859 = 6*x30858;
double x30860 = x11440*x120;
double x30861 = x17015*x2741;
double x30862 = q1_b*x11329;
double x30863 = 6*x30862;
double x30864 = q1_b*x11332;
double x30865 = 6*x30864;
double x30866 = x11442*x120;
double x30867 = x11444*x120;
double x30868 = p1_b_dt*x5437;
double x30869 = p1_b*x11440;
double x30870 = p1_b_dt*x17015;
double x30871 = p1_b*x11444;
double x30872 = x5684*x8675;
double x30873 = x30868 - x30869 + x30870 - x30871 + x30872;
double x30874 = x278*x5188;
double x30875 = L*x30874;
double x30876 = x1981*x5215;
double x30877 = p1_b_dot*x11323;
double x30878 = L*x30877;
double x30879 = x11329*x450;
double x30880 = x11332*x450;
double x30881 = x30875 + x30876 - x30878 + x30879 - x30880;
double x30882 = 4*x30875;
double x30883 = x158*x30877;
double x30884 = 4*x30876;
double x30885 = p1_b_dot*x11332;
double x30886 = x158*x30885;
double x30887 = p1_b_dot*x11329;
double x30888 = x158*x30887;
double x30889 = x30882 - x30883 + x30884 - x30886 + x30888;
double x30890 = 6*x5451;
double x30891 = x338*x5188;
double x30892 = 6*x30891;
double x30893 = p1_b_dt*x5215;
double x30894 = 6*x30893;
double x30895 = p1_b*x11332;
double x30896 = 6*x30895;
double x30897 = p1_b*x11329;
double x30898 = 6*x30897;
double x30899 = x30890 - x30892 + x30894 - x30896 + x30898;
double x30900 = -x11790 - x11805 - x11807;
double x30901 = p1_b_dot_dt*x5215;
double x30902 = L*(x30873 + x30900) + x70*(x30844 + x30874 - x30877 - x30885 + x30887 + x30901);
double x30903 = x1799*x5188;
double x30904 = L*x30903;
double x30905 = x1802*x5214;
double x30906 = p10_b_dot*x11323;
double x30907 = p10_b_dt*x5437;
double x30908 = p10_b*x11440;
double x30909 = p10_b_dt*x17015;
double x30910 = p10_b*x11444;
double x30911 = x8521*x8675;
double x30912 = x30907 - x30908 + x30909 - x30910 + x30911;
double x30913 = p9_b_dt*x5437;
double x30914 = p9_b_dt*x17015;
double x30915 = p9_b*x11440;
double x30916 = x12916*x57;
double x30917 = p9_b*x11444;
double x30918 = x1826*x5188;
double x30919 = L*x30918;
double x30920 = p9_b_dot_dt*x5215;
double x30921 = p9_b_dot*x11323;
double x30922 = L*x30920 - L*x30921 + x11329*x420 - x11332*x420 + x30919;
double x30923 = -x30913 - x30914 + x30915 - x30916 + x30917 + x30922;
double x30924 = 6*x8507;
double x30925 = x3849*x5188;
double x30926 = 6*x30925;
double x30927 = p10_b_dt*x5215;
double x30928 = 6*x30927;
double x30929 = p10_b*x11332;
double x30930 = 6*x30929;
double x30931 = p10_b*x11329;
double x30932 = 6*x30931;
double x30933 = 6*x8584;
double x30934 = p9_b_dt*x5215;
double x30935 = 6*x30934;
double x30936 = x3864*x5188;
double x30937 = 6*x30936;
double x30938 = p9_b*x11329;
double x30939 = 6*x30938;
double x30940 = p9_b*x11332;
double x30941 = 6*x30940;
double x30942 = 4*x30904;
double x30943 = x158*x30906;
double x30944 = x158*x30905;
double x30945 = p10_b_dot*x11332;
double x30946 = x158*x30945;
double x30947 = p10_b_dot*x11329;
double x30948 = x158*x30947;
double x30949 = x30942 - x30943 + x30944 - x30946 + x30948;
double x30950 = -x11440*x420 + x11442*x420 - x11444*x420 + x17015*x1857 + x1857*x5437;
double x30951 = -x30933 - x30935 + x30937 - x30939 + x30941 + x30949 + x30950;
double x30952 = L*x11360;
double x30953 = L*(-20*x11351 + x30912 - 20*x30952 - 20*x6696) + x70*(x30844 + x30903 + x30905 - x30906 - x30945 + x30947);
double x30954 = p2_b_dt*x5437;
double x30955 = p2_b*x11440;
double x30956 = p2_b_dt*x17015;
double x30957 = p2_b*x11444;
double x30958 = x8675*x9111;
double x30959 = x30954 - x30955 + x30956 - x30957 + x30958;
double x30960 = x1937*x5188;
double x30961 = L*x30960;
double x30962 = p2_b_dot_dt*x5215;
double x30963 = L*x30962;
double x30964 = p2_b_dot*x11323;
double x30965 = L*x30964;
double x30966 = x11329*x479;
double x30967 = x11332*x479;
double x30968 = x30961 + x30963 - x30965 + x30966 - x30967;
double x30969 = x1981*x5437;
double x30970 = x11440*x450;
double x30971 = x17015*x1981;
double x30972 = x11444*x450;
double x30973 = x11442*x450;
double x30974 = 6*x9006;
double x30975 = x3939*x5188;
double x30976 = 6*x30975;
double x30977 = p2_b_dt*x5215;
double x30978 = 6*x30977;
double x30979 = p2_b*x11332;
double x30980 = 6*x30979;
double x30981 = p2_b*x11329;
double x30982 = 6*x30981;
double x30983 = x30974 - x30976 + x30978 - x30980 + x30982;
double x30984 = 4*x30961;
double x30985 = x158*x30964;
double x30986 = x158*x30962;
double x30987 = p2_b_dot*x11332;
double x30988 = x158*x30987;
double x30989 = p2_b_dot*x11329;
double x30990 = x158*x30989;
double x30991 = x30984 - x30985 + x30986 - x30988 + x30990;
double x30992 = -x11417 - x11860 - x5690;
double x30993 = L*(x30959 + x30992) + x70*(x30844 + x30960 + x30962 - x30964 - x30987 + x30989);
double x30994 = p3_b_dt*x5437;
double x30995 = p3_b*x11440;
double x30996 = p3_b_dt*x17015;
double x30997 = p3_b*x11444;
double x30998 = x8675*x9383;
double x30999 = x30994 - x30995 + x30996 - x30997 + x30998;
double x31000 = x2042*x5188;
double x31001 = L*x31000;
double x31002 = p3_b_dot_dt*x5215;
double x31003 = L*x31002;
double x31004 = p3_b_dot*x11323;
double x31005 = L*x31004;
double x31006 = x11329*x509;
double x31007 = x11332*x509;
double x31008 = x31001 + x31003 - x31005 + x31006 - x31007;
double x31009 = 6*x9281;
double x31010 = x4019*x5188;
double x31011 = 6*x31010;
double x31012 = p3_b_dt*x5215;
double x31013 = 6*x31012;
double x31014 = p3_b*x11332;
double x31015 = 6*x31014;
double x31016 = p3_b*x11329;
double x31017 = 6*x31016;
double x31018 = x31009 - x31011 + x31013 - x31015 + x31017;
double x31019 = 4*x31001;
double x31020 = x158*x31004;
double x31021 = x158*x31002;
double x31022 = p3_b_dot*x11332;
double x31023 = x158*x31022;
double x31024 = p3_b_dot*x11329;
double x31025 = x158*x31024;
double x31026 = x31019 - x31020 + x31021 - x31023 + x31025;
double x31027 = x2084*x5437;
double x31028 = x11440*x479;
double x31029 = x17015*x2084;
double x31030 = x11444*x479;
double x31031 = x11442*x479;
double x31032 = x31027 - x31028 + x31029 - x31030 + x31031;
double x31033 = -x11434 - x11988 - x5887;
double x31034 = L*(x30999 + x31033) + x70*(x30844 + x31000 + x31002 - x31004 - x31022 + x31024);
double x31035 = p4_b_dt*x5437;
double x31036 = p4_b*x11440;
double x31037 = p4_b_dt*x17015;
double x31038 = p4_b*x11444;
double x31039 = x8675*x9677;
double x31040 = x31035 - x31036 + x31037 - x31038 + x31039;
double x31041 = x2144*x5188;
double x31042 = L*x31041;
double x31043 = p4_b_dot_dt*x5215;
double x31044 = L*x31043;
double x31045 = p4_b_dot*x11323;
double x31046 = L*x31045;
double x31047 = x11329*x539;
double x31048 = x11332*x539;
double x31049 = x31042 + x31044 - x31046 + x31047 - x31048;
double x31050 = 6*x9575;
double x31051 = x4103*x5188;
double x31052 = 6*x31051;
double x31053 = p4_b_dt*x5215;
double x31054 = 6*x31053;
double x31055 = p4_b*x11332;
double x31056 = 6*x31055;
double x31057 = p4_b*x11329;
double x31058 = 6*x31057;
double x31059 = x31050 - x31052 + x31054 - x31056 + x31058;
double x31060 = 4*x31042;
double x31061 = x158*x31045;
double x31062 = x158*x31043;
double x31063 = p4_b_dot*x11332;
double x31064 = x158*x31063;
double x31065 = p4_b_dot*x11329;
double x31066 = x158*x31065;
double x31067 = x31060 - x31061 + x31062 - x31064 + x31066;
double x31068 = x2188*x5437;
double x31069 = x11440*x509;
double x31070 = x17015*x2188;
double x31071 = x11444*x509;
double x31072 = x11442*x509;
double x31073 = x31068 - x31069 + x31070 - x31071 + x31072;
double x31074 = 8*x11351;
double x31075 = 8*x30952;
double x31076 = 8*x6696;
double x31077 = -x31074 - x31075 - x31076;
double x31078 = L*(x31040 + x31077) + x70*(x30844 + x31041 + x31043 - x31045 - x31063 + x31065);
double x31079 = p5_b_dt*x5437;
double x31080 = p5_b*x11440;
double x31081 = p5_b_dt*x17015;
double x31082 = p5_b*x11444;
double x31083 = x8675*x9965;
double x31084 = x31079 - x31080 + x31081 - x31082 + x31083;
double x31085 = x2249*x5188;
double x31086 = L*x31085;
double x31087 = p5_b_dot_dt*x5215;
double x31088 = L*x31087;
double x31089 = p5_b_dot*x11323;
double x31090 = L*x31089;
double x31091 = x11329*x569;
double x31092 = x11332*x569;
double x31093 = x31086 + x31088 - x31090 + x31091 - x31092;
double x31094 = 6*x9862;
double x31095 = x4187*x5188;
double x31096 = 6*x31095;
double x31097 = p5_b_dt*x5215;
double x31098 = 6*x31097;
double x31099 = p5_b*x11332;
double x31100 = 6*x31099;
double x31101 = p5_b*x11329;
double x31102 = 6*x31101;
double x31103 = x31094 - x31096 + x31098 - x31100 + x31102;
double x31104 = 4*x31086;
double x31105 = x158*x31089;
double x31106 = x158*x31087;
double x31107 = p5_b_dot*x11332;
double x31108 = x158*x31107;
double x31109 = p5_b_dot*x11329;
double x31110 = x158*x31109;
double x31111 = x31104 - x31105 + x31106 - x31108 + x31110;
double x31112 = x2291*x5437;
double x31113 = x11440*x539;
double x31114 = x17015*x2291;
double x31115 = x11444*x539;
double x31116 = x11442*x539;
double x31117 = x31112 - x31113 + x31114 - x31115 + x31116;
double x31118 = 10*x11351;
double x31119 = x11360*x5224;
double x31120 = x5161*x5224;
double x31121 = -x31118 - x31119 - x31120;
double x31122 = L*(x31084 + x31121) + x70*(x30844 + x31085 + x31087 - x31089 - x31107 + x31109);
double x31123 = p6_b_dt*x5437;
double x31124 = p6_b*x11440;
double x31125 = p6_b_dt*x17015;
double x31126 = p6_b*x11444;
double x31127 = x10264*x8675;
double x31128 = x31123 - x31124 + x31125 - x31126 + x31127;
double x31129 = x2350*x5188;
double x31130 = L*x31129;
double x31131 = p6_b_dot_dt*x5215;
double x31132 = L*x31131;
double x31133 = p6_b_dot*x11323;
double x31134 = L*x31133;
double x31135 = x11329*x599;
double x31136 = x11332*x599;
double x31137 = x31130 + x31132 - x31134 + x31135 - x31136;
double x31138 = 6*x10160;
double x31139 = x4270*x5188;
double x31140 = 6*x31139;
double x31141 = p6_b_dt*x5215;
double x31142 = 6*x31141;
double x31143 = p6_b*x11332;
double x31144 = 6*x31143;
double x31145 = p6_b*x11329;
double x31146 = 6*x31145;
double x31147 = x31138 - x31140 + x31142 - x31144 + x31146;
double x31148 = 4*x31130;
double x31149 = x158*x31133;
double x31150 = x158*x31131;
double x31151 = p6_b_dot*x11332;
double x31152 = x158*x31151;
double x31153 = p6_b_dot*x11329;
double x31154 = x158*x31153;
double x31155 = x31148 - x31149 + x31150 - x31152 + x31154;
double x31156 = x2394*x5437;
double x31157 = x11440*x569;
double x31158 = x17015*x2394;
double x31159 = x11444*x569;
double x31160 = x11442*x569;
double x31161 = x31156 - x31157 + x31158 - x31159 + x31160;
double x31162 = 12*x11351;
double x31163 = x11360*x3943;
double x31164 = -x31162 - x31163 - x5406;
double x31165 = L*(x31128 + x31164) + x70*(x30844 + x31129 + x31131 - x31133 - x31151 + x31153);
double x31166 = p7_b_dt*x5437;
double x31167 = p7_b*x11440;
double x31168 = p7_b_dt*x17015;
double x31169 = p7_b*x11444;
double x31170 = x10551*x8675;
double x31171 = x31166 - x31167 + x31168 - x31169 + x31170;
double x31172 = x2453*x5188;
double x31173 = L*x31172;
double x31174 = p7_b_dot_dt*x5215;
double x31175 = L*x31174;
double x31176 = p7_b_dot*x11323;
double x31177 = L*x31176;
double x31178 = x11329*x629;
double x31179 = x11332*x629;
double x31180 = x31173 + x31175 - x31177 + x31178 - x31179;
double x31181 = 6*x10445;
double x31182 = x4353*x5188;
double x31183 = 6*x31182;
double x31184 = p7_b_dt*x5215;
double x31185 = 6*x31184;
double x31186 = p7_b*x11332;
double x31187 = 6*x31186;
double x31188 = p7_b*x11329;
double x31189 = 6*x31188;
double x31190 = x31181 - x31183 + x31185 - x31187 + x31189;
double x31191 = 4*x31173;
double x31192 = x158*x31176;
double x31193 = x158*x31174;
double x31194 = p7_b_dot*x11332;
double x31195 = x158*x31194;
double x31196 = p7_b_dot*x11329;
double x31197 = x158*x31196;
double x31198 = x31191 - x31192 + x31193 - x31195 + x31197;
double x31199 = x2495*x5437;
double x31200 = x11440*x599;
double x31201 = x17015*x2495;
double x31202 = x11444*x599;
double x31203 = x11442*x599;
double x31204 = x31199 - x31200 + x31201 - x31202 + x31203;
double x31205 = 14*x11351;
double x31206 = 14*x30952;
double x31207 = 14*x6696;
double x31208 = L*(x31171 - x31205 - x31206 - x31207) + x70*(x30844 + x31172 + x31174 - x31176 - x31194 + x31196);
double x31209 = p8_b_dt*x5437;
double x31210 = p8_b*x11440;
double x31211 = p8_b_dt*x17015;
double x31212 = p8_b*x11444;
double x31213 = x15247*x57;
double x31214 = x31209 - x31210 + x31211 - x31212 + x31213;
double x31215 = x2555*x5188;
double x31216 = L*x31215;
double x31217 = p8_b_dot_dt*x5215;
double x31218 = L*x31217;
double x31219 = p8_b_dot*x11323;
double x31220 = L*x31219;
double x31221 = x11329*x633;
double x31222 = x11332*x633;
double x31223 = x31216 + x31218 - x31220 + x31221 - x31222;
double x31224 = 6*x10744;
double x31225 = x4434*x5188;
double x31226 = 6*x31225;
double x31227 = p8_b_dt*x5215;
double x31228 = 6*x31227;
double x31229 = p8_b*x11332;
double x31230 = 6*x31229;
double x31231 = p8_b*x11329;
double x31232 = 6*x31231;
double x31233 = x31224 - x31226 + x31228 - x31230 + x31232;
double x31234 = 4*x31216;
double x31235 = x158*x31219;
double x31236 = x158*x31217;
double x31237 = p8_b_dot*x11332;
double x31238 = x158*x31237;
double x31239 = p8_b_dot*x11329;
double x31240 = x158*x31239;
double x31241 = x31234 - x31235 + x31236 - x31238 + x31240;
double x31242 = x2599*x5437;
double x31243 = x11440*x629;
double x31244 = x17015*x2599;
double x31245 = x11444*x629;
double x31246 = x11442*x629;
double x31247 = x31242 - x31243 + x31244 - x31245 + x31246;
double x31248 = L*(-x11591 - x11986 + x31214 - x7951) + x70*(x30844 + x31215 + x31217 - x31219 - x31237 + x31239);
double x31249 = x30913 + x30914 - x30915 + x30916 - x30917;
double x31250 = x30933 + x30935 - x30937 + x30939 - x30941;
double x31251 = 4*x30919;
double x31252 = x158*x30921;
double x31253 = x158*x30920;
double x31254 = p9_b_dot*x11332;
double x31255 = x158*x31254;
double x31256 = p9_b_dot*x11329;
double x31257 = x158*x31256;
double x31258 = x31251 - x31252 + x31253 - x31255 + x31257;
double x31259 = x2675*x5437;
double x31260 = x11440*x633;
double x31261 = x17015*x2675;
double x31262 = x11444*x633;
double x31263 = x11442*x633;
double x31264 = x31259 - x31260 + x31261 - x31262 + x31263;
double x31265 = 18*x11351;
double x31266 = x11360*x4023;
double x31267 = -x31265 - x31266 - x8273;
double x31268 = L*(x31249 + x31267) + x70*(x30844 + x30918 + x30920 - x30921 - x31254 + x31256);
double x31269 = x30845 + x30846 - x30847 + x30848 - x30849;
double x31270 = q2_b_dt*x5437;
double x31271 = q2_b_dt*x17015;
double x31272 = q2_b*x11440;
double x31273 = x12109*x57;
double x31274 = q2_b*x11444;
double x31275 = x2727*x5215;
double x31276 = q2_b_dot*x11323;
double x31277 = -L*x31276 + x11329*x662 - x11332*x662 + x31275 + x6079;
double x31278 = -x31270 - x31271 + x31272 - x31273 + x31274 + x31277;
double x31279 = 6*x5776;
double x31280 = q2_b_dt*x5215;
double x31281 = 6*x31280;
double x31282 = x3680*x5188;
double x31283 = 6*x31282;
double x31284 = q2_b*x11329;
double x31285 = 6*x31284;
double x31286 = q2_b*x11332;
double x31287 = 6*x31286;
double x31288 = -x30857 + x30859 + x30863 - x30865 + x5181;
double x31289 = 4*x30851;
double x31290 = x158*x30853;
double x31291 = x158*x30852;
double x31292 = q1_b_dot*x11332;
double x31293 = x158*x31292;
double x31294 = q1_b_dot*x11329;
double x31295 = x158*x31294;
double x31296 = x31289 - x31290 + x31291 - x31293 + x31295;
double x31297 = x2727*x5437;
double x31298 = x11440*x662;
double x31299 = x17015*x2727;
double x31300 = x11444*x662;
double x31301 = x11442*x662;
double x31302 = x31297 - x31298 + x31299 - x31300 + x31301;
double x31303 = x11790 + x11805 + x11807;
double x31304 = L*(x31269 + x31303) + x70*(x30844 + x30852 - x30853 - x31292 + x31294 + x5423);
double x31305 = q3_b_dt*x5437;
double x31306 = q3_b_dt*x17015;
double x31307 = q3_b*x11440;
double x31308 = x12221*x57;
double x31309 = q3_b*x11444;
double x31310 = x31270 + x31271 - x31272 + x31273 - x31274;
double x31311 = x2839*x5215;
double x31312 = q3_b_dot*x11323;
double x31313 = L*x31312;
double x31314 = x11329*x691;
double x31315 = x11332*x691;
double x31316 = x31311 - x31313 + x31314 - x31315 + x6370;
double x31317 = q3_b_dt*x5215;
double x31318 = 6*x31317;
double x31319 = x3761*x5188;
double x31320 = 6*x31319;
double x31321 = q3_b*x11329;
double x31322 = 6*x31321;
double x31323 = q3_b*x11332;
double x31324 = 6*x31323;
double x31325 = x31279 + x31281 - x31283 + x31285 - x31287;
double x31326 = x158*x31276;
double x31327 = 4*x31275;
double x31328 = q2_b_dot*x11332;
double x31329 = x158*x31328;
double x31330 = q2_b_dot*x11329;
double x31331 = x158*x31330;
double x31332 = -x31326 + x31327 - x31329 + x31331 + x6080;
double x31333 = x2839*x5437;
double x31334 = x11440*x691;
double x31335 = x17015*x2839;
double x31336 = x11444*x691;
double x31337 = x11442*x691;
double x31338 = x31333 - x31334 + x31335 - x31336 + x31337;
double x31339 = x11417 + x11860 + x5690;
double x31340 = L*(x31310 + x31339) + x70*(q2_b_dot_dt*x5215 + x30844 - x31276 - x31328 + x31330 + x5763);
double x31341 = q4_b_dt*x5437;
double x31342 = q4_b_dt*x17015;
double x31343 = q4_b*x11440;
double x31344 = x12483*x57;
double x31345 = q4_b*x11444;
double x31346 = x31305 + x31306 - x31307 + x31308 - x31309;
double x31347 = x2943*x5215;
double x31348 = q4_b_dot*x11323;
double x31349 = L*x31348;
double x31350 = x11329*x720;
double x31351 = x11332*x720;
double x31352 = x31347 - x31349 + x31350 - x31351 + x6692;
double x31353 = q4_b_dt*x5215;
double x31354 = 6*x31353;
double x31355 = x4565*x5188;
double x31356 = 6*x31355;
double x31357 = q4_b*x11329;
double x31358 = 6*x31357;
double x31359 = q4_b*x11332;
double x31360 = 6*x31359;
double x31361 = x31318 - x31320 + x31322 - x31324 + x6447;
double x31362 = 4*x6370;
double x31363 = x158*x31312;
double x31364 = 4*x31311;
double x31365 = q3_b_dot*x11332;
double x31366 = x158*x31365;
double x31367 = q3_b_dot*x11329;
double x31368 = x158*x31367;
double x31369 = x31362 - x31363 + x31364 - x31366 + x31368;
double x31370 = x2943*x5437;
double x31371 = x11440*x720;
double x31372 = x17015*x2943;
double x31373 = x11444*x720;
double x31374 = x11442*x720;
double x31375 = x31370 - x31371 + x31372 - x31373 + x31374;
double x31376 = x11434 + x11988 + x5887;
double x31377 = L*(x31346 + x31376) + x70*(q3_b_dot_dt*x5215 + x30844 - x31312 - x31365 + x31367 + x6099);
double x31378 = q5_b_dt*x5437;
double x31379 = q5_b_dt*x17015;
double x31380 = q5_b*x11440;
double x31381 = x15476*x57;
double x31382 = q5_b*x11444;
double x31383 = x31341 + x31342 - x31343 + x31344 - x31345;
double x31384 = x3059*x5215;
double x31385 = q5_b_dot*x11323;
double x31386 = L*x31385;
double x31387 = x11329*x749;
double x31388 = x11332*x749;
double x31389 = x31384 - x31386 + x31387 - x31388 + x7014;
double x31390 = 6*x6738;
double x31391 = q5_b_dt*x5215;
double x31392 = 6*x31391;
double x31393 = x4656*x5188;
double x31394 = 6*x31393;
double x31395 = q5_b*x11329;
double x31396 = 6*x31395;
double x31397 = q5_b*x11332;
double x31398 = 6*x31397;
double x31399 = x31354 - x31356 + x31358 - x31360 + x6463;
double x31400 = 4*x6692;
double x31401 = x158*x31348;
double x31402 = x3021*x5215;
double x31403 = q4_b_dot*x11332;
double x31404 = x158*x31403;
double x31405 = q4_b_dot*x11329;
double x31406 = x158*x31405;
double x31407 = x31400 - x31401 + x31402 - x31404 + x31406;
double x31408 = x3059*x5437;
double x31409 = x11440*x749;
double x31410 = x17015*x3059;
double x31411 = x11444*x749;
double x31412 = x11442*x749;
double x31413 = x31408 - x31409 + x31410 - x31411 + x31412;
double x31414 = x31074 + x31075 + x31076;
double x31415 = L*(x31383 + x31414) + x70*(q4_b_dot_dt*x5215 + x30844 - x31348 - x31403 + x31405 + x6392);
double x31416 = q6_b_dt*x5437;
double x31417 = q6_b_dt*x17015;
double x31418 = q6_b*x11440;
double x31419 = x15776*x57;
double x31420 = q6_b*x11444;
double x31421 = x31378 + x31379 - x31380 + x31381 - x31382;
double x31422 = x3165*x5215;
double x31423 = q6_b_dot*x11323;
double x31424 = L*x31423;
double x31425 = x11329*x778;
double x31426 = x11332*x778;
double x31427 = x31422 - x31424 + x31425 - x31426 + x7313;
double x31428 = 6*x7053;
double x31429 = q6_b_dt*x5215;
double x31430 = 6*x31429;
double x31431 = x4744*x5188;
double x31432 = 6*x31431;
double x31433 = q6_b*x11329;
double x31434 = 6*x31433;
double x31435 = q6_b*x11332;
double x31436 = 6*x31435;
double x31437 = x31390 + x31392 - x31394 + x31396 - x31398;
double x31438 = 4*x7014;
double x31439 = x158*x31385;
double x31440 = 4*x31384;
double x31441 = q5_b_dot*x11332;
double x31442 = x158*x31441;
double x31443 = q5_b_dot*x11329;
double x31444 = x158*x31443;
double x31445 = x31438 - x31439 + x31440 - x31442 + x31444;
double x31446 = x3165*x5437;
double x31447 = x11440*x778;
double x31448 = x17015*x3165;
double x31449 = x11444*x778;
double x31450 = x11442*x778;
double x31451 = x31446 - x31447 + x31448 - x31449 + x31450;
double x31452 = q5_b_dot_dt*x5215;
double x31453 = L*(x31118 + x31119 + x31120 + x31421) + x70*(x30844 - x31385 - x31441 + x31443 + x31452 + x6719);
double x31454 = q7_b_dt*x5437;
double x31455 = q7_b_dt*x17015;
double x31456 = q7_b*x11440;
double x31457 = x16070*x57;
double x31458 = q7_b*x11444;
double x31459 = x31416 + x31417 - x31418 + x31419 - x31420;
double x31460 = x3276*x5215;
double x31461 = q7_b_dot*x11323;
double x31462 = L*x31461;
double x31463 = x11329*x807;
double x31464 = x11332*x807;
double x31465 = x31460 - x31462 + x31463 - x31464 + x7637;
double x31466 = 6*x7354;
double x31467 = q7_b_dt*x5215;
double x31468 = 6*x31467;
double x31469 = x4832*x5188;
double x31470 = 6*x31469;
double x31471 = q7_b*x11329;
double x31472 = 6*x31471;
double x31473 = q7_b*x11332;
double x31474 = 6*x31473;
double x31475 = x31428 + x31430 - x31432 + x31434 - x31436;
double x31476 = 4*x7313;
double x31477 = x158*x31423;
double x31478 = 4*x31422;
double x31479 = q6_b_dot*x11332;
double x31480 = x158*x31479;
double x31481 = q6_b_dot*x11329;
double x31482 = x158*x31481;
double x31483 = x31476 - x31477 + x31478 - x31480 + x31482;
double x31484 = x3276*x5437;
double x31485 = x11440*x807;
double x31486 = x17015*x3276;
double x31487 = x11444*x807;
double x31488 = x11442*x807;
double x31489 = x31484 - x31485 + x31486 - x31487 + x31488;
double x31490 = x31162 + x31163 + x5406;
double x31491 = L*(x31459 + x31490) + x70*(q6_b_dot_dt*x5215 + x30844 - x31423 - x31479 + x31481 + x7037);
double x31492 = q8_b_dt*x5437;
double x31493 = q8_b_dt*x17015;
double x31494 = q8_b*x11440;
double x31495 = x16363*x57;
double x31496 = q8_b*x11444;
double x31497 = x31454 + x31455 - x31456 + x31457 - x31458;
double x31498 = x3380*x5215;
double x31499 = q8_b_dot*x11323;
double x31500 = L*x31499;
double x31501 = x11329*x836;
double x31502 = x11332*x836;
double x31503 = x31498 - x31500 + x31501 - x31502 + x7945;
double x31504 = 6*x7676;
double x31505 = q8_b_dt*x5215;
double x31506 = 6*x31505;
double x31507 = x4919*x5188;
double x31508 = 6*x31507;
double x31509 = q8_b*x11329;
double x31510 = 6*x31509;
double x31511 = q8_b*x11332;
double x31512 = 6*x31511;
double x31513 = x31466 + x31468 - x31470 + x31472 - x31474;
double x31514 = 4*x7637;
double x31515 = x158*x31461;
double x31516 = 4*x31460;
double x31517 = q7_b_dot*x11332;
double x31518 = x158*x31517;
double x31519 = q7_b_dot*x11329;
double x31520 = x158*x31519;
double x31521 = x31514 - x31515 + x31516 - x31518 + x31520;
double x31522 = x3380*x5437;
double x31523 = x11440*x836;
double x31524 = x17015*x3380;
double x31525 = x11444*x836;
double x31526 = x11442*x836;
double x31527 = x31522 - x31523 + x31524 - x31525 + x31526;
double x31528 = q7_b_dot_dt*x5215;
double x31529 = L*(x31205 + x31206 + x31207 + x31497) + x70*(x30844 - x31461 - x31517 + x31519 + x31528 + x7336);
double x31530 = x31492 + x31493 - x31494 + x31495 - x31496;
double x31531 = q9_b_dt*x5437;
double x31532 = q9_b_dt*x17015;
double x31533 = q9_b*x11440;
double x31534 = x5098*x8675;
double x31535 = q9_b*x11444;
double x31536 = -x31531 - x31532 + x31533 - x31534 + x31535;
double x31537 = x3494*x5215;
double x31538 = q9_b_dot*x11323;
double x31539 = L*x31538;
double x31540 = x11329*x865;
double x31541 = x11332*x865;
double x31542 = x31537 - x31539 + x31540 - x31541 + x8268;
double x31543 = x3494*x5437;
double x31544 = x11440*x865;
double x31545 = x17015*x3494;
double x31546 = x11444*x865;
double x31547 = x11442*x865;
double x31548 = x31504 + x31506 - x31508 + x31510 - x31512;
double x31549 = 6*x7990;
double x31550 = q9_b_dt*x5215;
double x31551 = 6*x31550;
double x31552 = x5008*x5188;
double x31553 = 6*x31552;
double x31554 = q9_b*x11329;
double x31555 = 6*x31554;
double x31556 = q9_b*x11332;
double x31557 = 6*x31556;
double x31558 = -x31549 - x31551 + x31553 - x31555 + x31557;
double x31559 = 4*x7945;
double x31560 = x158*x31499;
double x31561 = 4*x31498;
double x31562 = q8_b_dot*x11332;
double x31563 = x158*x31562;
double x31564 = q8_b_dot*x11329;
double x31565 = x158*x31564;
double x31566 = x31559 - x31560 + x31561 - x31563 + x31565;
double x31567 = L*(x11591 + x11986 + x31530 + x7951) + x70*(q8_b_dot_dt*x5215 + x30844 - x31499 - x31562 + x31564 + x7659);
double x31568 = x31531 + x31532 - x31533 + x31534 - x31535;
double x31569 = x5179*x871;
double x31570 = x5215*x871;
double x31571 = q10_b*x11440 + q10_b*x11444 - q10_b_dt*x17015 - q10_b_dt*x5437 - x11323*x876 + x11329*x876 - x11332*x876 - x16926*x57 + x31569 + x31570;
double x31572 = x31549 + x31551 - x31553 + x31555 - x31557;
double x31573 = x3595*x5179;
double x31574 = x3595*x5215;
double x31575 = 4*x8268;
double x31576 = x158*x31538;
double x31577 = 4*x31537;
double x31578 = q9_b_dot*x11332;
double x31579 = x158*x31578;
double x31580 = q9_b_dot*x11329;
double x31581 = x158*x31580;
double x31582 = x31575 - x31576 + x31577 - x31579 + x31581;
double x31583 = x11323*x8320 - x11329*x8320 + x11332*x8320 - x11440*x876 + x11442*x876 - x16829*x2 + x17015*x871 - x31573 - x31574 + x31582 + x5437*x871;
double x31584 = x31265 + x31266 + x8273;
double x31585 = q9_b_dot_dt*x5215;
double x31586 = L*(x31568 + x31584) + x70*(x30844 - x31538 - x31578 + x31580 + x31585 + x7971);
double x31587 = x37*x7;
double x31588 = -L*x11349 + L*x11353 - x11337 - x11361 - x11364 + x11423 - x11760 + x5239;
double x31589 = q1_b_dt*x5169;
double x31590 = x11360*x17188;
double x31591 = x17188*x5161;
double x31592 = x210*x7;
double x31593 = -x11461 - x11466 + x11496 - x11628 - x11629 - x276 + x31592 + x5458;
double x31594 = -L*x11487 + L*x11491 - x11510 - x11518 - x11520 - x13199 + x5518 + x9192;
double x31595 = 6*p1_i;
double x31596 = x11360*x31595;
double x31597 = x31595*x5161;
double x31598 = -x12615 - x12621 + x12623 - x12629 + x12648 - x12761 - x1797 + x8513;
double x31599 = L*x12815 - L*x12817 - x12675 - x12796 - x15257 - x15258 + x8746 + x8774;
double x31600 = 6*p10_i;
double x31601 = 6*p9_i;
double x31602 = x11360*x31601;
double x31603 = x31601*x5161;
double x31604 = x429*x7;
double x31605 = -x13041 - x13044 + x13069 - x13240 - x13241 - x1935 + x31604 + x8998;
double x31606 = -L*x13063 + L*x13065 - x13139 - x13201 - x13294 - x13295 + x9130 + x9471;
double x31607 = 6*p2_i;
double x31608 = x11360*x31607;
double x31609 = x31607*x5161;
double x31610 = x458*x7;
double x31611 = -x13366 - x13369 + x13401 - x13554 - x13555 - x2040 + x31610 + x9287;
double x31612 = -L*x13392 + L*x13394 - x13464 - x13521 - x13600 - x13601 + x9403 + x9759;
double x31613 = 6*p3_i;
double x31614 = x11360*x31613;
double x31615 = x31613*x5161;
double x31616 = x488*x7;
double x31617 = -x13675 - x13680 + x13698 - x13855 - x13856 - x2142 + x31616 + x9583;
double x31618 = -L*x13692 + L*x13694 + x10053 - x13763 - x13820 - x13900 - x13901 + x9697;
double x31619 = 6*p4_i;
double x31620 = x11360*x31619;
double x31621 = x31619*x5161;
double x31622 = x518*x7;
double x31623 = -x13973 - x13977 + x13996 - x14145 - x14146 - x2247 + x31622 + x9870;
double x31624 = -L*x13989 + L*x13991 + x10344 - x14058 - x14114 - x14186 - x14187 + x9987;
double x31625 = 6*p5_i;
double x31626 = x11360*x31625;
double x31627 = x31625*x5161;
double x31628 = x548*x7;
double x31629 = x10168 - x14259 - x14263 + x14281 - x14438 - x14439 - x2348 + x31628;
double x31630 = -L*x14275 + L*x14277 + x10283 + x10637 - x14345 - x14402 - x14481 - x14482;
double x31631 = 6*p6_i;
double x31632 = x11360*x31631;
double x31633 = x31631*x5161;
double x31634 = x578*x7;
double x31635 = x10453 - x14556 - x14561 + x14581 - x14729 - x14730 - x2451 + x31634;
double x31636 = -L*x14574 + L*x14576 + x10570 + x10939 - x14641 - x14697 - x14822 - x14823;
double x31637 = 6*p7_i;
double x31638 = x11360*x31637;
double x31639 = x31637*x5161;
double x31640 = x608*x7;
double x31641 = x10752 - x14844 - x14847 + x14877 - x15023 - x15024 - x2553 + x31640;
double x31642 = -L*x14869 + L*x14871 + x10873 + x11135 - x14930 - x14987 - x15064 - x15066;
double x31643 = 6*p8_i;
double x31644 = x11360*x31643;
double x31645 = x31643*x5161;
double x31646 = -x12778 + x12804 - x12812 - x12828 + x15145 - x15165 - x1851 + x8735;
double x31647 = -x11649 - x11654 - x11656 + x11666 - x11703 - x2719 + x31587 + x5722;
double x31648 = -x11360*x663 - x11672 - x11751 + x11770 - x11778 - x5161*x663 + x5830 + x5852;
double x31649 = 6*q2_i;
double x31650 = x11360*x31649;
double x31651 = x31649*x5161;
double x31652 = -x11735 + x11762 - x11767 + x12010 - x12138 - x12139 - x2746 + x5820;
double x31653 = -x12024 - x12095 + x12112 - x12118 - x12560 - x12562 + x6172 + x6189;
double x31654 = 6*q3_i;
double x31655 = x11360*x31654;
double x31656 = x31654*x5161;
double x31657 = -x12080 + x12103 - x12108 + x12325 - x12448 - x12449 - x2848 + x6161;
double x31658 = -x11360*x721 - x12335 - x12402 + x12418 - x12423 - x5161*x721 + x6467 + x6485;
double x31659 = 6*q4_i;
double x31660 = x11360*x31659;
double x31661 = x31659*x5161;
double x31662 = -x12388 + x12409 - x12414 + x15312 - x15437 - x15438 - x2952 + x6458;
double x31663 = -x15326 - x15390 + x15407 - x15413 - x15854 - x15856 + x6792 + x6812;
double x31664 = 6*q5_i;
double x31665 = x11360*x31664;
double x31666 = x31664*x5161;
double x31667 = -x15375 + x15399 - x15404 + x15617 - x15735 - x15736 - x3068 + x6784;
double x31668 = -x11360*x779 - x15631 - x15693 + x15709 - x15714 - x5161*x779 + x7107 + x7127;
double x31669 = 6*q6_i;
double x31670 = x11360*x31669;
double x31671 = x31669*x5161;
double x31672 = -x15680 + x15701 - x15706 + x15916 - x16042 - x16043 - x3174 + x7099;
double x31673 = -x15930 - x15996 + x16013 - x16019 - x16477 - x16479 + x7415 + x7436;
double x31674 = 6*q7_i;
double x31675 = x11360*x31674;
double x31676 = x31674*x5161;
double x31677 = -x15981 + x16005 - x16010 + x16209 - x16329 - x16330 - x3285 + x7405;
double x31678 = -x11360*x837 - x16223 - x16285 + x16300 - x16305 - x5161*x837 + x7734 + x7751;
double x31679 = 6*q8_i;
double x31680 = x11360*x31679;
double x31681 = x31679*x5161;
double x31682 = -x16272 + x16292 - x16297 + x16513 - x16624 - x16625 - x3389 + x7726;
double x31683 = -x11360*x866 - x16521 - x16581 + x16598 - x16604 - x5161*x866 + x8052 + x8069;
double x31684 = 6*q9_i;
double x31685 = x11360*x31684;
double x31686 = x31684*x5161;
double x31687 = -x16566 + x16590 - x16595 + x16796 - x16888 - x16889 - x3503 + x8043;
double x31688 = 6*q10_i;
double x31689 = -x5700;
double x31690 = x25131*x5186;
double x31691 = psi_dt*x57;
double x31692 = x11390*x31691;
double x31693 = 6*x11317;
double x31694 = 6*x11321;
double x31695 = 6*x11333;
double x31696 = 6*x11330;
double x31697 = x11694 + x31693 - x31694 - x31695 + x31696;
double x31698 = x3701*x9;
double x31699 = x11*x3701;
double x31700 = x11440*x49;
double x31701 = x11444*x49;
double x31702 = -x11442*x49 - x31698 - x31699 + x31700 + x31701;
double x31703 = x11*x210;
double x31704 = x11469*x31691;
double x31705 = x24808*x5186;
double x31706 = -x11459 + x11464 - x31703 - x31704 + x31705;
double x31707 = -x11479 - x11486 + x11490 - x11497 + x11502;
double x31708 = 6*x11504;
double x31709 = 6*x11507;
double x31710 = 6*x11506;
double x31711 = 4*x11479;
double x31712 = x11485*x158;
double x31713 = x11489*x158;
double x31714 = x11634*x158;
double x31715 = x11636*x158;
double x31716 = -x31711 - x31712 + x31713 - x31714 + x31715;
double x31717 = -x5202;
double x31718 = L*(x11475 + x31706) + x70*(-x11478 - x11485 + x11489 - x11634 + x11636 + x31717);
double x31719 = L*x12647;
double x31720 = L*x12649;
double x31721 = x11332*x898;
double x31722 = x11329*x898;
double x31723 = x385*x9;
double x31724 = x11*x385;
double x31725 = p10_i*x11440;
double x31726 = x28099*x5186;
double x31727 = -x12643*x31691 - x31723 - x31724 + x31725 + x31726;
double x31728 = x390*x9;
double x31729 = p9_i*x11440;
double x31730 = x11*x390;
double x31731 = x30691*x5186;
double x31732 = x12700*x31691;
double x31733 = x31728 - x31729 + x31730 - x31731 + x31732;
double x31734 = L*x12724;
double x31735 = L*x15146;
double x31736 = x11332*x421;
double x31737 = x11329*x421;
double x31738 = -x15143 + x31734 - x31735 + x31736 - x31737;
double x31739 = x3867*x9;
double x31740 = x11*x3867;
double x31741 = x11440*x421;
double x31742 = x11442*x421;
double x31743 = x11444*x421;
double x31744 = 6*x12613;
double x31745 = x413*x5214;
double x31746 = 6*x12619 - 6*x12625 + 6*x12655 - x31744 - x31745;
double x31747 = 6*x12689;
double x31748 = 6*x12691;
double x31749 = x414*x5214;
double x31750 = 6*x12728;
double x31751 = 6*x12756;
double x31752 = x31747 - x31748 + x31749 - x31750 + x31751;
double x31753 = 4*x12638;
double x31754 = x12649*x158;
double x31755 = x12647*x158;
double x31756 = x12729*x158;
double x31757 = x12754*x158;
double x31758 = -x31753 - x31754 + x31755 - x31756 + x31757;
double x31759 = L*(x31727 + x8519) + x70*(-x12637 + x12647 - x12649 - x12729 + x12754 + x31717);
double x31760 = x429*x9;
double x31761 = x11*x429;
double x31762 = p2_i*x11440;
double x31763 = x13105*x31691;
double x31764 = x28630*x5186;
double x31765 = -x31760 - x31761 + x31762 - x31763 + x31764;
double x31766 = L*x13089;
double x31767 = L*x13116;
double x31768 = L*x13102;
double x31769 = x11332*x480;
double x31770 = x11329*x480;
double x31771 = -x31766 + x31767 - x31768 + x31769 - x31770;
double x31772 = x11459 - x11464 + x31703 + x31704 - x31705 + x31707;
double x31773 = 6*x13045;
double x31774 = x444*x5214;
double x31775 = 6*x13048;
double x31776 = 6*x13054;
double x31777 = 6*x13052;
double x31778 = x368*x9;
double x31779 = x11*x368;
double x31780 = x11440*x249;
double x31781 = x11444*x249;
double x31782 = -x11442*x249 - x31778 - x31779 + x31780 + x31781;
double x31783 = 4*x31766;
double x31784 = x13102*x158;
double x31785 = x13116*x158;
double x31786 = x13123*x158;
double x31787 = x13129*x158;
double x31788 = -x31783 - x31784 + x31785 - x31786 + x31787;
double x31789 = x11644 + x11645 - x31708 + x31709 - x31710 + x31782 + x31788;
double x31790 = L*(x31765 + x5365) + x70*(-x13089 - x13102 + x13116 - x13123 + x13129 + x31717);
double x31791 = x458*x9;
double x31792 = x11*x458;
double x31793 = p3_i*x11440;
double x31794 = x13434*x31691;
double x31795 = x28901*x5186;
double x31796 = -x31791 - x31792 + x31793 - x31794 + x31795;
double x31797 = x31760 + x31761 - x31762 + x31763 - x31764;
double x31798 = x31771 + x31797;
double x31799 = L*x13399;
double x31800 = L*x13402;
double x31801 = x11332*x510;
double x31802 = x11329*x510;
double x31803 = -x13390 + x31799 - x31800 + x31801 - x31802;
double x31804 = 6*x13373;
double x31805 = 6*x13379;
double x31806 = 6*x13377;
double x31807 = x31773 + x31774 - x31775 + x31776 - x31777;
double x31808 = 4*x13390;
double x31809 = x13402*x158;
double x31810 = x13399*x158;
double x31811 = x13449*x158;
double x31812 = x13460*x158;
double x31813 = -x31808 - x31809 + x31810 - x31811 + x31812;
double x31814 = -x13076 + x13077 - x13078 + x13079 - x13080 + x31807 + x31813;
double x31815 = L*(x31796 + x5403) + x70*(-x13389 + x13399 - x13402 - x13449 + x13460 + x31717);
double x31816 = x488*x9;
double x31817 = x11*x488;
double x31818 = p4_i*x11440;
double x31819 = x13738*x31691;
double x31820 = x29200*x5186;
double x31821 = -x31816 - x31817 + x31818 - x31819 + x31820;
double x31822 = x31791 + x31792 - x31793 + x31794 - x31795;
double x31823 = x31803 + x31822;
double x31824 = L*x13708;
double x31825 = L*x13710;
double x31826 = x11332*x540;
double x31827 = x11329*x540;
double x31828 = -x13706 + x31824 - x31825 + x31826 - x31827;
double x31829 = 6*x13673;
double x31830 = x503*x5214;
double x31831 = 6*x13678;
double x31832 = 6*x13684;
double x31833 = 6*x13685;
double x31834 = x4060*x9;
double x31835 = x11*x4060;
double x31836 = x11440*x510;
double x31837 = x11442*x510;
double x31838 = x11444*x510;
double x31839 = x13371 + x13375 - x31804 + x31805 - x31806;
double x31840 = -x13707 + x13709 - x13711 + x13713 - x13715;
double x31841 = -x31834 - x31835 + x31836 - x31837 + x31838 + x31839 + x31840;
double x31842 = L*(x31821 + x6679) + x70*(-x13705 + x13708 - x13710 + x13712 - x13714 + x31717);
double x31843 = x518*x9;
double x31844 = x11*x518;
double x31845 = p5_i*x11440;
double x31846 = x14034*x31691;
double x31847 = x29499*x5186;
double x31848 = -x31843 - x31844 + x31845 - x31846 + x31847;
double x31849 = x31816 + x31817 - x31818 + x31819 - x31820;
double x31850 = x31828 + x31849;
double x31851 = L*x14005;
double x31852 = L*x14007;
double x31853 = x11332*x570;
double x31854 = x11329*x570;
double x31855 = -x14003 + x31851 - x31852 + x31853 - x31854;
double x31856 = 6*x13971;
double x31857 = x5214*x533;
double x31858 = 6*x13976;
double x31859 = 6*x13980;
double x31860 = 6*x13981;
double x31861 = x4142*x9;
double x31862 = x11*x4142;
double x31863 = x11440*x540;
double x31864 = x11442*x540;
double x31865 = x11444*x540;
double x31866 = x31829 + x31830 - x31831 + x31832 - x31833;
double x31867 = 4*x14003;
double x31868 = x14007*x158;
double x31869 = x14005*x158;
double x31870 = x14011*x158;
double x31871 = x14009*x158;
double x31872 = -x31867 - x31868 + x31869 - x31870 + x31871;
double x31873 = -x31861 - x31862 + x31863 - x31864 + x31865 + x31866 + x31872;
double x31874 = L*(x31848 + x7001) + x70*(-x14002 + x14005 - x14007 + x14009 - x14011 + x31717);
double x31875 = x548*x9;
double x31876 = x11*x548;
double x31877 = p6_i*x11440;
double x31878 = x14321*x31691;
double x31879 = x29801*x5186;
double x31880 = -x31875 - x31876 + x31877 - x31878 + x31879;
double x31881 = x31843 + x31844 - x31845 + x31846 - x31847;
double x31882 = x31855 + x31881;
double x31883 = L*x14291;
double x31884 = L*x14293;
double x31885 = x11332*x600;
double x31886 = x11329*x600;
double x31887 = -x14289 + x31883 - x31884 + x31885 - x31886;
double x31888 = 6*x14257;
double x31889 = x5214*x563;
double x31890 = 6*x14262;
double x31891 = 6*x14267;
double x31892 = 6*x14268;
double x31893 = x4226*x9;
double x31894 = x11*x4226;
double x31895 = x11440*x570;
double x31896 = x11442*x570;
double x31897 = x11444*x570;
double x31898 = x31856 + x31857 - x31858 + x31859 - x31860;
double x31899 = 4*x14289;
double x31900 = x14293*x158;
double x31901 = x14291*x158;
double x31902 = x14297*x158;
double x31903 = x14295*x158;
double x31904 = -x31899 - x31900 + x31901 - x31902 + x31903;
double x31905 = -x31893 - x31894 + x31895 - x31896 + x31897 + x31898 + x31904;
double x31906 = L*(x31880 + x6120) + x70*(-x14288 + x14291 - x14293 + x14295 - x14297 + x31717);
double x31907 = x578*x9;
double x31908 = x11*x578;
double x31909 = p7_i*x11440;
double x31910 = x14616*x31691;
double x31911 = x30100*x5186;
double x31912 = -x31907 - x31908 + x31909 - x31910 + x31911;
double x31913 = x31875 + x31876 - x31877 + x31878 - x31879;
double x31914 = x31887 + x31913;
double x31915 = L*x14590;
double x31916 = L*x14592;
double x31917 = x11332*x630;
double x31918 = x11329*x630;
double x31919 = -x14588 + x31915 - x31916 + x31917 - x31918;
double x31920 = 6*x14554;
double x31921 = x5214*x593;
double x31922 = 6*x14559;
double x31923 = 6*x14565;
double x31924 = 6*x14566;
double x31925 = x4309*x9;
double x31926 = x11*x4309;
double x31927 = x11440*x600;
double x31928 = x11442*x600;
double x31929 = x11444*x600;
double x31930 = x31888 + x31889 - x31890 + x31891 - x31892;
double x31931 = 4*x14588;
double x31932 = x14592*x158;
double x31933 = x14590*x158;
double x31934 = x14628*x158;
double x31935 = x14637*x158;
double x31936 = -x31931 - x31932 + x31933 - x31934 + x31935;
double x31937 = -x31925 - x31926 + x31927 - x31928 + x31929 + x31930 + x31936;
double x31938 = L*(x31912 + x7627) + x70*(-x14587 + x14590 - x14592 - x14628 + x14637 + x31717);
double x31939 = x608*x9;
double x31940 = x11*x608;
double x31941 = p8_i*x11440;
double x31942 = x14905*x31691;
double x31943 = x30404*x5186;
double x31944 = -x31939 - x31940 + x31941 - x31942 + x31943;
double x31945 = x31907 + x31908 - x31909 + x31910 - x31911;
double x31946 = x31919 + x31945;
double x31947 = x11332*x634;
double x31948 = x11329*x634;
double x31949 = -x14867 + x14876 - x14879 + x31947 - x31948;
double x31950 = 6*x14848;
double x31951 = x5214*x623;
double x31952 = 6*x14851;
double x31953 = 6*x14857;
double x31954 = 6*x14855;
double x31955 = x4391*x9;
double x31956 = x11*x4391;
double x31957 = x11440*x630;
double x31958 = x11442*x630;
double x31959 = x11444*x630;
double x31960 = x31920 + x31921 - x31922 + x31923 - x31924;
double x31961 = 4*x14867;
double x31962 = x14878*x158;
double x31963 = x14875*x158;
double x31964 = x14917*x158;
double x31965 = x14926*x158;
double x31966 = -x31961 - x31962 + x31963 - x31964 + x31965;
double x31967 = -x31955 - x31956 + x31957 - x31958 + x31959 + x31960 + x31966;
double x31968 = L*(x31944 + x5645) + x70*(-x14866 + x14875 - x14878 - x14917 + x14926 + x31717);
double x31969 = -x31728 + x31729 - x31730 + x31731 - x31732;
double x31970 = x31939 + x31940 - x31941 + x31942 - x31943;
double x31971 = x31949 + x31970;
double x31972 = -x31747 + x31748 - x31749 + x31750 - x31751;
double x31973 = x4472*x9;
double x31974 = x11*x4472;
double x31975 = x11440*x634;
double x31976 = x11442*x634;
double x31977 = x11444*x634;
double x31978 = x31950 + x31951 - x31952 + x31953 - x31954;
double x31979 = 4*x15143;
double x31980 = x15146*x158;
double x31981 = x12724*x158;
double x31982 = x12731*x158;
double x31983 = x12752*x158;
double x31984 = -x31979 - x31980 + x31981 - x31982 + x31983;
double x31985 = -x31973 - x31974 + x31975 - x31976 + x31977 + x31978 + x31984;
double x31986 = L*(x31969 + x6412) + x70*(-x12662 + x12724 - x12731 + x12752 - x15146 + x31717);
double x31987 = -x11657 - x11659 + x11660 + x31690 - x31692;
double x31988 = x637*x9;
double x31989 = q2_i*x11440;
double x31990 = x11*x637;
double x31991 = x25530*x5186;
double x31992 = x11683*x31691;
double x31993 = x31988 - x31989 + x31990 - x31991 + x31992;
double x31994 = L*x12030;
double x31995 = L*x12036;
double x31996 = L*x12050;
double x31997 = x11332*x663;
double x31998 = x11329*x663;
double x31999 = -x31994 + x31995 - x31996 + x31997 - x31998;
double x32000 = 6*x11712;
double x32001 = 6*x11717;
double x32002 = 6*x11721;
double x32003 = 6*x11719;
double x32004 = x11715 + x32000 - x32001 - x32002 + x32003;
double x32005 = 4*x11320;
double x32006 = x11326*x158;
double x32007 = x11324*x158;
double x32008 = 4*x11334;
double x32009 = 4*x11335;
double x32010 = -x32005 - x32006 + x32007 - x32008 + x32009;
double x32011 = x12017 + x32004 + x32010;
double x32012 = q1_i_dot*x11332;
double x32013 = q1_i_dot*x11329;
double x32014 = L*(x11663 + x31987) + x70*(-x11319 + x11324 - x11326 + x31717 + x32012 - x32013);
double x32015 = -x31988 + x31989 - x31990 + x31991 - x31992;
double x32016 = x666*x9;
double x32017 = q3_i*x11440;
double x32018 = x11*x666;
double x32019 = x25855*x5186;
double x32020 = x12040*x31691;
double x32021 = x32016 - x32017 + x32018 - x32019 + x32020;
double x32022 = L*x12063;
double x32023 = L*x12064;
double x32024 = x11332*x692;
double x32025 = x11329*x692;
double x32026 = -x12327 + x32022 - x32023 + x32024 - x32025;
double x32027 = x32021 + x32026;
double x32028 = x3768*x9;
double x32029 = x11*x3768;
double x32030 = x11440*x692;
double x32031 = x11442*x692;
double x32032 = x11444*x692;
double x32033 = 6*x12020;
double x32034 = 6*x12053;
double x32035 = 6*x12058;
double x32036 = 6*x12054;
double x32037 = x12316 + x32033 - x32034 - x32035 + x32036;
double x32038 = 4*x31994;
double x32039 = x12050*x158;
double x32040 = x12036*x158;
double x32041 = q2_i_dot*x11329;
double x32042 = x158*x32041;
double x32043 = q2_i_dot*x11332;
double x32044 = x158*x32043;
double x32045 = -x32038 - x32039 + x32040 - x32042 + x32044;
double x32046 = -x32028 - x32029 + x32030 - x32031 + x32032 + x32037 + x32045;
double x32047 = L*(x12007 + x32015) + x70*(-x12030 + x12036 - x12050 + x31717 - x32041 + x32043);
double x32048 = -x32016 + x32017 - x32018 + x32019 - x32020;
double x32049 = x695*x9;
double x32050 = q4_i*x11440;
double x32051 = x11*x695;
double x32052 = x26202*x5186;
double x32053 = x12351*x31691;
double x32054 = x32049 - x32050 + x32051 - x32052 + x32053;
double x32055 = L*x12347;
double x32056 = L*x12363;
double x32057 = x11332*x721;
double x32058 = x11329*x721;
double x32059 = -x15314 + x32055 - x32056 + x32057 - x32058;
double x32060 = x32054 + x32059;
double x32061 = x4570*x9;
double x32062 = x11*x4570;
double x32063 = x11440*x721;
double x32064 = x11442*x721;
double x32065 = x11444*x721;
double x32066 = 6*x12332;
double x32067 = 6*x12366;
double x32068 = x5214*x714;
double x32069 = 6*x12375;
double x32070 = 6*x12367;
double x32071 = x32066 - x32067 + x32068 - x32069 + x32070;
double x32072 = 4*x12327;
double x32073 = x12064*x158;
double x32074 = x12063*x158;
double x32075 = x12066*x158;
double x32076 = x12065*x158;
double x32077 = -x32072 - x32073 + x32074 - x32075 + x32076;
double x32078 = -x32061 - x32062 + x32063 - x32064 + x32065 + x32071 + x32077;
double x32079 = L*(x12322 + x32048) + x70*(-x12060 + x12063 - x12064 + x12065 - x12066 + x31717);
double x32080 = -x32049 + x32050 - x32051 + x32052 - x32053;
double x32081 = x724*x9;
double x32082 = q5_i*x11440;
double x32083 = x11*x724;
double x32084 = x26534*x5186;
double x32085 = x15342*x31691;
double x32086 = x32081 - x32082 + x32083 - x32084 + x32085;
double x32087 = L*x15339;
double x32088 = L*x15352;
double x32089 = x11332*x750;
double x32090 = x11329*x750;
double x32091 = -x15619 + x32087 - x32088 + x32089 - x32090;
double x32092 = x32086 + x32091;
double x32093 = x4661*x9;
double x32094 = x11*x4661;
double x32095 = x11440*x750;
double x32096 = x11442*x750;
double x32097 = x11444*x750;
double x32098 = 6*x15323;
double x32099 = 6*x15354;
double x32100 = x5214*x743;
double x32101 = 6*x15363;
double x32102 = 6*x15357;
double x32103 = x32098 - x32099 + x32100 - x32101 + x32102;
double x32104 = x15320 - x32093 - x32094 + x32095 - x32096 + x32097 + x32103;
double x32105 = L*(x15309 + x32080) + x70*(-x12340 + x12347 - x12363 + x12368 - x12372 + x31717);
double x32106 = -x32081 + x32082 - x32083 + x32084 - x32085;
double x32107 = x753*x9;
double x32108 = q6_i*x11440;
double x32109 = x11*x753;
double x32110 = x26851*x5186;
double x32111 = x15646*x31691;
double x32112 = x32107 - x32108 + x32109 - x32110 + x32111;
double x32113 = L*x15643;
double x32114 = L*x15658;
double x32115 = x11332*x779;
double x32116 = x11329*x779;
double x32117 = -x15918 + x32113 - x32114 + x32115 - x32116;
double x32118 = x32112 + x32117;
double x32119 = x4749*x9;
double x32120 = x11*x4749;
double x32121 = x11440*x779;
double x32122 = x11442*x779;
double x32123 = x11444*x779;
double x32124 = 6*x15628;
double x32125 = 6*x15660;
double x32126 = x5214*x772;
double x32127 = 6*x15668;
double x32128 = 6*x15662;
double x32129 = x32124 - x32125 + x32126 - x32127 + x32128;
double x32130 = 4*x15619;
double x32131 = x15352*x158;
double x32132 = x15339*x158;
double x32133 = x15361*x158;
double x32134 = x15358*x158;
double x32135 = -x32130 - x32131 + x32132 - x32133 + x32134;
double x32136 = -x32119 - x32120 + x32121 - x32122 + x32123 + x32129 + x32135;
double x32137 = L*(x15614 + x32106) + x70*(-x15331 + x15339 - x15352 + x15358 - x15361 + x31717);
double x32138 = -x32107 + x32108 - x32109 + x32110 - x32111;
double x32139 = x782*x9;
double x32140 = q7_i*x11440;
double x32141 = x11*x782;
double x32142 = x27178*x5186;
double x32143 = x15946*x31691;
double x32144 = x32139 - x32140 + x32141 - x32142 + x32143;
double x32145 = L*x15941;
double x32146 = L*x15956;
double x32147 = x11332*x808;
double x32148 = x11329*x808;
double x32149 = -x16211 + x32145 - x32146 + x32147 - x32148;
double x32150 = x32144 + x32149;
double x32151 = x4837*x9;
double x32152 = x11*x4837;
double x32153 = x11440*x808;
double x32154 = x11442*x808;
double x32155 = x11444*x808;
double x32156 = 6*x15927;
double x32157 = 6*x15959;
double x32158 = x5214*x801;
double x32159 = 6*x15969;
double x32160 = 6*x15961;
double x32161 = x32156 - x32157 + x32158 - x32159 + x32160;
double x32162 = 4*x15918;
double x32163 = x15658*x158;
double x32164 = x15643*x158;
double x32165 = x15666*x158;
double x32166 = x15663*x158;
double x32167 = -x32162 - x32163 + x32164 - x32165 + x32166;
double x32168 = -x32151 - x32152 + x32153 - x32154 + x32155 + x32161 + x32167;
double x32169 = L*(x15913 + x32138) + x70*(-x15636 + x15643 - x15658 + x15663 - x15666 + x31717);
double x32170 = -x32139 + x32140 - x32141 + x32142 - x32143;
double x32171 = x811*x9;
double x32172 = q8_i*x11440;
double x32173 = x11*x811;
double x32174 = x27516*x5186;
double x32175 = x16238*x31691;
double x32176 = x32171 - x32172 + x32173 - x32174 + x32175;
double x32177 = x11332*x837;
double x32178 = x11329*x837;
double x32179 = -x16510 - x16512 + x16514 + x32177 - x32178;
double x32180 = x32176 + x32179;
double x32181 = x4924*x9;
double x32182 = x11*x4924;
double x32183 = x11440*x837;
double x32184 = x11442*x837;
double x32185 = x11444*x837;
double x32186 = 6*x16220;
double x32187 = 6*x16252;
double x32188 = x5214*x830;
double x32189 = 6*x16260;
double x32190 = 6*x16254;
double x32191 = x32186 - x32187 + x32188 - x32189 + x32190;
double x32192 = 4*x16211;
double x32193 = x158*x15956;
double x32194 = x158*x15941;
double x32195 = x158*x15966;
double x32196 = x158*x15962;
double x32197 = -x32192 - x32193 + x32194 - x32195 + x32196;
double x32198 = -x32181 - x32182 + x32183 - x32184 + x32185 + x32191 + x32197;
double x32199 = L*(x16206 + x32170) + x70*(-x15935 + x15941 - x15956 + x15962 - x15966 + x31717);
double x32200 = -x32171 + x32172 - x32173 + x32174 - x32175;
double x32201 = x840*x9;
double x32202 = q9_i*x11440;
double x32203 = x11*x840;
double x32204 = x27839*x5186;
double x32205 = x16535*x31691;
double x32206 = L*x16531;
double x32207 = L*x16545;
double x32208 = x11332*x866;
double x32209 = x11329*x866;
double x32210 = -x16794 + x32206 - x32207 + x32208 - x32209;
double x32211 = x32201 - x32202 + x32203 - x32204 + x32205 + x32210;
double x32212 = 6*x16518;
double x32213 = 6*x16547;
double x32214 = x5214*x859;
double x32215 = 6*x16554;
double x32216 = 6*x16548;
double x32217 = 4*x16510;
double x32218 = x158*x16250;
double x32219 = x158*x16234;
double x32220 = x158*x16258;
double x32221 = x158*x16255;
double x32222 = -x32217 - x32218 + x32219 - x32220 + x32221;
double x32223 = x5013*x9;
double x32224 = x11*x5013;
double x32225 = x11440*x866;
double x32226 = x11444*x866;
double x32227 = -x11442*x866 - x32223 - x32224 + x32225 + x32226;
double x32228 = x32212 - x32213 + x32214 - x32215 + x32216 + x32222 + x32227;
double x32229 = L*(x16507 + x32200) + x70*(-x16228 + x16234 - x16250 + x16255 - x16258 + x31717);
double x32230 = q10_i_dt*x5437;
double x32231 = x5179*x872;
double x32232 = q10_i*x11440;
double x32233 = x11*x5091;
double x32234 = x11323*x875;
double x32235 = x5215*x872;
double x32236 = q10_i*x11444;
double x32237 = q10_i*x11442;
double x32238 = x11332*x875;
double x32239 = x11329*x875;
double x32240 = -x32201 + x32202 - x32203 + x32204 - x32205;
double x32241 = x5179*x877;
double x32242 = 6*x16825;
double x32243 = x5437*x872;
double x32244 = x5215*x877;
double x32245 = x11332*x31688;
double x32246 = x17015*x872;
double x32247 = x11440*x875;
double x32248 = x11329*x31688;
double x32249 = x11442*x875;
double x32250 = x11444*x875;
double x32251 = -x32212 + x32213 - x32214 + x32215 - x32216;
double x32252 = 4*x16794;
double x32253 = x158*x16545;
double x32254 = x158*x16531;
double x32255 = x158*x16552;
double x32256 = x158*x16549;
double x32257 = -x32252 - x32253 + x32254 - x32255 + x32256;
double x32258 = L*(x16791 + x32240) + x70*(-x16526 + x16531 - x16545 + x16549 - x16552 + x31717);
double x32259 = x11806*x379;
double x32260 = x11*x3883;
double x32261 = x11440*x898;
double x32262 = x11444*x898;
double x32263 = 8*x12613;
double x32264 = 8*x12619;
double x32265 = 8*x12654;
double x32266 = 8*x12655;
double x32267 = 8*x12625;
double x32268 = 8*x12689;
double x32269 = x1921*x5214;
double x32270 = 8*x12691;
double x32271 = 8*x12756;
double x32272 = 8*x12728;
double x32273 = -x32268 - x32269 + x32270 - x32271 + x32272;
double x32274 = x31979 + x31980 - x31981 + x31982 - x31983;
double x32275 = x31753 + x31754 - x31755 + x31756 - x31757;
double x32276 = 5*x15143;
double x32277 = 7*x12638;
double x32278 = x12647*x286;
double x32279 = x12724*x154;
double x32280 = x15146*x154;
double x32281 = x12649*x286;
double x32282 = 7*x31721;
double x32283 = x12752*x154;
double x32284 = x12731*x154;
double x32285 = 7*x31722;
double x32286 = 12*x12689;
double x32287 = x1896*x5214;
double x32288 = 12*x12691;
double x32289 = 12*x12756;
double x32290 = 12*x12728;
double x32291 = -x32286 - x32287 + x32288 - x32289 + x32290;
double x32292 = 12*x12613;
double x32293 = 12*x12619;
double x32294 = 12*x12654;
double x32295 = 12*x12655;
double x32296 = 12*x12625;
double x32297 = x32292 - x32293 + x32294 - x32295 + x32296;
double x32298 = x31739 + x31740 - x31741 + x31742 - x31743;
double x32299 = 18*x12613;
double x32300 = 18*x12654;
double x32301 = 16*x12638;
double x32302 = 6*x15143;
double x32303 = 18*x12619;
double x32304 = 18*x12625;
double x32305 = x12649*x327;
double x32306 = x129*x15146;
double x32307 = x12724*x129;
double x32308 = x12647*x327;
double x32309 = 18*x12655;
double x32310 = 16*x31722;
double x32311 = x12731*x129;
double x32312 = x12752*x129;
double x32313 = 16*x31721;
double x32314 = 18*x12691;
double x32315 = 18*x12728;
double x32316 = 18*x12756;
double x32317 = x15136 + x15140 - x32314 - x32315 + x32316;
double x32318 = x32286 + x32287 - x32288 + x32289 - x32290;
double x32319 = x32268 + x32269 - x32270 + x32271 - x32272;
double x32320 = -x15136 - x15140 + x32314 + x32315 - x32316;
double x32321 = x5214*x933;
double x32322 = 7*x15143;
double x32323 = 5*x14867;
double x32324 = x15146*x286;
double x32325 = x14878*x154;
double x32326 = x14875*x154;
double x32327 = x12724*x286;
double x32328 = 7*x31737;
double x32329 = x14917*x154;
double x32330 = x14926*x154;
double x32331 = 7*x31736;
double x32332 = 12*x14848;
double x32333 = 12*x14851;
double x32334 = 12*x14884;
double x32335 = 12*x14855;
double x32336 = 12*x14857;
double x32337 = x32332 - x32333 + x32334 - x32335 + x32336;
double x32338 = 6*x14867;
double x32339 = 16*x15143;
double x32340 = x12724*x327;
double x32341 = x129*x14875;
double x32342 = x129*x14878;
double x32343 = x15146*x327;
double x32344 = 16*x31736;
double x32345 = x129*x14926;
double x32346 = x129*x14917;
double x32347 = 16*x31737;
double x32348 = 18*x14848;
double x32349 = 18*x14884;
double x32350 = 18*x14851;
double x32351 = 18*x14857;
double x32352 = 18*x14855;
double x32353 = -x32348 - x32349 + x32350 - x32351 + x32352;
double x32354 = 8*x14848;
double x32355 = 8*x14851;
double x32356 = 8*x14884;
double x32357 = 8*x14855;
double x32358 = 8*x14857;
double x32359 = x32354 - x32355 + x32356 - x32357 + x32358;
double x32360 = -x8310;
double x32361 = -x32354 + x32355 - x32356 + x32357 - x32358;
double x32362 = x31961 + x31962 - x31963 + x31964 - x31965;
double x32363 = -x32332 + x32333 - x32334 + x32335 - x32336;
double x32364 = x32348 + x32349 - x32350 + x32351 - x32352;
double x32365 = 7*x14867;
double x32366 = 5*x14588;
double x32367 = x14878*x286;
double x32368 = x14592*x154;
double x32369 = x14590*x154;
double x32370 = x14875*x286;
double x32371 = 7*x31948;
double x32372 = x14628*x154;
double x32373 = x14637*x154;
double x32374 = 7*x31947;
double x32375 = 12*x14554;
double x32376 = 12*x14559;
double x32377 = 12*x14563;
double x32378 = 12*x14566;
double x32379 = 12*x14565;
double x32380 = x32375 - x32376 + x32377 - x32378 + x32379;
double x32381 = 6*x14588;
double x32382 = 16*x14867;
double x32383 = x14875*x327;
double x32384 = x129*x14590;
double x32385 = x129*x14592;
double x32386 = x14878*x327;
double x32387 = 16*x31947;
double x32388 = x129*x14637;
double x32389 = x129*x14628;
double x32390 = 16*x31948;
double x32391 = 18*x14554;
double x32392 = 18*x14563;
double x32393 = 18*x14559;
double x32394 = 18*x14565;
double x32395 = 18*x14566;
double x32396 = -x32391 - x32392 + x32393 - x32394 + x32395;
double x32397 = 8*x14554;
double x32398 = 8*x14559;
double x32399 = 8*x14563;
double x32400 = 8*x14566;
double x32401 = 8*x14565;
double x32402 = x32397 - x32398 + x32399 - x32400 + x32401;
double x32403 = -x7995;
double x32404 = -x32397 + x32398 - x32399 + x32400 - x32401;
double x32405 = x31931 + x31932 - x31933 + x31934 - x31935;
double x32406 = -x32375 + x32376 - x32377 + x32378 - x32379;
double x32407 = x32391 + x32392 - x32393 + x32394 - x32395;
double x32408 = 5*x14289;
double x32409 = x14293*x154;
double x32410 = x14291*x154;
double x32411 = x14297*x154;
double x32412 = x14295*x154;
double x32413 = 12*x14262;
double x32414 = 12*x14286;
double x32415 = 12*x14268;
double x32416 = 12*x14267;
double x32417 = x14258 - x32413 + x32414 - x32415 + x32416;
double x32418 = 16*x14588;
double x32419 = x14590*x327;
double x32420 = x14592*x327;
double x32421 = 16*x31917;
double x32422 = 16*x31918;
double x32423 = 18*x14257;
double x32424 = 18*x14286;
double x32425 = 18*x14262;
double x32426 = 18*x14267;
double x32427 = 18*x14268;
double x32428 = -x32423 - x32424 + x32425 - x32426 + x32427;
double x32429 = 8*x14257;
double x32430 = 8*x14262;
double x32431 = 8*x14286;
double x32432 = 8*x14268;
double x32433 = 8*x14267;
double x32434 = x32429 - x32430 + x32431 - x32432 + x32433;
double x32435 = -x7681;
double x32436 = -x32429 + x32430 - x32431 + x32432 - x32433;
double x32437 = x31899 + x31900 - x31901 + x31902 - x31903;
double x32438 = -x14258 + x32413 - x32414 + x32415 - x32416;
double x32439 = x32423 + x32424 - x32425 + x32426 - x32427;
double x32440 = 7*x14289;
double x32441 = x14293*x286;
double x32442 = x14291*x286;
double x32443 = 7*x31886;
double x32444 = 7*x31885;
double x32445 = 12*x13971;
double x32446 = 12*x13976;
double x32447 = 12*x13979;
double x32448 = 12*x13981;
double x32449 = 12*x13980;
double x32450 = x32445 - x32446 + x32447 - x32448 + x32449;
double x32451 = 6*x14003;
double x32452 = 16*x14289;
double x32453 = x14291*x327;
double x32454 = x129*x14005;
double x32455 = x129*x14007;
double x32456 = x14293*x327;
double x32457 = 16*x31885;
double x32458 = x129*x14009;
double x32459 = x129*x14011;
double x32460 = 16*x31886;
double x32461 = 18*x13971;
double x32462 = 18*x13979;
double x32463 = 18*x13976;
double x32464 = 18*x13980;
double x32465 = 18*x13981;
double x32466 = -x32461 - x32462 + x32463 - x32464 + x32465;
double x32467 = 8*x13971;
double x32468 = 8*x13976;
double x32469 = 8*x13979;
double x32470 = 8*x13981;
double x32471 = 8*x13980;
double x32472 = x32467 - x32468 + x32469 - x32470 + x32471;
double x32473 = -x7359;
double x32474 = -x8370;
double x32475 = -x32467 + x32468 - x32469 + x32470 - x32471;
double x32476 = x31867 + x31868 - x31869 + x31870 - x31871;
double x32477 = -x32445 + x32446 - x32447 + x32448 - x32449;
double x32478 = x32461 + x32462 - x32463 + x32464 - x32465;
double x32479 = 7*x14003;
double x32480 = 5*x13706;
double x32481 = x14007*x286;
double x32482 = x13710*x154;
double x32483 = x13708*x154;
double x32484 = x14005*x286;
double x32485 = 7*x31854;
double x32486 = x13714*x154;
double x32487 = x13712*x154;
double x32488 = 7*x31853;
double x32489 = 12*x13673;
double x32490 = 12*x13678;
double x32491 = 12*x13703;
double x32492 = 12*x13685;
double x32493 = 12*x13684;
double x32494 = x32489 - x32490 + x32491 - x32492 + x32493;
double x32495 = 6*x13706;
double x32496 = 16*x14003;
double x32497 = x14005*x327;
double x32498 = x129*x13708;
double x32499 = x129*x13710;
double x32500 = x14007*x327;
double x32501 = 16*x31853;
double x32502 = x129*x13712;
double x32503 = x129*x13714;
double x32504 = 16*x31854;
double x32505 = 18*x13673;
double x32506 = 18*x13703;
double x32507 = 18*x13678;
double x32508 = 18*x13684;
double x32509 = 18*x13685;
double x32510 = -x32505 - x32506 + x32507 - x32508 + x32509;
double x32511 = 8*x13703;
double x32512 = 8*x13685;
double x32513 = 8*x13684;
double x32514 = x13674 - x13679 + x32511 - x32512 + x32513;
double x32515 = -x7058;
double x32516 = -x8061;
double x32517 = -x13674 + x13679 - x32511 + x32512 - x32513;
double x32518 = -x32489 + x32490 - x32491 + x32492 - x32493;
double x32519 = x32505 + x32506 - x32507 + x32508 - x32509;
double x32520 = 7*x13706;
double x32521 = 5*x13390;
double x32522 = x13710*x286;
double x32523 = x13402*x154;
double x32524 = x13399*x154;
double x32525 = x13708*x286;
double x32526 = 7*x31827;
double x32527 = x13449*x154;
double x32528 = x13460*x154;
double x32529 = 7*x31826;
double x32530 = 12*x13370;
double x32531 = 12*x13373;
double x32532 = 12*x13410;
double x32533 = 12*x13377;
double x32534 = 12*x13379;
double x32535 = x32530 - x32531 + x32532 - x32533 + x32534;
double x32536 = 6*x13390;
double x32537 = 16*x13706;
double x32538 = x13708*x327;
double x32539 = x129*x13399;
double x32540 = x129*x13402;
double x32541 = x13710*x327;
double x32542 = 16*x31826;
double x32543 = x129*x13460;
double x32544 = x129*x13449;
double x32545 = 16*x31827;
double x32546 = 18*x13410;
double x32547 = 18*x13373;
double x32548 = 18*x13379;
double x32549 = 18*x13377;
double x32550 = -x13415 - x32546 + x32547 - x32548 + x32549;
double x32551 = 8*x13370;
double x32552 = 8*x13373;
double x32553 = 8*x13410;
double x32554 = 8*x13377;
double x32555 = 8*x13379;
double x32556 = x32551 - x32552 + x32553 - x32554 + x32555;
double x32557 = -x6743;
double x32558 = -x7741;
double x32559 = -x32551 + x32552 - x32553 + x32554 - x32555;
double x32560 = x31808 + x31809 - x31810 + x31811 - x31812;
double x32561 = -x32530 + x32531 - x32532 + x32533 - x32534;
double x32562 = x13415 + x32546 - x32547 + x32548 - x32549;
double x32563 = 7*x13390;
double x32564 = 5*x31766;
double x32565 = x13402*x286;
double x32566 = x13102*x154;
double x32567 = x13116*x154;
double x32568 = x13399*x286;
double x32569 = 7*x31802;
double x32570 = x13123*x154;
double x32571 = x13129*x154;
double x32572 = 7*x31801;
double x32573 = 12*x13048;
double x32574 = 12*x13074;
double x32575 = 12*x13052;
double x32576 = 12*x13054;
double x32577 = x13085 - x32573 + x32574 - x32575 + x32576;
double x32578 = 6*x31766;
double x32579 = 16*x13390;
double x32580 = x13399*x327;
double x32581 = x129*x13116;
double x32582 = x129*x13102;
double x32583 = x13402*x327;
double x32584 = 16*x31801;
double x32585 = x129*x13129;
double x32586 = x129*x13123;
double x32587 = 16*x31802;
double x32588 = 18*x13074;
double x32589 = 18*x13048;
double x32590 = 18*x13054;
double x32591 = 18*x13052;
double x32592 = -x13428 - x32588 + x32589 - x32590 + x32591;
double x32593 = 8*x13045;
double x32594 = 8*x13048;
double x32595 = 8*x13074;
double x32596 = 8*x13052;
double x32597 = 8*x13054;
double x32598 = x32593 - x32594 + x32595 - x32596 + x32597;
double x32599 = -x7426;
double x32600 = -x32593 + x32594 - x32595 + x32596 - x32597;
double x32601 = x31783 + x31784 - x31785 + x31786 - x31787;
double x32602 = -x13085 + x32573 - x32574 + x32575 - x32576;
double x32603 = x13428 + x32588 - x32589 + x32590 - x32591;
double x32604 = 7*x31766;
double x32605 = 5*x11479;
double x32606 = x13102*x286;
double x32607 = x11485*x154;
double x32608 = x11489*x154;
double x32609 = x13116*x286;
double x32610 = 7*x31770;
double x32611 = x11634*x154;
double x32612 = x11636*x154;
double x32613 = 7*x31769;
double x32614 = 12*x11504;
double x32615 = 12*x11505;
double x32616 = 12*x11506;
double x32617 = 12*x11507;
double x32618 = x13096 - x32614 + x32615 - x32616 + x32617;
double x32619 = 6*x11479;
double x32620 = 16*x31766;
double x32621 = x13116*x327;
double x32622 = x11489*x129;
double x32623 = x11485*x129;
double x32624 = x13102*x327;
double x32625 = 16*x31769;
double x32626 = x11636*x129;
double x32627 = x11634*x129;
double x32628 = 16*x31770;
double x32629 = 18*x11503;
double x32630 = 18*x11505;
double x32631 = 18*x11504;
double x32632 = 18*x11507;
double x32633 = 18*x11506;
double x32634 = -x32629 - x32630 + x32631 - x32632 + x32633;
double x32635 = 8*x11503;
double x32636 = 8*x11504;
double x32637 = 8*x11505;
double x32638 = 8*x11506;
double x32639 = 8*x11507;
double x32640 = x32635 - x32636 + x32637 - x32638 + x32639;
double x32641 = -x5253;
double x32642 = x31711 + x31712 - x31713 + x31714 - x31715;
double x32643 = -x5525;
double x32644 = x32005 + x32006 - x32007 + x32008 - x32009;
double x32645 = 8*x11317;
double x32646 = 8*x11322;
double x32647 = 8*x11321;
double x32648 = 8*x11330;
double x32649 = 8*x11333;
double x32650 = -x32645 - x32646 + x32647 - x32648 + x32649;
double x32651 = 12*x11317;
double x32652 = 12*x11322;
double x32653 = 12*x11321;
double x32654 = x11329*x151;
double x32655 = x11332*x151;
double x32656 = -x32651 - x32652 + x32653 - x32654 + x32655;
double x32657 = 18*x11317;
double x32658 = 18*x11321;
double x32659 = 18*x11322;
double x32660 = 18*x11333;
double x32661 = 18*x11330;
double x32662 = x32657 - x32658 + x32659 - x32660 + x32661;
double x32663 = -x5210;
double x32664 = 4*x11317;
double x32665 = x32038 + x32039 - x32040 + x32042 - x32044;
double x32666 = 8*x11712;
double x32667 = 8*x11814;
double x32668 = 8*x11717;
double x32669 = 8*x11719;
double x32670 = 8*x11721;
double x32671 = -x32666 - x32667 + x32668 - x32669 + x32670;
double x32672 = 5*x31994;
double x32673 = 7*x11320;
double x32674 = x11324*x286;
double x32675 = x12036*x154;
double x32676 = x12050*x154;
double x32677 = x11326*x286;
double x32678 = 7*x11335;
double x32679 = x154*x32043;
double x32680 = x154*x32041;
double x32681 = 7*x11334;
double x32682 = 12*x11712;
double x32683 = 12*x11814;
double x32684 = 12*x11717;
double x32685 = 12*x11719;
double x32686 = 12*x11721;
double x32687 = -x32682 - x32683 + x32684 - x32685 + x32686;
double x32688 = 16*x11320;
double x32689 = 6*x31994;
double x32690 = x11326*x327;
double x32691 = x12050*x129;
double x32692 = x12036*x129;
double x32693 = x11324*x327;
double x32694 = 16*x11334;
double x32695 = x129*x32041;
double x32696 = x129*x32043;
double x32697 = 16*x11335;
double x32698 = 18*x11712;
double x32699 = 18*x11717;
double x32700 = 18*x11814;
double x32701 = 18*x11721;
double x32702 = 18*x11719;
double x32703 = x32698 - x32699 + x32700 - x32701 + x32702;
double x32704 = x32682 + x32683 - x32684 + x32685 - x32686;
double x32705 = x32666 + x32667 - x32668 + x32669 - x32670;
double x32706 = -x32698 + x32699 - x32700 + x32701 - x32702;
double x32707 = 4*x11712;
double x32708 = x32072 + x32073 - x32074 + x32075 - x32076;
double x32709 = 8*x12020;
double x32710 = 8*x12034;
double x32711 = 8*x12053;
double x32712 = 8*x12054;
double x32713 = 8*x12058;
double x32714 = -x32709 - x32710 + x32711 - x32712 + x32713;
double x32715 = 5*x12327;
double x32716 = 7*x31994;
double x32717 = x12036*x286;
double x32718 = x12063*x154;
double x32719 = x12064*x154;
double x32720 = x12050*x286;
double x32721 = x11332*x2887;
double x32722 = x12065*x154;
double x32723 = x12066*x154;
double x32724 = x11329*x2887;
double x32725 = 12*x12020;
double x32726 = 12*x12034;
double x32727 = 12*x12053;
double x32728 = 12*x12054;
double x32729 = 12*x12058;
double x32730 = -x32725 - x32726 + x32727 - x32728 + x32729;
double x32731 = 16*x31994;
double x32732 = 6*x12327;
double x32733 = x12050*x327;
double x32734 = x12064*x129;
double x32735 = x12063*x129;
double x32736 = x12036*x327;
double x32737 = x11329*x2930;
double x32738 = x12066*x129;
double x32739 = x12065*x129;
double x32740 = x11332*x2930;
double x32741 = 18*x12020;
double x32742 = 18*x12053;
double x32743 = 18*x12034;
double x32744 = 18*x12058;
double x32745 = 18*x12054;
double x32746 = x32741 - x32742 + x32743 - x32744 + x32745;
double x32747 = x32725 + x32726 - x32727 + x32728 - x32729;
double x32748 = x32709 + x32710 - x32711 + x32712 - x32713;
double x32749 = -x32741 + x32742 - x32743 + x32744 - x32745;
double x32750 = -x5877;
double x32751 = 4*x12020;
double x32752 = x15315 + x15316 - x15317 + x15318 - x15319;
double x32753 = 8*x12367;
double x32754 = 8*x12375;
double x32755 = -x15304 + x15307 - x15308 - x32753 + x32754;
double x32756 = 5*x15314;
double x32757 = 7*x12327;
double x32758 = x12063*x286;
double x32759 = x12347*x154;
double x32760 = x12363*x154;
double x32761 = x12064*x286;
double x32762 = 7*x32024;
double x32763 = x12368*x154;
double x32764 = x12372*x154;
double x32765 = 7*x32025;
double x32766 = 12*x12332;
double x32767 = 12*x12345;
double x32768 = 12*x12366;
double x32769 = 12*x12367;
double x32770 = 12*x12375;
double x32771 = -x32766 - x32767 + x32768 - x32769 + x32770;
double x32772 = 16*x12327;
double x32773 = 6*x15314;
double x32774 = x12064*x327;
double x32775 = x12363*x129;
double x32776 = x12347*x129;
double x32777 = x12063*x327;
double x32778 = 16*x32025;
double x32779 = x12372*x129;
double x32780 = x12368*x129;
double x32781 = 16*x32024;
double x32782 = 18*x12366;
double x32783 = 18*x12345;
double x32784 = 18*x12375;
double x32785 = 18*x12367;
double x32786 = x12333 - x32782 + x32783 - x32784 + x32785;
double x32787 = x32766 + x32767 - x32768 + x32769 - x32770;
double x32788 = x15304 - x15307 + x15308 + x32753 - x32754;
double x32789 = -x12333 + x32782 - x32783 + x32784 - x32785;
double x32790 = x32130 + x32131 - x32132 + x32133 - x32134;
double x32791 = 8*x15323;
double x32792 = 8*x15336;
double x32793 = 8*x15354;
double x32794 = 8*x15357;
double x32795 = 8*x15363;
double x32796 = -x32791 - x32792 + x32793 - x32794 + x32795;
double x32797 = 7*x15314;
double x32798 = x12347*x286;
double x32799 = x12363*x286;
double x32800 = x11332*x3106;
double x32801 = x11329*x3106;
double x32802 = 12*x15323;
double x32803 = 12*x15336;
double x32804 = 12*x15354;
double x32805 = 12*x15357;
double x32806 = 12*x15363;
double x32807 = -x32802 - x32803 + x32804 - x32805 + x32806;
double x32808 = 16*x15314;
double x32809 = 6*x15619;
double x32810 = x12363*x327;
double x32811 = x129*x15352;
double x32812 = x129*x15339;
double x32813 = x12347*x327;
double x32814 = x11329*x3151;
double x32815 = x129*x15361;
double x32816 = x129*x15358;
double x32817 = x11332*x3151;
double x32818 = 18*x15323;
double x32819 = 18*x15354;
double x32820 = 18*x15336;
double x32821 = 18*x15363;
double x32822 = 18*x15357;
double x32823 = x32818 - x32819 + x32820 - x32821 + x32822;
double x32824 = x32802 + x32803 - x32804 + x32805 - x32806;
double x32825 = x32791 + x32792 - x32793 + x32794 - x32795;
double x32826 = -x32818 + x32819 - x32820 + x32821 - x32822;
double x32827 = x32162 + x32163 - x32164 + x32165 - x32166;
double x32828 = 8*x15628;
double x32829 = 8*x15640;
double x32830 = 8*x15660;
double x32831 = 8*x15662;
double x32832 = 8*x15668;
double x32833 = -x32828 - x32829 + x32830 - x32831 + x32832;
double x32834 = 5*x15918;
double x32835 = 7*x15619;
double x32836 = x15339*x286;
double x32837 = x154*x15643;
double x32838 = x154*x15658;
double x32839 = x15352*x286;
double x32840 = 7*x32089;
double x32841 = x154*x15663;
double x32842 = x154*x15666;
double x32843 = 7*x32090;
double x32844 = 12*x15640;
double x32845 = 12*x15660;
double x32846 = 12*x15662;
double x32847 = 12*x15668;
double x32848 = -x15910 - x32844 + x32845 - x32846 + x32847;
double x32849 = 16*x15619;
double x32850 = x15352*x327;
double x32851 = x15339*x327;
double x32852 = 16*x32090;
double x32853 = 16*x32089;
double x32854 = 18*x15628;
double x32855 = 18*x15660;
double x32856 = 18*x15640;
double x32857 = 18*x15668;
double x32858 = 18*x15662;
double x32859 = x32854 - x32855 + x32856 - x32857 + x32858;
double x32860 = x15910 + x32844 - x32845 + x32846 - x32847;
double x32861 = x32828 + x32829 - x32830 + x32831 - x32832;
double x32862 = -x32854 + x32855 - x32856 + x32857 - x32858;
double x32863 = x32192 + x32193 - x32194 + x32195 - x32196;
double x32864 = 8*x15927;
double x32865 = 8*x15939;
double x32866 = 8*x15959;
double x32867 = 8*x15961;
double x32868 = 8*x15969;
double x32869 = -x32864 - x32865 + x32866 - x32867 + x32868;
double x32870 = 5*x16211;
double x32871 = 7*x15918;
double x32872 = x15643*x286;
double x32873 = x154*x15941;
double x32874 = x154*x15956;
double x32875 = x15658*x286;
double x32876 = x11332*x3324;
double x32877 = x154*x15962;
double x32878 = x154*x15966;
double x32879 = x11329*x3324;
double x32880 = 12*x15927;
double x32881 = 12*x15939;
double x32882 = 12*x15959;
double x32883 = 12*x15961;
double x32884 = 12*x15969;
double x32885 = -x32880 - x32881 + x32882 - x32883 + x32884;
double x32886 = 16*x15918;
double x32887 = 6*x16211;
double x32888 = x15658*x327;
double x32889 = x129*x15956;
double x32890 = x129*x15941;
double x32891 = x15643*x327;
double x32892 = x11329*x3367;
double x32893 = x129*x15966;
double x32894 = x129*x15962;
double x32895 = x11332*x3367;
double x32896 = 18*x15927;
double x32897 = 18*x15959;
double x32898 = 18*x15939;
double x32899 = 18*x15969;
double x32900 = 18*x15961;
double x32901 = x32896 - x32897 + x32898 - x32899 + x32900;
double x32902 = x32880 + x32881 - x32882 + x32883 - x32884;
double x32903 = x32864 + x32865 - x32866 + x32867 - x32868;
double x32904 = -x32896 + x32897 - x32898 + x32899 - x32900;
double x32905 = x32217 + x32218 - x32219 + x32220 - x32221;
double x32906 = 8*x16220;
double x32907 = 8*x16232;
double x32908 = 8*x16252;
double x32909 = 8*x16254;
double x32910 = 8*x16260;
double x32911 = -x32906 - x32907 + x32908 - x32909 + x32910;
double x32912 = 5*x16510;
double x32913 = x154*x16234;
double x32914 = x154*x16250;
double x32915 = x154*x16255;
double x32916 = x154*x16258;
double x32917 = 12*x16220;
double x32918 = 12*x16232;
double x32919 = 12*x16252;
double x32920 = 12*x16254;
double x32921 = 12*x16260;
double x32922 = -x32917 - x32918 + x32919 - x32920 + x32921;
double x32923 = 16*x16211;
double x32924 = 6*x16510;
double x32925 = x15956*x327;
double x32926 = x129*x16250;
double x32927 = x129*x16234;
double x32928 = x15941*x327;
double x32929 = 16*x32148;
double x32930 = x129*x16258;
double x32931 = x129*x16255;
double x32932 = 16*x32147;
double x32933 = 18*x16220;
double x32934 = 18*x16252;
double x32935 = 18*x16232;
double x32936 = 18*x16260;
double x32937 = 18*x16254;
double x32938 = x32933 - x32934 + x32935 - x32936 + x32937;
double x32939 = x32917 + x32918 - x32919 + x32920 - x32921;
double x32940 = x32906 + x32907 - x32908 + x32909 - x32910;
double x32941 = -x32933 + x32934 - x32935 + x32936 - x32937;
double x32942 = 8*x16518;
double x32943 = 8*x16530;
double x32944 = 8*x16547;
double x32945 = 8*x16548;
double x32946 = 8*x16554;
double x32947 = -x32942 - x32943 + x32944 - x32945 + x32946;
double x32948 = x32252 + x32253 - x32254 + x32255 - x32256;
double x32949 = 5*x16794;
double x32950 = 7*x16510;
double x32951 = x16234*x286;
double x32952 = x154*x16531;
double x32953 = x154*x16545;
double x32954 = x16250*x286;
double x32955 = x11332*x3542;
double x32956 = x154*x16549;
double x32957 = x154*x16552;
double x32958 = x11329*x3542;
double x32959 = 12*x16518;
double x32960 = 12*x16530;
double x32961 = 12*x16547;
double x32962 = 12*x16548;
double x32963 = 12*x16554;
double x32964 = -x32959 - x32960 + x32961 - x32962 + x32963;
double x32965 = 16*x16510;
double x32966 = 6*x16794;
double x32967 = x16250*x327;
double x32968 = x129*x16545;
double x32969 = x129*x16531;
double x32970 = x16234*x327;
double x32971 = x11329*x3583;
double x32972 = x129*x16552;
double x32973 = x129*x16549;
double x32974 = x11332*x3583;
double x32975 = 18*x16547;
double x32976 = 18*x16530;
double x32977 = 18*x16554;
double x32978 = 18*x16548;
double x32979 = x16788 - x32975 + x32976 - x32977 + x32978;
double x32980 = x32959 + x32960 - x32961 + x32962 - x32963;
double x32981 = x32942 + x32943 - x32944 + x32945 - x32946;
double x32982 = -x16788 + x32975 - x32976 + x32977 - x32978;
double x32983 = x3667*x5179;
double x32984 = x11323*x3670;
double x32985 = 7*x16794;
double x32986 = 5*x32231;
double x32987 = x3667*x5215;
double x32988 = x11332*x3670;
double x32989 = x16545*x286;
double x32990 = 5*x32235;
double x32991 = x11323*x3673;
double x32992 = x16531*x286;
double x32993 = x11329*x3670;
double x32994 = x11329*x3671;
double x32995 = x11329*x3673;
double x32996 = x11332*x3673;
double x32997 = x11332*x3671;
double x32998 = x3646*x5179;
double x32999 = x3646*x5215;
double x33000 = 6*x32231;
double x33001 = 16*x16794;
double x33002 = 18*x16825;
double x33003 = 18*q10_i;
double x33004 = x11329*x33003;
double x33005 = x16531*x327;
double x33006 = x11323*x3632;
double x33007 = 6*x32235;
double x33008 = x16545*x327;
double x33009 = x11332*x33003;
double x33010 = x11332*x3642;
double x33011 = x11332*x3632;
double x33012 = x11329*x3632;
double x33013 = x11329*x3642;
double x33014 = x3655*x5179;
double x33015 = 8*x16825;
double x33016 = 4*x32231;
double x33017 = x3655*x5215;
double x33018 = x11332*x27920;
double x33019 = 4*x32235;
double x33020 = x11323*x3661;
double x33021 = x11329*x27920;
double x33022 = x11329*x3661;
double x33023 = x11332*x3661;
double x33024 = x12993 + x13007 - x13009 + x13019 - x13021;
double x33025 = x13031 + x13032 - x13033 + x13034 - x13035;
double x33026 = x15301 + x33025;
double x33027 = -x168*(x13025 + x13026 - x13027 + x13028 - x13029 + x33024 + x33026);
double x33028 = 3*x12663;
double x33029 = 4*x12660;
double x33030 = x12647*x5540;
double x33031 = 3*x12725;
double x33032 = 3*x12694;
double x33033 = x12649*x5540;
double x33034 = x12754*x5540;
double x33035 = 3*x12753;
double x33036 = 3*x12732;
double x33037 = x12729*x5540;
double x33038 = -7*x12690 + x12691*x286 - 7*x12727 + x12728*x286 - x12756*x286;
double x33039 = x1838*x9;
double x33040 = L*x31725;
double x33041 = -x7367;
double x33042 = x11*x1838;
double x33043 = x11470*x12643;
double x33044 = p10_i*x11472;
double x33045 = 6*x12663;
double x33046 = 6*x12694;
double x33047 = 6*x12725;
double x33048 = 6*x12732;
double x33049 = 6*x12753;
double x33050 = 16*x12690 - x12691*x327 + 16*x12727 - x12728*x327 + x12756*x327;
double x33051 = -5*x12690 + x12691*x154 - 5*x12727 + x12728*x154 - x12756*x154;
double x33052 = L*x31747 + L*x31749 - x12691*x129 - x12728*x129 + x12756*x129;
double x33053 = 4*x12663;
double x33054 = 7*x14849;
double x33055 = x14851*x286;
double x33056 = 4*x12694;
double x33057 = x12724*x5540;
double x33058 = 7*x14853;
double x33059 = x14855*x286;
double x33060 = x12731*x5540;
double x33061 = x12752*x5540;
double x33062 = x14857*x286;
double x33063 = -3*x14889 - 3*x14901 + 3*x14916 - 3*x14918 + 3*x14927;
double x33064 = x15302*x168;
double x33065 = x1845*x9;
double x33066 = L*x31729;
double x33067 = x11*x1845;
double x33068 = p9_i*x11472;
double x33069 = x11470*x12700;
double x33070 = x14889 + x14901 - x14916 + x14918 - x14927;
double x33071 = x11371 + 6*x14889 + 6*x14901 - 6*x14916 + 6*x14918 - 6*x14927;
double x33072 = 5*x14849;
double x33073 = x14851*x154;
double x33074 = 5*x14853;
double x33075 = x14855*x154;
double x33076 = x14857*x154;
double x33077 = L*x31950;
double x33078 = L*x31951;
double x33079 = x129*x14851;
double x33080 = x129*x14857;
double x33081 = x129*x14855;
double x33082 = x15125 + x15126 - x15127 + x15128 - x15129;
double x33083 = 4*x14889;
double x33084 = 7*x14555;
double x33085 = x14559*x286;
double x33086 = x14878*x5540;
double x33087 = x14875*x5540;
double x33088 = x14563*x286;
double x33089 = x14566*x286;
double x33090 = x14917*x5540;
double x33091 = x14926*x5540;
double x33092 = x14565*x286;
double x33093 = -3*x14600 - 3*x14612 + 3*x14627 - 3*x14629 + 3*x14638;
double x33094 = x15131*x168;
double x33095 = x2617*x9;
double x33096 = L*x31941;
double x33097 = x11*x2617;
double x33098 = p8_i*x11472;
double x33099 = x11470*x14905;
double x33100 = x14600 + x14612 - x14627 + x14629 - x14638;
double x33101 = 16*x14555;
double x33102 = x14563*x327;
double x33103 = x14559*x327;
double x33104 = x14565*x327;
double x33105 = x14566*x327;
double x33106 = x11371 + 6*x14600 + 6*x14612 - 6*x14627 + 6*x14629 - 6*x14638;
double x33107 = 5*x14555;
double x33108 = x14559*x154;
double x33109 = x14563*x154;
double x33110 = x14566*x154;
double x33111 = x14565*x154;
double x33112 = L*x31920;
double x33113 = L*x31921;
double x33114 = x129*x14559;
double x33115 = x129*x14565;
double x33116 = x129*x14566;
double x33117 = x14832 + x14833 - x14834 + x14835 - x14836;
double x33118 = 4*x14600;
double x33119 = 7*x14303;
double x33120 = x14262*x286;
double x33121 = x14592*x5540;
double x33122 = x14590*x5540;
double x33123 = 7*x14266;
double x33124 = x14268*x286;
double x33125 = x14628*x5540;
double x33126 = x14637*x5540;
double x33127 = x14267*x286;
double x33128 = -3*x14304 - 3*x14441 + 3*x14442 - 3*x14443 + 3*x14444;
double x33129 = x14838*x168;
double x33130 = L*x31907;
double x33131 = L*x31909;
double x33132 = x11*x2620;
double x33133 = p7_i*x11472;
double x33134 = x11470*x14616;
double x33135 = x14304 + x14441 - x14442 + x14443 - x14444;
double x33136 = 16*x14303;
double x33137 = 16*x14266;
double x33138 = x14262*x327;
double x33139 = x14267*x327;
double x33140 = x14268*x327;
double x33141 = x11371 + 6*x14304 + 6*x14441 - 6*x14442 + 6*x14443 - 6*x14444;
double x33142 = 5*x14303;
double x33143 = x14262*x154;
double x33144 = 5*x14266;
double x33145 = x14268*x154;
double x33146 = x14267*x154;
double x33147 = L*x31888;
double x33148 = L*x31889;
double x33149 = x129*x14262;
double x33150 = x129*x14267;
double x33151 = x129*x14268;
double x33152 = x14543 + x14544 - x14545 + x14546 - x14547;
double x33153 = 4*x14304;
double x33154 = 7*x13972;
double x33155 = x13976*x286;
double x33156 = x14293*x5540;
double x33157 = x14291*x5540;
double x33158 = x13979*x286;
double x33159 = x13981*x286;
double x33160 = x14297*x5540;
double x33161 = x14295*x5540;
double x33162 = x13980*x286;
double x33163 = -3*x14017 - 3*x14030 + 3*x14045 - 3*x14047 + 3*x14055;
double x33164 = x14549*x168;
double x33165 = x2412*x9;
double x33166 = L*x31877;
double x33167 = x11*x2412;
double x33168 = p6_i*x11472;
double x33169 = x11470*x14321;
double x33170 = x14017 + x14030 - x14045 + x14047 - x14055;
double x33171 = 16*x13972;
double x33172 = x13979*x327;
double x33173 = x13976*x327;
double x33174 = x13980*x327;
double x33175 = x13981*x327;
double x33176 = x11371 + 6*x14017 + 6*x14030 - 6*x14045 + 6*x14047 - 6*x14055;
double x33177 = 5*x13972;
double x33178 = x13976*x154;
double x33179 = x13979*x154;
double x33180 = x13981*x154;
double x33181 = x13980*x154;
double x33182 = L*x31856;
double x33183 = L*x31857;
double x33184 = x129*x13976;
double x33185 = x129*x13980;
double x33186 = x129*x13981;
double x33187 = x14246 + x14247 - x14248 + x14249 - x14250;
double x33188 = 4*x14017;
double x33189 = 7*x13720;
double x33190 = x13678*x286;
double x33191 = x14007*x5540;
double x33192 = x14005*x5540;
double x33193 = 7*x13683;
double x33194 = x13685*x286;
double x33195 = x14011*x5540;
double x33196 = x14009*x5540;
double x33197 = x13684*x286;
double x33198 = -3*x13721 - 3*x13734 + 3*x13749 - 3*x13752 + 3*x13760;
double x33199 = x14252*x168;
double x33200 = L*x31843;
double x33201 = L*x31845;
double x33202 = x11*x4198;
double x33203 = p5_i*x11472;
double x33204 = x11470*x14034;
double x33205 = x13721 + x13734 - x13749 + x13752 - x13760;
double x33206 = 16*x13720;
double x33207 = 16*x13683;
double x33208 = x13678*x327;
double x33209 = x13684*x327;
double x33210 = x13685*x327;
double x33211 = x11371 + x13857 + x13858 - x13859 + x13860 - x13861;
double x33212 = 5*x13720;
double x33213 = x13678*x154;
double x33214 = 5*x13683;
double x33215 = x13685*x154;
double x33216 = x13684*x154;
double x33217 = L*x31829;
double x33218 = L*x31830;
double x33219 = x129*x13678;
double x33220 = x129*x13684;
double x33221 = x129*x13685;
double x33222 = x13960 + x13961 - x13962 + x13963 - x13964;
double x33223 = 4*x13721;
double x33224 = 7*x13498;
double x33225 = x13373*x286;
double x33226 = x13710*x5540;
double x33227 = x13708*x5540;
double x33228 = x13410*x286;
double x33229 = x13377*x286;
double x33230 = x13714*x5540;
double x33231 = x13712*x5540;
double x33232 = x13379*x286;
double x33233 = -3*x13416 - 3*x13430 + 3*x13448 - 3*x13450 + 3*x13461;
double x33234 = x13966*x168;
double x33235 = x2206*x9;
double x33236 = L*x31818;
double x33237 = x11*x2206;
double x33238 = p4_i*x11472;
double x33239 = x11470*x13738;
double x33240 = x13416 + x13430 - x13448 + x13450 - x13461;
double x33241 = 16*x13498;
double x33242 = x13410*x327;
double x33243 = x13373*x327;
double x33244 = x13379*x327;
double x33245 = x13377*x327;
double x33246 = x11371 + 6*x13416 + 6*x13430 - 6*x13448 + 6*x13450 - 6*x13461;
double x33247 = 5*x13498;
double x33248 = x13373*x154;
double x33249 = x13410*x154;
double x33250 = x13377*x154;
double x33251 = x13379*x154;
double x33252 = x13662 + x13663 - x13664 + x13665 - x13666;
double x33253 = 4*x13416;
double x33254 = x13402*x5540;
double x33255 = x13399*x5540;
double x33256 = x13449*x5540;
double x33257 = x13460*x5540;
double x33258 = -3*x13090 - 3*x13103 + 3*x13117 - 3*x13124 + 3*x13130;
double x33259 = x13668*x168;
double x33260 = L*x31791;
double x33261 = L*x31793;
double x33262 = x11*x4031;
double x33263 = p3_i*x11472;
double x33264 = x11470*x13434;
double x33265 = x13090 + x13103 - x13117 + x13124 - x13130;
double x33266 = 16*x13242;
double x33267 = 16*x13050;
double x33268 = x13048*x327;
double x33269 = x13054*x327;
double x33270 = x13052*x327;
double x33271 = x11371 + x13421 + x13438 - x13445 + x13454 - x13459;
double x33272 = 5*x13242;
double x33273 = x13048*x154;
double x33274 = 5*x13050;
double x33275 = x13052*x154;
double x33276 = x13054*x154;
double x33277 = L*x31773;
double x33278 = L*x31774;
double x33279 = x129*x13048;
double x33280 = x129*x13054;
double x33281 = x129*x13052;
double x33282 = x13355 + x13356 - x13357 + x13358 - x13359;
double x33283 = x13361*x168;
double x33284 = x2000*x9;
double x33285 = L*x31762;
double x33286 = x11*x2000;
double x33287 = x11470*x13105;
double x33288 = p2_i*x11472;
double x33289 = -x11503*x327 + x11504*x327 - x11505*x327 + x11506*x327 - x11507*x327;
double x33290 = x11593 + x11594 - x11596 + x11598 - x11600;
double x33291 = -x5701;
double x33292 = -x5717;
double x33293 = -x11321*x154 + x11322*x154 + x11330*x154 - x11333*x154 + 5*x11447;
double x33294 = -x11676 + x11681 - x11695 + x11699 - x11701;
double x33295 = x11711 + x12006;
double x33296 = -x168*(x11453 + x11704 + x33295);
double x33297 = 7*x11713;
double x33298 = 4*x11808;
double x33299 = x11814*x286;
double x33300 = x11324*x5540;
double x33301 = x11326*x5540;
double x33302 = x11717*x286;
double x33303 = x11719*x286;
double x33304 = x32012*x5540;
double x33305 = x32013*x5540;
double x33306 = x11721*x286;
double x33307 = x11332*x2797;
double x33308 = x11329*x2797;
double x33309 = 3*x12031 - 3*x12037 + 3*x12051 - 3*x33307 + 3*x33308;
double x33310 = 16*x11713;
double x33311 = x11717*x327;
double x33312 = x11814*x327;
double x33313 = x11721*x327;
double x33314 = x11719*x327;
double x33315 = x11467 - x12032 + x12038 - x12052 + x12055 - x12057;
double x33316 = 5*x11713;
double x33317 = x11814*x154;
double x33318 = x11717*x154;
double x33319 = x11719*x154;
double x33320 = x11721*x154;
double x33321 = L*x31988;
double x33322 = L*x31989;
double x33323 = L*x31990;
double x33324 = q2_i*x11472;
double x33325 = x11470*x11683;
double x33326 = 4*x12031 - x12036*x5540 + x12050*x5540 - 4*x33307 + 4*x33308;
double x33327 = x12304 + x12305 - x12306 + x12307 - x12308;
double x33328 = x12601 + x33327;
double x33329 = -x168*(x11711 + x11997 + x33328);
double x33330 = 7*x12021;
double x33331 = x12034*x286;
double x33332 = x12053*x286;
double x33333 = x12054*x286;
double x33334 = x12058*x286;
double x33335 = 3*x12061 + 3*x12140 - 3*x12141 + 3*x12142 - 3*x12143;
double x33336 = 16*x12021;
double x33337 = x12053*x327;
double x33338 = x12034*x327;
double x33339 = x12058*x327;
double x33340 = x12054*x327;
double x33341 = x11467 - 6*x12061 - 6*x12140 + 6*x12141 - 6*x12142 + 6*x12143;
double x33342 = -x6128;
double x33343 = 5*x12021;
double x33344 = x12034*x154;
double x33345 = x12053*x154;
double x33346 = x12054*x154;
double x33347 = x12058*x154;
double x33348 = -x6414;
double x33349 = x12455 + x15595;
double x33350 = -x168*(x12302 + x33327 + x33349);
double x33351 = 7*x12456;
double x33352 = x12345*x286;
double x33353 = x12366*x286;
double x33354 = x12367*x286;
double x33355 = x12375*x286;
double x33356 = 3*x12341 - 3*x12348 + 3*x12364 - 3*x12369 + 3*x12373;
double x33357 = L*x32016;
double x33358 = L*x32017;
double x33359 = L*x32018;
double x33360 = q3_i*x11472;
double x33361 = x11470*x12040;
double x33362 = x12341 - x12348 + x12364 - x12369 + x12373;
double x33363 = 16*x12456;
double x33364 = x12366*x327;
double x33365 = x12345*x327;
double x33366 = x12375*x327;
double x33367 = x12367*x327;
double x33368 = x11467 - x12342 + x12349 - x12365 + x12370 - x12374;
double x33369 = L*x32066;
double x33370 = x12366*x129;
double x33371 = L*x32068;
double x33372 = x12375*x129;
double x33373 = x12367*x129;
double x33374 = -x6748;
double x33375 = x15604 + x15605 - x15606 + x15607 - x15608;
double x33376 = x15893 + x33375;
double x33377 = -x168*(x12455 + x12608 + x33376);
double x33378 = 4*x12341 - x12347*x5540 + x12363*x5540 - x12368*x5540 + x12372*x5540;
double x33379 = L*x32049;
double x33380 = L*x32050;
double x33381 = L*x32051;
double x33382 = q4_i*x11472;
double x33383 = x11470*x12351;
double x33384 = x15332 - x15340 + x15353 - x15359 + x15362;
double x33385 = 16*x15324;
double x33386 = x15354*x327;
double x33387 = x15336*x327;
double x33388 = x15363*x327;
double x33389 = x15357*x327;
double x33390 = x11467 - 6*x15332 + 6*x15340 - 6*x15353 + 6*x15359 - 6*x15362;
double x33391 = L*x32098;
double x33392 = x129*x15354;
double x33393 = L*x32100;
double x33394 = x129*x15363;
double x33395 = x129*x15357;
double x33396 = x15902 + x15903 - x15904 + x15905 - x15906;
double x33397 = x16187 + x33396;
double x33398 = -x168*(x15602 + x33375 + x33397);
double x33399 = 3*x15637 - 3*x15644 + 3*x15659 - 3*x15664 + 3*x15667;
double x33400 = 4*x15332 - x15339*x5540 + x15352*x5540 - x15358*x5540 + x15361*x5540;
double x33401 = L*x32081;
double x33402 = L*x32082;
double x33403 = L*x32083;
double x33404 = q5_i*x11472;
double x33405 = x11470*x15342;
double x33406 = x15637 - x15644 + x15659 - x15664 + x15667;
double x33407 = 16*x15629;
double x33408 = x15660*x327;
double x33409 = x15640*x327;
double x33410 = x15668*x327;
double x33411 = x15662*x327;
double x33412 = x11467 - 6*x15637 + 6*x15644 - 6*x15659 + 6*x15664 - 6*x15667;
double x33413 = 5*x15629;
double x33414 = x154*x15640;
double x33415 = x154*x15660;
double x33416 = x154*x15662;
double x33417 = x154*x15668;
double x33418 = L*x32124;
double x33419 = x129*x15660;
double x33420 = L*x32126;
double x33421 = x129*x15668;
double x33422 = x129*x15662;
double x33423 = x16196 + x16197 - x16198 + x16199 - x16200;
double x33424 = x16482 + x33423;
double x33425 = -x168*(x15900 + x33396 + x33424);
double x33426 = 7*x15928;
double x33427 = x15939*x286;
double x33428 = x15959*x286;
double x33429 = x15961*x286;
double x33430 = x15969*x286;
double x33431 = 3*x15936 - 3*x15942 + 3*x15957 - 3*x15963 + 3*x15967;
double x33432 = L*x32107;
double x33433 = L*x32108;
double x33434 = L*x32109;
double x33435 = q6_i*x11472;
double x33436 = x11470*x15646;
double x33437 = x15936 - x15942 + x15957 - x15963 + x15967;
double x33438 = 16*x15928;
double x33439 = x15959*x327;
double x33440 = x15939*x327;
double x33441 = x15969*x327;
double x33442 = x15961*x327;
double x33443 = x11467 - 6*x15936 + 6*x15942 - 6*x15957 + 6*x15963 - 6*x15967;
double x33444 = -x7460;
double x33445 = 5*x15928;
double x33446 = x154*x15939;
double x33447 = x154*x15959;
double x33448 = x154*x15961;
double x33449 = x154*x15969;
double x33450 = L*x32156;
double x33451 = x129*x15959;
double x33452 = L*x32158;
double x33453 = x129*x15969;
double x33454 = x129*x15961;
double x33455 = x16491 + x16492 - x16493 + x16494 - x16495;
double x33456 = x16771 + x33455;
double x33457 = -x168*(x16194 + x33423 + x33456);
double x33458 = 7*x16221;
double x33459 = x16232*x286;
double x33460 = x16252*x286;
double x33461 = x16254*x286;
double x33462 = x16260*x286;
double x33463 = 3*x16229 - 3*x16235 + 3*x16251 - 3*x16256 + 3*x16259;
double x33464 = 4*x15936 - x15941*x5540 + x15956*x5540 - x15962*x5540 + x15966*x5540;
double x33465 = L*x32139;
double x33466 = L*x32140;
double x33467 = L*x32141;
double x33468 = q7_i*x11472;
double x33469 = x11470*x15946;
double x33470 = x16229 - x16235 + x16251 - x16256 + x16259;
double x33471 = x11467 - x16331 + x16332 - x16333 + x16334 - x16335;
double x33472 = 5*x16221;
double x33473 = x154*x16232;
double x33474 = x154*x16252;
double x33475 = x154*x16254;
double x33476 = x154*x16260;
double x33477 = L*x32186;
double x33478 = x129*x16252;
double x33479 = L*x32188;
double x33480 = x129*x16260;
double x33481 = x129*x16254;
double x33482 = x16778 + x16779 - x16780 + x16781 - x16782;
double x33483 = -x168*(x16489 + x17013 + x33455 + x33482);
double x33484 = 3*x16527;
double x33485 = 3*x16532;
double x33486 = 3*x16546;
double x33487 = 3*x16550;
double x33488 = 3*x16553;
double x33489 = -7*x16519 - x16530*x286 + x16547*x286 - x16548*x286 + x16554*x286;
double x33490 = 4*x16229 - x16234*x5540 + x16250*x5540 - x16255*x5540 + x16258*x5540;
double x33491 = L*x32171;
double x33492 = L*x32172;
double x33493 = L*x32173;
double x33494 = q8_i*x11472;
double x33495 = x11470*x16238;
double x33496 = 6*x16527;
double x33497 = 6*x16546;
double x33498 = 6*x16532;
double x33499 = 6*x16553;
double x33500 = 6*x16550;
double x33501 = 16*x16519 + x16530*x327 - x16547*x327 + x16548*x327 - x16554*x327;
double x33502 = -x154*x16530 + x154*x16547 - x154*x16548 + x154*x16554 - 5*x16519;
double x33503 = L*x32212 + L*x32214 - x129*x16547 + x129*x16548 - x129*x16554;
double x33504 = q10_i*x286;
double x33505 = x11329*x3664;
double x33506 = x11332*x3664;
double x33507 = -4*x16527 + x16531*x5540 - x16545*x5540 + x16549*x5540 - x16552*x5540;
double x33508 = x168*x17021;
double x33509 = L*x32201;
double x33510 = L*x1790;
double x33511 = L*x32203;
double x33512 = L*x32202;
double x33513 = L*x5215;
double x33514 = x11470*x16535;
double x33515 = q9_i*x11472;
double x33516 = q10_i*x327;
double x33517 = q10_i*x154;
double x33518 = q10_i*x129;
double x33519 = theta_dt*x28;
double x33520 = p10_i_dt*x33519;
double x33521 = theta_dt*x237;
double x33522 = p10_i*x33521;
double x33523 = p10_i_dt*x27;
double x33524 = x33523*x5214;
double x33525 = x31723*x_f;
double x33526 = theta_dt*x20*x27*x387;
double x33527 = psi_dt*x19434;
double x33528 = p10_i*x33527;
double x33529 = x31725*x_f;
double x33530 = x31724*x_f;
double x33531 = x31726*x_f;
double x33532 = psi_dt*x241;
double x33533 = x12643*x33532;
double x33534 = x27*x5201;
double x33535 = L*x33534;
double x33536 = 10*x33535 - x8519*x_f;
double x33537 = L*(-x33520 + x33522 - x33524 + x33525 + x33526 - x33528 - x33529 + x33530 - x33531 + x33533 + x33536);
double x33538 = L*x33519;
double x33539 = p10_i_dot_dt*x33538;
double x33540 = x33521*x898;
double x33541 = x27*x5214;
double x33542 = x19438*x33541;
double x33543 = x32259*x_f;
double x33544 = psi_dt*x27;
double x33545 = x11331*x33544;
double x33546 = x33545*x898;
double x33547 = x33527*x898;
double x33548 = x32261*x_f;
double x33549 = x32260*x_f;
double x33550 = x32262*x_f;
double x33551 = x241*x8675;
double x33552 = x33551*x898;
double x33553 = -x33539 + x33540 - x33542 + x33543 + x33546 - x33547 - x33548 + x33549 - x33550 + x33552;
double x33554 = x33523*x9;
double x33555 = x12992*x_f;
double x33556 = x22*x27;
double x33557 = p10_i*x33556;
double x33558 = x11*x33523;
double x33559 = x12654*x36;
double x33560 = p10_i*x27;
double x33561 = x24*x33560;
double x33562 = x23*x33560;
double x33563 = x12619*x36;
double x33564 = x12625*x36;
double x33565 = x12655*x36;
double x33566 = x33539 - x33540 + x33542 - x33543 - x33546 + x33547 + x33548 - x33549 + x33550 - x33552;
double x33567 = p9_i_dot_dt*x33538;
double x33568 = x18791*x33541;
double x33569 = x33521*x421;
double x33570 = x31739*x_f;
double x33571 = x33527*x421;
double x33572 = x33545*x421;
double x33573 = x31740*x_f;
double x33574 = x31741*x_f;
double x33575 = x33551*x421;
double x33576 = x31743*x_f;
double x33577 = x33567 + x33568 - x33569 - x33570 + x33571 - x33572 - x33573 + x33574 - x33575 + x33576;
double x33578 = p9_i_dt*x27;
double x33579 = x33578*x9;
double x33580 = x11*x33578;
double x33581 = p9_i*x33556;
double x33582 = x12994*x_f;
double x33583 = x12691*x36;
double x33584 = p9_i*x27;
double x33585 = x23*x33584;
double x33586 = x24*x33584;
double x33587 = x32321*x_f;
double x33588 = x12728*x36;
double x33589 = x12756*x36;
double x33590 = -x33579 - x33580 + x33581 + x33582 - x33583 - x33585 + x33586 + x33587 - x33588 + x33589;
double x33591 = 3*x33539;
double x33592 = x12638*x66;
double x33593 = 3*x33540;
double x33594 = x19456*x33541;
double x33595 = x31720*x66;
double x33596 = 3*x33546;
double x33597 = 3*x33547;
double x33598 = x31719*x66;
double x33599 = x31722*x66;
double x33600 = x31721*x66;
double x33601 = p9_i_dt*x33519;
double x33602 = x33578*x5214;
double x33603 = p9_i*x33521;
double x33604 = p9_i*x33527;
double x33605 = x18783*x33544;
double x33606 = x12689*x267 - x12691*x267 - x12728*x267 + x12756*x267 + x15147*x267 - 5*x33601 - 5*x33602 + 5*x33603 - 5*x33604 + 5*x33605;
double x33607 = x27*x9;
double x33608 = x11*x27;
double x33609 = x27*x421;
double x33610 = -x15143*x36 + x18791*x33607 + x18791*x33608 + x23*x33609 - x24*x33609 + x31734*x36 - x31735*x36 + x31736*x36 - x31737*x36 - x33556*x421;
double x33611 = x11475*x_f;
double x33612 = -x33535 + x33611;
double x33613 = -x33567 - x33568 + x33569 + x33570 - x33571 + x33572 + x33573 - x33574 + x33575 - x33576;
double x33614 = x33612 + x33613;
double x33615 = x12691*x66 + x12728*x66 - x12756*x66 - x31747*x_f - x31749*x_f + 3*x33601 + 3*x33602 - 3*x33603 + 3*x33604 - 3*x33605;
double x33616 = -x12619*x66 + x12625*x66 - x12655*x66 + x31744*x_f + x31745*x_f - 3*x33520 + 3*x33522 - 3*x33524 + 3*x33526 - 3*x33528 + x33615;
double x33617 = x33535 - x33611;
double x33618 = x33579 + x33580 - x33581 - x33582 + x33583 + x33585 - x33586 - x33587 + x33588 - x33589;
double x33619 = x27*x898;
double x33620 = 9*x33535;
double x33621 = x6412*x_f;
double x33622 = x33620 - x33621;
double x33623 = x31728*x_f;
double x33624 = x31729*x_f;
double x33625 = x31730*x_f;
double x33626 = x31731*x_f;
double x33627 = x12700*x33532;
double x33628 = -x33601 - x33602 + x33603 - x33604 + x33605 + x33623 - x33624 + x33625 - x33626 + x33627;
double x33629 = p8_i_dot_dt*x33538;
double x33630 = x33521*x634;
double x33631 = x18809*x33541;
double x33632 = x31973*x_f;
double x33633 = x33545*x634;
double x33634 = x33527*x634;
double x33635 = x31975*x_f;
double x33636 = x31974*x_f;
double x33637 = x31977*x_f;
double x33638 = x33551*x634;
double x33639 = -x33629 + x33630 - x33631 + x33632 + x33633 - x33634 - x33635 + x33636 - x33637 + x33638;
double x33640 = p8_i_dt*x27;
double x33641 = x33640*x9;
double x33642 = x15118*x_f;
double x33643 = p8_i*x33556;
double x33644 = x11*x33640;
double x33645 = x14884*x36;
double x33646 = p8_i*x27;
double x33647 = x24*x33646;
double x33648 = x23*x33646;
double x33649 = x14851*x36;
double x33650 = x14857*x36;
double x33651 = x14855*x36;
double x33652 = x33641 - x33642 - x33643 + x33644 - x33645 - x33647 + x33648 + x33649 - x33650 + x33651;
double x33653 = p8_i_dt*x33519;
double x33654 = 5*x33653;
double x33655 = x14848*x267;
double x33656 = p8_i*x33521;
double x33657 = 5*x33656;
double x33658 = 3*x33567;
double x33659 = x18809*x33607;
double x33660 = x33640*x5214;
double x33661 = 5*x33660;
double x33662 = x14884*x267;
double x33663 = p8_i*x33545;
double x33664 = 5*x33663;
double x33665 = x18813*x33541;
double x33666 = x18809*x33608;
double x33667 = x33556*x634;
double x33668 = 3*x33569;
double x33669 = x14867*x36;
double x33670 = p8_i*x33527;
double x33671 = 5*x33670;
double x33672 = x15143*x66;
double x33673 = x14851*x267;
double x33674 = x14857*x267;
double x33675 = x31734*x66;
double x33676 = x14876*x36;
double x33677 = 3*x33571;
double x33678 = x27*x634;
double x33679 = x23*x33678;
double x33680 = x24*x33678;
double x33681 = 3*x33572;
double x33682 = x14879*x36;
double x33683 = x31735*x66;
double x33684 = x14855*x267;
double x33685 = x31736*x66;
double x33686 = x31947*x36;
double x33687 = x31948*x36;
double x33688 = x31737*x66;
double x33689 = 3*x33653;
double x33690 = 3*x33660;
double x33691 = 3*x33656;
double x33692 = x31950*x_f;
double x33693 = x14851*x66;
double x33694 = 3*x33670;
double x33695 = 3*x33663;
double x33696 = x31951*x_f;
double x33697 = x14855*x66;
double x33698 = x14857*x66;
double x33699 = x33629 - x33630 + x33631 - x33632 - x33633 + x33634 + x33635 - x33636 + x33637 - x33638;
double x33700 = x33615 - x33689 - x33690 + x33691 + x33692 - x33693 - x33694 + x33695 + x33696 - x33697 + x33698 + x33699;
double x33701 = -x33620 + x33621;
double x33702 = -x33641 + x33642 + x33643 - x33644 + x33645 + x33647 - x33648 - x33649 + x33650 - x33651;
double x33703 = 8*x33535;
double x33704 = x5645*x_f;
double x33705 = x33703 - x33704;
double x33706 = x31939*x_f;
double x33707 = x31941*x_f;
double x33708 = x31940*x_f;
double x33709 = x31943*x_f;
double x33710 = x14905*x33532;
double x33711 = -x33653 + x33656 - x33660 + x33663 - x33670 + x33706 - x33707 + x33708 - x33709 + x33710;
double x33712 = p7_i_dot_dt*x33538;
double x33713 = x33521*x630;
double x33714 = L*p7_i_dot_dt;
double x33715 = x33541*x33714;
double x33716 = x31955*x_f;
double x33717 = x33545*x630;
double x33718 = x33527*x630;
double x33719 = x31957*x_f;
double x33720 = x31956*x_f;
double x33721 = x31959*x_f;
double x33722 = x33551*x630;
double x33723 = -x33712 + x33713 - x33715 + x33716 + x33717 - x33718 - x33719 + x33720 - x33721 + x33722;
double x33724 = p7_i_dt*x27;
double x33725 = x33724*x9;
double x33726 = x14825*x_f;
double x33727 = p7_i*x33556;
double x33728 = x11*x33724;
double x33729 = x14563*x36;
double x33730 = p7_i*x27;
double x33731 = x24*x33730;
double x33732 = x23*x33730;
double x33733 = x14559*x36;
double x33734 = x14565*x36;
double x33735 = x14566*x36;
double x33736 = x33725 - x33726 - x33727 + x33728 - x33729 - x33731 + x33732 + x33733 - x33734 + x33735;
double x33737 = x14554*x267;
double x33738 = p7_i_dt*x33519;
double x33739 = 5*x33738;
double x33740 = x14588*x36;
double x33741 = x14867*x66;
double x33742 = x14559*x267;
double x33743 = x33607*x33714;
double x33744 = 3*x33629;
double x33745 = p7_i*x33521;
double x33746 = 5*x33745;
double x33747 = x14563*x267;
double x33748 = x31915*x36;
double x33749 = x14876*x66;
double x33750 = x33724*x5214;
double x33751 = 5*x33750;
double x33752 = x33556*x630;
double x33753 = 3*x33630;
double x33754 = x31916*x36;
double x33755 = x14879*x66;
double x33756 = x14565*x267;
double x33757 = x14566*x267;
double x33758 = x33608*x33714;
double x33759 = x18750*x33541;
double x33760 = p7_i*x33527;
double x33761 = 5*x33760;
double x33762 = p7_i*x33545;
double x33763 = 5*x33762;
double x33764 = x31918*x36;
double x33765 = x31917*x36;
double x33766 = x31948*x66;
double x33767 = x31947*x66;
double x33768 = x27*x630;
double x33769 = x23*x33768;
double x33770 = x24*x33768;
double x33771 = 3*x33634;
double x33772 = 3*x33633;
double x33773 = 3*x33738;
double x33774 = 3*x33750;
double x33775 = 3*x33745;
double x33776 = x31920*x_f;
double x33777 = x14559*x66;
double x33778 = 3*x33760;
double x33779 = 3*x33762;
double x33780 = x31921*x_f;
double x33781 = x14566*x66;
double x33782 = x14565*x66;
double x33783 = x33712 - x33713 + x33715 - x33716 - x33717 + x33718 + x33719 - x33720 + x33721 - x33722;
double x33784 = x33689 + x33690 - x33691 - x33692 + x33693 + x33694 - x33695 - x33696 + x33697 - x33698 - x33773 - x33774 + x33775 + x33776 - x33777 - x33778 + x33779 + x33780 - x33781 + x33782 + x33783;
double x33785 = -x33703 + x33704;
double x33786 = -x33725 + x33726 + x33727 - x33728 + x33729 + x33731 - x33732 - x33733 + x33734 - x33735;
double x33787 = 7*x33535;
double x33788 = x7627*x_f;
double x33789 = x33787 - x33788;
double x33790 = x31907*x_f;
double x33791 = x31909*x_f;
double x33792 = x31908*x_f;
double x33793 = x31911*x_f;
double x33794 = x14616*x33532;
double x33795 = -x33738 + x33745 - x33750 - x33760 + x33762 + x33790 - x33791 + x33792 - x33793 + x33794;
double x33796 = p6_i_dot_dt*x33538;
double x33797 = x33521*x600;
double x33798 = L*p6_i_dot_dt;
double x33799 = x33541*x33798;
double x33800 = x31925*x_f;
double x33801 = x33545*x600;
double x33802 = x33527*x600;
double x33803 = x31927*x_f;
double x33804 = x31926*x_f;
double x33805 = x31929*x_f;
double x33806 = x33551*x600;
double x33807 = -x33796 + x33797 - x33799 + x33800 + x33801 - x33802 - x33803 + x33804 - x33805 + x33806;
double x33808 = p6_i_dt*x27;
double x33809 = x33808*x9;
double x33810 = x14536*x_f;
double x33811 = p6_i*x33556;
double x33812 = x11*x33808;
double x33813 = x14286*x36;
double x33814 = p6_i*x27;
double x33815 = x24*x33814;
double x33816 = x23*x33814;
double x33817 = x14262*x36;
double x33818 = x14267*x36;
double x33819 = x14268*x36;
double x33820 = x33809 - x33810 - x33811 + x33812 - x33813 - x33815 + x33816 + x33817 - x33818 + x33819;
double x33821 = x14257*x267;
double x33822 = p6_i_dt*x33519;
double x33823 = 5*x33822;
double x33824 = x14289*x36;
double x33825 = x14588*x66;
double x33826 = x14262*x267;
double x33827 = x33607*x33798;
double x33828 = 3*x33712;
double x33829 = p6_i*x33521;
double x33830 = 5*x33829;
double x33831 = x14286*x267;
double x33832 = x31883*x36;
double x33833 = x31915*x66;
double x33834 = x33808*x5214;
double x33835 = 5*x33834;
double x33836 = x33556*x600;
double x33837 = 3*x33713;
double x33838 = x31884*x36;
double x33839 = x31916*x66;
double x33840 = x14267*x267;
double x33841 = x14268*x267;
double x33842 = x33608*x33798;
double x33843 = x18677*x33541;
double x33844 = p6_i*x33527;
double x33845 = 5*x33844;
double x33846 = p6_i*x33545;
double x33847 = 5*x33846;
double x33848 = x31886*x36;
double x33849 = x31885*x36;
double x33850 = x31918*x66;
double x33851 = x31917*x66;
double x33852 = x27*x600;
double x33853 = x23*x33852;
double x33854 = x24*x33852;
double x33855 = 3*x33718;
double x33856 = 3*x33717;
double x33857 = 3*x33822;
double x33858 = 3*x33834;
double x33859 = 3*x33829;
double x33860 = x31888*x_f;
double x33861 = x14262*x66;
double x33862 = 3*x33844;
double x33863 = 3*x33846;
double x33864 = x31889*x_f;
double x33865 = x14268*x66;
double x33866 = x14267*x66;
double x33867 = x33796 - x33797 + x33799 - x33800 - x33801 + x33802 + x33803 - x33804 + x33805 - x33806;
double x33868 = x33773 + x33774 - x33775 - x33776 + x33777 + x33778 - x33779 - x33780 + x33781 - x33782 - x33857 - x33858 + x33859 + x33860 - x33861 - x33862 + x33863 + x33864 - x33865 + x33866 + x33867;
double x33869 = -x33787 + x33788;
double x33870 = -x33809 + x33810 + x33811 - x33812 + x33813 + x33815 - x33816 - x33817 + x33818 - x33819;
double x33871 = 6*x33535;
double x33872 = x6120*x_f;
double x33873 = x33871 - x33872;
double x33874 = x31875*x_f;
double x33875 = x31877*x_f;
double x33876 = x31876*x_f;
double x33877 = x31879*x_f;
double x33878 = x14321*x33532;
double x33879 = -x33822 + x33829 - x33834 - x33844 + x33846 + x33874 - x33875 + x33876 - x33877 + x33878;
double x33880 = p5_i_dot_dt*x33538;
double x33881 = x33521*x570;
double x33882 = L*p5_i_dot_dt;
double x33883 = x33541*x33882;
double x33884 = x31893*x_f;
double x33885 = x33545*x570;
double x33886 = x33527*x570;
double x33887 = x31895*x_f;
double x33888 = x31894*x_f;
double x33889 = x31897*x_f;
double x33890 = x33551*x570;
double x33891 = -x33880 + x33881 - x33883 + x33884 + x33885 - x33886 - x33887 + x33888 - x33889 + x33890;
double x33892 = p5_i_dt*x27;
double x33893 = x33892*x9;
double x33894 = x14239*x_f;
double x33895 = p5_i*x33556;
double x33896 = x11*x33892;
double x33897 = x13979*x36;
double x33898 = p5_i*x27;
double x33899 = x24*x33898;
double x33900 = x23*x33898;
double x33901 = x13976*x36;
double x33902 = x13980*x36;
double x33903 = x13981*x36;
double x33904 = x33893 - x33894 - x33895 + x33896 - x33897 - x33899 + x33900 + x33901 - x33902 + x33903;
double x33905 = x13971*x267;
double x33906 = p5_i_dt*x33519;
double x33907 = 5*x33906;
double x33908 = x14003*x36;
double x33909 = x14289*x66;
double x33910 = x13976*x267;
double x33911 = x33607*x33882;
double x33912 = 3*x33796;
double x33913 = p5_i*x33521;
double x33914 = 5*x33913;
double x33915 = x13979*x267;
double x33916 = x31851*x36;
double x33917 = x31883*x66;
double x33918 = x33892*x5214;
double x33919 = 5*x33918;
double x33920 = x33556*x570;
double x33921 = 3*x33797;
double x33922 = x31852*x36;
double x33923 = x31884*x66;
double x33924 = x13980*x267;
double x33925 = x13981*x267;
double x33926 = x33608*x33882;
double x33927 = x18600*x33541;
double x33928 = p5_i*x33527;
double x33929 = 5*x33928;
double x33930 = p5_i*x33545;
double x33931 = 5*x33930;
double x33932 = x31854*x36;
double x33933 = x31853*x36;
double x33934 = x31886*x66;
double x33935 = x31885*x66;
double x33936 = x27*x570;
double x33937 = x23*x33936;
double x33938 = x24*x33936;
double x33939 = 3*x33802;
double x33940 = 3*x33801;
double x33941 = 3*x33906;
double x33942 = 3*x33918;
double x33943 = 3*x33913;
double x33944 = x31856*x_f;
double x33945 = x13976*x66;
double x33946 = 3*x33928;
double x33947 = 3*x33930;
double x33948 = x31857*x_f;
double x33949 = x13981*x66;
double x33950 = x13980*x66;
double x33951 = x33880 - x33881 + x33883 - x33884 - x33885 + x33886 + x33887 - x33888 + x33889 - x33890;
double x33952 = x33857 + x33858 - x33859 - x33860 + x33861 + x33862 - x33863 - x33864 + x33865 - x33866 - x33941 - x33942 + x33943 + x33944 - x33945 - x33946 + x33947 + x33948 - x33949 + x33950 + x33951;
double x33953 = -x33871 + x33872;
double x33954 = -x33893 + x33894 + x33895 - x33896 + x33897 + x33899 - x33900 - x33901 + x33902 - x33903;
double x33955 = 5*x33535;
double x33956 = x267*x5210;
double x33957 = x33955 - x33956;
double x33958 = x31843*x_f;
double x33959 = x31845*x_f;
double x33960 = x31844*x_f;
double x33961 = x31847*x_f;
double x33962 = x14034*x33532;
double x33963 = -x33906 + x33913 - x33918 - x33928 + x33930 + x33958 - x33959 + x33960 - x33961 + x33962;
double x33964 = p4_i_dot_dt*x33538;
double x33965 = x33521*x540;
double x33966 = L*p4_i_dot_dt;
double x33967 = x33541*x33966;
double x33968 = x31861*x_f;
double x33969 = x33545*x540;
double x33970 = x33527*x540;
double x33971 = x31863*x_f;
double x33972 = x31862*x_f;
double x33973 = x31865*x_f;
double x33974 = x33551*x540;
double x33975 = -x33964 + x33965 - x33967 + x33968 + x33969 - x33970 - x33971 + x33972 - x33973 + x33974;
double x33976 = p4_i_dt*x27;
double x33977 = x33976*x9;
double x33978 = x13953*x_f;
double x33979 = p4_i*x33556;
double x33980 = x11*x33976;
double x33981 = x13703*x36;
double x33982 = p4_i*x27;
double x33983 = x24*x33982;
double x33984 = x23*x33982;
double x33985 = x13678*x36;
double x33986 = x13684*x36;
double x33987 = x13685*x36;
double x33988 = x33977 - x33978 - x33979 + x33980 - x33981 - x33983 + x33984 + x33985 - x33986 + x33987;
double x33989 = x13673*x267;
double x33990 = p4_i_dt*x33519;
double x33991 = 5*x33990;
double x33992 = x13706*x36;
double x33993 = x14003*x66;
double x33994 = x13678*x267;
double x33995 = x33607*x33966;
double x33996 = 3*x33880;
double x33997 = p4_i*x33521;
double x33998 = 5*x33997;
double x33999 = x13703*x267;
double x34000 = x31824*x36;
double x34001 = x31851*x66;
double x34002 = x33976*x5214;
double x34003 = 5*x34002;
double x34004 = x33556*x540;
double x34005 = 3*x33881;
double x34006 = x31825*x36;
double x34007 = x31852*x66;
double x34008 = x13684*x267;
double x34009 = x13685*x267;
double x34010 = x33608*x33966;
double x34011 = x18526*x33541;
double x34012 = p4_i*x33527;
double x34013 = 5*x34012;
double x34014 = p4_i*x33545;
double x34015 = 5*x34014;
double x34016 = x31827*x36;
double x34017 = x31826*x36;
double x34018 = x31854*x66;
double x34019 = x31853*x66;
double x34020 = x27*x540;
double x34021 = x23*x34020;
double x34022 = x24*x34020;
double x34023 = 3*x33886;
double x34024 = 3*x33885;
double x34025 = 3*x33990;
double x34026 = 3*x34002;
double x34027 = 3*x33997;
double x34028 = x31829*x_f;
double x34029 = x13678*x66;
double x34030 = 3*x34012;
double x34031 = 3*x34014;
double x34032 = x31830*x_f;
double x34033 = x13685*x66;
double x34034 = x13684*x66;
double x34035 = x33964 - x33965 + x33967 - x33968 - x33969 + x33970 + x33971 - x33972 + x33973 - x33974;
double x34036 = x33941 + x33942 - x33943 - x33944 + x33945 + x33946 - x33947 - x33948 + x33949 - x33950 - x34025 - x34026 + x34027 + x34028 - x34029 - x34030 + x34031 + x34032 - x34033 + x34034 + x34035;
double x34037 = -x33955 + x33956;
double x34038 = -x33977 + x33978 + x33979 - x33980 + x33981 + x33983 - x33984 - x33985 + x33986 - x33987;
double x34039 = 4*x33535;
double x34040 = x6679*x_f;
double x34041 = x34039 - x34040;
double x34042 = x31816*x_f;
double x34043 = x31818*x_f;
double x34044 = x31817*x_f;
double x34045 = x31820*x_f;
double x34046 = x13738*x33532;
double x34047 = -x33990 + x33997 - x34002 - x34012 + x34014 + x34042 - x34043 + x34044 - x34045 + x34046;
double x34048 = p3_i_dot_dt*x33538;
double x34049 = x33521*x510;
double x34050 = L*p3_i_dot_dt;
double x34051 = x33541*x34050;
double x34052 = x31834*x_f;
double x34053 = x33545*x510;
double x34054 = x33527*x510;
double x34055 = x31836*x_f;
double x34056 = x31835*x_f;
double x34057 = x31838*x_f;
double x34058 = x33551*x510;
double x34059 = -x34048 + x34049 - x34051 + x34052 + x34053 - x34054 - x34055 + x34056 - x34057 + x34058;
double x34060 = p3_i_dt*x27;
double x34061 = x34060*x9;
double x34062 = x13655*x_f;
double x34063 = p3_i*x33556;
double x34064 = x11*x34060;
double x34065 = x13410*x36;
double x34066 = p3_i*x27;
double x34067 = x24*x34066;
double x34068 = x23*x34066;
double x34069 = x13373*x36;
double x34070 = x13379*x36;
double x34071 = x13377*x36;
double x34072 = x34061 - x34062 - x34063 + x34064 - x34065 - x34067 + x34068 + x34069 - x34070 + x34071;
double x34073 = x13370*x267;
double x34074 = p3_i_dt*x33519;
double x34075 = 5*x34074;
double x34076 = x13390*x36;
double x34077 = x13706*x66;
double x34078 = x13373*x267;
double x34079 = x33607*x34050;
double x34080 = 3*x33964;
double x34081 = p3_i*x33521;
double x34082 = 5*x34081;
double x34083 = x13410*x267;
double x34084 = x31799*x36;
double x34085 = x31824*x66;
double x34086 = x34060*x5214;
double x34087 = 5*x34086;
double x34088 = x33556*x510;
double x34089 = 3*x33965;
double x34090 = x31800*x36;
double x34091 = x31825*x66;
double x34092 = x13379*x267;
double x34093 = x13377*x267;
double x34094 = x33608*x34050;
double x34095 = x18448*x33541;
double x34096 = p3_i*x33527;
double x34097 = 5*x34096;
double x34098 = p3_i*x33545;
double x34099 = 5*x34098;
double x34100 = x31802*x36;
double x34101 = x31801*x36;
double x34102 = x31827*x66;
double x34103 = x31826*x66;
double x34104 = x27*x510;
double x34105 = x23*x34104;
double x34106 = x24*x34104;
double x34107 = 3*x33970;
double x34108 = 3*x33969;
double x34109 = 3*x34074;
double x34110 = 3*x34086;
double x34111 = 3*x34081;
double x34112 = x13371*x_f;
double x34113 = x13373*x66;
double x34114 = 3*x34096;
double x34115 = 3*x34098;
double x34116 = x13375*x_f;
double x34117 = x13377*x66;
double x34118 = x13379*x66;
double x34119 = x34048 - x34049 + x34051 - x34052 - x34053 + x34054 + x34055 - x34056 + x34057 - x34058;
double x34120 = x34025 + x34026 - x34027 - x34028 + x34029 + x34030 - x34031 - x34032 + x34033 - x34034 - x34109 - x34110 + x34111 + x34112 - x34113 - x34114 + x34115 + x34116 - x34117 + x34118 + x34119;
double x34121 = -x34039 + x34040;
double x34122 = -x34061 + x34062 + x34063 - x34064 + x34065 + x34067 - x34068 - x34069 + x34070 - x34071;
double x34123 = 3*x33535;
double x34124 = x5210*x66;
double x34125 = x34123 - x34124;
double x34126 = x31791*x_f;
double x34127 = x31793*x_f;
double x34128 = x31792*x_f;
double x34129 = x31795*x_f;
double x34130 = x13434*x33532;
double x34131 = -x34074 + x34081 - x34086 - x34096 + x34098 + x34126 - x34127 + x34128 - x34129 + x34130;
double x34132 = p2_i_dot_dt*x33538;
double x34133 = x33521*x480;
double x34134 = L*p2_i_dot_dt;
double x34135 = x33541*x34134;
double x34136 = x13076*x_f;
double x34137 = x33545*x480;
double x34138 = x33527*x480;
double x34139 = x13077*x_f;
double x34140 = x13078*x_f;
double x34141 = x13079*x_f;
double x34142 = x33551*x480;
double x34143 = -x34132 + x34133 - x34135 + x34136 + x34137 - x34138 - x34139 + x34140 - x34141 + x34142;
double x34144 = p2_i_dt*x27;
double x34145 = x34144*x9;
double x34146 = x13046*x_f;
double x34147 = p2_i*x33556;
double x34148 = x11*x34144;
double x34149 = x13074*x36;
double x34150 = p2_i*x27;
double x34151 = x24*x34150;
double x34152 = x23*x34150;
double x34153 = x13048*x36;
double x34154 = x13054*x36;
double x34155 = x13052*x36;
double x34156 = x34145 - x34146 - x34147 + x34148 - x34149 - x34151 + x34152 + x34153 - x34154 + x34155;
double x34157 = x13045*x267;
double x34158 = p2_i_dt*x33519;
double x34159 = 5*x34158;
double x34160 = x31766*x36;
double x34161 = x13390*x66;
double x34162 = x13048*x267;
double x34163 = x33607*x34134;
double x34164 = 3*x34048;
double x34165 = p2_i*x33521;
double x34166 = 5*x34165;
double x34167 = x13074*x267;
double x34168 = x31767*x36;
double x34169 = x31799*x66;
double x34170 = x34144*x5214;
double x34171 = 5*x34170;
double x34172 = x33556*x480;
double x34173 = 3*x34049;
double x34174 = x31768*x36;
double x34175 = x31800*x66;
double x34176 = x13054*x267;
double x34177 = x13052*x267;
double x34178 = x33608*x34134;
double x34179 = x18376*x33541;
double x34180 = p2_i*x33527;
double x34181 = 5*x34180;
double x34182 = p2_i*x33545;
double x34183 = 5*x34182;
double x34184 = x31770*x36;
double x34185 = x31769*x36;
double x34186 = x31802*x66;
double x34187 = x31801*x66;
double x34188 = x27*x480;
double x34189 = x23*x34188;
double x34190 = x24*x34188;
double x34191 = x33527*x9319;
double x34192 = x33545*x9319;
double x34193 = 3*x34158;
double x34194 = 3*x34170;
double x34195 = 3*x34165;
double x34196 = x31773*x_f;
double x34197 = x13048*x66;
double x34198 = 3*x34180;
double x34199 = 3*x34182;
double x34200 = x31774*x_f;
double x34201 = x13052*x66;
double x34202 = x13054*x66;
double x34203 = x34132 - x34133 + x34135 - x34136 - x34137 + x34138 + x34139 - x34140 + x34141 - x34142;
double x34204 = x34109 + x34110 - x34111 - x34112 + x34113 + x34114 - x34115 - x34116 + x34117 - x34118 - x34193 - x34194 + x34195 + x34196 - x34197 - x34198 + x34199 + x34200 - x34201 + x34202 + x34203;
double x34205 = -x34123 + x34124;
double x34206 = -x34145 + x34146 + x34147 - x34148 + x34149 + x34151 - x34152 - x34153 + x34154 - x34155;
double x34207 = L*x27;
double x34208 = x11369*x34207;
double x34209 = x36*x5210;
double x34210 = x34208 - x34209;
double x34211 = x31760*x_f;
double x34212 = x31762*x_f;
double x34213 = x31761*x_f;
double x34214 = x31764*x_f;
double x34215 = x13105*x33532;
double x34216 = -x34158 + x34165 - x34170 - x34180 + x34182 + x34211 - x34212 + x34213 - x34214 + x34215;
double x34217 = p1_i_dt*x27;
double x34218 = x34217*x9;
double x34219 = x11578*x_f;
double x34220 = p1_i*x33556;
double x34221 = x11*x34217;
double x34222 = x11505*x36;
double x34223 = p1_i*x27;
double x34224 = x24*x34223;
double x34225 = x23*x34223;
double x34226 = x11504*x36;
double x34227 = x11507*x36;
double x34228 = x11506*x36;
double x34229 = x34218 - x34219 - x34220 + x34221 - x34222 - x34224 + x34225 + x34226 - x34227 + x34228;
double x34230 = p1_i_dot_dt*x33538;
double x34231 = x249*x33521;
double x34232 = L*p1_i_dot_dt;
double x34233 = x33541*x34232;
double x34234 = x31778*x_f;
double x34235 = x249*x33545;
double x34236 = x249*x33527;
double x34237 = x31780*x_f;
double x34238 = x31779*x_f;
double x34239 = x31781*x_f;
double x34240 = x249*x33551;
double x34241 = -x34230 + x34231 - x34233 + x34234 + x34235 - x34236 - x34237 + x34238 - x34239 + x34240;
double x34242 = 3*x34132;
double x34243 = x18290*x33541;
double x34244 = x11*x34207;
double x34245 = 3*x34133;
double x34246 = x31766*x66;
double x34247 = x31767*x66;
double x34248 = x1994*x33527;
double x34249 = x249*x27;
double x34250 = x1994*x33545;
double x34251 = x31768*x66;
double x34252 = x31769*x66;
double x34253 = x31770*x66;
double x34254 = p1_i_dt*x33519;
double x34255 = p1_i*x33521;
double x34256 = x34217*x5214;
double x34257 = p1_i*x33545;
double x34258 = p1_i*x33527;
double x34259 = -x11503*x267 + x11504*x267 - x11505*x267 + x11506*x267 - x11507*x267 + 5*x34254 - 5*x34255 + 5*x34256 - 5*x34257 + 5*x34258;
double x34260 = x34230 - x34231 + x34233 - x34234 - x34235 + x34236 + x34237 - x34238 + x34239 - x34240;
double x34261 = -x11504*x66 - x11506*x66 + x11507*x66 + x11644*x_f + x11645*x_f - 3*x34254 + 3*x34255 - 3*x34256 + 3*x34257 - 3*x34258;
double x34262 = x34193 + x34194 - x34195 - x34196 + x34197 + x34198 - x34199 - x34200 + x34201 - x34202 + x34260 + x34261;
double x34263 = x11459*x_f;
double x34264 = x11464*x_f;
double x34265 = x31703*x_f;
double x34266 = x31705*x_f;
double x34267 = x11469*x33532;
double x34268 = 3*x34230;
double x34269 = x11479*x66;
double x34270 = 3*x34231;
double x34271 = x17335*x33541;
double x34272 = x11486*x66;
double x34273 = 3*x34235;
double x34274 = 3*x34236;
double x34275 = x11490*x66;
double x34276 = x11497*x66;
double x34277 = x11502*x66;
double x34278 = -x34208 + x34209;
double x34279 = q1_i_dot_dt*x33538;
double x34280 = L*x33541;
double x34281 = q1_i_dot_dt*x34280;
double x34282 = x33521*x49;
double x34283 = x31698*x_f;
double x34284 = x33527*x49;
double x34285 = x33545*x49;
double x34286 = x31699*x_f;
double x34287 = x31700*x_f;
double x34288 = x33551*x49;
double x34289 = x31701*x_f;
double x34290 = x34279 + x34281 - x34282 - x34283 + x34284 - x34285 - x34286 + x34287 - x34288 + x34289;
double x34291 = theta_dt*x29;
double x34292 = q1_i_dt*x27;
double x34293 = x34292*x5214;
double x34294 = q1_i*x33521;
double x34295 = q1_i*x33527;
double x34296 = q1_i*x33545;
double x34297 = -x11321*x66 + x11330*x66 - x11333*x66 + x11694*x_f + x31693*x_f - 3*x34291 - 3*x34293 + 3*x34294 - 3*x34295 + 3*x34296;
double x34298 = x34292*x9;
double x34299 = x11*x34292;
double x34300 = q1_i*x33556;
double x34301 = x32664*x_f;
double x34302 = x11321*x36;
double x34303 = q1_i*x27;
double x34304 = x23*x34303;
double x34305 = x24*x34303;
double x34306 = x11322*x36;
double x34307 = x11333*x36;
double x34308 = x11330*x36;
double x34309 = -x34298 - x34299 + x34300 + x34301 - x34302 - x34304 + x34305 + x34306 - x34307 + x34308;
double x34310 = x11657*x_f;
double x34311 = x11660*x_f;
double x34312 = x11659*x_f;
double x34313 = x31690*x_f;
double x34314 = x11390*x33532;
double x34315 = L*(x33612 - x34291 - x34293 + x34294 - x34295 + x34296 + x34310 - x34311 + x34312 - x34313 + x34314);
double x34316 = -x34279 - x34281 + x34282 + x34283 - x34284 + x34285 + x34286 - x34287 + x34288 - x34289;
double x34317 = q2_i_dot_dt*x33538;
double x34318 = q2_i_dot_dt*x34280;
double x34319 = x33521*x663;
double x34320 = x12012*x_f;
double x34321 = x33527*x663;
double x34322 = x33545*x663;
double x34323 = x12013*x_f;
double x34324 = x12014*x_f;
double x34325 = x33551*x663;
double x34326 = x12016*x_f;
double x34327 = x34317 + x34318 - x34319 - x34320 + x34321 - x34322 - x34323 + x34324 - x34325 + x34326;
double x34328 = q2_i_dt*x27;
double x34329 = x34328*x9;
double x34330 = x11*x34328;
double x34331 = q2_i*x33556;
double x34332 = x32707*x_f;
double x34333 = x11717*x36;
double x34334 = q2_i*x27;
double x34335 = x23*x34334;
double x34336 = x24*x34334;
double x34337 = x11814*x36;
double x34338 = x11721*x36;
double x34339 = x11719*x36;
double x34340 = -x34329 - x34330 + x34331 + x34332 - x34333 - x34335 + x34336 + x34337 - x34338 + x34339;
double x34341 = x11712*x267;
double x34342 = theta_dt*x1339;
double x34343 = 5*x34342;
double x34344 = x11320*x66;
double x34345 = x31994*x36;
double x34346 = x11717*x267;
double x34347 = 3*x34279;
double x34348 = L*x33607;
double x34349 = q2_i_dot_dt*x34348;
double x34350 = q2_i*x33521;
double x34351 = 5*x34350;
double x34352 = x11814*x267;
double x34353 = x11325*x66;
double x34354 = x31995*x36;
double x34355 = x34328*x5214;
double x34356 = 5*x34355;
double x34357 = 3*x34282;
double x34358 = x33556*x663;
double x34359 = x11327*x66;
double x34360 = x31996*x36;
double x34361 = x11719*x267;
double x34362 = x11721*x267;
double x34363 = x18188*x33541;
double x34364 = q2_i_dot_dt*x34244;
double x34365 = q2_i*x33527;
double x34366 = 5*x34365;
double x34367 = q2_i*x33545;
double x34368 = 5*x34367;
double x34369 = x11334*x66;
double x34370 = x31998*x36;
double x34371 = x11335*x66;
double x34372 = x31997*x36;
double x34373 = 3*x34284;
double x34374 = x27*x663;
double x34375 = x23*x34374;
double x34376 = 3*x34285;
double x34377 = x24*x34374;
double x34378 = 3*x34342;
double x34379 = x32000*x_f;
double x34380 = 3*x34350;
double x34381 = 3*x34355;
double x34382 = x11715*x_f;
double x34383 = 3*x34367;
double x34384 = 3*x34365;
double x34385 = x11717*x66;
double x34386 = x11719*x66;
double x34387 = x11721*x66;
double x34388 = -x34317 - x34318 + x34319 + x34320 - x34321 + x34322 + x34323 - x34324 + x34325 - x34326;
double x34389 = x34297 + x34378 - x34379 - x34380 + x34381 - x34382 - x34383 + x34384 + x34385 - x34386 + x34387 + x34388;
double x34390 = x34329 + x34330 - x34331 - x34332 + x34333 + x34335 - x34336 - x34337 + x34338 - x34339;
double x34391 = x27*x49;
double x34392 = x31988*x_f;
double x34393 = x31989*x_f;
double x34394 = x31990*x_f;
double x34395 = x31991*x_f;
double x34396 = x11683*x33532;
double x34397 = -x34342 + x34350 - x34355 - x34365 + x34367 + x34392 - x34393 + x34394 - x34395 + x34396;
double x34398 = q3_i_dot_dt*x33538;
double x34399 = q3_i_dot_dt*x34280;
double x34400 = x33521*x692;
double x34401 = x32028*x_f;
double x34402 = x33527*x692;
double x34403 = x33545*x692;
double x34404 = x32029*x_f;
double x34405 = x32030*x_f;
double x34406 = x33551*x692;
double x34407 = x32032*x_f;
double x34408 = x34398 + x34399 - x34400 - x34401 + x34402 - x34403 - x34404 + x34405 - x34406 + x34407;
double x34409 = q3_i_dt*x27;
double x34410 = x34409*x9;
double x34411 = x11*x34409;
double x34412 = q3_i*x33556;
double x34413 = x32751*x_f;
double x34414 = x12053*x36;
double x34415 = q3_i*x27;
double x34416 = x23*x34415;
double x34417 = x24*x34415;
double x34418 = x12034*x36;
double x34419 = x12058*x36;
double x34420 = x12054*x36;
double x34421 = -x34410 - x34411 + x34412 + x34413 - x34414 - x34416 + x34417 + x34418 - x34419 + x34420;
double x34422 = x12020*x267;
double x34423 = theta_dt*x1399;
double x34424 = 5*x34423;
double x34425 = x31994*x66;
double x34426 = x12327*x36;
double x34427 = x12053*x267;
double x34428 = 3*x34317;
double x34429 = q3_i_dot_dt*x34348;
double x34430 = q3_i*x33521;
double x34431 = 5*x34430;
double x34432 = x12034*x267;
double x34433 = x31995*x66;
double x34434 = x32022*x36;
double x34435 = x34409*x5214;
double x34436 = 5*x34435;
double x34437 = 3*x34319;
double x34438 = x33556*x692;
double x34439 = x31996*x66;
double x34440 = x32023*x36;
double x34441 = x12054*x267;
double x34442 = x12058*x267;
double x34443 = x18873*x33541;
double x34444 = q3_i_dot_dt*x34244;
double x34445 = q3_i*x33527;
double x34446 = 5*x34445;
double x34447 = q3_i*x33545;
double x34448 = 5*x34447;
double x34449 = x31998*x66;
double x34450 = x32025*x36;
double x34451 = x31997*x66;
double x34452 = x32024*x36;
double x34453 = x2863*x33527;
double x34454 = x27*x692;
double x34455 = x23*x34454;
double x34456 = x2863*x33545;
double x34457 = x24*x34454;
double x34458 = 3*x34423;
double x34459 = x32033*x_f;
double x34460 = 3*x34430;
double x34461 = 3*x34435;
double x34462 = x12316*x_f;
double x34463 = 3*x34447;
double x34464 = 3*x34445;
double x34465 = x12053*x66;
double x34466 = x12054*x66;
double x34467 = x12058*x66;
double x34468 = -x34398 - x34399 + x34400 + x34401 - x34402 + x34403 + x34404 - x34405 + x34406 - x34407;
double x34469 = -x34378 + x34379 + x34380 - x34381 + x34382 + x34383 - x34384 - x34385 + x34386 - x34387 + x34458 - x34459 - x34460 + x34461 - x34462 - x34463 + x34464 + x34465 - x34466 + x34467 + x34468;
double x34470 = x34410 + x34411 - x34412 - x34413 + x34414 + x34416 - x34417 - x34418 + x34419 - x34420;
double x34471 = x32016*x_f;
double x34472 = x32017*x_f;
double x34473 = x32018*x_f;
double x34474 = x32019*x_f;
double x34475 = x12040*x33532;
double x34476 = -x34423 + x34430 - x34435 - x34445 + x34447 + x34471 - x34472 + x34473 - x34474 + x34475;
double x34477 = q4_i_dot_dt*x33538;
double x34478 = q4_i_dot_dt*x34280;
double x34479 = x33521*x721;
double x34480 = x32061*x_f;
double x34481 = x33527*x721;
double x34482 = x33545*x721;
double x34483 = x32062*x_f;
double x34484 = x32063*x_f;
double x34485 = x33551*x721;
double x34486 = x32065*x_f;
double x34487 = x34477 + x34478 - x34479 - x34480 + x34481 - x34482 - x34483 + x34484 - x34485 + x34486;
double x34488 = q4_i_dt*x27;
double x34489 = x34488*x9;
double x34490 = x11*x34488;
double x34491 = q4_i*x33556;
double x34492 = x12602*x_f;
double x34493 = x12366*x36;
double x34494 = q4_i*x27;
double x34495 = x23*x34494;
double x34496 = x24*x34494;
double x34497 = x12345*x36;
double x34498 = x12375*x36;
double x34499 = x12367*x36;
double x34500 = -x34489 - x34490 + x34491 + x34492 - x34493 - x34495 + x34496 + x34497 - x34498 + x34499;
double x34501 = x12332*x267;
double x34502 = theta_dt*x1450;
double x34503 = 5*x34502;
double x34504 = x12327*x66;
double x34505 = x15314*x36;
double x34506 = x12366*x267;
double x34507 = 3*x34398;
double x34508 = q4_i_dot_dt*x34348;
double x34509 = q4_i*x33521;
double x34510 = 5*x34509;
double x34511 = x12345*x267;
double x34512 = x32022*x66;
double x34513 = x32055*x36;
double x34514 = x34488*x5214;
double x34515 = 5*x34514;
double x34516 = 3*x34400;
double x34517 = x33556*x721;
double x34518 = x32023*x66;
double x34519 = x32056*x36;
double x34520 = x12367*x267;
double x34521 = x12375*x267;
double x34522 = x18954*x33541;
double x34523 = q4_i_dot_dt*x34244;
double x34524 = q4_i*x33527;
double x34525 = 5*x34524;
double x34526 = q4_i*x33545;
double x34527 = 5*x34526;
double x34528 = x32025*x66;
double x34529 = x32058*x36;
double x34530 = x32024*x66;
double x34531 = x32057*x36;
double x34532 = x33527*x6372;
double x34533 = x27*x721;
double x34534 = x23*x34533;
double x34535 = x33545*x6372;
double x34536 = x24*x34533;
double x34537 = 3*x34502;
double x34538 = x32066*x_f;
double x34539 = 3*x34509;
double x34540 = 3*x34514;
double x34541 = x32068*x_f;
double x34542 = 3*x34526;
double x34543 = 3*x34524;
double x34544 = x12366*x66;
double x34545 = x12367*x66;
double x34546 = x12375*x66;
double x34547 = -x34477 - x34478 + x34479 + x34480 - x34481 + x34482 + x34483 - x34484 + x34485 - x34486;
double x34548 = -x34458 + x34459 + x34460 - x34461 + x34462 + x34463 - x34464 - x34465 + x34466 - x34467 + x34537 - x34538 - x34539 + x34540 - x34541 - x34542 + x34543 + x34544 - x34545 + x34546 + x34547;
double x34549 = x34489 + x34490 - x34491 - x34492 + x34493 + x34495 - x34496 - x34497 + x34498 - x34499;
double x34550 = x32049*x_f;
double x34551 = x32050*x_f;
double x34552 = x32051*x_f;
double x34553 = x32052*x_f;
double x34554 = x12351*x33532;
double x34555 = -x34502 + x34509 - x34514 - x34524 + x34526 + x34550 - x34551 + x34552 - x34553 + x34554;
double x34556 = q5_i_dot_dt*x33538;
double x34557 = q5_i_dot_dt*x34280;
double x34558 = x33521*x750;
double x34559 = x32093*x_f;
double x34560 = x33527*x750;
double x34561 = x33545*x750;
double x34562 = x32094*x_f;
double x34563 = x32095*x_f;
double x34564 = x33551*x750;
double x34565 = x32097*x_f;
double x34566 = x34556 + x34557 - x34558 - x34559 + x34560 - x34561 - x34562 + x34563 - x34564 + x34565;
double x34567 = q5_i_dt*x27;
double x34568 = x34567*x9;
double x34569 = x11*x34567;
double x34570 = q5_i*x33556;
double x34571 = x15596*x_f;
double x34572 = x15354*x36;
double x34573 = q5_i*x27;
double x34574 = x23*x34573;
double x34575 = x24*x34573;
double x34576 = x15336*x36;
double x34577 = x15363*x36;
double x34578 = x15357*x36;
double x34579 = -x34568 - x34569 + x34570 + x34571 - x34572 - x34574 + x34575 + x34576 - x34577 + x34578;
double x34580 = x15323*x267;
double x34581 = theta_dt*x1504;
double x34582 = 5*x34581;
double x34583 = x15314*x66;
double x34584 = x15619*x36;
double x34585 = x15354*x267;
double x34586 = 3*x34477;
double x34587 = q5_i_dot_dt*x34348;
double x34588 = q5_i*x33521;
double x34589 = 5*x34588;
double x34590 = x15336*x267;
double x34591 = x32055*x66;
double x34592 = x32087*x36;
double x34593 = x34567*x5214;
double x34594 = 5*x34593;
double x34595 = 3*x34479;
double x34596 = x33556*x750;
double x34597 = x32056*x66;
double x34598 = x32088*x36;
double x34599 = x15357*x267;
double x34600 = x15363*x267;
double x34601 = x19029*x33541;
double x34602 = q5_i_dot_dt*x34244;
double x34603 = q5_i*x33527;
double x34604 = 5*x34603;
double x34605 = q5_i*x33545;
double x34606 = 5*x34605;
double x34607 = x32058*x66;
double x34608 = x32090*x36;
double x34609 = x32057*x66;
double x34610 = x32089*x36;
double x34611 = x3082*x33527;
double x34612 = x27*x750;
double x34613 = x23*x34612;
double x34614 = x3082*x33545;
double x34615 = x24*x34612;
double x34616 = 3*x34581;
double x34617 = x32098*x_f;
double x34618 = 3*x34588;
double x34619 = 3*x34593;
double x34620 = x32100*x_f;
double x34621 = 3*x34605;
double x34622 = 3*x34603;
double x34623 = x15354*x66;
double x34624 = x15357*x66;
double x34625 = x15363*x66;
double x34626 = -x34556 - x34557 + x34558 + x34559 - x34560 + x34561 + x34562 - x34563 + x34564 - x34565;
double x34627 = -x34537 + x34538 + x34539 - x34540 + x34541 + x34542 - x34543 - x34544 + x34545 - x34546 + x34616 - x34617 - x34618 + x34619 - x34620 - x34621 + x34622 + x34623 - x34624 + x34625 + x34626;
double x34628 = x34568 + x34569 - x34570 - x34571 + x34572 + x34574 - x34575 - x34576 + x34577 - x34578;
double x34629 = x32081*x_f;
double x34630 = x32082*x_f;
double x34631 = x32083*x_f;
double x34632 = x32084*x_f;
double x34633 = x15342*x33532;
double x34634 = -x34581 + x34588 - x34593 - x34603 + x34605 + x34629 - x34630 + x34631 - x34632 + x34633;
double x34635 = q6_i_dot_dt*x33538;
double x34636 = q6_i_dot_dt*x34280;
double x34637 = x33521*x779;
double x34638 = x32119*x_f;
double x34639 = x33527*x779;
double x34640 = x33545*x779;
double x34641 = x32120*x_f;
double x34642 = x32121*x_f;
double x34643 = x33551*x779;
double x34644 = x32123*x_f;
double x34645 = x34635 + x34636 - x34637 - x34638 + x34639 - x34640 - x34641 + x34642 - x34643 + x34644;
double x34646 = q6_i_dt*x27;
double x34647 = x34646*x9;
double x34648 = x11*x34646;
double x34649 = q6_i*x33556;
double x34650 = x15894*x_f;
double x34651 = x15660*x36;
double x34652 = q6_i*x27;
double x34653 = x23*x34652;
double x34654 = x24*x34652;
double x34655 = x15640*x36;
double x34656 = x15668*x36;
double x34657 = x15662*x36;
double x34658 = -x34647 - x34648 + x34649 + x34650 - x34651 - x34653 + x34654 + x34655 - x34656 + x34657;
double x34659 = x15628*x267;
double x34660 = theta_dt*x1555;
double x34661 = 5*x34660;
double x34662 = x15619*x66;
double x34663 = x15918*x36;
double x34664 = x15660*x267;
double x34665 = 3*x34556;
double x34666 = q6_i_dot_dt*x34348;
double x34667 = q6_i*x33521;
double x34668 = 5*x34667;
double x34669 = x15640*x267;
double x34670 = x32087*x66;
double x34671 = x32113*x36;
double x34672 = x34646*x5214;
double x34673 = 5*x34672;
double x34674 = 3*x34558;
double x34675 = x33556*x779;
double x34676 = x32088*x66;
double x34677 = x32114*x36;
double x34678 = x15662*x267;
double x34679 = x15668*x267;
double x34680 = x19104*x33541;
double x34681 = q6_i_dot_dt*x34244;
double x34682 = q6_i*x33527;
double x34683 = 5*x34682;
double x34684 = q6_i*x33545;
double x34685 = 5*x34684;
double x34686 = x32090*x66;
double x34687 = x32116*x36;
double x34688 = x32089*x66;
double x34689 = x32115*x36;
double x34690 = 3*x34560;
double x34691 = x27*x779;
double x34692 = x23*x34691;
double x34693 = 3*x34561;
double x34694 = x24*x34691;
double x34695 = 3*x34660;
double x34696 = x32124*x_f;
double x34697 = 3*x34667;
double x34698 = 3*x34672;
double x34699 = x32126*x_f;
double x34700 = 3*x34684;
double x34701 = 3*x34682;
double x34702 = x15660*x66;
double x34703 = x15662*x66;
double x34704 = x15668*x66;
double x34705 = -x34635 - x34636 + x34637 + x34638 - x34639 + x34640 + x34641 - x34642 + x34643 - x34644;
double x34706 = -x34616 + x34617 + x34618 - x34619 + x34620 + x34621 - x34622 - x34623 + x34624 - x34625 + x34695 - x34696 - x34697 + x34698 - x34699 - x34700 + x34701 + x34702 - x34703 + x34704 + x34705;
double x34707 = x34647 + x34648 - x34649 - x34650 + x34651 + x34653 - x34654 - x34655 + x34656 - x34657;
double x34708 = x32107*x_f;
double x34709 = x32108*x_f;
double x34710 = x32109*x_f;
double x34711 = x32110*x_f;
double x34712 = x15646*x33532;
double x34713 = -x34660 + x34667 - x34672 - x34682 + x34684 + x34708 - x34709 + x34710 - x34711 + x34712;
double x34714 = q7_i_dot_dt*x33538;
double x34715 = q7_i_dot_dt*x34280;
double x34716 = x33521*x808;
double x34717 = x32151*x_f;
double x34718 = x33527*x808;
double x34719 = x33545*x808;
double x34720 = x32152*x_f;
double x34721 = x32153*x_f;
double x34722 = x33551*x808;
double x34723 = x32155*x_f;
double x34724 = x34714 + x34715 - x34716 - x34717 + x34718 - x34719 - x34720 + x34721 - x34722 + x34723;
double x34725 = q7_i_dt*x27;
double x34726 = x34725*x9;
double x34727 = x11*x34725;
double x34728 = q7_i*x33556;
double x34729 = x16188*x_f;
double x34730 = x15959*x36;
double x34731 = q7_i*x27;
double x34732 = x23*x34731;
double x34733 = x24*x34731;
double x34734 = x15939*x36;
double x34735 = x15969*x36;
double x34736 = x15961*x36;
double x34737 = -x34726 - x34727 + x34728 + x34729 - x34730 - x34732 + x34733 + x34734 - x34735 + x34736;
double x34738 = x15927*x267;
double x34739 = theta_dt*x1608;
double x34740 = 5*x34739;
double x34741 = x15918*x66;
double x34742 = x16211*x36;
double x34743 = x15959*x267;
double x34744 = 3*x34635;
double x34745 = q7_i_dot_dt*x34348;
double x34746 = q7_i*x33521;
double x34747 = 5*x34746;
double x34748 = x15939*x267;
double x34749 = x32113*x66;
double x34750 = x32145*x36;
double x34751 = x34725*x5214;
double x34752 = 5*x34751;
double x34753 = 3*x34637;
double x34754 = x33556*x808;
double x34755 = x32114*x66;
double x34756 = x32146*x36;
double x34757 = x15961*x267;
double x34758 = x15969*x267;
double x34759 = x19179*x33541;
double x34760 = q7_i_dot_dt*x34244;
double x34761 = q7_i*x33527;
double x34762 = 5*x34761;
double x34763 = q7_i*x33545;
double x34764 = 5*x34763;
double x34765 = x32116*x66;
double x34766 = x32148*x36;
double x34767 = x32115*x66;
double x34768 = x32147*x36;
double x34769 = x3299*x33527;
double x34770 = x27*x808;
double x34771 = x23*x34770;
double x34772 = x3299*x33545;
double x34773 = x24*x34770;
double x34774 = 3*x34739;
double x34775 = x32156*x_f;
double x34776 = 3*x34746;
double x34777 = 3*x34751;
double x34778 = x32158*x_f;
double x34779 = 3*x34763;
double x34780 = 3*x34761;
double x34781 = x15959*x66;
double x34782 = x15961*x66;
double x34783 = x15969*x66;
double x34784 = -x34714 - x34715 + x34716 + x34717 - x34718 + x34719 + x34720 - x34721 + x34722 - x34723;
double x34785 = -x34695 + x34696 + x34697 - x34698 + x34699 + x34700 - x34701 - x34702 + x34703 - x34704 + x34774 - x34775 - x34776 + x34777 - x34778 - x34779 + x34780 + x34781 - x34782 + x34783 + x34784;
double x34786 = x34726 + x34727 - x34728 - x34729 + x34730 + x34732 - x34733 - x34734 + x34735 - x34736;
double x34787 = x32139*x_f;
double x34788 = x32140*x_f;
double x34789 = x32141*x_f;
double x34790 = x32142*x_f;
double x34791 = x15946*x33532;
double x34792 = -x34739 + x34746 - x34751 - x34761 + x34763 + x34787 - x34788 + x34789 - x34790 + x34791;
double x34793 = q8_i_dot_dt*x33538;
double x34794 = q8_i_dot_dt*x34280;
double x34795 = x33521*x837;
double x34796 = x32181*x_f;
double x34797 = x33527*x837;
double x34798 = x33545*x837;
double x34799 = x32182*x_f;
double x34800 = x32183*x_f;
double x34801 = x33551*x837;
double x34802 = x32185*x_f;
double x34803 = x34793 + x34794 - x34795 - x34796 + x34797 - x34798 - x34799 + x34800 - x34801 + x34802;
double x34804 = q8_i_dt*x27;
double x34805 = x34804*x9;
double x34806 = x11*x34804;
double x34807 = q8_i*x33556;
double x34808 = x16483*x_f;
double x34809 = x16252*x36;
double x34810 = q8_i*x27;
double x34811 = x23*x34810;
double x34812 = x24*x34810;
double x34813 = x16232*x36;
double x34814 = x16260*x36;
double x34815 = x16254*x36;
double x34816 = -x34805 - x34806 + x34807 + x34808 - x34809 - x34811 + x34812 + x34813 - x34814 + x34815;
double x34817 = x16220*x267;
double x34818 = theta_dt*x1659;
double x34819 = 5*x34818;
double x34820 = x16211*x66;
double x34821 = x16510*x36;
double x34822 = x16252*x267;
double x34823 = 3*x34714;
double x34824 = q8_i_dot_dt*x34348;
double x34825 = q8_i*x33521;
double x34826 = 5*x34825;
double x34827 = x16232*x267;
double x34828 = x32145*x66;
double x34829 = x16514*x36;
double x34830 = x34804*x5214;
double x34831 = 5*x34830;
double x34832 = 3*x34716;
double x34833 = x33556*x837;
double x34834 = x32146*x66;
double x34835 = x16512*x36;
double x34836 = x16254*x267;
double x34837 = x16260*x267;
double x34838 = x19254*x33541;
double x34839 = q8_i_dot_dt*x34244;
double x34840 = q8_i*x33527;
double x34841 = 5*x34840;
double x34842 = q8_i*x33545;
double x34843 = 5*x34842;
double x34844 = x32148*x66;
double x34845 = x32178*x36;
double x34846 = x32147*x66;
double x34847 = x32177*x36;
double x34848 = 3*x34718;
double x34849 = x27*x837;
double x34850 = x23*x34849;
double x34851 = 3*x34719;
double x34852 = x24*x34849;
double x34853 = 3*x34818;
double x34854 = x32186*x_f;
double x34855 = 3*x34825;
double x34856 = 3*x34830;
double x34857 = x32188*x_f;
double x34858 = 3*x34842;
double x34859 = 3*x34840;
double x34860 = x16252*x66;
double x34861 = x16254*x66;
double x34862 = x16260*x66;
double x34863 = -x34793 - x34794 + x34795 + x34796 - x34797 + x34798 + x34799 - x34800 + x34801 - x34802;
double x34864 = -x34774 + x34775 + x34776 - x34777 + x34778 + x34779 - x34780 - x34781 + x34782 - x34783 + x34853 - x34854 - x34855 + x34856 - x34857 - x34858 + x34859 + x34860 - x34861 + x34862 + x34863;
double x34865 = x34805 + x34806 - x34807 - x34808 + x34809 + x34811 - x34812 - x34813 + x34814 - x34815;
double x34866 = x32171*x_f;
double x34867 = x32172*x_f;
double x34868 = x32173*x_f;
double x34869 = x32174*x_f;
double x34870 = x16238*x33532;
double x34871 = -x34818 + x34825 - x34830 - x34840 + x34842 + x34866 - x34867 + x34868 - x34869 + x34870;
double x34872 = q9_i_dt*x27;
double x34873 = x34872*x9;
double x34874 = x11*x34872;
double x34875 = q9_i*x33556;
double x34876 = x16772*x_f;
double x34877 = x16547*x36;
double x34878 = q9_i*x27;
double x34879 = x23*x34878;
double x34880 = x24*x34878;
double x34881 = x16530*x36;
double x34882 = x16554*x36;
double x34883 = x16548*x36;
double x34884 = -x34873 - x34874 + x34875 + x34876 - x34877 - x34879 + x34880 + x34881 - x34882 + x34883;
double x34885 = q9_i_dot_dt*x33538;
double x34886 = x19386*x33541;
double x34887 = x33521*x866;
double x34888 = x32223*x_f;
double x34889 = x33527*x866;
double x34890 = x33545*x866;
double x34891 = x32224*x_f;
double x34892 = x32225*x_f;
double x34893 = x33551*x866;
double x34894 = x32226*x_f;
double x34895 = x34885 + x34886 - x34887 - x34888 + x34889 - x34890 - x34891 + x34892 - x34893 + x34894;
double x34896 = 3*x34793;
double x34897 = x16510*x66;
double x34898 = 3*x34795;
double x34899 = x19322*x33541;
double x34900 = x16512*x66;
double x34901 = x33545*x3518;
double x34902 = x33527*x3518;
double x34903 = x16514*x66;
double x34904 = x32178*x66;
double x34905 = x32177*x66;
double x34906 = theta_dt*x1712;
double x34907 = x34872*x5214;
double x34908 = theta_dt*x1755;
double x34909 = q9_i*x33527;
double x34910 = q9_i*x33545;
double x34911 = x16518*x267 + x16530*x267 - x16547*x267 + x16548*x267 - x16554*x267 - 5*x34906 - 5*x34907 + 5*x34908 - 5*x34909 + 5*x34910;
double x34912 = x27*x866;
double x34913 = -x16794*x36 + x19386*x33607 + x19386*x33608 + x23*x34912 - x24*x34912 + x32206*x36 - x32207*x36 + x32208*x36 - x32209*x36 - x33556*x866;
double x34914 = -x34885 - x34886 + x34887 + x34888 - x34889 + x34890 + x34891 - x34892 + x34893 - x34894;
double x34915 = x33612 + x34914;
double x34916 = x16547*x66 - x16548*x66 + x16554*x66 - x32212*x_f - x32214*x_f + 3*x34906 + 3*x34907 - 3*x34908 + 3*x34909 - 3*x34910;
double x34917 = -x34853 + x34854 + x34855 - x34856 + x34857 + x34858 - x34859 - x34860 + x34861 - x34862 + x34916;
double x34918 = x34873 + x34874 - x34875 - x34876 + x34877 + x34879 - x34880 - x34881 + x34882 - x34883;
double x34919 = x32201*x_f;
double x34920 = x32202*x_f;
double x34921 = x32203*x_f;
double x34922 = x32204*x_f;
double x34923 = x16535*x33532;
double x34924 = L*(x33701 - x34906 - x34907 + x34908 - x34909 + x34910 + x34919 - x34920 + x34921 - x34922 + x34923);
double x34925 = q10_i_dt*x33607;
double x34926 = x33519*x872;
double x34927 = x1781*x5179;
double x34928 = q10_i*x33556;
double x34929 = q10_i_dt*x33608;
double x34930 = x33521*x875;
double x34931 = x33541*x872;
double x34932 = x1781*x5215;
double x34933 = q10_i*x27;
double x34934 = x24*x34933;
double x34935 = x32243*x_f;
double x34936 = x23*x34933;
double x34937 = x16825*x36;
double x34938 = x33545*x875;
double x34939 = x33527*x875;
double x34940 = q10_i*x36;
double x34941 = x11329*x34940;
double x34942 = x32247*x_f;
double x34943 = x32246*x_f;
double x34944 = x11332*x34940;
double x34945 = x32250*x_f;
double x34946 = x33551*x875;
double x34947 = 3*x34885;
double x34948 = x19389*x33541;
double x34949 = 3*x34887;
double x34950 = x16794*x66;
double x34951 = q10_i*x267;
double x34952 = x32206*x66;
double x34953 = x33527*x3619;
double x34954 = x27*x875;
double x34955 = x33545*x3619;
double x34956 = x32207*x66;
double x34957 = x32208*x66;
double x34958 = x32209*x66;
double x34959 = q10_i*x66;
double x34960 = x34926 - x34930 + x34931 - x34935 - x34938 + x34939 + x34942 - x34943 + x34945 - x34946;
double x34961 = x11329*x34959 - x11332*x34959 - x16825*x66 + x1766*x5215 + x1790*x33521 - x1790*x33527 + x1790*x33545 + x32241*x_f - x33519*x3611 - x33541*x3611 + x34916 + x34960;
double x34962 = 4*x8507;
double x34963 = 23*x11351;
double x34964 = 23*x30952;
double x34965 = 23*x6696;
double x34966 = 5*x30919;
double x34967 = 7*x30904;
double x34968 = x286*x30906;
double x34969 = x154*x30921;
double x34970 = x154*x30920;
double x34971 = x286*x30905;
double x34972 = x286*x30945;
double x34973 = x154*x31254;
double x34974 = x154*x31256;
double x34975 = x286*x30947;
double x34976 = 12*x8584;
double x34977 = 12*x30934;
double x34978 = 12*x30936;
double x34979 = 12*x30938;
double x34980 = 12*x30940;
double x34981 = -x34976 - x34977 + x34978 - x34979 + x34980;
double x34982 = 12*x8507;
double x34983 = 12*x30925;
double x34984 = 12*x30927;
double x34985 = 12*x30929;
double x34986 = 12*x30931;
double x34987 = x34982 - x34983 + x34984 - x34985 + x34986;
double x34988 = 60*x11351;
double x34989 = 60*x30952;
double x34990 = 60*x6696;
double x34991 = 18*x8507;
double x34992 = 18*x30927;
double x34993 = 16*x30904;
double x34994 = 6*x30919;
double x34995 = 18*x30925;
double x34996 = 18*x30931;
double x34997 = x30905*x327;
double x34998 = x129*x30920;
double x34999 = x129*x30921;
double x35000 = x30906*x327;
double x35001 = 18*x30929;
double x35002 = x30947*x327;
double x35003 = x129*x31256;
double x35004 = x129*x31254;
double x35005 = x30945*x327;
double x35006 = 18*x8584;
double x35007 = 18*x30936;
double x35008 = 18*x30934;
double x35009 = 18*x30940;
double x35010 = 18*x30938;
double x35011 = x35006 - x35007 + x35008 - x35009 + x35010;
double x35012 = 8*x30925;
double x35013 = 8*x30927;
double x35014 = 8*x30929;
double x35015 = 8*x30931;
double x35016 = 8*x30934;
double x35017 = 8*x30936;
double x35018 = 8*x30938;
double x35019 = 8*x30940;
double x35020 = -x35016 + x35017 - x35018 + x35019 - x8955;
double x35021 = x34976 + x34977 - x34978 + x34979 - x34980;
double x35022 = -x31251 + x31252 - x31253 + x31255 - x31257;
double x35023 = x35016 - x35017 + x35018 - x35019 + x8955;
double x35024 = -x35006 + x35007 - x35008 + x35009 - x35010;
double x35025 = 4*x8584;
double x35026 = 21*x11351;
double x35027 = 21*x30952;
double x35028 = 21*x6696;
double x35029 = -x31234 + x31235 - x31236 + x31238 - x31240;
double x35030 = 8*x31225;
double x35031 = 8*x31227;
double x35032 = 8*x31229;
double x35033 = 8*x31231;
double x35034 = x11014 - x35030 + x35031 - x35032 + x35033;
double x35035 = 7*x30919;
double x35036 = 5*x31216;
double x35037 = x286*x30920;
double x35038 = x154*x31217;
double x35039 = x154*x31219;
double x35040 = x286*x30921;
double x35041 = x286*x31256;
double x35042 = x154*x31239;
double x35043 = x154*x31237;
double x35044 = x286*x31254;
double x35045 = 12*x10744;
double x35046 = 12*x31225;
double x35047 = 12*x31227;
double x35048 = 12*x31229;
double x35049 = 12*x31231;
double x35050 = x35045 - x35046 + x35047 - x35048 + x35049;
double x35051 = 54*x11351;
double x35052 = x11360*x8287;
double x35053 = x5161*x8287;
double x35054 = x35051 + x35052 + x35053;
double x35055 = 6*x31216;
double x35056 = 16*x30919;
double x35057 = x30921*x327;
double x35058 = x129*x31219;
double x35059 = x129*x31217;
double x35060 = x30920*x327;
double x35061 = x31254*x327;
double x35062 = x129*x31237;
double x35063 = x129*x31239;
double x35064 = x31256*x327;
double x35065 = 18*x10744;
double x35066 = 18*x31227;
double x35067 = 18*x31225;
double x35068 = 18*x31231;
double x35069 = 18*x31229;
double x35070 = -x35065 - x35066 + x35067 - x35068 + x35069;
double x35071 = -x35051 - x35052 - x35053;
double x35072 = -x11014 + x35030 - x35031 + x35032 - x35033;
double x35073 = -x35045 + x35046 - x35047 + x35048 - x35049;
double x35074 = x35065 + x35066 - x35067 + x35068 - x35069;
double x35075 = 4*x10744;
double x35076 = 19*x11351;
double x35077 = 19*x30952;
double x35078 = 19*x6696;
double x35079 = -x31191 + x31192 - x31193 + x31195 - x31197;
double x35080 = 8*x31182;
double x35081 = 8*x31184;
double x35082 = 8*x31186;
double x35083 = 8*x31188;
double x35084 = x10716 - x35080 + x35081 - x35082 + x35083;
double x35085 = 7*x31216;
double x35086 = 5*x31173;
double x35087 = x286*x31217;
double x35088 = x154*x31174;
double x35089 = x154*x31176;
double x35090 = x286*x31219;
double x35091 = x286*x31239;
double x35092 = x154*x31196;
double x35093 = x154*x31194;
double x35094 = x286*x31237;
double x35095 = 12*x10445;
double x35096 = 12*x31182;
double x35097 = 12*x31184;
double x35098 = 12*x31186;
double x35099 = 12*x31188;
double x35100 = x35095 - x35096 + x35097 - x35098 + x35099;
double x35101 = 48*x11351;
double x35102 = x11360*x6709;
double x35103 = x5161*x6709;
double x35104 = x35101 + x35102 + x35103;
double x35105 = 6*x31173;
double x35106 = 16*x31216;
double x35107 = x31219*x327;
double x35108 = x129*x31176;
double x35109 = x129*x31174;
double x35110 = x31217*x327;
double x35111 = x31237*x327;
double x35112 = x129*x31194;
double x35113 = x129*x31196;
double x35114 = x31239*x327;
double x35115 = 18*x10445;
double x35116 = 18*x31184;
double x35117 = 18*x31182;
double x35118 = 18*x31188;
double x35119 = 18*x31186;
double x35120 = -x35115 - x35116 + x35117 - x35118 + x35119;
double x35121 = -x35101 - x35102 - x35103;
double x35122 = -x10716 + x35080 - x35081 + x35082 - x35083;
double x35123 = -x35095 + x35096 - x35097 + x35098 - x35099;
double x35124 = x35115 + x35116 - x35117 + x35118 - x35119;
double x35125 = 4*x10445;
double x35126 = 17*x11351;
double x35127 = 17*x30952;
double x35128 = 17*x6696;
double x35129 = -x31148 + x31149 - x31150 + x31152 - x31154;
double x35130 = 8*x31139;
double x35131 = 8*x31141;
double x35132 = 8*x31143;
double x35133 = 8*x31145;
double x35134 = x10418 - x35130 + x35131 - x35132 + x35133;
double x35135 = 7*x31173;
double x35136 = 5*x31130;
double x35137 = x286*x31174;
double x35138 = x154*x31131;
double x35139 = x154*x31133;
double x35140 = x286*x31176;
double x35141 = x286*x31196;
double x35142 = x154*x31153;
double x35143 = x154*x31151;
double x35144 = x286*x31194;
double x35145 = 12*x10160;
double x35146 = 12*x31139;
double x35147 = 12*x31141;
double x35148 = 12*x31143;
double x35149 = 12*x31145;
double x35150 = x35145 - x35146 + x35147 - x35148 + x35149;
double x35151 = 42*x11351;
double x35152 = 42*x30952;
double x35153 = 42*x6696;
double x35154 = x35151 + x35152 + x35153;
double x35155 = 6*x31130;
double x35156 = 16*x31173;
double x35157 = x31176*x327;
double x35158 = x129*x31133;
double x35159 = x129*x31131;
double x35160 = x31174*x327;
double x35161 = x31194*x327;
double x35162 = x129*x31151;
double x35163 = x129*x31153;
double x35164 = x31196*x327;
double x35165 = 18*x10160;
double x35166 = 18*x31141;
double x35167 = 18*x31139;
double x35168 = 18*x31145;
double x35169 = 18*x31143;
double x35170 = -x35165 - x35166 + x35167 - x35168 + x35169;
double x35171 = -x35151 - x35152 - x35153;
double x35172 = -x10418 + x35130 - x35131 + x35132 - x35133;
double x35173 = -x35145 + x35146 - x35147 + x35148 - x35149;
double x35174 = x35165 + x35166 - x35167 + x35168 - x35169;
double x35175 = 4*x10160;
double x35176 = 15*x11351;
double x35177 = x11360*x8342;
double x35178 = x5161*x8342;
double x35179 = x35176 + x35177 + x35178;
double x35180 = -x31104 + x31105 - x31106 + x31108 - x31110;
double x35181 = 8*x31095;
double x35182 = 8*x31097;
double x35183 = 8*x31099;
double x35184 = 8*x31101;
double x35185 = x10132 - x35181 + x35182 - x35183 + x35184;
double x35186 = 7*x31130;
double x35187 = 5*x31086;
double x35188 = x286*x31131;
double x35189 = x154*x31087;
double x35190 = x154*x31089;
double x35191 = x286*x31133;
double x35192 = x286*x31153;
double x35193 = x154*x31109;
double x35194 = x154*x31107;
double x35195 = x286*x31151;
double x35196 = 12*x9862;
double x35197 = 12*x31095;
double x35198 = 12*x31097;
double x35199 = 12*x31099;
double x35200 = 12*x31101;
double x35201 = x35196 - x35197 + x35198 - x35199 + x35200;
double x35202 = 36*x11351;
double x35203 = 36*x30952;
double x35204 = 36*x6696;
double x35205 = x35202 + x35203 + x35204;
double x35206 = 6*x31086;
double x35207 = 16*x31130;
double x35208 = x31133*x327;
double x35209 = x129*x31089;
double x35210 = x129*x31087;
double x35211 = x31131*x327;
double x35212 = x31151*x327;
double x35213 = x129*x31107;
double x35214 = x129*x31109;
double x35215 = x31153*x327;
double x35216 = 18*x9862;
double x35217 = 18*x31097;
double x35218 = 18*x31095;
double x35219 = 18*x31101;
double x35220 = 18*x31099;
double x35221 = -x35216 - x35217 + x35218 - x35219 + x35220;
double x35222 = -x35202 - x35203 - x35204;
double x35223 = -x35176 - x35177 - x35178;
double x35224 = -x10132 + x35181 - x35182 + x35183 - x35184;
double x35225 = -x35196 + x35197 - x35198 + x35199 - x35200;
double x35226 = x35216 + x35217 - x35218 + x35219 - x35220;
double x35227 = 4*x9862;
double x35228 = 13*x11351;
double x35229 = x11360*x8032;
double x35230 = x5161*x8032;
double x35231 = x35228 + x35229 + x35230;
double x35232 = -x31060 + x31061 - x31062 + x31064 - x31066;
double x35233 = 8*x31051;
double x35234 = 8*x31053;
double x35235 = 8*x31055;
double x35236 = 8*x31057;
double x35237 = -x35233 + x35234 - x35235 + x35236 + x9833;
double x35238 = 7*x31086;
double x35239 = 5*x31042;
double x35240 = x286*x31087;
double x35241 = x154*x31043;
double x35242 = x154*x31045;
double x35243 = x286*x31089;
double x35244 = x286*x31109;
double x35245 = x154*x31065;
double x35246 = x154*x31063;
double x35247 = x286*x31107;
double x35248 = 12*x9575;
double x35249 = 12*x31051;
double x35250 = 12*x31053;
double x35251 = 12*x31055;
double x35252 = 12*x31057;
double x35253 = x35248 - x35249 + x35250 - x35251 + x35252;
double x35254 = 30*x11351;
double x35255 = 30*x30952;
double x35256 = 30*x6696;
double x35257 = x35254 + x35255 + x35256;
double x35258 = 6*x31042;
double x35259 = 16*x31086;
double x35260 = x31089*x327;
double x35261 = x129*x31045;
double x35262 = x129*x31043;
double x35263 = x31087*x327;
double x35264 = x31107*x327;
double x35265 = x129*x31063;
double x35266 = x129*x31065;
double x35267 = x31109*x327;
double x35268 = 18*x9575;
double x35269 = 18*x31053;
double x35270 = 18*x31051;
double x35271 = 18*x31057;
double x35272 = 18*x31055;
double x35273 = -x35268 - x35269 + x35270 - x35271 + x35272;
double x35274 = -x35254 - x35255 - x35256;
double x35275 = -x35228 - x35229 - x35230;
double x35276 = x35233 - x35234 + x35235 - x35236 - x9833;
double x35277 = -x35248 + x35249 - x35250 + x35251 - x35252;
double x35278 = x35268 + x35269 - x35270 + x35271 - x35272;
double x35279 = 4*x9575;
double x35280 = 11*x11351;
double x35281 = 11*x30952;
double x35282 = 11*x6696;
double x35283 = x35280 + x35281 + x35282;
double x35284 = -x31019 + x31020 - x31021 + x31023 - x31025;
double x35285 = 8*x31010;
double x35286 = 8*x31012;
double x35287 = 8*x31014;
double x35288 = 8*x31016;
double x35289 = -x35285 + x35286 - x35287 + x35288 + x9547;
double x35290 = 7*x31042;
double x35291 = 5*x31001;
double x35292 = x286*x31043;
double x35293 = x154*x31002;
double x35294 = x154*x31004;
double x35295 = x286*x31045;
double x35296 = x286*x31065;
double x35297 = x154*x31024;
double x35298 = x154*x31022;
double x35299 = x286*x31063;
double x35300 = 12*x31010;
double x35301 = 12*x31012;
double x35302 = 12*x31014;
double x35303 = 12*x31016;
double x35304 = -x35300 + x35301 - x35302 + x35303 + x9282;
double x35305 = 24*x11351;
double x35306 = 24*x30952;
double x35307 = 24*x6696;
double x35308 = x35305 + x35306 + x35307;
double x35309 = 6*x31001;
double x35310 = 16*x31042;
double x35311 = x31045*x327;
double x35312 = x129*x31004;
double x35313 = x129*x31002;
double x35314 = x31043*x327;
double x35315 = x31063*x327;
double x35316 = x129*x31022;
double x35317 = x129*x31024;
double x35318 = x31065*x327;
double x35319 = 18*x31012;
double x35320 = 18*x31010;
double x35321 = 18*x31016;
double x35322 = 18*x31014;
double x35323 = -x35319 + x35320 - x35321 + x35322 - x9452;
double x35324 = -x35305 - x35306 - x35307;
double x35325 = -x35280 - x35281 - x35282;
double x35326 = x35285 - x35286 + x35287 - x35288 - x9547;
double x35327 = x35300 - x35301 + x35302 - x35303 - x9282;
double x35328 = x35319 - x35320 + x35321 - x35322 + x9452;
double x35329 = 4*x9281;
double x35330 = 9*x11351;
double x35331 = x11360*x4046;
double x35332 = x4046*x5161;
double x35333 = x35330 + x35331 + x35332;
double x35334 = -x30984 + x30985 - x30986 + x30988 - x30990;
double x35335 = 8*x30975;
double x35336 = 8*x30977;
double x35337 = 8*x30979;
double x35338 = 8*x30981;
double x35339 = -x35335 + x35336 - x35337 + x35338 + x9007;
double x35340 = 7*x31001;
double x35341 = 5*x30961;
double x35342 = x286*x31002;
double x35343 = x154*x30962;
double x35344 = x154*x30964;
double x35345 = x286*x31004;
double x35346 = x286*x31024;
double x35347 = x154*x30989;
double x35348 = x154*x30987;
double x35349 = x286*x31022;
double x35350 = 12*x9006;
double x35351 = 12*x30975;
double x35352 = 12*x30977;
double x35353 = 12*x30979;
double x35354 = 12*x30981;
double x35355 = x35350 - x35351 + x35352 - x35353 + x35354;
double x35356 = 6*x30961;
double x35357 = 16*x31001;
double x35358 = x31004*x327;
double x35359 = x129*x30964;
double x35360 = x129*x30962;
double x35361 = x31002*x327;
double x35362 = x31022*x327;
double x35363 = x129*x30987;
double x35364 = x129*x30989;
double x35365 = x31024*x327;
double x35366 = 18*x30977;
double x35367 = 18*x30975;
double x35368 = 18*x30981;
double x35369 = 18*x30979;
double x35370 = -x35366 + x35367 - x35368 + x35369 - x9431;
double x35371 = -x35330 - x35331 - x35332;
double x35372 = x35335 - x35336 + x35337 - x35338 - x9007;
double x35373 = -x35350 + x35351 - x35352 + x35353 - x35354;
double x35374 = x35366 - x35367 + x35368 - x35369 + x9431;
double x35375 = 4*x9006;
double x35376 = x11517 + x11938 + x11940;
double x35377 = 8*x30891;
double x35378 = 8*x30893;
double x35379 = 8*x30895;
double x35380 = 8*x30897;
double x35381 = -x35377 + x35378 - x35379 + x35380 + x5627;
double x35382 = 7*x30961;
double x35383 = 5*x30875;
double x35384 = x286*x30962;
double x35385 = 5*x30876;
double x35386 = x154*x30877;
double x35387 = x286*x30964;
double x35388 = x286*x30989;
double x35389 = x154*x30887;
double x35390 = x154*x30885;
double x35391 = x286*x30987;
double x35392 = 12*x30891;
double x35393 = 12*x30893;
double x35394 = 12*x30895;
double x35395 = 12*x30897;
double x35396 = -x35392 + x35393 - x35394 + x35395 + x5711;
double x35397 = -x30969 + x30970 - x30971 + x30972 - x30973;
double x35398 = 6*x30875;
double x35399 = 16*x30961;
double x35400 = x30964*x327;
double x35401 = x129*x30877;
double x35402 = 6*x30876;
double x35403 = x30962*x327;
double x35404 = x30987*x327;
double x35405 = x129*x30885;
double x35406 = x129*x30887;
double x35407 = x30989*x327;
double x35408 = 18*x5451;
double x35409 = 18*x30893;
double x35410 = 18*x30891;
double x35411 = 18*x30897;
double x35412 = 18*x30895;
double x35413 = -x35408 - x35409 + x35410 - x35411 + x35412;
double x35414 = -x11352 - x11941 - x11942;
double x35415 = -x11517 - x11938 - x11940;
double x35416 = 8*x30858;
double x35417 = 8*x30856;
double x35418 = 8*x30862;
double x35419 = 8*x30864;
double x35420 = -x35416 + x35417 - x35418 + x35419 - x5381;
double x35421 = 12*x30858;
double x35422 = 12*x30856;
double x35423 = 12*x30862;
double x35424 = 12*x30864;
double x35425 = -x35421 + x35422 - x35423 + x35424 - x5752;
double x35426 = 18*x5180;
double x35427 = 18*x30856;
double x35428 = 18*x30858;
double x35429 = 18*x30864;
double x35430 = 18*x30862;
double x35431 = x35426 - x35427 + x35428 - x35429 + x35430;
double x35432 = -x11351 - x30952 - x6696;
double x35433 = 5*x6079;
double x35434 = 7*x30851;
double x35435 = x286*x30853;
double x35436 = x154*x31276;
double x35437 = 5*x31275;
double x35438 = x286*x30852;
double x35439 = x286*x31292;
double x35440 = x154*x31328;
double x35441 = x154*x31330;
double x35442 = x286*x31294;
double x35443 = 12*x31280;
double x35444 = 12*x31282;
double x35445 = 12*x31284;
double x35446 = 12*x31286;
double x35447 = -x35443 + x35444 - x35445 + x35446 - x5777;
double x35448 = 16*x30851;
double x35449 = 6*x6079;
double x35450 = x30852*x327;
double x35451 = 6*x31275;
double x35452 = x129*x31276;
double x35453 = x30853*x327;
double x35454 = x31294*x327;
double x35455 = x129*x31330;
double x35456 = x129*x31328;
double x35457 = x31292*x327;
double x35458 = 18*x5776;
double x35459 = 18*x31282;
double x35460 = 18*x31280;
double x35461 = 18*x31286;
double x35462 = 18*x31284;
double x35463 = x35458 - x35459 + x35460 - x35461 + x35462;
double x35464 = -x31289 + x31290 - x31291 + x31293 - x31295;
double x35465 = 8*x31280;
double x35466 = 8*x31282;
double x35467 = 8*x31284;
double x35468 = 8*x31286;
double x35469 = -x35465 + x35466 - x35467 + x35468 - x6036;
double x35470 = x11351 + x30952 + x6696;
double x35471 = x35443 - x35444 + x35445 - x35446 + x5777;
double x35472 = x35465 - x35466 + x35467 - x35468 + x6036;
double x35473 = x31326 - x31327 + x31329 - x31331 - x6080;
double x35474 = -x35458 + x35459 - x35460 + x35461 - x35462;
double x35475 = 4*x5776;
double x35476 = 5*x6370;
double x35477 = 7*x6079;
double x35478 = x286*x31276;
double x35479 = x154*x31312;
double x35480 = 5*x31311;
double x35481 = 7*x31275;
double x35482 = x286*x31328;
double x35483 = x154*x31365;
double x35484 = x154*x31367;
double x35485 = x286*x31330;
double x35486 = 12*x31317;
double x35487 = 12*x31319;
double x35488 = 12*x31321;
double x35489 = 12*x31323;
double x35490 = -x35486 + x35487 - x35488 + x35489 - x6360;
double x35491 = 16*x6079;
double x35492 = 16*x31275;
double x35493 = 6*x31311;
double x35494 = x129*x31312;
double x35495 = x31276*x327;
double x35496 = x31330*x327;
double x35497 = x129*x31367;
double x35498 = x129*x31365;
double x35499 = x31328*x327;
double x35500 = 18*x6115;
double x35501 = 18*x31319;
double x35502 = 18*x31317;
double x35503 = 18*x31323;
double x35504 = 18*x31321;
double x35505 = x35500 - x35501 + x35502 - x35503 + x35504;
double x35506 = 8*x31317;
double x35507 = 8*x31319;
double x35508 = 8*x31321;
double x35509 = 8*x31323;
double x35510 = -x35506 + x35507 - x35508 + x35509 - x6330;
double x35511 = x35486 - x35487 + x35488 - x35489 + x6360;
double x35512 = x35506 - x35507 + x35508 - x35509 + x6330;
double x35513 = -x31362 + x31363 - x31364 + x31366 - x31368;
double x35514 = -x35500 + x35501 - x35502 + x35503 - x35504;
double x35515 = 4*x6115;
double x35516 = L*x11785;
double x35517 = -x11800 - x11803 - x35516;
double x35518 = 5*x6692;
double x35519 = 7*x6370;
double x35520 = x286*x31312;
double x35521 = x154*x31348;
double x35522 = 5*x31347;
double x35523 = 7*x31311;
double x35524 = x286*x31365;
double x35525 = x154*x31403;
double x35526 = x154*x31405;
double x35527 = x286*x31367;
double x35528 = 12*x6406;
double x35529 = 12*x31353;
double x35530 = 12*x31355;
double x35531 = 12*x31357;
double x35532 = 12*x31359;
double x35533 = -x35528 - x35529 + x35530 - x35531 + x35532;
double x35534 = 16*x6370;
double x35535 = 6*x6692;
double x35536 = 16*x31311;
double x35537 = 6*x31347;
double x35538 = x129*x31348;
double x35539 = x31312*x327;
double x35540 = x31367*x327;
double x35541 = x129*x31405;
double x35542 = x129*x31403;
double x35543 = x31365*x327;
double x35544 = 18*x6406;
double x35545 = 18*x31355;
double x35546 = 18*x31353;
double x35547 = 18*x31359;
double x35548 = 18*x31357;
double x35549 = x35544 - x35545 + x35546 - x35547 + x35548;
double x35550 = 8*x31353;
double x35551 = 8*x31355;
double x35552 = 8*x31357;
double x35553 = 8*x31359;
double x35554 = -x35550 + x35551 - x35552 + x35553 - x6646;
double x35555 = x11800 + x11803 + x35516;
double x35556 = x35528 + x35529 - x35530 + x35531 - x35532;
double x35557 = x35550 - x35551 + x35552 - x35553 + x6646;
double x35558 = -x31400 + x31401 - x31402 + x31404 - x31406;
double x35559 = -x35544 + x35545 - x35546 + x35547 - x35548;
double x35560 = 4*x6406;
double x35561 = 5*x7014;
double x35562 = 7*x6692;
double x35563 = x286*x31348;
double x35564 = x154*x31385;
double x35565 = 5*x31384;
double x35566 = 7*x31347;
double x35567 = x286*x31403;
double x35568 = x154*x31441;
double x35569 = x154*x31443;
double x35570 = x286*x31405;
double x35571 = 12*x6738;
double x35572 = 12*x31391;
double x35573 = 12*x31393;
double x35574 = 12*x31395;
double x35575 = 12*x31397;
double x35576 = -x35571 - x35572 + x35573 - x35574 + x35575;
double x35577 = 16*x6692;
double x35578 = 6*x7014;
double x35579 = 16*x31347;
double x35580 = 6*x31384;
double x35581 = x129*x31385;
double x35582 = x31348*x327;
double x35583 = x31405*x327;
double x35584 = x129*x31443;
double x35585 = x129*x31441;
double x35586 = x31403*x327;
double x35587 = 18*x6738;
double x35588 = 18*x31393;
double x35589 = 18*x31391;
double x35590 = 18*x31397;
double x35591 = 18*x31395;
double x35592 = x35587 - x35588 + x35589 - x35590 + x35591;
double x35593 = 8*x31391;
double x35594 = 8*x31393;
double x35595 = 8*x31395;
double x35596 = 8*x31397;
double x35597 = -x35593 + x35594 - x35595 + x35596 - x6969;
double x35598 = x11352 + x11941 + x11942;
double x35599 = x35571 + x35572 - x35573 + x35574 - x35575;
double x35600 = x35593 - x35594 + x35595 - x35596 + x6969;
double x35601 = -x31438 + x31439 - x31440 + x31442 - x31444;
double x35602 = -x35587 + x35588 - x35589 + x35590 - x35591;
double x35603 = 4*x6738;
double x35604 = 5*x7313;
double x35605 = 7*x7014;
double x35606 = x286*x31385;
double x35607 = x154*x31423;
double x35608 = 5*x31422;
double x35609 = 7*x31384;
double x35610 = x286*x31441;
double x35611 = x154*x31479;
double x35612 = x154*x31481;
double x35613 = x286*x31443;
double x35614 = 12*x7053;
double x35615 = 12*x31429;
double x35616 = 12*x31431;
double x35617 = 12*x31433;
double x35618 = 12*x31435;
double x35619 = -x35614 - x35615 + x35616 - x35617 + x35618;
double x35620 = 16*x7014;
double x35621 = 6*x7313;
double x35622 = 16*x31384;
double x35623 = 6*x31422;
double x35624 = x129*x31423;
double x35625 = x31385*x327;
double x35626 = x31443*x327;
double x35627 = x129*x31481;
double x35628 = x129*x31479;
double x35629 = x31441*x327;
double x35630 = 18*x31431;
double x35631 = 18*x31429;
double x35632 = 18*x31435;
double x35633 = 18*x31433;
double x35634 = -x35630 + x35631 - x35632 + x35633 + x7394;
double x35635 = 8*x31429;
double x35636 = 8*x31431;
double x35637 = 8*x31433;
double x35638 = 8*x31435;
double x35639 = -x35635 + x35636 - x35637 + x35638 - x7273;
double x35640 = x35614 + x35615 - x35616 + x35617 - x35618;
double x35641 = x35635 - x35636 + x35637 - x35638 + x7273;
double x35642 = -x31476 + x31477 - x31478 + x31480 - x31482;
double x35643 = x35630 - x35631 + x35632 - x35633 - x7394;
double x35644 = 4*x7053;
double x35645 = 5*x7637;
double x35646 = 7*x7313;
double x35647 = x286*x31423;
double x35648 = x154*x31461;
double x35649 = 5*x31460;
double x35650 = 7*x31422;
double x35651 = x286*x31479;
double x35652 = x154*x31517;
double x35653 = x154*x31519;
double x35654 = x286*x31481;
double x35655 = 12*x7354;
double x35656 = 12*x31467;
double x35657 = 12*x31469;
double x35658 = 12*x31471;
double x35659 = 12*x31473;
double x35660 = -x35655 - x35656 + x35657 - x35658 + x35659;
double x35661 = 16*x7313;
double x35662 = 6*x7637;
double x35663 = 16*x31422;
double x35664 = 6*x31460;
double x35665 = x129*x31461;
double x35666 = x31423*x327;
double x35667 = x31481*x327;
double x35668 = x129*x31519;
double x35669 = x129*x31517;
double x35670 = x31479*x327;
double x35671 = 18*x31469;
double x35672 = 18*x31467;
double x35673 = 18*x31473;
double x35674 = 18*x31471;
double x35675 = -x35671 + x35672 - x35673 + x35674 + x7411;
double x35676 = 8*x31467;
double x35677 = 8*x31469;
double x35678 = 8*x31471;
double x35679 = 8*x31473;
double x35680 = -x35676 + x35677 - x35678 + x35679 - x7593;
double x35681 = x35655 + x35656 - x35657 + x35658 - x35659;
double x35682 = x35676 - x35677 + x35678 - x35679 + x7593;
double x35683 = -x31514 + x31515 - x31516 + x31518 - x31520;
double x35684 = x35671 - x35672 + x35673 - x35674 - x7411;
double x35685 = 4*x7354;
double x35686 = 5*x7945;
double x35687 = 7*x7637;
double x35688 = x286*x31461;
double x35689 = x154*x31499;
double x35690 = 5*x31498;
double x35691 = 7*x31460;
double x35692 = x286*x31517;
double x35693 = x154*x31562;
double x35694 = x154*x31564;
double x35695 = x286*x31519;
double x35696 = 12*x7676;
double x35697 = 12*x31505;
double x35698 = 12*x31507;
double x35699 = 12*x31509;
double x35700 = 12*x31511;
double x35701 = -x35696 - x35697 + x35698 - x35699 + x35700;
double x35702 = 16*x7637;
double x35703 = 6*x7945;
double x35704 = 16*x31460;
double x35705 = 6*x31498;
double x35706 = x129*x31499;
double x35707 = x31461*x327;
double x35708 = x31519*x327;
double x35709 = x129*x31564;
double x35710 = x129*x31562;
double x35711 = x31517*x327;
double x35712 = 18*x7676;
double x35713 = 18*x31507;
double x35714 = 18*x31505;
double x35715 = 18*x31511;
double x35716 = 18*x31509;
double x35717 = x35712 - x35713 + x35714 - x35715 + x35716;
double x35718 = 8*x31505;
double x35719 = 8*x31507;
double x35720 = 8*x31509;
double x35721 = 8*x31511;
double x35722 = -x35718 + x35719 - x35720 + x35721 - x7900;
double x35723 = x35696 + x35697 - x35698 + x35699 - x35700;
double x35724 = x35718 - x35719 + x35720 - x35721 + x7900;
double x35725 = -x31559 + x31560 - x31561 + x31563 - x31565;
double x35726 = -x35712 + x35713 - x35714 + x35715 - x35716;
double x35727 = 4*x7676;
double x35728 = 5*x8268;
double x35729 = 7*x7945;
double x35730 = x286*x31499;
double x35731 = x154*x31538;
double x35732 = 5*x31537;
double x35733 = 7*x31498;
double x35734 = x286*x31562;
double x35735 = x154*x31578;
double x35736 = x154*x31580;
double x35737 = x286*x31564;
double x35738 = 12*x7990;
double x35739 = 12*x31550;
double x35740 = 12*x31552;
double x35741 = 12*x31554;
double x35742 = 12*x31556;
double x35743 = -x35738 - x35739 + x35740 - x35741 + x35742;
double x35744 = 6*x8268;
double x35745 = 16*x31498;
double x35746 = 6*x31537;
double x35747 = x129*x31538;
double x35748 = x31499*x327;
double x35749 = x31564*x327;
double x35750 = x129*x31580;
double x35751 = x129*x31578;
double x35752 = x31562*x327;
double x35753 = 18*x7990;
double x35754 = 18*x31552;
double x35755 = 18*x31550;
double x35756 = 18*x31556;
double x35757 = 18*x31554;
double x35758 = x35753 - x35754 + x35755 - x35756 + x35757;
double x35759 = -x31543 + x31544 - x31545 + x31546 - x31547;
double x35760 = 8*x31550;
double x35761 = 8*x31552;
double x35762 = 8*x31554;
double x35763 = 8*x31556;
double x35764 = -x35760 + x35761 - x35762 + x35763 - x8227;
double x35765 = x35738 + x35739 - x35740 + x35741 - x35742;
double x35766 = -x31575 + x31576 - x31577 + x31579 - x31581;
double x35767 = x35760 - x35761 + x35762 - x35763 + x8227;
double x35768 = -x35753 + x35754 - x35755 + x35756 - x35757;
double x35769 = 4*x7990;
double x35770 = q10_b*x11323;
double x35771 = 8*x35770;
double x35772 = 4*x31569;
double x35773 = x3660*x5215;
double x35774 = x11332*x8436;
double x35775 = 4*x31570;
double x35776 = x11323*x5122;
double x35777 = x11329*x8436;
double x35778 = x11329*x5122;
double x35779 = x11332*x5122;
double x35780 = 12*x8305;
double x35781 = 12*x35770;
double x35782 = 7*x8268;
double x35783 = 5*x31569;
double x35784 = x3669*x5215;
double x35785 = x11332*x8469;
double x35786 = 7*x31537;
double x35787 = 5*x31570;
double x35788 = x11323*x5129;
double x35789 = x286*x31538;
double x35790 = x11329*x8469;
double x35791 = x286*x31580;
double x35792 = x11329*x5129;
double x35793 = x11332*x5129;
double x35794 = x286*x31578;
double x35795 = 18*x8305;
double x35796 = x3623*x5215;
double x35797 = 6*x31569;
double x35798 = 16*x8268;
double x35799 = 18*x35770;
double x35800 = x11329*x8495;
double x35801 = x31538*x327;
double x35802 = x11323*x8482;
double x35803 = 6*x31570;
double x35804 = 16*x31537;
double x35805 = x11332*x8495;
double x35806 = x31578*x327;
double x35807 = x11332*x8482;
double x35808 = x11329*x8482;
double x35809 = x31580*x327;
double x35810 = x11376*x1802;
double x35811 = x11*x8592;
double x35812 = x11440*x8587;
double x35813 = x11442*x8587;
double x35814 = x11444*x8587;
double x35815 = L*x34962 - x158*x30925 + x158*x30927 - x158*x30929 + x158*x30931;
double x35816 = x1842*x5437;
double x35817 = x11440*x8594;
double x35818 = x17015*x1842;
double x35819 = x11444*x8594;
double x35820 = x11442*x8594;
double x35821 = x35816 - x35817 + x35818 - x35819 + x35820;
double x35822 = x1847*x5215;
double x35823 = -L*x35025 + x158*x30936 - x158*x30938 + x158*x30940 - 4*x35822;
double x35824 = x35821 + x35823;
double x35825 = x168*(x35810 + x35811 - x35812 + x35813 - x35814 + x35815 + x35824);
double x35826 = x30918*x70;
double x35827 = 3*x35826;
double x35828 = x30903*x70;
double x35829 = 4*x35828;
double x35830 = x30906*x5540;
double x35831 = x30921*x70;
double x35832 = 3*x35831;
double x35833 = x1842*x5215;
double x35834 = 3*x35833;
double x35835 = x30905*x5540;
double x35836 = x11332*x8708;
double x35837 = x11332*x8594;
double x35838 = 3*x35837;
double x35839 = x11329*x8594;
double x35840 = 3*x35839;
double x35841 = x11329*x8708;
double x35842 = x286*x30936 - x286*x30938 + x286*x30940 - 7*x35822 - 7*x8585;
double x35843 = L*x30907;
double x35844 = L*x30909;
double x35845 = x11440*x8514;
double x35846 = x11773*x8521;
double x35847 = x11444*x8514;
double x35848 = 12*x16869;
double x35849 = 12*x16885;
double x35850 = 12*x5647;
double x35851 = -x35848 - x35849 - x35850;
double x35852 = 6*x35826;
double x35853 = x30905*x70;
double x35854 = 6*x35833;
double x35855 = 6*x35831;
double x35856 = x30906*x70;
double x35857 = x11329*x8820;
double x35858 = x11332*x8820;
double x35859 = -x11377 - x16929 - x16936;
double x35860 = -x30936*x327 + x30938*x327 - x30940*x327 + 16*x35822 + 16*x8585;
double x35861 = 11*x16869;
double x35862 = 11*x16885;
double x35863 = 11*x5647;
double x35864 = x11332*x8587;
double x35865 = x11329*x8587;
double x35866 = x154*x30936 - x154*x30938 + x154*x30940 - 5*x35822 - 5*x8585;
double x35867 = -x35816 + x35817 - x35818 + x35819 - x35820;
double x35868 = L*x30933 - x129*x30936 + x129*x30938 - x129*x30940 + 6*x35822;
double x35869 = 4*x35826;
double x35870 = 7*x10745;
double x35871 = x286*x31225;
double x35872 = 4*x35833;
double x35873 = x30921*x5540;
double x35874 = x2586*x5215;
double x35875 = 7*x35874;
double x35876 = x286*x31229;
double x35877 = x11329*x8916;
double x35878 = x11332*x8916;
double x35879 = x286*x31231;
double x35880 = x31215*x70;
double x35881 = x31217*x70;
double x35882 = x31219*x70;
double x35883 = x10804*x11329;
double x35884 = x10804*x11332;
double x35885 = -3*x35880 - 3*x35881 + 3*x35882 - 3*x35883 + 3*x35884;
double x35886 = L*x35075;
double x35887 = x158*x31225;
double x35888 = 4*x35874;
double x35889 = x158*x31229;
double x35890 = x158*x31231;
double x35891 = x10807*x5437;
double x35892 = x10807*x17015;
double x35893 = x10804*x11440;
double x35894 = x10804*x11442;
double x35895 = x10804*x11444;
double x35896 = -x35891 - x35892 + x35893 - x35894 + x35895;
double x35897 = -x168*(x35823 + x35867 + x35886 - x35887 + x35888 - x35889 + x35890 + x35896);
double x35898 = x1847*x5437;
double x35899 = x11440*x8582;
double x35900 = x17015*x1847;
double x35901 = x11444*x8582;
double x35902 = x11442*x8582;
double x35903 = x35880 + x35881 - x35882 + x35883 - x35884;
double x35904 = 16*x10745;
double x35905 = 16*x35874;
double x35906 = x31225*x327;
double x35907 = x31231*x327;
double x35908 = x31229*x327;
double x35909 = x11377 + x16929 + x16936;
double x35910 = x11329*x15051 - x11332*x15051 + 6*x35880 + 6*x35881 - 6*x35882 + x35909;
double x35911 = 18*x16869;
double x35912 = 18*x16885;
double x35913 = 18*x5647;
double x35914 = x35911 + x35912 + x35913;
double x35915 = 10*x16869;
double x35916 = 10*x16885;
double x35917 = 10*x5647;
double x35918 = x35915 + x35916 + x35917;
double x35919 = 5*x10745;
double x35920 = x154*x31225;
double x35921 = 5*x35874;
double x35922 = x154*x31229;
double x35923 = x154*x31231;
double x35924 = L*x31224;
double x35925 = 6*x35874;
double x35926 = x129*x31225;
double x35927 = x129*x31231;
double x35928 = x129*x31229;
double x35929 = x35891 + x35892 - x35893 + x35894 - x35895;
double x35930 = 34*x16869 + 34*x16885 + 34*x5647;
double x35931 = -x35886 + x35887 - x35888 + x35889 - x35890;
double x35932 = 4*x35880;
double x35933 = 7*x10446;
double x35934 = x286*x31182;
double x35935 = x31217*x5540;
double x35936 = x31219*x5540;
double x35937 = x286*x31184;
double x35938 = x286*x31186;
double x35939 = x10897*x11329;
double x35940 = x10897*x11332;
double x35941 = x286*x31188;
double x35942 = x31172*x70;
double x35943 = x31174*x70;
double x35944 = x31176*x70;
double x35945 = x10503*x11329;
double x35946 = x10503*x11332;
double x35947 = -3*x35942 - 3*x35943 + 3*x35944 - 3*x35945 + 3*x35946;
double x35948 = L*x35125;
double x35949 = x158*x31182;
double x35950 = x158*x31184;
double x35951 = x158*x31186;
double x35952 = x158*x31188;
double x35953 = x10506*x5437;
double x35954 = x10506*x17015;
double x35955 = x10503*x11440;
double x35956 = x10503*x11442;
double x35957 = x10503*x11444;
double x35958 = -x35953 - x35954 + x35955 - x35956 + x35957;
double x35959 = -x168*(x35896 + x35931 + x35948 - x35949 + x35950 - x35951 + x35952 + x35958);
double x35960 = x2586*x5437;
double x35961 = x10742*x11440;
double x35962 = x17015*x2586;
double x35963 = x10742*x11444;
double x35964 = x10742*x11442;
double x35965 = x35942 + x35943 - x35944 + x35945 - x35946;
double x35966 = 16*x10446;
double x35967 = x31184*x327;
double x35968 = x31182*x327;
double x35969 = x31188*x327;
double x35970 = x31186*x327;
double x35971 = x35909 + 6*x35942 + 6*x35943 - 6*x35944 + 6*x35945 - 6*x35946;
double x35972 = 16*x16869;
double x35973 = 16*x16885;
double x35974 = 16*x5647;
double x35975 = 9*x16869 + 9*x16885 + 9*x5647;
double x35976 = 5*x10446;
double x35977 = x154*x31182;
double x35978 = x154*x31184;
double x35979 = x154*x31186;
double x35980 = x154*x31188;
double x35981 = L*x31181;
double x35982 = x129*x31184;
double x35983 = x129*x31182;
double x35984 = x129*x31188;
double x35985 = x129*x31186;
double x35986 = x35953 + x35954 - x35955 + x35956 - x35957;
double x35987 = 30*x16869;
double x35988 = 30*x16885;
double x35989 = 30*x5647;
double x35990 = -x35948 + x35949 - x35950 + x35951 - x35952;
double x35991 = 4*x35942;
double x35992 = 7*x10161;
double x35993 = x286*x31139;
double x35994 = x31174*x5540;
double x35995 = x31176*x5540;
double x35996 = x2381*x5215;
double x35997 = 7*x35996;
double x35998 = x286*x31143;
double x35999 = 4*x35945;
double x36000 = 4*x35946;
double x36001 = x286*x31145;
double x36002 = x31129*x70;
double x36003 = x31131*x70;
double x36004 = x31133*x70;
double x36005 = x10218*x11329;
double x36006 = x10218*x11332;
double x36007 = -3*x36002 - 3*x36003 + 3*x36004 - 3*x36005 + 3*x36006;
double x36008 = L*x35175;
double x36009 = x158*x31139;
double x36010 = 4*x35996;
double x36011 = x158*x31143;
double x36012 = x158*x31145;
double x36013 = x10221*x5437;
double x36014 = x10221*x17015;
double x36015 = x10218*x11440;
double x36016 = x10218*x11442;
double x36017 = x10218*x11444;
double x36018 = -x36013 - x36014 + x36015 - x36016 + x36017;
double x36019 = -x168*(x35958 + x35990 + x36008 - x36009 + x36010 - x36011 + x36012 + x36018);
double x36020 = L*x31166;
double x36021 = x10443*x11440;
double x36022 = L*x31168;
double x36023 = x10443*x11444;
double x36024 = x10443*x11442;
double x36025 = x36002 + x36003 - x36004 + x36005 - x36006;
double x36026 = 16*x10161;
double x36027 = 16*x35996;
double x36028 = x31139*x327;
double x36029 = x31145*x327;
double x36030 = x31143*x327;
double x36031 = x11329*x14470 - x11332*x14470 + x35909 + 6*x36002 + 6*x36003 - 6*x36004;
double x36032 = 14*x16869;
double x36033 = 14*x16885;
double x36034 = 14*x5647;
double x36035 = x36032 + x36033 + x36034;
double x36036 = 8*x16869;
double x36037 = 8*x16885;
double x36038 = 8*x5647;
double x36039 = x36036 + x36037 + x36038;
double x36040 = 5*x10161;
double x36041 = x154*x31139;
double x36042 = 5*x35996;
double x36043 = x154*x31143;
double x36044 = x154*x31145;
double x36045 = L*x31138;
double x36046 = 6*x35996;
double x36047 = x129*x31139;
double x36048 = x129*x31145;
double x36049 = x129*x31143;
double x36050 = x36013 + x36014 - x36015 + x36016 - x36017;
double x36051 = 26*x16869;
double x36052 = x11360*x14316;
double x36053 = x14316*x5161;
double x36054 = -x36008 + x36009 - x36010 + x36011 - x36012;
double x36055 = 4*x36002;
double x36056 = 7*x9863;
double x36057 = x286*x31095;
double x36058 = x31131*x5540;
double x36059 = x31133*x5540;
double x36060 = x286*x31097;
double x36061 = x286*x31099;
double x36062 = x10306*x11329;
double x36063 = x10306*x11332;
double x36064 = x286*x31101;
double x36065 = x31085*x70;
double x36066 = x31087*x70;
double x36067 = x31089*x70;
double x36068 = x11329*x9919;
double x36069 = x11332*x9919;
double x36070 = -3*x36065 - 3*x36066 + 3*x36067 - 3*x36068 + 3*x36069;
double x36071 = L*x35227;
double x36072 = x158*x31095;
double x36073 = x158*x31097;
double x36074 = x158*x31099;
double x36075 = x158*x31101;
double x36076 = x5437*x9922;
double x36077 = x17015*x9922;
double x36078 = x11440*x9919;
double x36079 = x11442*x9919;
double x36080 = x11444*x9919;
double x36081 = -x36076 - x36077 + x36078 - x36079 + x36080;
double x36082 = -x168*(x36018 + x36054 + x36071 - x36072 + x36073 - x36074 + x36075 + x36081);
double x36083 = x2381*x5437;
double x36084 = x10158*x11440;
double x36085 = x17015*x2381;
double x36086 = x10158*x11444;
double x36087 = x10158*x11442;
double x36088 = x36065 + x36066 - x36067 + x36068 - x36069;
double x36089 = 16*x9863;
double x36090 = x31097*x327;
double x36091 = x31095*x327;
double x36092 = x31101*x327;
double x36093 = x31099*x327;
double x36094 = x35909 + 6*x36065 + 6*x36066 - 6*x36067 + 6*x36068 - 6*x36069;
double x36095 = 7*x16869;
double x36096 = 7*x16885;
double x36097 = 7*x5647;
double x36098 = x36095 + x36096 + x36097;
double x36099 = 5*x9863;
double x36100 = x154*x31095;
double x36101 = x154*x31097;
double x36102 = x154*x31099;
double x36103 = x154*x31101;
double x36104 = L*x31094;
double x36105 = x129*x31097;
double x36106 = x129*x31095;
double x36107 = x129*x31101;
double x36108 = x129*x31099;
double x36109 = x36076 + x36077 - x36078 + x36079 - x36080;
double x36110 = 22*x16869;
double x36111 = 22*x16885;
double x36112 = 22*x5647;
double x36113 = -x36071 + x36072 - x36073 + x36074 - x36075;
double x36114 = 4*x36065;
double x36115 = 7*x9576;
double x36116 = x286*x31051;
double x36117 = x31087*x5540;
double x36118 = x31089*x5540;
double x36119 = x2175*x5215;
double x36120 = 7*x36119;
double x36121 = x286*x31055;
double x36122 = 4*x36068;
double x36123 = 4*x36069;
double x36124 = x286*x31057;
double x36125 = x31041*x70;
double x36126 = x31043*x70;
double x36127 = x31045*x70;
double x36128 = x11329*x9631;
double x36129 = x11332*x9631;
double x36130 = -3*x36125 - 3*x36126 + 3*x36127 - 3*x36128 + 3*x36129;
double x36131 = L*x35279;
double x36132 = x158*x31051;
double x36133 = 4*x36119;
double x36134 = x158*x31055;
double x36135 = x158*x31057;
double x36136 = x5437*x9634;
double x36137 = x17015*x9634;
double x36138 = x11440*x9631;
double x36139 = x11442*x9631;
double x36140 = x11444*x9631;
double x36141 = -x36136 - x36137 + x36138 - x36139 + x36140;
double x36142 = -x168*(x36081 + x36113 + x36131 - x36132 + x36133 - x36134 + x36135 + x36141);
double x36143 = L*x31079;
double x36144 = x11440*x9860;
double x36145 = L*x31081;
double x36146 = x11444*x9860;
double x36147 = x11442*x9860;
double x36148 = x36125 + x36126 - x36127 + x36128 - x36129;
double x36149 = 16*x36119;
double x36150 = x31051*x327;
double x36151 = x31057*x327;
double x36152 = x31055*x327;
double x36153 = x11329*x13887 - x11332*x13887 + x35909 + 6*x36125 + 6*x36126 - 6*x36127;
double x36154 = x17004 + x17010 + x17011;
double x36155 = 5*x9576;
double x36156 = x154*x31051;
double x36157 = 5*x36119;
double x36158 = x154*x31055;
double x36159 = x154*x31057;
double x36160 = L*x31050;
double x36161 = 6*x36119;
double x36162 = x129*x31051;
double x36163 = x129*x31057;
double x36164 = x129*x31055;
double x36165 = x36136 + x36137 - x36138 + x36139 - x36140;
double x36166 = -x36131 + x36132 - x36133 + x36134 - x36135;
double x36167 = 4*x36125;
double x36168 = 7*x9359;
double x36169 = x286*x31010;
double x36170 = x31043*x5540;
double x36171 = x31045*x5540;
double x36172 = x286*x31012;
double x36173 = x286*x31014;
double x36174 = x11329*x9720;
double x36175 = x11332*x9720;
double x36176 = x286*x31016;
double x36177 = x31000*x70;
double x36178 = x31002*x70;
double x36179 = x31004*x70;
double x36180 = x11329*x9336;
double x36181 = x11332*x9336;
double x36182 = -3*x36177 - 3*x36178 + 3*x36179 - 3*x36180 + 3*x36181;
double x36183 = L*x35329;
double x36184 = x158*x31010;
double x36185 = x158*x31012;
double x36186 = x158*x31014;
double x36187 = x158*x31016;
double x36188 = x5437*x9339;
double x36189 = x17015*x9339;
double x36190 = x11440*x9336;
double x36191 = x11442*x9336;
double x36192 = x11444*x9336;
double x36193 = -x36188 - x36189 + x36190 - x36191 + x36192;
double x36194 = -x168*(x36141 + x36166 + x36183 - x36184 + x36185 - x36186 + x36187 + x36193);
double x36195 = x2175*x5437;
double x36196 = x11440*x9573;
double x36197 = x17015*x2175;
double x36198 = x11444*x9573;
double x36199 = x11442*x9573;
double x36200 = x36177 + x36178 - x36179 + x36180 - x36181;
double x36201 = 16*x9359;
double x36202 = x31012*x327;
double x36203 = x31010*x327;
double x36204 = x31016*x327;
double x36205 = x31014*x327;
double x36206 = x35909 + 6*x36177 + 6*x36178 - 6*x36179 + 6*x36180 - 6*x36181;
double x36207 = 5*x16869;
double x36208 = 5*x16885;
double x36209 = 5*x5647;
double x36210 = x36207 + x36208 + x36209;
double x36211 = 5*x9359;
double x36212 = x154*x31010;
double x36213 = x154*x31012;
double x36214 = x154*x31014;
double x36215 = x154*x31016;
double x36216 = L*x31009;
double x36217 = x129*x31012;
double x36218 = x129*x31010;
double x36219 = x129*x31016;
double x36220 = x129*x31014;
double x36221 = x36188 + x36189 - x36190 + x36191 - x36192;
double x36222 = -x36183 + x36184 - x36185 + x36186 - x36187;
double x36223 = 4*x36177;
double x36224 = 7*x9084;
double x36225 = x286*x30975;
double x36226 = x31002*x5540;
double x36227 = x31004*x5540;
double x36228 = x1968*x5215;
double x36229 = 7*x36228;
double x36230 = x286*x30979;
double x36231 = 4*x36180;
double x36232 = 4*x36181;
double x36233 = x286*x30981;
double x36234 = x30960*x70;
double x36235 = x30962*x70;
double x36236 = x30964*x70;
double x36237 = x11329*x9060;
double x36238 = x11332*x9060;
double x36239 = -3*x36234 - 3*x36235 + 3*x36236 - 3*x36237 + 3*x36238;
double x36240 = L*x35375;
double x36241 = x158*x30975;
double x36242 = 4*x36228;
double x36243 = x158*x30979;
double x36244 = x158*x30981;
double x36245 = x5437*x9064;
double x36246 = x17015*x9064;
double x36247 = x11440*x9060;
double x36248 = x11442*x9060;
double x36249 = x11444*x9060;
double x36250 = -x36245 - x36246 + x36247 - x36248 + x36249;
double x36251 = -x168*(x36193 + x36222 + x36240 - x36241 + x36242 - x36243 + x36244 + x36250);
double x36252 = L*x30994;
double x36253 = x11440*x9279;
double x36254 = L*x30996;
double x36255 = x11444*x9279;
double x36256 = x11442*x9279;
double x36257 = x36234 + x36235 - x36236 + x36237 - x36238;
double x36258 = 16*x9084;
double x36259 = 16*x36228;
double x36260 = x30975*x327;
double x36261 = x30981*x327;
double x36262 = x30979*x327;
double x36263 = x11329*x13288 - x11332*x13288 + x35909 + 6*x36234 + 6*x36235 - 6*x36236;
double x36264 = 4*x16869;
double x36265 = x11360*x5540;
double x36266 = x36264 + x36265 + x5549;
double x36267 = 5*x9084;
double x36268 = x154*x30975;
double x36269 = 5*x36228;
double x36270 = x154*x30979;
double x36271 = x154*x30981;
double x36272 = L*x30974;
double x36273 = 6*x36228;
double x36274 = x129*x30975;
double x36275 = x129*x30981;
double x36276 = x129*x30979;
double x36277 = x36245 + x36246 - x36247 + x36248 - x36249;
double x36278 = -x36240 + x36241 - x36242 + x36243 - x36244;
double x36279 = 4*x36234;
double x36280 = x30874*x70;
double x36281 = x30962*x5540;
double x36282 = x30901*x70;
double x36283 = x30877*x70;
double x36284 = x30964*x5540;
double x36285 = x11329*x13260;
double x36286 = x11332*x13260;
double x36287 = -x286*x30891 + x286*x30893 - x286*x30895 + x286*x30897 + x286*x5451;
double x36288 = -x158*x30891 + x158*x30893 - x158*x30895 + x158*x30897 + x5453;
double x36289 = x5437*x5604;
double x36290 = x17015*x5604;
double x36291 = x11440*x5531;
double x36292 = x11442*x5531;
double x36293 = x11444*x5531;
double x36294 = -x36289 - x36290 + x36291 - x36292 + x36293;
double x36295 = x36288 + x36294;
double x36296 = -x168*(x36250 + x36278 + x36295);
double x36297 = x1968*x5437;
double x36298 = x11440*x9003;
double x36299 = x17015*x1968;
double x36300 = x11329*x5531;
double x36301 = x11332*x5531;
double x36302 = x11444*x9003;
double x36303 = x11442*x9003;
double x36304 = x30891*x327 - x30893*x327 + x30895*x327 - x30897*x327 - x327*x5451;
double x36305 = x36289 + x36290 - x36291 + x36292 - x36293;
double x36306 = 4*x36280;
double x36307 = x30877*x5540;
double x36308 = x30901*x5540;
double x36309 = x11332*x9258;
double x36310 = x11329*x9258;
double x36311 = x11785*x70;
double x36312 = x11801*x70;
double x36313 = x11804*x70;
double x36314 = -x36311 - x36312 - x36313;
double x36315 = -x17004 - x17010 - x17011;
double x36316 = x5265*x5437;
double x36317 = x17015*x5265;
double x36318 = x11440*x174;
double x36319 = x11442*x174;
double x36320 = x11444*x174;
double x36321 = -x36316 - x36317 + x36318 - x36319 + x36320;
double x36322 = x158*x30856;
double x36323 = x158*x30858;
double x36324 = x158*x30864;
double x36325 = x158*x30862;
double x36326 = -x36322 + x36323 - x36324 + x36325 + x5725;
double x36327 = L*x5180;
double x36328 = -x154*x30856 + x154*x30858 + x154*x30862 - x154*x30864 + 5*x36327;
double x36329 = x36316 + x36317 - x36318 + x36319 - x36320;
double x36330 = -L*x5181 + x129*x30856 - x129*x30858 - x129*x30862 + x129*x30864;
double x36331 = L*x35475;
double x36332 = x2743*x5215;
double x36333 = 4*x36332;
double x36334 = x158*x31282;
double x36335 = x158*x31284;
double x36336 = x158*x31286;
double x36337 = x2738*x5437;
double x36338 = x11440*x3726;
double x36339 = x17015*x2738;
double x36340 = x5186*x5884;
double x36341 = x11442*x3726;
double x36342 = x36337 - x36338 + x36339 - x36340 + x36341;
double x36343 = -x36331 - x36333 + x36334 - x36335 + x36336 + x36342;
double x36344 = x168*(x36326 + x36329 + x36343);
double x36345 = 7*x6094;
double x36346 = 7*x36332;
double x36347 = x30853*x5540;
double x36348 = x30852*x5540;
double x36349 = x286*x31282;
double x36350 = x286*x31284;
double x36351 = x31292*x5540;
double x36352 = x31294*x5540;
double x36353 = x286*x31286;
double x36354 = x31276*x70;
double x36355 = x2738*x5215;
double x36356 = x11332*x3726;
double x36357 = x11329*x3726;
double x36358 = -3*x36354 + 3*x36355 - 3*x36356 + 3*x36357 + 3*x5764;
double x36359 = -L*x30845 - L*x30846 + L*x30847 + q1_b*x11472 - x25201*x8675;
double x36360 = -x16869 - x16885 - x5647;
double x36361 = 16*x6094;
double x36362 = x31282*x327;
double x36363 = x30852*x70;
double x36364 = x30853*x70;
double x36365 = 16*x36332;
double x36366 = x31286*x327;
double x36367 = x31284*x327;
double x36368 = -x11329*x6012 + x11332*x6012 + x35859 + 6*x36354 - 6*x36355 - 6*x5764;
double x36369 = x11332*x174;
double x36370 = x11329*x174;
double x36371 = 5*x6094;
double x36372 = 5*x36332;
double x36373 = x154*x31282;
double x36374 = x154*x31284;
double x36375 = x154*x31286;
double x36376 = L*x31279;
double x36377 = x129*x31282;
double x36378 = 6*x36332;
double x36379 = x129*x31286;
double x36380 = x129*x31284;
double x36381 = x2743*x5437;
double x36382 = L*x31272;
double x36383 = x17015*x2743;
double x36384 = q2_b*x11472;
double x36385 = x12109*x5491;
double x36386 = x2856*x5215;
double x36387 = x31312*x70;
double x36388 = x11329*x3811;
double x36389 = x11332*x3811;
double x36390 = x36386 - x36387 + x36388 - x36389 + x6100;
double x36391 = x11329*x5929 - x11332*x5929 - x31276*x5540 + 4*x36355 + x5765;
double x36392 = L*x35515;
double x36393 = x158*x31317;
double x36394 = x158*x31319;
double x36395 = x158*x31321;
double x36396 = x158*x31323;
double x36397 = x2856*x5437;
double x36398 = x11440*x3811;
double x36399 = x17015*x2856;
double x36400 = x5186*x6504;
double x36401 = x11442*x3811;
double x36402 = x36397 - x36398 + x36399 - x36400 + x36401;
double x36403 = -x36392 - x36393 + x36394 - x36395 + x36396 + x36402;
double x36404 = x168*(x36331 + x36333 - x36334 + x36335 - x36336 + x36342 + x36403);
double x36405 = 7*x6116;
double x36406 = x286*x31317;
double x36407 = x286*x31319;
double x36408 = x286*x31321;
double x36409 = x286*x31323;
double x36410 = 3*x36386 - 3*x36387 + 3*x36388 - 3*x36389 + 3*x6100;
double x36411 = 16*x6116;
double x36412 = x31319*x327;
double x36413 = x31317*x327;
double x36414 = x31323*x327;
double x36415 = x31321*x327;
double x36416 = x35859 - 6*x36386 + 6*x36387 - 6*x36388 + 6*x36389 - 6*x6100;
double x36417 = -x36264 - x36265 - x5549;
double x36418 = 5*x6116;
double x36419 = x154*x31317;
double x36420 = x154*x31319;
double x36421 = x154*x31321;
double x36422 = x154*x31323;
double x36423 = x129*x31319;
double x36424 = x129*x31317;
double x36425 = x129*x31323;
double x36426 = x129*x31321;
double x36427 = -x35915 - x35916 - x35917;
double x36428 = L*x35560;
double x36429 = x2964*x5215;
double x36430 = 4*x36429;
double x36431 = x158*x31355;
double x36432 = x158*x31357;
double x36433 = x158*x31359;
double x36434 = x2958*x5437;
double x36435 = x11440*x4616;
double x36436 = x17015*x2958;
double x36437 = x5186*x6828;
double x36438 = x11442*x4616;
double x36439 = x36434 - x36435 + x36436 - x36437 + x36438;
double x36440 = -x36428 - x36430 + x36431 - x36432 + x36433 + x36439;
double x36441 = x168*(x36392 + x36393 - x36394 + x36395 - x36396 + x36402 + x36440);
double x36442 = 7*x6407;
double x36443 = 7*x36429;
double x36444 = x286*x31355;
double x36445 = x286*x31357;
double x36446 = x286*x31359;
double x36447 = x31348*x70;
double x36448 = x2958*x5215;
double x36449 = x11332*x4616;
double x36450 = x11329*x4616;
double x36451 = -3*x36447 + 3*x36448 - 3*x36449 + 3*x36450 + 3*x6393;
double x36452 = x11329*x6520 - x11332*x6520 - x31312*x5540 + 4*x36386 + x6355;
double x36453 = L*x31305;
double x36454 = L*x31307;
double x36455 = L*x31306;
double x36456 = q3_b*x11472;
double x36457 = x12221*x5491;
double x36458 = -x36447 + x36448 - x36449 + x36450 + x6393;
double x36459 = x31355*x327;
double x36460 = 16*x36429;
double x36461 = x31359*x327;
double x36462 = x31357*x327;
double x36463 = -x11329*x6945 + x11332*x6945 + x35859 + 6*x36447 - 6*x36448 - 6*x6393;
double x36464 = 5*x6407;
double x36465 = 5*x36429;
double x36466 = x154*x31355;
double x36467 = x154*x31357;
double x36468 = x154*x31359;
double x36469 = x129*x31355;
double x36470 = 6*x36429;
double x36471 = x129*x31359;
double x36472 = x129*x31357;
double x36473 = -x36032 - x36033 - x36034;
double x36474 = L*x35603;
double x36475 = x158*x31391;
double x36476 = x158*x31393;
double x36477 = x158*x31395;
double x36478 = x158*x31397;
double x36479 = x5437*x6724;
double x36480 = x11440*x4707;
double x36481 = x17015*x6724;
double x36482 = x5186*x7146;
double x36483 = x11442*x4707;
double x36484 = x36479 - x36480 + x36481 - x36482 + x36483;
double x36485 = -x36474 - x36475 + x36476 - x36477 + x36478 + x36484;
double x36486 = x168*(x36428 + x36430 - x36431 + x36432 - x36433 + x36439 + x36485);
double x36487 = 7*x6739;
double x36488 = x286*x31391;
double x36489 = x286*x31393;
double x36490 = x286*x31395;
double x36491 = x286*x31397;
double x36492 = x31385*x70;
double x36493 = x31452*x70;
double x36494 = x11329*x15558 - x11332*x15558 - 3*x36492 + 3*x36493 + 3*x6720;
double x36495 = x11329*x6836 - x11332*x6836 - x31348*x5540 + 4*x36448 + x6507;
double x36496 = x2964*x5437;
double x36497 = L*x31343;
double x36498 = x17015*x2964;
double x36499 = q4_b*x11472;
double x36500 = x12483*x5491;
double x36501 = x11329*x4707;
double x36502 = x11332*x4707;
double x36503 = -x36492 + x36493 + x36501 - x36502 + x6720;
double x36504 = 16*x6739;
double x36505 = x31393*x327;
double x36506 = x31391*x327;
double x36507 = x31397*x327;
double x36508 = x31395*x327;
double x36509 = x35859 + 6*x36492 - 6*x36493 - 6*x36501 + 6*x36502 - x6830;
double x36510 = 5*x6739;
double x36511 = x154*x31391;
double x36512 = x154*x31393;
double x36513 = x154*x31395;
double x36514 = x154*x31397;
double x36515 = L*x31390;
double x36516 = x129*x31393;
double x36517 = x129*x31391;
double x36518 = x129*x31397;
double x36519 = x129*x31395;
double x36520 = L*x35644;
double x36521 = x3186*x5215;
double x36522 = 4*x36521;
double x36523 = x158*x31431;
double x36524 = x158*x31433;
double x36525 = x158*x31435;
double x36526 = x3180*x5437;
double x36527 = x11440*x4795;
double x36528 = x17015*x3180;
double x36529 = x5186*x7455;
double x36530 = x11442*x4795;
double x36531 = x36526 - x36527 + x36528 - x36529 + x36530;
double x36532 = -x36520 - x36522 + x36523 - x36524 + x36525 + x36531;
double x36533 = x168*(x36474 + x36475 - x36476 + x36477 - x36478 + x36484 + x36532);
double x36534 = 7*x7054;
double x36535 = 7*x36521;
double x36536 = x286*x31431;
double x36537 = x286*x31433;
double x36538 = x286*x31435;
double x36539 = x31423*x70;
double x36540 = x3180*x5215;
double x36541 = x11332*x4795;
double x36542 = x11329*x4795;
double x36543 = -3*x36539 + 3*x36540 - 3*x36541 + 3*x36542 + 3*x7038;
double x36544 = x11329*x6912 - x11332*x6912 - x31385*x5540 + x31452*x5540 + x6992;
double x36545 = L*x31378;
double x36546 = L*x31380;
double x36547 = L*x31379;
double x36548 = q5_b*x11472;
double x36549 = x15476*x5491;
double x36550 = -x36539 + x36540 - x36541 + x36542 + x7038;
double x36551 = 16*x7054;
double x36552 = x31431*x327;
double x36553 = 16*x36521;
double x36554 = x31435*x327;
double x36555 = x31433*x327;
double x36556 = x35859 + 6*x36539 - 6*x36540 + 6*x36541 - 6*x36542 - 6*x7038;
double x36557 = 5*x7054;
double x36558 = 5*x36521;
double x36559 = x154*x31431;
double x36560 = x154*x31433;
double x36561 = x154*x31435;
double x36562 = L*x31428;
double x36563 = x129*x31431;
double x36564 = 6*x36521;
double x36565 = x129*x31435;
double x36566 = x129*x31433;
double x36567 = L*x35685;
double x36568 = x158*x31467;
double x36569 = x158*x31469;
double x36570 = x158*x31471;
double x36571 = x158*x31473;
double x36572 = x5437*x7340;
double x36573 = x11440*x4883;
double x36574 = x17015*x7340;
double x36575 = x5186*x7770;
double x36576 = x11442*x4883;
double x36577 = x36572 - x36573 + x36574 - x36575 + x36576;
double x36578 = -x36567 - x36568 + x36569 - x36570 + x36571 + x36577;
double x36579 = x168*(x36520 + x36522 - x36523 + x36524 - x36525 + x36531 + x36578);
double x36580 = 7*x7355;
double x36581 = x286*x31467;
double x36582 = x286*x31469;
double x36583 = x286*x31471;
double x36584 = x286*x31473;
double x36585 = x31461*x70;
double x36586 = x31528*x70;
double x36587 = x11332*x4883;
double x36588 = x11329*x4883;
double x36589 = -3*x36585 + 3*x36586 - 3*x36587 + 3*x36588 + 3*x7337;
double x36590 = x11329*x7178 - x11332*x7178 - x31423*x5540 + 4*x36540 + x7298;
double x36591 = x3186*x5437;
double x36592 = L*x31418;
double x36593 = x17015*x3186;
double x36594 = q6_b*x11472;
double x36595 = x15776*x5491;
double x36596 = -x36585 + x36586 - x36587 + x36588 + x7337;
double x36597 = 16*x7355;
double x36598 = x31469*x327;
double x36599 = x31467*x327;
double x36600 = x31473*x327;
double x36601 = x31471*x327;
double x36602 = x35859 + 6*x36585 - 6*x36586 + 6*x36587 - 6*x36588 - 6*x7337;
double x36603 = -x36207 - x36208 - x36209;
double x36604 = 5*x7355;
double x36605 = x154*x31467;
double x36606 = x154*x31469;
double x36607 = x154*x31471;
double x36608 = x154*x31473;
double x36609 = L*x31466;
double x36610 = x129*x31469;
double x36611 = x129*x31467;
double x36612 = x129*x31473;
double x36613 = x129*x31471;
double x36614 = L*x35727;
double x36615 = x3401*x5215;
double x36616 = 4*x36615;
double x36617 = x158*x31507;
double x36618 = x158*x31509;
double x36619 = x158*x31511;
double x36620 = x3395*x5437;
double x36621 = x11440*x4970;
double x36622 = x17015*x3395;
double x36623 = x5186*x8088;
double x36624 = x11442*x4970;
double x36625 = x36620 - x36621 + x36622 - x36623 + x36624;
double x36626 = -x36614 - x36616 + x36617 - x36618 + x36619 + x36625;
double x36627 = x168*(x36567 + x36568 - x36569 + x36570 - x36571 + x36577 + x36626);
double x36628 = 7*x7677;
double x36629 = 7*x36615;
double x36630 = x286*x31507;
double x36631 = x286*x31509;
double x36632 = x286*x31511;
double x36633 = x31499*x70;
double x36634 = x3395*x5215;
double x36635 = x11332*x4970;
double x36636 = x11329*x4970;
double x36637 = -3*x36633 + 3*x36634 - 3*x36635 + 3*x36636 + 3*x7660;
double x36638 = x11329*x7541 - x11332*x7541 - x31461*x5540 + x31528*x5540 + x7618;
double x36639 = L*x31454;
double x36640 = L*x31456;
double x36641 = L*x31455;
double x36642 = q7_b*x11472;
double x36643 = x16070*x5491;
double x36644 = -x36633 + x36634 - x36635 + x36636 + x7660;
double x36645 = 16*x7677;
double x36646 = x31507*x327;
double x36647 = 16*x36615;
double x36648 = x31511*x327;
double x36649 = x31509*x327;
double x36650 = -x11329*x8203 + x11332*x8203 + x35859 + 6*x36633 - 6*x36634 - 6*x7660;
double x36651 = 5*x7677;
double x36652 = 5*x36615;
double x36653 = x154*x31507;
double x36654 = x154*x31509;
double x36655 = x154*x31511;
double x36656 = L*x31504;
double x36657 = x129*x31507;
double x36658 = 6*x36615;
double x36659 = x129*x31511;
double x36660 = x129*x31509;
double x36661 = x5437*x7975;
double x36662 = x11440*x5061;
double x36663 = x17015*x7975;
double x36664 = x11444*x5061;
double x36665 = x11442*x5061;
double x36666 = x36661 - x36662 + x36663 - x36664 + x36665;
double x36667 = L*x35769;
double x36668 = x158*x31550;
double x36669 = x158*x31552;
double x36670 = x158*x31554;
double x36671 = x158*x31556;
double x36672 = -x36667 - x36668 + x36669 - x36670 + x36671;
double x36673 = x168*(x36614 + x36616 - x36617 + x36618 - x36619 + x36625 + x36666 + x36672);
double x36674 = 3*x7972;
double x36675 = x31538*x70;
double x36676 = 3*x36675;
double x36677 = x31585*x70;
double x36678 = 3*x36677;
double x36679 = x11332*x5061;
double x36680 = 3*x36679;
double x36681 = x11329*x5061;
double x36682 = 3*x36681;
double x36683 = -x286*x31550 + x286*x31552 - x286*x31554 + x286*x31556 - 7*x7991;
double x36684 = x11329*x7805 - x11332*x7805 - x31499*x5540 + 4*x36634 + x7928;
double x36685 = x3401*x5437;
double x36686 = L*x31494;
double x36687 = x17015*x3401;
double x36688 = q8_b*x11472;
double x36689 = x16363*x5491;
double x36690 = 6*x7972;
double x36691 = 6*x36677;
double x36692 = 6*x36675;
double x36693 = 6*x36681;
double x36694 = 6*x36679;
double x36695 = x31550*x327 - x31552*x327 + x31554*x327 - x31556*x327 + 16*x7991;
double x36696 = -x154*x31550 + x154*x31552 - x154*x31554 + x154*x31556 - 5*x7991;
double x36697 = -x36661 + x36662 - x36663 + x36664 - x36665;
double x36698 = L*x31549 + x129*x31550 - x129*x31552 + x129*x31554 - x129*x31556;
double x36699 = x3605*x5215;
double x36700 = x11323*x5125;
double x36701 = q10_b_dt*x5215;
double x36702 = x11329*x5125;
double x36703 = x11332*x5125;
double x36704 = -x11329*x8175 + x11332*x8175 + x31538*x5540 - x31585*x5540 - x8255;
double x36705 = x3605*x5437;
double x36706 = x17015*x3605;
double x36707 = x11440*x5125;
double x36708 = x11442*x5125;
double x36709 = x11444*x5125;
double x36710 = -x36705 - x36706 + x36707 - x36708 + x36709;
double x36711 = -x168*(x11329*x8429 - x11332*x8429 - x158*x35770 + x158*x8305 + x3662*x5215 + x36672 + x36697 + x36710);
double x36712 = L*x31531;
double x36713 = L*x31532;
double x36714 = L*x31533;
double x36715 = x11773*x5098;
double x36716 = q9_b*x11472;
double x36717 = q10_b*x154;
T_others[0] = x26*(x0*(x16 + x18 + x21) - x12*x13 + x25*x4 + x8*(x2 - x7)) + x69*(-x63*(-x31 + x35 + x40 - x44 + x62) + x68*(x62 + x67)) + x69*(x106*(x105 - x75 + x78 + x80 - x82 + x85 + x89) - x123*(-q1_i_dot*x121 - x108 + x110 + x111 + x113 + x116 - x118 - x119*x120 + x122*x49 + 2*x91 - 2*x93 - 2*x95) + x70*x72) + x69*(-x123*(x148 + x153 + x155 + x156) + x168*(x148 + x162 + x167) - x63*(-x126 + x130 + x133 + x141 + x146)) + x69*(L*(-x209 + x219) + x106*(x219 + x224) - x123*(x158*x205 - x158*x206 + 4*x220 - 4*x221 - 4*x222 - 4*x223 + x225 - x227 - x228 - x229 - x230 + x231) + x70*(-p1_i_dot*x207 + x201 - x203 - x204 + x205 - x206 + x72)) + x69*(L*(x209 + x635) + x106*(x105 + x635 - x636 + x639 + x640 - x641 + x642 + x643 + x654) - x123*(-q2_i_dot*x121 - 4*x101 - 4*x104 + x108 - x110 - x111 - x113 - x116 + x118 - x119*x662 + x122*x663 + 2*x645 - 2*x648 - 2*x650 - x655 + x657 + x658 + x659 + x660 - x661 + 4*x91 - 4*x93 - 4*x95 + 4*x98) + x70*(-q1_i_dot*x207 - x100 + x72 + x90 - x92 - x94 + x97)) + x69*(L*(-20*x384 + x388) + x106*(L*x382 - L*x383 + x388 - x389 + x392 + x393 + x394 - x395 - x396 - x397 + x398 + x399 - x400 + x411) - x123*(-p10_b*x112 + p10_b_dt*x107 - p10_i*x115 + p10_i*x117 - p9_i_dot*x121 - x119*x420 + x122*x421 + x158*x382 - x158*x383 + 4*x394 - 4*x395 - 4*x396 - 4*x400 + 2*x402 - 2*x405 - 2*x407 - x412 - x413*x76 - x413*x79 + x415 + x416 + x417 + x418 - x419) + x70*(-p10_i_dot*x207 + x378 - x380 - x381 + x382 - x383 + x72)) + x69*(L*(-x428 + x437) + x106*(x212 + x213 - x215 + x216 + x217 - x218 + x224 + x437 + x442) - x123*(-p1_i_dot*x121 - x119*x450 + x122*x249 + x158*x426 - x158*x427 + 2*x220 - 2*x221 - 2*x222 - x225 + x227 + x228 + x229 + x230 - x231 + 4*x438 - 4*x439 - 4*x440 - 4*x441 + x443 - x445 - x446 - x447 - x448 + x449) + x70*(-p2_i_dot*x207 + x422 - x424 - x425 + x426 - x427 + x72)) + x69*(L*(x428 + x664) + x106*(x654 + x664 - x665 + x668 + x669 - x670 + x671 + x672 + x683) - x123*(-q3_i_dot*x121 - x119*x691 + x122*x692 + x158*x651 - x158*x652 + 4*x645 - 4*x648 - 4*x650 - 4*x653 + x655 - x657 - x658 - x659 - x660 + x661 + 2*x674 - 2*x677 - 2*x679 - x684 + x686 + x687 + x688 + x689 - x690) + x70*(-q2_i_dot*x207 + x644 - x647 - x649 + x651 - x652 + x72)) + x69*(L*(-x457 + x466) + x106*(x431 + x432 - x433 + x434 + x435 - x436 + x442 + x466 + x471) - x123*(-p2_i_dot*x121 - x119*x479 + x122*x480 + x158*x455 - x158*x456 + 2*x438 - 2*x439 - 2*x440 - x443 + x445 + x446 + x447 + x448 - x449 + 4*x467 - 4*x468 - 4*x469 - 4*x470 + x472 - x474 - x475 - x476 - x477 + x478) + x70*(-p3_i_dot*x207 + x451 - x453 - x454 + x455 - x456 + x72)) + x69*(L*(x457 + x693) + x106*(x683 + x693 - x694 + x697 + x698 - x699 + x700 + x701 + x712) - x123*(-q4_i_dot*x121 - x119*x720 + x122*x721 + x158*x680 - x158*x681 + 4*x674 - 4*x677 - 4*x679 - 4*x682 + x684 - x686 - x687 - x688 - x689 + x690 + 2*x703 - 2*x706 - 2*x708 - x713 + x715 + x716 + x717 + x718 - x719) + x70*(-q3_i_dot*x207 + x673 - x676 - x678 + x680 - x681 + x72)) + x69*(L*(-x487 + x496) + x106*(x460 + x461 - x462 + x463 + x464 - x465 + x471 + x496 + x501) - x123*(-p3_i_dot*x121 - x119*x509 + x122*x510 + x158*x485 - x158*x486 + 2*x467 - 2*x468 - 2*x469 - x472 + x474 + x475 + x476 + x477 - x478 + 4*x497 - 4*x498 - 4*x499 - 4*x500 + x502 - x504 - x505 - x506 - x507 + x508) + x70*(-p4_i_dot*x207 + x481 - x483 - x484 + x485 - x486 + x72)) + x69*(L*(x487 + x722) + x106*(x712 + x722 - x723 + x726 + x727 - x728 + x729 + x730 + x741) - x123*(-q5_i_dot*x121 - x119*x749 + x122*x750 + x158*x709 - x158*x710 + 4*x703 - 4*x706 - 4*x708 - 4*x711 + x713 - x715 - x716 - x717 - x718 + x719 + 2*x732 - 2*x735 - 2*x737 - x742 + x744 + x745 + x746 + x747 - x748) + x70*(-q4_i_dot*x207 + x702 - x705 - x707 + x709 - x710 + x72)) + x69*(L*(-x517 + x526) + x106*(x490 + x491 - x492 + x493 + x494 - x495 + x501 + x526 + x531) - x123*(-p4_i_dot*x121 - x119*x539 + x122*x540 + x158*x515 - x158*x516 + 2*x497 - 2*x498 - 2*x499 - x502 + x504 + x505 + x506 + x507 - x508 + 4*x527 - 4*x528 - 4*x529 - 4*x530 + x532 - x534 - x535 - x536 - x537 + x538) + x70*(-p5_i_dot*x207 + x511 - x513 - x514 + x515 - x516 + x72)) + x69*(L*(x517 + x751) + x106*(x741 + x751 - x752 + x755 + x756 - x757 + x758 + x759 + x770) - x123*(-q6_i_dot*x121 - x119*x778 + x122*x779 + x158*x738 - x158*x739 + 4*x732 - 4*x735 - 4*x737 - 4*x740 + x742 - x744 - x745 - x746 - x747 + x748 + 2*x761 - 2*x764 - 2*x766 - x771 + x773 + x774 + x775 + x776 - x777) + x70*(-q5_i_dot*x207 + x72 + x731 - x734 - x736 + x738 - x739)) + x69*(L*(-x547 + x556) + x106*(x520 + x521 - x522 + x523 + x524 - x525 + x531 + x556 + x561) - x123*(-p5_i_dot*x121 - x119*x569 + x122*x570 + x158*x545 - x158*x546 + 2*x527 - 2*x528 - 2*x529 - x532 + x534 + x535 + x536 + x537 - x538 + 4*x557 - 4*x558 - 4*x559 - 4*x560 + x562 - x564 - x565 - x566 - x567 + x568) + x70*(-p6_i_dot*x207 + x541 - x543 - x544 + x545 - x546 + x72)) + x69*(L*(x547 + x780) + x106*(x770 + x780 - x781 + x784 + x785 - x786 + x787 + x788 + x799) - x123*(-q7_i_dot*x121 - x119*x807 + x122*x808 + x158*x767 - x158*x768 + 4*x761 - 4*x764 - 4*x766 - 4*x769 + x771 - x773 - x774 - x775 - x776 + x777 + 2*x790 - 2*x793 - 2*x795 - x800 + x802 + x803 + x804 + x805 - x806) + x70*(-q6_i_dot*x207 + x72 + x760 - x763 - x765 + x767 - x768)) + x69*(L*(-x577 + x586) + x106*(x550 + x551 - x552 + x553 + x554 - x555 + x561 + x586 + x591) - x123*(-p6_i_dot*x121 - x119*x599 + x122*x600 + x158*x575 - x158*x576 + 2*x557 - 2*x558 - 2*x559 - x562 + x564 + x565 + x566 + x567 - x568 + 4*x587 - 4*x588 - 4*x589 - 4*x590 + x592 - x594 - x595 - x596 - x597 + x598) + x70*(-p7_i_dot*x207 + x571 - x573 - x574 + x575 - x576 + x72)) + x69*(L*(x577 + x809) + x106*(x799 + x809 - x810 + x813 + x814 - x815 + x816 + x817 + x828) - x123*(-q8_i_dot*x121 - x119*x836 + x122*x837 + x158*x796 - x158*x797 + 4*x790 - 4*x793 - 4*x795 - 4*x798 + x800 - x802 - x803 - x804 - x805 + x806 + 2*x819 - 2*x822 - 2*x824 - x829 + x831 + x832 + x833 + x834 - x835) + x70*(-q7_i_dot*x207 + x72 + x789 - x792 - x794 + x796 - x797)) + x69*(L*(-x607 + x616) + x106*(x580 + x581 - x582 + x583 + x584 - x585 + x591 + x616 + x621) - x123*(-p7_i_dot*x121 - x119*x629 + x122*x630 + x158*x605 - x158*x606 + 2*x587 - 2*x588 - 2*x589 - x592 + x594 + x595 + x596 + x597 - x598 + 4*x617 - 4*x618 - 4*x619 - 4*x620 + x622 - x624 - x625 - x626 - x627 + x628) + x70*(-p8_i_dot*x207 + x601 - x603 - x604 + x605 - x606 + x72)) + x69*(L*(x607 + x838) + x106*(x828 + x838 - x839 + x842 + x843 - x844 + x845 + x846 + x857) - x123*(-q9_i_dot*x121 - x119*x865 + x122*x866 + x158*x825 - x158*x826 + 4*x819 - 4*x822 - 4*x824 - 4*x827 + x829 - x831 - x832 - x833 - x834 + x835 + 2*x848 - 2*x851 - 2*x853 - x858 + x860 + x861 + x862 + x863 - x864) + x70*(-q8_i_dot*x207 + x72 + x818 - x821 - x823 + x825 - x826)) + x69*(L*(-x631 + x632) + x106*(x411 + x610 + x611 - x612 + x613 + x614 - x615 + x621 + x632) - x123*(-p8_i_dot*x121 - x119*x633 + x122*x634 + x158*x408 - x158*x409 + 4*x402 - 4*x405 - 4*x407 - 4*x410 + x412 - x415 - x416 - x417 - x418 + x419 + 2*x617 - 2*x618 - 2*x619 - x622 + x624 + x625 + x626 + x627 - x628) + x70*(-p9_i_dot*x207 + x401 - x404 - x406 + x408 - x409 + x72)) + x69*(L*(x631 + x867) + x106*(q10_b*x119 - q10_b_dt*x214 - q10_i*x122 + q10_i*x88 - q10_i_dot*x103 + x73*x871 + x857 + x867 + x868*x869 + x869*x870 - x873 - x874 + x875*x96 - x876*x99) - x123*(q10_b*x112 - q10_b_dt*x107 + q10_i*x115 - q10_i*x117 - q10_i_dot*x121 - x119*x876 + x122*x875 + x158*x854 - x158*x855 + x214*x871 + 4*x848 - 4*x851 - 4*x853 - 4*x856 + x858 - x860 - x861 - x862 - x863 + x864 + x868*x877 + x870*x877 - 2*x873 - 2*x874) + x70*(-q9_i_dot*x207 + x72 + x847 - x850 - x852 + x854 - x855)) + x69*(x123*(x155 + x177 + x181 + x185) - x168*(x162 + x177 + x190) - x172*x173 + x63*(x146 - x191 + x194 + x195 + x196 + x199 + x200)) + x69*(L*x1020 - x106*(x1018*x965 + x1020 + x1021 - x1022 + x1031 - x459*x959) + x123*(-p3_t_dt*x1012 + x1013*x444 - x1032 - 3*x1033 + x1034 + x1035 - x1036 + x1037 - x1038 + x1041 - x1042 + x1043 + 3*x1044 - x1045 + x1046 + x1047 - x1048 + x1051 - x1052 - x1053) - x63*(-p2_t_dt*x1054 - p3_t_dt*x1001 - x1002*x1056 - x1003*x1055 + x1004*x1039 + x1006 + 2*x1021 - x1024 + x1025 + x1028 - x1030 + 2*x1033 - x1035 + x1036 - x1037 + x1042 - x1046 - x1047 + x1048 + x1052 + x1057*x988 + x1058 + x978) + x68*(x1004*x1049 - x1007*x1013 + x1009*x1055 - x1010*x510 - x1011*x1026 + x1013*x1059 - 5*x1015 + 5*x1017 + 3*x1021 - 3*x1022 + 5*x1033 - 2*x1035 + x1038 + x1039*x986 - x1040*x267 + 2*x1042 - x1043 - 5*x1044 - x1051 + x1053 + x1057*x973 - x1057*x997 + x1060*x988 - x473*x959 + x978 + x979 - x981 - x989 + x993)) + x69*(L*x1068 - x106*(-x1013*x489 + x1019*x1066 + x1068 + x1069 - x1070 + x1080) + x123*(-x1039*x1088 + x1061*x473 - x1081 - 3*x1082 + x1083 + x1084 - x1086 + x1087 - x1089 + x1091 - x1092 + x1093 + 3*x1094 - x1095 + x1096 + x1097 - x1098 + x1100 - x1101 - x1102) - x63*(-p3_t_dt*x1103 - p4_t_dt*x1054 + x1031 + x1039*x1106 - x1055*x1105 - x1056*x1104 + x1057*x1090 + x1058 + 2*x1069 - x1072 + x1073 + x1077 - x1079 + 2*x1082 - x1084 + x1086 - x1087 + x1092 - x1096 - x1097 + x1098 + x1101 + x1107) + x68*(p3_t_dt*x1113 - x1013*x503 + x1026*x1112 + x1031 + x1032 - x1034 + x1039*x1109 - x1041 + x1045 - x1049*x1106 - x1055*x1110 - x1057*x1075 + x1057*x1099 - x1059*x1061 + x1061*x1108 - 5*x1063 + 5*x1065 + 3*x1069 - 3*x1070 + 5*x1082 - 2*x1084 + x1089 - x1090*x1109 + 2*x1092 - x1093 - 5*x1094 - x1100 + x1102 + x1111*x510)) + x69*(L*x1121 - x106*(-x1061*x519 + x1067*x1119 + x1121 + x1122 - x1123 + x1132) + x123*(-p5_t_dt*x1113 + x1114*x503 - x1133 - 3*x1134 + x1135 + x1136 - x1137 + x1138 - x1139 + x1142 - x1143 + x1144 + 3*x1145 - x1146 + x1147 + x1148 - x1149 + x1152 - x1153 - x1154) - x63*(-p4_t_dt*x1155 - p5_t_dt*x1103 + x1080 + x1090*x1158 - x1104*x1157 - x1105*x1156 + x1106*x1140 + x1107 + 2*x1122 - x1125 + x1126 + x1129 - x1131 + 2*x1134 - x1136 + x1137 - x1138 + x1143 - x1147 - x1148 + x1149 + x1153 + x1159) + x68*(-x1061*x533 + x1075*x1158 + x1080 + x1081 - x1083 + x1088*x1140 + x1090*x1161 - x1091 + x1095 - x1099*x1158 + x1106*x1150 - x1108*x1114 + x1110*x1156 - x1111*x570 - x1112*x1127 + x1114*x1160 - 5*x1116 + 5*x1118 + 3*x1122 - 3*x1123 + 5*x1134 - 2*x1136 + x1139 - x1141*x267 + 2*x1143 - x1144 - 5*x1145 - x1152 + x1154)) + x69*(L*x1169 - x106*(-x1114*x549 + x1120*x1167 + x1169 + x1170 - x1171 + x1181) + x123*(-x1140*x1189 + x1162*x533 - x1182 - 3*x1183 + x1184 + x1185 - x1187 + x1188 - x1190 + x1192 - x1193 + x1194 + 3*x1195 - x1196 + x1197 + x1198 - x1199 + x1201 - x1202 - x1203) - x63*(-p5_t_dt*x1204 - p6_t_dt*x1155 + x1132 + x1140*x1207 - x1156*x1206 - x1157*x1205 + x1158*x1191 + x1159 + 2*x1170 - x1173 + x1174 + x1178 - x1180 + 2*x1183 - x1185 + x1187 - x1188 + x1193 - x1197 - x1198 + x1199 + x1202 + x1208) + x68*(p5_t_dt*x1214 - x1114*x563 + x1127*x1213 + x1132 + x1133 - x1135 + x1140*x1210 - x1142 + x1146 - x1150*x1207 - x1156*x1211 - x1158*x1176 + x1158*x1200 - x1160*x1162 + x1162*x1209 - 5*x1164 + 5*x1166 + 3*x1170 - 3*x1171 + 5*x1183 - 2*x1185 + x1190 - x1191*x1210 + 2*x1193 - x1194 - 5*x1195 - x1201 + x1203 + x1212*x570)) + x69*(L*x1222 - x106*(-x1162*x579 + x1168*x1220 + x1222 + x1223 - x1224 + x1233) + x123*(-p7_t_dt*x1214 + x1215*x563 - x1234 - 3*x1235 + x1236 + x1237 - x1238 + x1239 - x1240 + x1243 - x1244 + x1245 + 3*x1246 - x1247 + x1248 + x1249 - x1250 + x1253 - x1254 - x1255) - x63*(-p6_t_dt*x1256 - p7_t_dt*x1204 + x1181 + x1191*x1259 - x1205*x1258 - x1206*x1257 + x1207*x1241 + x1208 + 2*x1223 - x1226 + x1227 + x1230 - x1232 + 2*x1235 - x1237 + x1238 - x1239 + x1244 - x1248 - x1249 + x1250 + x1254 + x1260) + x68*(-x1162*x593 + x1176*x1259 + x1181 + x1182 - x1184 + x1189*x1241 + x1191*x1262 - x1192 + x1196 - x1200*x1259 + x1207*x1252 - x1209*x1215 + x1211*x1257 - x1212*x630 - x1213*x1228 + x1215*x1261 - 5*x1217 + 5*x1219 + 3*x1223 - 3*x1224 + 5*x1235 - 2*x1237 + x1240 - x1242*x267 + 2*x1244 - x1245 - 5*x1246 - x1253 + x1255)) + x69*(L*x1270 - x106*(-x1215*x609 + x1221*x1268 + x1270 + x1271 - x1272 + x1281) + x123*(-x1241*x1289 + x1263*x593 - x1282 - 3*x1283 + x1284 + x1285 - x1286 + x1287 - x1288 + x1291 - x1292 + x1293 + 3*x1294 - x1295 + x1296 + x1297 - x1298 + x1300 - x1301 - x1302) - x63*(-p7_t_dt*x1303 - p8_t_dt*x1256 + x1233 + x1241*x1306 - x1257*x1305 - x1258*x1304 + x1259*x1290 + x1260 + 2*x1271 - x1274 + x1275 + x1278 - x1280 + 2*x1283 - x1285 + x1286 - x1287 + x1292 - x1296 - x1297 + x1298 + x1301 + x1307) + x68*(L*x1228*x1306 - x1215*x623 + x1233 + x1234 - x1236 + x1241*x1309 - x1243 + x1247 + x1251*x1290 - x1252*x1306 + x1259*x1299 - x1259*x1310 - x1261*x1263 + x1263*x1308 - 5*x1265 + 5*x1267 + 3*x1271 - 3*x1272 + 5*x1283 - 2*x1285 + x1288 - x1290*x1309 + 2*x1292 - x1293 - 5*x1294 - x1300 + x1302 - x1311*x83 + x1312*x83)) + x69*(L*x1314 - x106*(-x1263*x391 + x1269*x1313 + x1314 + x1315 - x1316 + x945 - x946 - x948 + x949) + x123*(-x1290*x952 - 3*x1317 + x1318 - x1319 + x1320 + 3*x1321 + x1322 - x1323 - x1324 - x1325 - x1326 + x1327 - x1328 + x1329 + x1330 + x623*x887 + x958) - x63*(-x1263*x933 + x1281 + x1290*x942 - x1304*x938 - x1305*x937 + x1306*x917 + x1307 + 2*x1315 + 2*x1317 - x1318 + x1319 - x1322 + x1323 + x1326 - x1327 + x1328 - x1329 - x608*x940 - x932 + x934 + x939 - x944 + x950) + x68*(-x1263*x414 + x1281 + x1282 - x1284 + x1289*x917 + x1290*x1331 - x1291 + x1295 - x1299*x942 - x1304*x953 - x1306*x913 + x1306*x955 - x1308*x887 + x1310*x942 + 3*x1315 - 3*x1316 + 5*x1317 - 2*x1318 + 2*x1319 - x1320 - 5*x1321 + x1324 + x1325 - x1330 - x1331*x917 + x634*x954 + x887*x951 - 5*x931 + 5*x957)) + x69*(L*x1390 - x106*(x1367*x1395 + x1390 + x1391 - x1393 - x1394*x53 + x1396) - x123*(-q2_t_dt*x1398 - x1380 + x1381 + x1383 + x1384*x1407 - x1387 + 3*x1400 + x1401 + x1402 - x1403 + x1406 - x1408 - x1410 - 3*x1411 + x1412 - x1413 + x1414 - x1416 + x1417 - x1418) + x63*(-x1357*x1422 + x1365*x1420 - x1369*x1407 + x1378*x1419 + x1379 - 2*x1391 + x1394*x36 + x1396 - 2*x1400 - x1401 + x1403 - x1406 + x1410 - x1412 - x1414 + x1416 + x1418 + x1421*x36 + x1427 + x1430) - x68*(q3_t_dt*x1345 + x1352*x1422 + x1357*x1435 - x1357*x1436 + x1369*x1439 + 5*x1376 - x1377*x267 - 5*x1382 - x1385*x692 - x1386*x1404 - x1388*x1422 - 3*x1391 + 3*x1393 - 5*x1400 - 2*x1401 - x1402 - x1407*x1435 + x1408 + 2*x1410 + 5*x1411 + x1413 - x1417 + x1421*x267 + x1427 + x1431 - x1432 - x1434 + x1437*x663 + x1438)) + x69*(L*x1441 - x106*(x1440*x1446 + x1441 + x1442 - x1444 - x1445*x53 + x1447) - x123*(-q3_t_dt*x1449 - x1431 + x1432 + x1434 + x1436*x1460 - x1438 + 3*x1451 + x1452 + x1454 - x1455 + x1459 - x1461 - x1463 - 3*x1464 + x1465 - x1466 + x1467 - x1469 + x1470 - x1471) + x63*(-x1407*x1475 + x1419*x1473 + x1420*x1472 - x1422*x1460 + x1430 - 2*x1442 + x1445*x36 + x1447 - 2*x1451 - x1452 + x1455 - x1459 + x1463 - x1465 - x1467 + x1469 + x1471 + x1474*x36 + x1480 + x1483) - x68*(q4_t_dt*x1398 + x1404*x1491 + x1407*x1488 - x1407*x1489 - x1422*x1457 + x1422*x1493 + 5*x1428 - x1429*x267 - 5*x1433 - x1437*x721 - x1439*x1475 - 3*x1442 + 3*x1444 - 5*x1451 - 2*x1452 - x1454 - x1460*x1488 + x1461 + 2*x1463 + 5*x1464 + x1466 - x1470 + x1474*x267 + x1480 + x1484 - x1485 - x1487 + x1490*x692 + x1492)) + x69*(L*x1495 - x106*(x1494*x1500 + x1495 + x1496 - x1498 - x1499*x53 + x1501) - x123*(-q4_t_dt*x1503 - x1484 + x1485 + x1487 + x1489*x1512 - x1492 + 3*x1505 + x1506 + x1507 - x1508 + x1511 - x1513 - x1515 - 3*x1516 + x1517 - x1518 + x1519 - x1521 + x1522 - x1523) + x63*(-x1460*x1527 + x1472*x1525 + x1473*x1524 - x1475*x1512 + x1483 - 2*x1496 + x1499*x36 + x1501 - 2*x1505 - x1506 + x1508 - x1511 + x1515 - x1517 - x1519 + x1521 + x1523 + x1526*x36 + x1532 + x1535) - x68*(q5_t_dt*x1449 + x1457*x1527 + x1460*x1540 - x1460*x1541 + x1475*x1544 + 5*x1481 - x1482*x267 - 5*x1486 - x1490*x750 - x1491*x1509 - x1493*x1527 - 3*x1496 + 3*x1498 - 5*x1505 - 2*x1506 - x1507 - x1512*x1540 + x1513 + 2*x1515 + 5*x1516 + x1518 - x1522 + x1526*x267 + x1532 + x1536 - x1537 - x1539 + x1542*x721 + x1543)) + x69*(L*x1546 - x106*(x1545*x1551 + x1546 + x1547 - x1549 - x1550*x53 + x1552) - x123*(-q5_t_dt*x1554 - x1536 + x1537 + x1539 + x1541*x1564 - x1543 + 3*x1556 + x1557 + x1558 - x1559 + x1563 - x1565 - x1567 - 3*x1568 + x1569 - x1570 + x1571 - x1573 + x1574 - x1575) + x63*(-x1512*x1579 + x1524*x1577 + x1525*x1576 - x1527*x1564 + x1535 - 2*x1547 + x1550*x36 + x1552 - 2*x1556 - x1557 + x1559 - x1563 + x1567 - x1569 - x1571 + x1573 + x1575 + x1578*x36 + x1584 + x1587) - x68*(q6_t_dt*x1503 + x1509*x1595 + x1512*x1592 - x1512*x1593 - x1527*x1561 + x1527*x1597 + 5*x1533 - x1534*x267 - 5*x1538 - x1542*x779 - x1544*x1579 - 3*x1547 + 3*x1549 - 5*x1556 - 2*x1557 - x1558 - x1564*x1592 + x1565 + 2*x1567 + 5*x1568 + x1570 - x1574 + x1578*x267 + x1584 + x1588 - x1589 - x1591 + x1594*x750 + x1596)) + x69*(L*x1599 - x106*(x1598*x1604 + x1599 + x1600 - x1602 - x1603*x53 + x1605) - x123*(-q6_t_dt*x1607 - x1588 + x1589 + x1591 + x1593*x1616 - x1596 + 3*x1609 + x1610 + x1611 - x1612 + x1615 - x1617 - x1619 - 3*x1620 + x1621 - x1622 + x1623 - x1625 + x1626 - x1627) + x63*(-x1564*x1631 + x1576*x1629 + x1577*x1628 - x1579*x1616 + x1587 - 2*x1600 + x1603*x36 + x1605 - 2*x1609 - x1610 + x1612 - x1615 + x1619 - x1621 - x1623 + x1625 + x1627 + x1630*x36 + x1636 + x1639) - x68*(q7_t_dt*x1554 + x1561*x1631 + x1564*x1644 - x1564*x1645 + x1579*x1648 + 5*x1585 - x1586*x267 - 5*x1590 - x1594*x808 - x1595*x1613 - x1597*x1631 - 3*x1600 + 3*x1602 - 5*x1609 - 2*x1610 - x1611 - x1616*x1644 + x1617 + 2*x1619 + 5*x1620 + x1622 - x1626 + x1630*x267 + x1636 + x1640 - x1641 - x1643 + x1646*x779 + x1647)) + x69*(L*x1650 - x106*(x1649*x1655 + x1650 + x1651 - x1653 - x1654*x53 + x1656) - x123*(-q7_t_dt*x1658 - x1640 + x1641 + x1643 + x1645*x1668 - x1647 + 3*x1660 + x1661 + x1662 - x1663 + x1667 - x1669 - x1671 - 3*x1672 + x1673 - x1674 + x1675 - x1677 + x1678 - x1679) + x63*(-x1616*x1683 + x1628*x1681 + x1629*x1680 - x1631*x1668 + x1639 - 2*x1651 + x1654*x36 + x1656 - 2*x1660 - x1661 + x1663 - x1667 + x1671 - x1673 - x1675 + x1677 + x1679 + x1682*x36 + x1688 + x1691) - x68*(q8_t_dt*x1607 + x1613*x1699 + x1616*x1696 - x1616*x1697 - x1631*x1665 + x1631*x1701 + 5*x1637 - x1638*x267 - 5*x1642 - x1646*x837 - x1648*x1683 - 3*x1651 + 3*x1653 - 5*x1660 - 2*x1661 - x1662 - x1668*x1696 + x1669 + 2*x1671 + 5*x1672 + x1674 - x1678 + x1682*x267 + x1688 + x1692 - x1693 - x1695 + x1698*x808 + x1700)) + x69*(L*x1703 - x106*(x1702*x1708 + x1703 + x1704 - x1706 - x1707*x53 + x1709) - x123*(-q8_t_dt*x1711 - x1692 + x1693 + x1695 + x1697*x1720 - x1700 + 3*x1713 + x1714 + x1715 - x1716 + x1719 - x1721 - x1723 - 3*x1724 + x1725 - x1726 + x1727 - x1729 + x1730 - x1731) + x63*(-x1668*x1740 + x1680*x1737 + x1681*x1736 - x1683*x1720 + x1691 - 2*x1704 + x1707*x36 + x1709 - 2*x1713 - x1714 + x1716 - x1719 + x1723 - x1725 - x1727 + x1729 + x1731 + x1733 - x1735 - x1738 + x1739*x36 + x1741 + x1744) - x68*(q9_t_dt*x1658 + x1665*x1740 + x1668*x1745 - x1668*x1746 + x1683*x1748 + 5*x1689 - x1690*x267 - 5*x1694 - x1698*x866 - x1699*x1717 - x1701*x1740 - 3*x1704 + 3*x1706 - 5*x1713 - 2*x1714 - x1715 - x1720*x1745 + x1721 + 2*x1723 + 5*x1724 + x1726 - x1730 + x1739*x267 + x1744 + x1747*x837 + x1750)) + x69*(L*x966 - x106*(-x233*x430 + x242*x964 + x966 + x967 - x968 + x978) + x123*(-x1000 + x226*x959 - x260*x986 - x979 - 3*x980 + x981 + x982 - x984 + x985 - x987 + x989 - x990 + x991 + 3*x992 - x993 + x994 + x995 - x996 + x998 - x999) - x63*(-p1_t_dt*x1001 - p2_t_dt*x255 - x1002*x258 - x1003*x257 + x1004*x260 + x1005*x988 + x1006 - x253 + x256 + x259 - x262 + x263 + 2*x967 - x970 + x971 + x975 - x977 + 2*x980 - x982 + x984 - x985 + x990 - x994 - x995 + x996 + x999) + x68*(p1_t_dt*x1012 + x1000 - x1004*x269 - x1005*x973 + x1005*x997 + x1007*x959 + x1008*x260 - x1008*x988 - x1009*x257 + x1010*x249 + x1011*x244 - x233*x444 + x263 - x264*x959 + x273 - 5*x961 + 5*x963 + 3*x967 - 3*x968 + 5*x980 - 2*x982 + x987 + 2*x990 - x991 - 5*x992 - x998)) + x69*(L*(x1332 - x1333 - x30 + x65) + x106*(-x1332 + x1333 + x1334*x53 - x1335 + x1337 - x1338*x32 + x30 - x47 + x50 + x56 - x61 - x65) - x123*(-q1_t_dt*x1345 + 3*x1340 + x1341 - x1343 - x1346 - 3*x1347 + x1348 - x1349 - x1350 + x1354 + x1355 + x1356 + x1358*x66 - x1361 - x1363 + x1364 + x67) + x63*(x1334*x36 - 2*x1335 - 2*x1340 - x1341 + x1343 - x1348 + x1349 + x1350 - x1354 - x1358*x36 + x1363 - x1364 + x1366*x32 + x1367*x34 + x1368*x36 - x1369*x42 + x1375 + x1379 + x31 - x35 - x40 + x44 + x62) - x68*(x1334*x66 - 3*x1335 + 3*x1337 - 5*x1340 - 2*x1341 + 2*x1343 + x1346 + 5*x1347 - x1353*x36 - x1355 - x1356 - x1358*x267 - x1359*x1369 + x1361 - x1362*x34 + x1368*x267 + x1375 + x1380 - x1381 - x1383 - x1384*x42 + x1385*x49 + x1386*x52 + x1387 + x1388*x1389 - x267*x39 + x267*x43 + 5*x30 - 5*x65)) + x69*(L*(-x1732 + x1749 + x1751 - x1753) + x106*(x1732 + x1744 - x1749 - x1751 - x1752*x1758 + x1753 - x1754 + x1756 + x1757*x53) + x123*(-q9_t_dt*x1759 - x1746*x1771 + x1750 + x1761 - x1762 + x1763 + 3*x1764 + x1765*x1766 + x1768 - x1769 - x1770 - x1772 - x1774 + x1775 - x1776 + x1778 + x1779) - x63*(-q10_t_dt*x1780 + q9_t_dt*x1780 + x1720*x1785 - x1733 + x1735 - x1736*x1782 - x1737*x1783 + x1738 + x1740*x1771 - x1741 + x1744 + 2*x1754 - x1757*x36 - x1761 + x1762 - x1765*x1781 - x1768 + x1769 - x1771*x1785 + x1774 - x1775 + x1776 - x1778 + x1781*x1784 + x1782*x1783 + x1786) + x68*(-L*x1717*x1785 - q10_t_dt*x1711 - q10_t_dt*x1759 - x1720*x1791 + x1720*x1792 - 5*x1732 + x1734*x267 + x1747*x875 + x1748*x1785 + 5*x1749 + 3*x1754 - 3*x1756 - 2*x1761 + 2*x1762 - x1763 - 5*x1764 - x1765*x1789 + x1765*x36*x872 + x1766*x1784 + x1767*x1790 + x1770 + x1771*x1791 - x1771*x1792 + x1772 - x1779 + x1786 + x1788*x28 - x1793*x83 - x1794*x41)) + x69*(L*(x234 - x236 + x239 - x243) + x106*(-x234 + x236 - x239 + x243 + x246 - x248 + x250 - x252) - x123*(x266 - x268 - x271 + x272 + x273) + x63*(x253 - x256 - x259 + x262 + x263) - x68*(-x233*x264 + 5*x236 - 5*x239 + x261*x267 - x266 + x268 + x271 - x272)) + x69*(L*(x881 - x882 + x884 - x886) + x106*(-p9_t_dt*x885 + x386*x887 - x881 + x882 - x884 + x886 - x889 + x891 + x894 - x896 + x899 - x902) - x123*(-x414*x903 + x66*x880 - x66*x916 - 3*x882 + 3*x884 + x904*x905 + x907 + x908*x917 + x910 - x911 + x915 - x918 - x919 - 3*x920 + x921 - x923 + x925 - x927 + x928 - x929) + x63*(-x36*x880 + x36*x916 - x36*x943 + x385*x940 + 2*x882 - 2*x889 - x894 + x896 - x899 + x902 + x903*x933 - x907 + x911 - x915 + x919 - x921 - x925 + x927 + x929 - 2*x930 + x932 - x934 - x935*x936 + x935*x938 + x936*x937 - x939 - x941*x942 + x944 + x950) - x68*(-x267*x880 + x267*x916 - x267*x943 - x36*x914 + x413*x887 + 5*x882 - 5*x884 - 3*x889 + 3*x891 + x898*x954 + x903*x951 - 2*x907 + x909*x942 - x910 + x918 + 2*x919 + 5*x920 - x922*x942 + x923 - x928 - 5*x930 - x935*x953 - x941*x952 + x950 + x955*x956 + x958)) + x69*(-x123*(-x154*x5231 - x154*x5233 + x154*x5236 + x154*x5237 + x154*x5242 + x154*x5256 + x156 + x185 - x5168*x5225 - x5178*x5225 - x5219*x5220 - x5219*x5222 - x5220*x5249 - x5222*x5249 - x5226*x5227 - 10*x5228 + 5*x5240 - x5243*x5246 + x5243*x5258 + x5248*x5262 + x5250*x5251 + x5251*x5252 + x5253*x5254 + x5260*x5261 + x5292 + x5326) + x168*(x167 + x190 + x5338 + x5372) + x173*(x0*x5181 + x172 + 3*x5165 - x5167 - x5168*x5170 + x5170*x5178 - 3*x5173 + 3*x5176 + 3*x5177 + x5182 - x5183 - x5185 - 3*x5187 - 3*x5191 - x5193 - x5195 + x5197 + 3*x5199 + 3*x5204 + x5206 + x5208 - x5209 - x5212 + x5213*x5216 - x5218) + x5148*((4.0/3.0)*x5151 + x5152*x5156 - x5156*x5157 + x5161*x5162) + x63*(x109*x5393 + x126 - x129*x5231 - x129*x5233 + x129*x5236 + x129*x5256 - x130 + x131*x5395 - x133 + x191 + x193 - x196 - x199 + x3689 - x5168*x5377 - x5178*x5377 - x5220*x5375 - x5220*x5400 - x5221*x5376 - x5221*x5401 - x5226*x5378 - 12*x5228 + 6*x5240 - x5243*x5399 + x5243*x5404 + x5250*x5402 + x5252*x5402 + x5254*x5403 + x5261*x5405 + x5261*x5407 + x5292 - x5374 - x5380 - x5382 - x5383 - x5384 + x5385 + x5387 - x5388 - x5390 + x5391 + x5392 - x5398 + x5444)) + x69*(L*(x1796 - x3844 - x3846) + x106*(x1849 + x3886) - x123*(x1828 + x3856 + x3861 + x3871) - x123*(x1901 + x3856 - x3885 + x3888 + x3889 + x3891 - x3892 - x3893 - x3895 - x3896 - x3897 - x3898 + x3900 + x3903 + x3905 + x3906 + x3909) + x168*(x1924 + x3861 - x3870 - x3910 - x3911 + x3912 + x3913 - x3914 - x3915 - x3916 - x3917 + x3918 + x3919 + x3924) - x63*(x1929 + x3925 + x3932) + x70*(x1800 + x1801 + x3842 - x3848 - x3850 - x3852)) + x69*(L*(x1934 + x3935 - x3937) - x106*(x2007 + x366 - x3965 - x3966 - x3967 + x3968 + x3969 + x3970 + x3971 + x3972 - x3973 - x3975 - x3977 - x3979 - x3980 + x3982 + x3984) + x123*(x2036 + x3956 + x3994) + x123*(x1976 - x3944 - x3945 - x3946 + x3947 + x3949 + x3950 + x3952 + x3953 + x3956 + x3960 + x3964) - x168*(x2028 + x360 + x3964 + x3987 + x3993) + x63*(x2027 + x355 + x372 + x374 - x375 + x3934 + x3995 + x3996 - x3997 - x3998 - x4000 - x4002 - x4003 - x4004 - x4005 + x4006 + x4007 + x4008 + x4009 + x4012) + x70*(x1938 + x1939 + x3933 - x3938 - x3940 - x3942)) + x69*(L*(x2039 - x4014 - x4016) - x106*(x2105 + x3969 - x4047 - x4048 - x4049 + x4050 + x4051 + x4052 + x4053 + x4054 - x4055 - x4057 - x4059 - x4061 - x4062 + x4064 + x4066) + x123*(x2138 + x3956 + x3986 + x4037 + x4077) + x123*(x2079 - x4024 - x4025 - x4026 + x4027 + x4029 + x4030 + x4033 + x4034 + x4037 + x4041 + x4045) - x168*(x2129 + x3987 + x4045 + x4069 + x4076) + x63*(x2128 + x3935 + x3960 + x4012 + x4078 + x4079 + x4080 - x4081 - x4082 - x4084 - x4086 - x4087 - x4088 - x4089 + x4090 + x4091 + x4092 + x4093 + x4096) + x70*(x2043 + x2044 + x4013 - x4018 - x4020 - x4022)) + x69*(L*(x2141 - x4099 - x4101) - x106*(x2213 + x4051 - x4129 - x4130 - x4131 + x4132 + x4133 + x4134 + x4135 + x4136 - x4137 - x4139 - x4141 - x4143 - x4144 + x4146 + x4148) + x123*(x2243 + x4037 + x4068 + x4120 + x4159) + x123*(x2183 - x4108 - x4109 - x4110 + x4111 + x4113 + x4114 + x4116 + x4117 + x4120 + x4124 + x4128) - x168*(x2234 + x4069 + x4128 + x4151 + x4158) + x63*(x2233 + x4041 + x4096 + x4160 + x4161 + x4162 + x4163 - x4164 - x4165 - x4167 - x4169 - x4170 - x4171 - x4172 + x4173 + x4174 + x4175 + x4176 + x4179) + x70*(x2145 + x2146 + x4097 - x4102 - x4104 - x4106)) + x69*(L*(x2246 - x4182 - x4184) - x106*(x2312 + x4133 - x4213 - x4214 - x4215 + x4216 + x4217 + x4218 + x4219 + x4220 - x4221 - x4223 - x4225 - x4227 - x4228 + x4230 + x4232) + x123*(x2344 + x4120 + x4150 + x4204 + x4243) + x123*(x2286 - x4191 - x4192 - x4193 + x4194 + x4196 + x4197 + x4200 + x4201 + x4204 + x4208 + x4212) - x168*(x2335 + x4151 + x4212 + x4235 + x4242) + x63*(x2334 + x4124 + x4179 + x4244 + x4245 + x4246 + x4247 - x4248 - x4249 - x4251 - x4253 - x4254 - x4255 - x4256 + x4257 + x4258 + x4259 + x4260 + x4263) + x70*(x2250 + x2251 + x4180 - x4186 - x4188 - x4190)) + x69*(L*(x2347 - x4265 - x4267) - x106*(x2418 + x4217 - x4296 - x4297 - x4298 + x4299 + x4300 + x4301 + x4302 + x4303 - x4304 - x4306 - x4308 - x4310 - x4311 + x4313 + x4315) + x123*(x2447 + x4204 + x4234 + x4287 + x4326) + x123*(x2389 - x4274 - x4275 - x4276 + x4277 + x4279 + x4281 + x4283 + x4284 + x4287 + x4291 + x4295) - x168*(x2439 + x4235 + x4295 + x4318 + x4325) + x63*(x2438 + x4208 + x4263 + x4327 + x4328 + x4329 + x4330 - x4331 - x4332 - x4333 - x4335 - x4336 - x4337 - x4338 + x4339 + x4340 + x4341 + x4342 + x4345) + x70*(x2351 + x2352 + x4264 - x4269 - x4271 - x4273)) + x69*(L*(x2450 - x4348 - x4350) - x106*(x2516 + x4300 - x4378 - x4379 - x4380 + x4381 + x4382 + x4383 + x4384 + x4385 - x4386 - x4388 - x4390 - x4392 - x4393 + x4395 + x4397) + x123*(x2548 + x4287 + x4317 + x4369 + x4407) + x123*(x2490 - x4357 - x4358 - x4359 + x4360 + x4362 + x4363 + x4365 + x4366 + x4369 + x4373 + x4377) - x168*(x2539 + x4318 + x4377 + x4400 + x4406) + x63*(x2538 + x4291 + x4345 + x4408 + x4409 + x4410 + x4411 - x4412 - x4413 - x4415 - x4417 - x4418 - x4419 - x4420 + x4421 + x4422 + x4423 + x4424 + x4427) + x70*(x2454 + x2455 + x4346 - x4352 - x4354 - x4356)) + x69*(L*(x2552 - x4429 - x4431) - x106*(x2623 + x4382 - x4459 - x4460 - x4461 + x4462 + x4463 + x4464 + x4465 + x4466 - x4467 - x4469 - x4471 - x4473 - x4474 + x4476 + x4477) + x123*(x2653 + x4369 + x4399 + x4451 + x4487) + x123*(x2594 - x4438 - x4439 - x4440 + x4441 + x4443 + x4445 + x4447 + x4448 + x4451 + x4454 + x4458) - x168*(x2645 + x4400 + x4458 + x4480 + x4486) + x63*(x2644 + x4373 + x4427 + x4488 + x4489 + x4490 + x4491 - x4492 - x4493 - x4494 - x4496 - x4497 - x4498 - x4499 + x4500 + x4501 + x4502 + x4503 + x4506) + x70*(x2556 + x2557 + x4428 - x4433 - x4435 - x4437)) + x69*(L*(x2655 - x4507 - x4508) - x106*(x2695 + x3872 + x4463 - x4521 - x4522 - x4523 + x4524 + x4525 + x4526 + x4527 - x4528 - x4529 - x4531 - x4532 - x4533 + x4535 + x4537) + x123*(x2716 + x4451 + x4479 + x4520 + x4543) + x123*(x2671 + x3924 - x4511 - x4512 - x4513 + x4514 + x4515 + x4516 + x4518 + x4519 + x4520) - x168*(x2713 + x3923 + x3925 + x4480 + x4542) + x63*(x2712 + x3927 + x3929 - x3930 + x4454 + x4506 + x4544 + x4545 + x4546 - x4547 - x4548 - x4549 - x4551 - x4552 - x4553 - x4554 + x4555 + x4556 + x4557 + x4558) + x70*(x1899 + x1900 + x3865 - x3899 - x3902 - x4510)) + x69*(L*(x2718 + x3675 - x3677) + x106*(x2745 + x3704) + x123*(x181 + x200 + x2734 - x3678 - x3679 - x3681 + x3684 + x3686 + x3688 + x3692 + x3693) - x123*(x2786 - x3703 + x3705 + x3707 + x3709 - x3710 - x3711 - x3713 - x3715 - x3716 - x3717 + x3719 + x3722 + x3724 + x3725 + x3729 + x3732) + x168*(-x186 + x189 + x200 + x2815 + x3734 + x3735 - x3736 - x3737 - x3739 - x3740 + x3741 + x3742 + x3746 + x3748) - x63*(x2825 + x3751 + x3754) + x70*(x144 + x145 + x169 + x171 - x182 - x184)) + x69*(L*(x275 - x333 - x335) + x106*(x322 + x370) - x123*(x351 + x360 + x364) - x123*(x296 - x342 - x343 - x347 + x351) + x168*(x307 - x352 + x355 + x358) - x63*(x328 + x377) + x70*(x279 + x280 + x336 - x337 - x339 - x341)) + x69*(L*(x2828 + x3752 - x3755) - x106*(x2872 - x3683 + x3766 + x3772 - x3773 - x3775 + x3777 + x3778 + x3779 - x3780 - x3782 - x3783 - x3784 + x3786 + x3788 + x3791) + x123*(x2846 + x3730 + x3746 - x3757 - x3758 - x3760 - x3762 - x3764 + x3767 + x3769 + x3771) - x123*(x2897 + x3732 + x3791 + x3793 + x3794 - x3795 - x3796 - x3798 - x3800 - x3801 - x3802 + x3804 + x3807 + x3809 + x3810 + x3814 + x3817) + x168*(x2921 + x3729 + x3748 + x3819 + x3820 - x3821 - x3822 - x3823 - x3824 + x3825 + x3826 + x3830 + x3832 + x3833) - x63*(x2929 + x3751 + x3834 + x3838 + x3841) + x70*(x2784 + x2785 + x3682 - x3718 - x3721 + x3756)) + x69*(L*(x2933 + x4559 - x4560) - x106*(x2976 + x3772 - x4574 - x4575 - x4577 + x4579 + x4580 + x4582 + x4583 + x4584 - x4585 - x4587 - x4588 - x4589 + x4591 + x4593 + x4596) + x123*(x2950 + x3815 + x3830 - x4562 - x4563 - x4564 - x4566 - x4567 + x4569 + x4571 + x4573) - x123*(x3004 + x3817 + x4596 + x4598 + x4599 - x4600 - x4601 - x4603 - x4605 - x4606 - x4607 + x4609 + x4612 + x4614 + x4615 + x4619 + x4622) + x168*(x3031 + x3814 + x3832 + x4624 + x4625 - x4626 - x4627 - x4628 - x4629 + x4630 + x4631 + x4635 + x4637 + x4638) - x63*(x3040 + x3838 + x4641 + x4644) + x70*(x2895 + x2896 + x3765 - x3803 - x3806 + x4561)) + x69*(L*(x3047 + x4646 - x4647) - x106*(x3091 + x4579 - x4665 + x4667 - x4668 - x4670 + x4672 + x4673 + x4674 + x4675 - x4676 - x4678 - x4679 - x4680 + x4682 + x4684 + x4687) + x123*(x3066 + x4620 + x4635 - x4650 - x4652 - x4654 - x4655 - x4657 + x4660 + x4662 + x4664) - x123*(x3117 + x4622 + x4687 + x4689 + x4690 - x4691 - x4692 - x4694 - x4696 - x4697 - x4698 + x4700 + x4703 + x4705 + x4706 + x4710 + x4713) + x168*(x3142 + x4619 + x4637 + x4715 + x4716 - x4717 - x4718 - x4719 - x4720 + x4721 + x4722 + x4726 + x4728 + x4729) - x63*(x3150 + x4641 + x4732 + x4735) + x70*(x3002 + x3003 + x4568 - x4608 - x4611 + x4649)) + x69*(L*(x3155 + x4736 - x4737) - x106*(x3199 + x4667 - x4753 + x4755 - x4756 - x4758 + x4760 + x4761 + x4762 + x4763 - x4764 - x4766 - x4767 - x4768 + x4770 + x4772 + x4775) + x123*(x3172 + x4711 + x4726 - x4739 - x4740 - x4742 - x4743 - x4745 + x4748 + x4750 + x4752) - x123*(x3226 + x4713 + x4775 + x4777 + x4778 - x4779 - x4780 - x4782 - x4784 - x4785 - x4786 + x4788 + x4791 + x4793 + x4794 + x4798 + x4801) + x168*(x3250 + x4710 + x4728 + x4803 + x4804 - x4805 - x4806 - x4807 - x4808 + x4809 + x4810 + x4814 + x4816 + x4817) - x63*(x3259 + x4732 + x4820 + x4823) + x70*(x3115 + x3116 + x4658 - x4699 - x4702 + x4738)) + x69*(L*(x3264 + x4824 - x4825) - x106*(x3309 + x4755 - x4841 + x4843 - x4844 - x4846 + x4848 + x4849 + x4850 + x4851 - x4852 - x4854 - x4855 - x4856 + x4858 + x4860 + x4863) + x123*(x3283 + x4799 + x4814 - x4827 - x4828 - x4830 - x4831 - x4833 + x4836 + x4838 + x4840) - x123*(x3334 + x4801 + x4863 + x4865 + x4866 - x4867 - x4868 - x4870 - x4872 - x4873 - x4874 + x4876 + x4879 + x4881 + x4882 + x4886 + x4889) + x168*(x3358 + x4798 + x4816 + x4891 + x4892 - x4893 - x4894 - x4895 - x4896 + x4897 + x4898 + x4902 + x4904 + x4905) - x63*(x3366 + x4820 + x4908 + x4911) + x70*(x3224 + x3225 + x4746 - x4787 - x4790 + x4826)) + x69*(L*(x3370 + x4912 - x4913) - x106*(x3414 + x4843 - x4928 + x4930 - x4931 - x4933 + x4935 + x4936 + x4937 + x4938 - x4939 - x4941 - x4942 - x4943 + x4945 + x4947 + x4950) + x123*(x3387 + x4887 + x4902 - x4915 - x4916 - x4917 - x4918 - x4920 + x4923 + x4925 + x4927) - x123*(x3442 + x4889 + x4950 + x4952 + x4953 - x4954 - x4955 - x4957 - x4959 - x4960 - x4961 + x4963 + x4966 + x4968 + x4969 + x4973 + x4976) + x168*(x3468 + x4886 + x4904 + x4978 + x4979 - x4980 - x4981 - x4982 - x4983 + x4984 + x4985 + x4989 + x4991 + x4992) - x63*(x3477 + x4908 + x4995 + x4998) + x70*(x3332 + x3333 + x4834 - x4875 - x4878 + x4914)) + x69*(L*(x3482 + x4999 - x5000) - x106*(x3527 + x4930 - x5017 - x5018 - x5019 - x5021 + x5023 + x5024 + x5025 + x5026 - x5027 - x5029 - x5030 - x5031 + x5033 + x5035 + x5038) + x123*(x3501 + x4974 + x4989 - x5002 - x5004 - x5006 - x5007 - x5009 + x5012 + x5014 + x5016) - x123*(x3552 + x4976 + x5038 + x5040 + x5041 - x5042 - x5043 - x5045 - x5047 - x5048 - x5049 + x5051 + x5054 + x5056 + x5057 + x5060 + x5064) + x168*(x3569 + x4973 + x4991 + x5064 - x5066 + x5067 + x5068 - x5069 - x5070 - x5071 - x5072 + x5073 + x5074 + x5075 + x5079) - x63*(x3581 + x4995 + x5080 + x5087) + x70*(x3440 + x3441 + x4921 - x4962 - x4965 + x5001)) + x69*(L*(x3586 + x5088 - x5089) + x106*(x3613 + x5105 + x5115) - x123*(x3594 + x5060 + x5080 + x5101) + x123*(x3668 + x5105 + x5119 + x5130) - x168*(x3657 + x5079 + x5080 + x5119 + x5127) + x63*(x3654 + x5082 + x5084 - x5085 - x5118 - x5131 - x5132 + x5133 + x5134 + x5135 - x5136 - x5137 - x5138 - x5140 - x5141 - x5142 - x5143 + x5144 + x5145 + x5146 + x5147) + x70*(x3550 + x3551 + x5010 - x5050 - x5053 + x5090)) + x69*(L*(x1936 + x3937 + x5245*x8999 - x5257*x8999 + x5264*x8993 + x5267*x8994 + x5269*x8994 - x5276*x8997 - x5283*x9000 - x5286*x9000 + x5291*x8993 - x5465*x8995 + x6070 + 2*x8992 - 4*x8996 - x8998*x964 + x9024) - x106*(-p1_b*x7133 - p1_i_dot*x9197 - p2_b*x3978*x5276 + p2_b*x5679*x964 + p2_b*x7133 - x1858*x9164 - x1858*x9165 + x1858*x9209 - x1940*x5677 + x1977 + x1978 - x1980 - x1982 - x1984 + x1986 + x1988 + x1990 + x1991 + x1992 + x1994*x9188 - x1995 - x1997 - x240*x8998 - x286*x5445 - x286*x5473 - x286*x5474 + x286*x5475 + x286*x5489 + x286*x9001 - x286*x9021 + x321*x9026 + x321*x9027 + x367 - x3941*x5676 + x3965 + x3966 + x3967 - x3968 - x3970 - x3971 - x3972 + x3973 + x3975 + x3977 + x3979 + x3980 - x3982 - x3984 - x450*x8991 - x479*x9110 - x480*x9112 - x5168*x9157 - x5168*x9162 - x5172*x9158 + x5175*x9158 + x5178*x9157 - x5178*x9162 + x5189*x9184 - x5189*x9185 - x5198*x9184 + x5198*x9185 - x5245*x9163 + x5245*x9186 - x5245*x9201 + x5245*x9205 + x5257*x9163 - x5257*x9186 + x5257*x9201 - x5257*x9205 + x5264*x9051 + x5264*x9052 + x5264*x9118 + x5267*x9053 + x5267*x9055 + x5267*x9123 + x5269*x9053 + x5269*x9055 + x5269*x9123 - x5272*x9200 - x5276*x9167 - x5276*x9168 - x5279*x9133 - x5283*x9093 - x5283*x9095 - x5283*x9203 - x5286*x9093 - x5286*x9095 - x5286*x9202 + x5291*x9051 + x5291*x9052 + x5291*x9118 - x5339*x8993 - x5342*x8994 - x5345*x8994 - x5359*x8993 - x5379*x5522 + x5386*x5522 - x5432*x9073 - x5432*x9166 + x5432*x9171 + x5432*x9172 - x5435*x9073 - x5435*x9166 + x5435*x9171 + x5435*x9172 - x5458*x964 + x5465*x9107 - x5470*x9003 - x5476*x9071 - x5476*x9072 + x5476*x9169 + x5476*x9170 + x5490*x9114 - x5506*x9071 - x5506*x9072 + x5506*x9169 + x5506*x9170 + x5516*x9177 - x5525*x5681 + x5525*x9100 + x5527*x9084 - x5531*x9043 + x5538*x8997 - x5543*x9135 + x5545*x9135 + x5671*x9028 + x5672*x9030 + x5673*x9030 + x5674*x9173 + x5678*x9000 + x5680*x9104 - x5680*x9106 - x5682*x9040 + x5688*x9028 - x5691*x9040 + x5705 - x5808*x9159 - x5808*x9160 - x5811*x9161 - x5813*x9161 + x5845*x9187 + x5845*x9190 + x5847*x9191 + x5847*x9193 + x5850*x9193 - x5860*x9199 - x5863*x9159 - x5863*x9160 + x5874*x9206 + x5874*x9208 + x5877*x9207 + x5881*x9199 + x5882*x9210 + x5888*x9210 - 4*x8992 + 8*x8996 + 7*x9011 + 2*x9048 + 2*x9049 - 14*x9058 - 8*x9087 + x9155 + x9156 + x9174 + x9175 + x9176 - x9179 - x9180 - x9181 - x9183 + 3*x9189 + x9192*x964 - x9195 - x9196 - x9198 + x9213 + x9222) + x123*(-p1_b*x6136 - p1_b*x9089 + p1_b*x9090 - p1_i_dot*x6133 + p2_b*x6136 + p2_b*x9089 - p2_b*x9090 + x1945 + x1947 - x1949 - x1951 - x1955 + x1957*x9083 + x1983*x5279 + x2099*x9078 + x2136 - x226*x9070 - x240*x9069 - x240*x9096 + x249*x9112 + x293*x5536 - x321*x9076 - x321*x9077 + x373*x6690 - x3943*x5445 - x3943*x5473 - x3943*x5474 + x3943*x5475 + x3943*x5489 + x3943*x9001 - x3943*x9021 + x3944 + x3945 + x3946 - x3947 - x3949 - x3950 + x3951*x5276 - x3952 - x3953 - x3955 + x4075 + x450*x9110 + x5168*x9054 + x5168*x9056 - x5168*x9059 - x5168*x9061 - x5168*x9066 - x5172*x9062 - x5172*x9065 - x5172*x9075 + x5175*x9062 + x5175*x9065 + x5175*x9075 + x5178*x9054 + x5178*x9056 + x5178*x9059 + x5178*x9061 + x5178*x9066 + x5219*x9091 - x5234*x9067 + x5264*x5696 - x5264*x9071 - x5264*x9072 - x5267*x9073 - x5269*x9073 + x5276*x9098 + x5283*x9108 + x5286*x9113 - x5291*x9071 - x5291*x9072 - x5322*x9106 + x5375*x9051 + x5375*x9052 - x5379*x9057 + x5386*x9057 + x5399*x9086 + x5400*x9051 + x5400*x9052 - x5404*x9086 + x5469 + x5543*x9107 - x5545*x9107 + x5572*x9084 + 4*x5654 - x5672*x9074 - x5673*x9074 - x5681*x6120 + x5682*x9114 + x5691*x9114 - x5696*x6134 - x5698*x9092 + x5702*x6128 + 16*x5704 - x5783*x9093 - x5783*x9095 + x6120*x9100 + x6414*x9099 - x6423*x9091 + 12*x9011 - x9044 - x9045 - x9046 - x9047 + 6*x9048 + 6*x9049 + 10*x9050 - 24*x9058 - x9063 - x9068*x964 + x9079 + x9081 + x9082 + x9085 - 24*x9087 - x9088 - x9094*x964 + x9097*x964 + x9101 + x9103 + x9105 + 40*x9115 + x9154) - x123*(-p2_i_dot*x9232 - x154*x5471 - x154*x5472 + x154*x5484 + x154*x5486 + x154*x5488 + x154*x5499 + x154*x9076 + x154*x9077 - x154*x9233 - x154*x9240 + x1954*x5561 + x2037 + x240*x9102 + x286*x9026 + x286*x9027 - x286*x9039 - x286*x9164 - x286*x9165 + x286*x9209 + x299*x9080 - x3941*x5517 + x3994 - x5168*x9227 - x5178*x9227 - x5219*x5510 - x5219*x5511 + x5219*x9071 + x5219*x9072 - x5227*x5513 + x5227*x9073 + x5227*x9166 - x5245*x9230 - x5245*x9236 - x5245*x9237 + x5245*x9239 + x5246*x9107 - x5249*x5510 - x5249*x5511 + x5249*x9071 + x5249*x9072 + x5251*x5495 + x5251*x5497 - x5251*x9191 - x5251*x9193 + x5257*x9230 + x5257*x9236 + x5257*x9237 - x5257*x9239 - x5258*x9107 + x5260*x5500 - x5260*x9114 - x5298*x9053 - x5298*x9055 + x5495*x6007 + x5509*x9116 + x5509*x9118 - x5509*x9223 - x5509*x9224 + x5512*x9120 + x5512*x9123 - x5512*x9225 - x5512*x9226 - x5513*x5989 + x5514*x9120 + x5514*x9123 - x5514*x9225 - x5514*x9226 - x5517*x9032 + x5517*x9187 + x5517*x9190 + 5*x5519 - x5520*x9040 + x5520*x9210 - x5524*x9036 - x5524*x9037 + x5524*x9206 + x5524*x9208 + x5525*x9207 - x5525*x9238 + x5528*x9116 + x5528*x9118 - x5528*x9223 - x5528*x9224 + x5529*x6011 - x5530*x9135 + x5530*x9199 - x5553*x9051 - x5553*x9052 - x5556*x9053 - x5556*x9055 + x5559*x9167 + x5559*x9168 + x5565*x9093 + x5565*x9095 + x5568*x964 + x5572*x9106 - x5573*x9051 - x5573*x9052 + x5575 + x5609 - x5699*x9197 + x5716*x9169 + x5716*x9170 + x5862*x9169 + x5862*x9170 + x5989*x9073 + x5989*x9166 + x5991*x9171 + x5991*x9172 + x5992*x9172 - x6004*x9135 + x6005*x9135 - x6006*x9200 - x6007*x9193 - x6011*x9107 - 12*x9048 - 12*x9049 + 48*x9087 + 3*x9155 + 3*x9156 - 5*x9174 - 5*x9175 - 5*x9176 - 3*x9179 - 3*x9180 - 3*x9181 - 3*x9183 + 7*x9189 - 3*x9195 - 3*x9196 - 3*x9198 + x9222 + x9228*x9229 - 7*x9231 + x9234*x9235 - x9241*x9243 + x9244) + x168*(p1_b_dot*x9146 + p1_i_dot*x9247 + p2_b_dot*x5603 + x158*x9076 + x158*x9077 - x158*x9164 - x158*x9165 + x1972 - x1983*x5674 - x1985*x5918 - x202*x9251 + x2034*x9188 + x2035 + x240*x9131 + x240*x9253 + x240*x9257 - x3951*x5538 + x3963 + x3976*x9229 + x3993 - x5168*x9245 - x5168*x9246 - x5178*x9245 - x5178*x9246 - x5245*x9250 + x5257*x9250 + x5264*x9169 + x5264*x9170 + x5267*x9172 + x5269*x9172 - x5276*x9178 - x5276*x9182 - x5279*x9252 - x5283*x9255 - x5283*x9256 - x5286*x9255 + x5291*x9169 + x5291*x9170 + x5334*x9093 + x5334*x9095 - x5337*x9051 - x5337*x9052 + x5339*x9071 + x5339*x9072 - x5339*x9223 - x5339*x9224 + x5342*x9073 + x5342*x9166 - x5342*x9225 - x5342*x9226 + x5345*x9073 + x5345*x9166 - x5345*x9225 - x5345*x9226 + x5359*x9071 + x5359*x9072 - x5359*x9223 - x5359*x9224 - x5362*x9191 - x5362*x9193 + x5362*x9206 + x5362*x9208 - x5369*x9114 + x5369*x9210 - x5537*x9200 - x5543*x9204 + x5545*x9204 - x5586*x964 - x5590*x9107 + x5590*x9199 - x5593*x9193 + x5593*x9206 + x5597*x9107 - x5597*x9199 - x5601*x9107 + x5601*x9199 - x5608*x9060 - x5611*x9051 - x5611*x9052 + x5613*x9167 + x5613*x9168 + x5615*x9248 + x5615*x9249 + x5617*x964 + x5618 + x5719 + x5916*x9187 + x5916*x9190 + x5928*x9106 - 8*x9048 - 8*x9049 + 32*x9087 + x9117 + x9119 + x9121 + x9122 + x9124 + x9125 + x9126 + x9127 - x9128 - x9129 - x9132 - x9134 + x9136 + x9137 + x9138 - x9139 - x9140 - x9141 - x9142 - x9143 - x9144 - x9145 + x9153 - x9243*x9258 - x9254*x964 + x9260) + x63*(-x129*x5471 - x129*x5472 + x129*x5484 + x129*x5499 + x129*x9076 + x129*x9077 - x129*x9233 - x129*x9240 - x1983*x6056 - x2008 - x2009 + x2010 + x2011 + x2012 + x2013 + x2014 + x2015 + x2016 - x2017 - x2018 - x2020 - x2021 + x226*x9266 + x240*x9268 + x283*x5395 + x327*x9026 + x327*x9027 - x327*x9039 - x327*x9164 - x327*x9165 + x327*x9209 + x329 + x371 + x376 + x3935 - x3941*x5634 - x3995 - x3996 + x3997 + x3998 + x3999*x9229 + x4000 + x4002 + x4003 + x4004 + x4005 - x4006 - x4007 - x4008 - x4009 - x444*x9266 - x5168*x9261 - x5168*x9262 - x5178*x9261 - x5178*x9262 - x5234*x9264 - x5234*x9267 - x5245*x9263 - x5245*x9269 + x5245*x9270 + x5257*x9263 + x5257*x9269 - x5257*x9270 + x5298*x9215 - x5312*x9221 - x5375*x5510 + x5375*x9071 + x5375*x9072 + x5375*x9169 + x5375*x9170 - x5376*x5478 - x5378*x5513 - x5378*x5515 + x5378*x9073 + x5378*x9166 + x5378*x9171 + x5378*x9172 - x5399*x5529 + x5399*x9107 + x5399*x9204 + x5399*x9219 - x5400*x5510 + x5400*x9071 + x5400*x9072 + x5400*x9169 + x5400*x9170 - x5401*x5478 + x5402*x5495 + x5402*x5497 - x5402*x9191 - x5402*x9193 + x5404*x5529 - x5404*x9107 - x5404*x9204 - x5404*x9219 + x5405*x5500 - x5405*x9114 + x5407*x5500 - x5407*x9114 + x5427*x9093 + x5427*x9095 + x5440*x9106 - x5441*x9051 - x5441*x9052 + x5495*x6061 - x5513*x6043 - x5515*x6043 + 6*x5519 + x5553*x9147 + x5556*x9215 + x5573*x9147 + x5610 - x5619 + x5621 + x5622 - x5623 - x5624 - x5626 - x5628 + x5629*x9116 + x5629*x9118 - x5629*x9223 - x5629*x9224 + x5630*x9120 + x5630*x9123 - x5630*x9225 - x5630*x9226 + x5631*x9120 + x5631*x9123 - x5631*x9225 - x5631*x9226 - x5633*x9149 - x5633*x9200 - x5634*x9032 + x5634*x9187 + x5634*x9190 + x5636 + x5637 - x5638 - x5639 - x5640*x9040 + x5640*x9210 - x5644*x9036 - x5644*x9037 + x5644*x9206 + x5644*x9208 + x5645*x9207 - x5645*x9238 - x5648*x9149 - x5650 + x5651*x9116 + x5651*x9118 - x5651*x9223 - x5651*x9224 - x5653*x9135 + x5653*x9199 - x5655*x9051 - x5655*x9052 + x5657*x9167 + x5657*x9168 + x5658*x9248 + x5658*x9249 + x5664*x964 + x5668 + x6043*x9073 + x6043*x9166 + x6043*x9172 - x6061*x9193 - x6062*x9194 - x6062*x9271 - x6065*x9204 - x6339*x9133 + x6339*x9235 + x9002 + x9005 + x9008 + x9010 + x9012 - x9013 - x9014 + x9017 + x9018 - x9020 - x9022 + x9023 - x9035*x9265 - x9038*x9265 - 18*x9048 - 18*x9049 + 72*x9087 + 6*x9155 + 6*x9156 - 6*x9175 - 6*x9180 - 6*x9181 - 6*x9183 + 16*x9189 - 6*x9196 - 6*x9198 + 12*x9214 - 16*x9231 + x9273) + x70*(p2_b*x5192 - p2_b*x5196 + p2_b*x5507 - p2_b*x9043 - p2_b_dot*x5468 - p2_b_dt*x5172 + p2_b_dt*x5175 + p2_i*x5203 - p2_i_dot*x6072 + x1933*x5285 - x1942*x5241 + x1943 - x2003*x5271 - x2084*x5419 + x2084*x5460 - x3933 + x3938 + x3940 + x3942 + x429*x5282 - x479*x5461 + x479*x5466 + x479*x5660 - x479*x5661 + x480*x5430 - x480*x5438 + x5245*x9041 - x5257*x9041 - x5275*x973 - x5317*x9036 - x5317*x9037 + x5432*x9030 + x5432*x9031 + x5435*x9030 + x5435*x9031 + x5476*x9028 + x5476*x9029 - x5496*x9036 - x5501*x9040 + x5506*x9028 + x5506*x9029 - x5682 - x5691 + x6077 - x6078 + x9001 + x9016 - x9019 - x9021 + x9026 + x9027 - x9033 - x9034 - x9035*x964 - x9039)) + x69*(L*(-q2_b*x5819 - x1367*x5820 + x2829 + x3755 + x5168*x6068 + x5178*x6068 + x5245*x6069 - x5257*x6069 + x5264*x5979 - x5283*x5984 - x5286*x5984 + x5291*x5979 - x5465*x5982 + 2*x5978 - 4*x5983 + x6070 + x6071) - x106*(-L*x6095 - L*x6111 + L*x6113 + L*x6114 - L*x6157 + L*x6162 + L*x6163 - q2_b*x3685*x5276 - q2_b*x6160 + q2_b*x6169 + q3_b*x5508 - q3_b*x5819 - q3_b_dot*x5885 + q3_i*x5211 - q3_i*x5891 - x1367*x5791 - x1367*x6161 + x1367*x6189 - x1440*x5820 - x1858*x6156 + x1858*x6204 + x2847 + x2849 + x2850*x6020 - x2851 - x2853 - x2854 + x2855 + x2858 + x2859 + x2860 - x2862 - x2863*x6085 + x2863*x6184 - x2864 + x321*x5942 + x321*x5944 + x3683 - x3720*x5676 - x3766 + x3770*x5516 + x3773 + x3775 + x3776*x5757 - x3777 - x3778 - x3779 + x3780 + x3782 + x3783 + x3784 + x3785*x5845 - x3786 - x3788 - x5168*x6145 + x5168*x6146 + x5168*x6147 - x5168*x6153 - x5178*x6145 + x5178*x6146 + x5178*x6147 - x5178*x6153 - x5245*x6155 - x5245*x6195 - x5245*x6197 + x5245*x6201 + x5257*x6155 + x5257*x6195 + x5257*x6197 - x5257*x6201 + x5264*x5932 + x5264*x5934 + x5264*x6089 + x5264*x6090 - x5272*x6196 - x5279*x5952 - x5282*x6182 - x5283*x6124 - x5283*x6198 - x5286*x6123 - x5286*x6124 - x5286*x6198 - x5286*x6199 + x5291*x5932 + x5291*x5934 + x5291*x6089 + x5291*x6090 - x5339*x5979 - x5359*x5979 - x5432*x6158 - x5432*x6159 + x5432*x6166 + x5432*x6168 - x5435*x6158 - x5435*x6159 + x5435*x6166 + x5435*x6168 + x5465*x6139 - x5476*x6103 - x5476*x6104 + x5476*x6164 + x5476*x6165 + x5490*x6144 - x5506*x6103 - x5506*x6104 + x5506*x6164 + x5506*x6165 - x5543*x5954 - x5543*x6117 + x5545*x5954 + x5545*x6117 + x5672*x6031 + x5672*x6075 + x5673*x6031 + x5673*x6075 + x5678*x5984 + x5679*x5985 + x5680*x5986 - x5680*x6138 - x5682*x5966 - x5691*x5966 - x5716*x6152 - x5808*x6151 - x5811*x6154 - x5813*x6154 + x5847*x6186 + x5847*x6187 + x5850*x6186 - x5862*x6152 - x5863*x6151 + x5874*x6202 + x5874*x6203 + x5877*x6205 + x5882*x6206 + x5888*x6206 + x5894 - 4*x5978 + 8*x5983 + 2*x6084 + 2*x6086 + x6088 - x6109 - 8*x6118 - x6122 - x6141*x663 + x6148 + x6150 + x6170 + x6173 + x6174 - x6176 - x6178 - x6179 - x6181 + 3*x6183 + 3*x6185 - x6190 - x6191 - x6192 - x6193 + x6208 + x6213) + x123*(-q2_b*x6136 - 24*q2_b_dot*x5703 - q2_i_dot*x4*x5717 + q2_i_dot*x5715 + q3_b*x6136 + q3_i_dot*x6133 - x0*x6097 - x1367*x6101 - x1367*x6126 + x1367*x6132 - x1440*x5756 - x1440*x5787 - x2736*x5710 - x2783*x5184 + x2790 + x2834 + x2837 - x2838 - x2841 - x321*x6111 + x3731 + x3757 + x3758 + x3760 + x3762 + x3764 - x3767 - x3769 + x3770*x5676 - x3771 + x3943*x6052 - x3943*x6095 + x3943*x6113 + x3943*x6114 - x3943*x6119 + x5168*x6091 + x5168*x6092 + x5168*x6096 + x5168*x6098 + x5172*x6009 - x5175*x6009 + x5178*x6091 + x5178*x6092 - x5178*x6096 - x5178*x6098 - x5264*x6103 - x5264*x6104 - x5264*x6127 + x5276*x6130 + x5279*x6131 + x5283*x6142 + x5286*x6142 + x5286*x6143 - x5290*x6140 - x5291*x6104 - x5322*x6138 - x5336*x6100 - x5375*x5892 + x5375*x6089 + x5375*x6090 + x5375*x6121 - x5379*x5997 + x5379*x6093 + x5386*x5997 - x5386*x6093 + x5399*x6117 + x5400*x6089 + x5400*x6090 - x5404*x6117 + x5469 + x5543*x6139 - x5545*x6139 - x5572*x6094 + x5572*x6116 - x5672*x6105 - x5672*x6106 - x5673*x6105 - x5673*x6106 + x5682*x6144 + x5691*x6144 + x5714*x6125 - x5716*x6125 - 6*x5738 - 12*x5741 + 12*x5753 - x5757*x685 - 12*x5774 - x5783*x6123 - x5783*x6124 - x5796*x6120 + 12*x5893 + x5977 - x6013 - x6014 - x6015 - x6016 + x6017 + x6018 + x6019 + x6021 - x6022 + x6023 + x6024 + x6025 - x6026 - 4*x6083 + 6*x6084 + 6*x6086 + 12*x6088 - x6102*x656 - 4*x6107 - 4*x6108 - 2*x6109 + 4*x6112 - 24*x6118 + x6120*x6135 - 12*x6122 + x6127*x6134 - x6128*x6129 - 16*x6137 + x6141*x692) - x123*(x154*x6111 - x154*x6227 - x154*x6252 - x154*x6254 + x154*x6257 + x154*x6259 + x154*x6262 + x154*x6273 + x154*x6302 - x154*x6308 + x2788*x6303 + x286*x5942 + x286*x5944 - x286*x5963 - x286*x6156 + x286*x6204 - x2873 - x2874 + x2875 + x2876 + x2877 + x2878 + x2879 + x2880 - x2882 - x2885 - x2886 - x2887*x6085 + x2887*x6184 - x2888 + x3706*x6102 - x3720*x5517 - x3770*x6000 + x3785*x5517 + x3792*x5757 - x3793 - x3794 + x3795 + x3796 + x3798 + x3800 + x3801 + x3802 - x3804 - x3807 - x3809 - x3810 + x5219*x6103 + x5219*x6104 - x5219*x6241 - x5219*x6244 + x5227*x6158 + x5227*x6159 - x5227*x6246 - x5227*x6301 - x5241*x6305 - x5245*x6304 + x5246*x6139 - x5246*x6264 + x5249*x6103 + x5249*x6104 - x5249*x6241 - x5249*x6244 - x5251*x6186 - x5251*x6187 + x5251*x6268 + x5251*x6270 + x5257*x6304 - x5258*x6139 + x5258*x6264 - x5260*x6144 + x5260*x6276 - x5298*x6214 - x5298*x6216 + x5312*x6225 + x5509*x5932 + x5509*x5934 - x5509*x6152 - x5509*x6218 + x5512*x5936 + x5512*x5990 - x5512*x6220 - x5512*x6300 + x5514*x5936 + x5514*x5990 - x5514*x6220 - x5514*x6300 - x5517*x5946 - x5520*x5966 + x5520*x6206 - x5524*x5958 - x5524*x5960 + x5524*x6202 + x5524*x6203 + x5525*x6205 - x5525*x6307 + x5528*x5932 + x5528*x5934 - x5528*x6152 - x5528*x6218 - x5530*x5954 + x5530*x6235 - x5553*x6089 - x5553*x6090 - x5556*x6214 - x5556*x6216 + x5565*x6123 + x5565*x6124 + x5567*x6233 + x5567*x6234 + x5572*x6138 - x5573*x6089 - x5573*x6090 + x5716*x6164 + x5716*x6165 + x5860*x6200 + x5862*x6164 + x5862*x6165 - x5881*x6200 - x5954*x6004 + x5954*x6005 + x5989*x6158 + x5989*x6159 - x5989*x6246 - x5989*x6301 + x5991*x6166 + x5991*x6168 + x5992*x6166 + x5992*x6168 - 7*x6001 + x6004*x6235 - x6005*x6235 - x6006*x6196 - x6007*x6186 + x6007*x6268 - x6011*x6139 + x6011*x6264 - x6012*x6240 + x6027 - 12*x6084 - 12*x6086 + 48*x6118 + 3*x6148 + 3*x6150 - 5*x6170 - 5*x6173 - 3*x6176 - 3*x6178 - 3*x6179 - 3*x6181 + 7*x6183 + 7*x6185 - 3*x6190 - 3*x6191 - 3*x6192 - 3*x6193 + x6213 + x6287 + 5*x6306 + x6323) + x168*(q2_i_dot*x6221 + q3_i_dot*x5908 - x1367*x6228 - x1367*x6236 + x1440*x5915 + x1440*x5924 + x158*x6111 - x158*x6156 - x158*x6227 - x2794*x6085 + x2794*x6184 + x2810 - x2904 - x2905 + x2906 + x2907 + x2908 + x2909 - x2912 - x2913 + x3733*x6102 + x3745 - x3770*x5916 + x3785*x5916 + x3818*x5757 - x3819 - x3820 + x3821 + x3822 + x3823 + x3824 - x3825 - x3826 - x5168*x6215 - x5168*x6217 - x5168*x6219 + x5168*x6223 - x5178*x6215 - x5178*x6217 - x5178*x6219 + x5178*x6223 - x5245*x6226 + x5257*x6226 + x5264*x6164 + x5264*x6165 + x5267*x6166 + x5267*x6168 + x5269*x6166 + x5269*x6168 - x5276*x6229 - x5276*x6232 - x5279*x6230 - x5279*x6231 - x5283*x6237 - x5283*x6238 - x5286*x6237 - x5286*x6238 + x5291*x6164 + x5291*x6165 + x5332*x6225 + x5334*x6123 + x5334*x6124 - x5337*x6089 - x5337*x6090 + x5339*x6103 + x5339*x6104 - x5339*x6152 - x5339*x6218 + x5342*x6158 - x5342*x6220 + x5345*x6158 - x5345*x6220 + x5359*x6103 + x5359*x6104 - x5359*x6152 - x5359*x6218 - x5362*x6186 - x5362*x6187 + x5362*x6202 + x5362*x6203 - x5369*x6144 + x5369*x6206 - x5537*x6196 - x5543*x6200 + x5545*x6200 - x5590*x6139 + x5590*x6235 - x5593*x6186 + x5593*x6203 + x5597*x6139 - x5597*x6235 - x5601*x6139 + x5601*x6235 - x5611*x6089 - x5611*x6090 + x5615*x6224 + x5616*x6233 + x5616*x6234 - x5674*x6131 + x5743*x6222 + x5913*x6102 + x5928*x6138 - x5929*x6240 + x5933 + x5935 + x5937 + x5938 + x5940 + x5941 + x5943 + x5945 - x5948 - x5950 - x5951 - x5953 + x5955 + x5956 + x5957 - x5959 - x5961 - x5962 - x5964 - x5965 - x5967 - x5968 + x5976 + x5987 - 8*x6084 - 8*x6086 + 32*x6118 + x6288 + x6299) + x63*(12*q2_i_dot*x5805 - q3_b_dot*x6055 - q3_b_dot*x6063 + q3_b_dot*x6348 + x129*x6111 - x129*x6227 - x129*x6252 - x129*x6254 + x129*x6257 + x129*x6273 + x129*x6302 - x129*x6308 + x2883*x5395 - x2930*x6085 + x2930*x6184 + x2932 + x327*x5942 + x327*x5944 - x327*x5963 - x327*x6156 + x327*x6204 - x3720*x5634 + x3749*x6102 + x3785*x5634 + x3836*x5757 + x3841 - x5168*x6324 - x5168*x6325 - x5168*x6328 + x5168*x6336 - x5178*x6324 - x5178*x6325 - x5178*x6328 + x5178*x6336 - x5245*x6338 + x5245*x6349 - x5245*x6350 + x5257*x6338 - x5257*x6349 + x5257*x6350 + x5298*x5970 + x5375*x6103 + x5375*x6104 + x5375*x6164 + x5375*x6165 - x5375*x6241 - x5376*x6243 + x5378*x6166 + x5378*x6168 + x5399*x6139 + x5399*x6200 + x5399*x6209 - x5399*x6264 + x5400*x6103 + x5400*x6104 + x5400*x6164 + x5400*x6165 - x5400*x6241 - x5401*x6243 - x5402*x6186 - x5402*x6187 + x5402*x6268 + x5402*x6270 - x5404*x6139 - x5404*x6200 - x5404*x6209 + x5404*x6264 - x5405*x6144 + x5405*x6276 - x5407*x6144 + x5407*x6276 + x5412*x6225 + x5427*x6123 + x5427*x6124 + x5440*x6138 - x5441*x6089 - x5441*x6090 + x5553*x5969 + x5556*x5970 - x5559*x5972 + x5573*x5969 + x5629*x5932 + x5629*x5934 - x5629*x6152 - x5629*x6218 + x5630*x5936 + x5630*x5990 - x5630*x6220 - x5630*x6300 + x5631*x5936 + x5631*x5990 - x5631*x6220 - x5631*x6300 - x5633*x5971 - x5633*x6196 - x5634*x5946 - x5640*x5966 + x5640*x6206 - x5644*x5958 - x5644*x5960 + x5644*x6202 + x5644*x6203 + x5645*x6205 - x5645*x6307 - x5646*x6212 - x5648*x5971 + x5651*x5932 + x5651*x5934 - x5651*x6152 - x5651*x6218 - x5653*x5954 + x5653*x6235 - x5655*x6089 - x5655*x6090 + x5658*x6224 + x5663*x6233 + x5663*x6234 - x5829*x6340 - x5851*x6340 - x5952*x6339 - 16*x6001 + x6032*x6105 - x6032*x6327 + x6033*x6105 - x6033*x6327 + x6043*x6166 + x6043*x6168 - x6056*x6131 - x6061*x6186 + x6061*x6268 - x6062*x6352 - x6065*x6200 + x6067 + x6071 - 18*x6084 - 18*x6086 + 72*x6118 + 6*x6148 + 6*x6150 - 6*x6173 - 6*x6176 - 6*x6178 - 6*x6179 - 6*x6181 + 16*x6183 + 16*x6185 - 6*x6192 - 6*x6193 + x6286 + 6*x6306 - x6326 - x6329 - x6331 - x6332 - x6333 + x6334 + x6335 - x6343 - x6344 + x6345 + x6347 - x6351 + x6356) + x70*(q2_b*x5507 + q2_b_dot*x5468 - q2_b_dt*x5172 + q2_b_dt*x5175 + q2_b_dt*x5194 + q2_i*x5203 + q2_i_dot*x6072 + x0*x6080 + x1352*x5275 - x1367*x5829 + x2727*x5419 - x2727*x5460 - x2831*x5241 + x2832 - x3682 + x3718 + x3721 - x3756 + x5245*x6082 - x5257*x6082 - x5317*x5958 - x5317*x5960 - x5430*x663 + x5432*x6031 + x5432*x6075 + x5435*x6031 + x5435*x6075 + x5438*x663 + x5461*x662 - x5465*x5966 - x5466*x662 + x5476*x6073 + x5476*x6074 - x5496*x5958 - x5501*x5966 + x5506*x6073 + x5506*x6074 - x5660*x662 + x5661*x662 + x5682 + x5691 + x5740 + x5775 - x5781 + x5795 + x5889 - x5890 + x5942 + x5944 - x5947 - x5949 - x5963 - x6052 - x6077 + x6078)) + x69*(L*(-p1_b*x5468 - p1_i*x5463 - x0*x5453 - x240*x5458 + x240*x5467 + x277 - x321*x5445 - x332*x4*x5275 + x333 + x335 + x5245*x5459 - x5257*x5459 + x5264*x5448 + x5267*x5449 + x5269*x5449 - x5276*x5457 - x5283*x5464 - x5286*x5464 + x5291*x5448 - x5379*x5450 + x5386*x5450 - x5419*x5456 + 2*x5447 - x5454*x5465 - 4*x5455 + x5456*x5460 - x5461*x5462 + x5462*x5466 + x5469) - x106*(p1_b*x240*x5679 - p1_b*x368*x5276 + p1_b*x5689 + x154*x5445 + x154*x5473 + x154*x5474 - x154*x5475 + x154*x5482 - x154*x5485 - x154*x5489 - x281*x5677 - x283*x5677 + x321*x5471 + x321*x5472 + x325 - x340*x5676 + x370 - x5245*x5670 + x5245*x5683 + x5253*x5681 + x5257*x5670 - x5257*x5683 + x5264*x5510 - x5282*x5685 - x5283*x5687 - x5286*x5686 - x5286*x5687 + x5291*x5510 - x5339*x5448 - x5342*x5449 - x5345*x5449 - x5359*x5448 + x5379*x5669 - x5386*x5669 - 4*x5447 + x5451*x5675 + 8*x5455 + x5457*x5538 + x5464*x5678 + x5478*x5671 + x5478*x5688 + x5479*x5672 + x5479*x5673 + x5480*x5672 + x5480*x5673 - x5500*x5682 - x5500*x5691 + x5551 + x5570*x5680 + x5614*x5674 + x5705) - x123*(x286*x5471 + x286*x5472 - x286*x5488 - x286*x5499 + x287 + x288 + x292 + x300 - x340*x5517 + x342 + x343 + x347 + x349 + x5245*x5523 - x5257*x5523 - x5483*x5517 - x5495*x5524 - x5497*x5524 - x5500*x5520 + x5509*x5510 + x5509*x5511 + x5510*x5528 + x5511*x5528 + x5512*x5513 + x5512*x5515 + x5513*x5514 + x5514*x5515 - 7*x5519 - x5525*x5526 - x5529*x5530 + x5551 + x5575) + x123*(p1_b*x5718 - p1_i*x5713 - p1_i_dot*x5715 + x129*x5445 + x129*x5473 - x129*x5475 + x129*x5482 - x129*x5485 + x226*x5709 + x293*x5712 + x301 + x323*x5711 + x350 + x364 + x373*x5710 - x5168*x5707 - x5172*x5708 + x5175*x5708 + x5178*x5707 + x5379*x5706 - x5386*x5706 + x5403*x5681 + x5469 - x5552 - x5554 - x5555 - x5557 + x5558 + x5560 + x5562 + x5563 - x5564 + x5566 + x5569 + x5571 - x5574 + 6*x5654 - x5696*x5714 + x5696*x5716 + x5702*x5717 + 24*x5704 + x5719) + x168*(x304 + x308 + x309 + x352 + x356 + x357 + x5576 + x5577 + x5578 + x5579 + x5580 + x5581 + x5582 + x5583 - x5584 - x5585 - x5587 - x5588 - x5589 - x5591 - x5592 - x5594 - x5595 - x5596 + x5598 + x5599 + x5600 - x5602 + x5610 + x5618) + x63*(x327*x5471 + x327*x5472 - x327*x5488 - x327*x5499 + x331 - x340*x5634 + x377 + x5245*x5642 - x5257*x5642 + x5298*x5534 + x5399*x5544 - x5404*x5544 - x5483*x5634 - x5487*x5635 - x5495*x5644 - x5497*x5644 - x5498*x5635 - x5500*x5640 + x5510*x5629 + x5510*x5651 + x5511*x5629 + x5511*x5651 + x5513*x5630 + x5513*x5631 + x5515*x5630 + x5515*x5631 - 16*x5519 - x5526*x5645 - x5529*x5653 + 12*x5532 + x5533*x5553 + x5533*x5573 + x5534*x5556 - x5535*x5633 - x5535*x5648 - x5539*x5559 - x5546*x5646 + x5619 - x5621 - x5622 + x5623 + x5624 + x5626 + x5628 - x5636 - x5637 + x5638 + x5639 + x5650 + x5668) + x70*(p1_b*x5192 - p1_b*x5196 + p1_b*x5507 - p1_b_dot*x5508 + p1_i*x5203 - p1_i_dot*x5166 - p1_i_dot*x5211 - x1974*x5285 + x1981*x5172 - x1981*x5175 - x240*x5487 - x244*x5184 + x249*x5205 + x274*x5285 + x285 - x336 + x337 + x339 + x341 - x450*x5192 + x450*x5196 + x5189*x5494 - x5198*x5494 + x5245*x5504 - x5257*x5504 - x5317*x5495 - x5317*x5497 + x5432*x5479 + x5432*x5480 + x5435*x5479 + x5435*x5480 + x5445 - x5465*x5500 + x5471 + x5472 + x5473 + x5474 - x5475 + x5476*x5477 + x5476*x5478 + x5477*x5506 + x5478*x5506 + x5482 - x5484 - x5485 - x5486 - x5488 - x5489 - x5490 - x5492 + x5493 - x5495*x5496 - x5499 - x5500*x5501 - x5503)) + x69*(L*(-p3_b*x5718 + p3_i*x5713 - x1018*x9287 - x129*x9274 - x129*x9283 + x129*x9289 - x129*x9291 + x129*x9294 + x2041 - x323*x9282 + x4014 + x4016 - x473*x5709 + x5168*x9280 - x5178*x9280 + x5245*x9288 - x5257*x9288 + x5264*x9277 + x5267*x9278 + x5269*x9278 - x5276*x9286 - x5283*x9293 - x5286*x9293 + x5291*x9277 - x5403*x9292 - x5465*x9284 + x6361 + 2*x9276 - 4*x9285) - x106*(-p2_b*x7441 + p3_b*x1018*x5679 - p3_b*x4060*x5276 + p3_b*x7441 - p3_b*x9110 - p3_i_dot*x9197 - x1018*x8998 + x1018*x9471 - x1858*x9439 - x1858*x9440 + x1858*x9487 - x2045*x5677 - x2047*x5677 + x2080 + x2081 - x2083 - x2085 - x2086 + x2087 + x2089 + x2091 + x2092 + x2093 + x2094*x9467 - x2095 - x2097 + x321*x9296 + x321*x9297 - x323*x9431 + x323*x9452 - x4021*x5676 - x4046*x9001 + x4046*x9021 + x4046*x9274 + x4046*x9283 - x4046*x9289 + x4046*x9298 - x4046*x9308 + x4047 + x4048 + x4049 - x4050 - x4052 - x4053 - x4054 + x4055 + x4057 + x4059 + x4061 + x4062 - x4064 - x4066 + x423*x9456 - x479*x9275 - x509*x9382 - x510*x9384 - x5168*x9437 + x5172*x9433 - x5175*x9433 - x5178*x9437 + x5189*x9463 - x5189*x9464 - x5198*x9463 + x5198*x9464 + x5241*x9455 - x5245*x9438 - x5245*x9477 - x5245*x9479 + x5245*x9483 + x5257*x9438 + x5257*x9477 + x5257*x9479 - x5257*x9483 + x5264*x9327 + x5264*x9328 + x5267*x9329 + x5267*x9331 + x5269*x9329 + x5269*x9331 - x5272*x9478 - x5276*x9445 - x5276*x9446 - x5283*x9367 - x5283*x9368 - x5283*x9481 - x5286*x9367 - x5286*x9480 + x5291*x9327 + x5291*x9328 - x5339*x9277 - x5342*x9278 - x5345*x9278 - x5359*x9277 - x5432*x9443 - x5432*x9444 + x5432*x9449 + x5432*x9450 - x5435*x9443 - x5435*x9444 + x5435*x9449 + x5435*x9450 + x5465*x9379 - x5476*x9441 - x5476*x9442 + x5476*x9447 + x5476*x9448 + x5490*x9386 - x5506*x9441 - x5506*x9442 + x5506*x9447 + x5506*x9448 + x5516*x9453 + x5538*x9286 - x5543*x9361 - x5543*x9407 + x5545*x9361 + x5545*x9407 + x5671*x9299 + x5671*x9300 + x5672*x9301 + x5672*x9302 + x5673*x9301 + x5673*x9302 + x5674*x9451 + x5678*x9293 + x5680*x9375 - x5680*x9378 - x5682*x9315 + x5688*x9299 + x5688*x9300 - x5691*x9315 - x5716*x9435 - x5808*x9434 - x5811*x9436 - x5813*x9436 + x5847*x9470 + x5847*x9472 + x5850*x9472 - x5862*x9435 - x5863*x9434 + x5874*x9484 + x5874*x9486 + x5877*x9485 + x5882*x9488 + x5888*x9488 - x6708*x9430 + x6708*x9432 + x6711*x9430 - x6711*x9432 - x7426*x9100 + x7426*x9292 - 9*x9011 - x9025*x9279 - x9043*x9336 + x9213 - 4*x9276 + 8*x9285 - x9287*x964 + 2*x9325 + 2*x9326 - 8*x9362 + x9428 + x9429 + x9454 - x9458 - x9459 - x9460 - x9462 + 3*x9466 + 3*x9468 + 3*x9469 - x9473 - x9475 - x9476 + x9495 + x9501) + x123*(-p2_b*x6426 - p2_i_dot*x5715 - x1018*x9069 - x1018*x9096 + x1018*x9370 + x1957*x5712 + x2051 + x2054 - x2056 - x2058 - x2062 + x2099*x5710 + x2241 - x321*x9350 - x321*x9351 - x4023*x9001 + x4023*x9021 + x4023*x9274 + x4023*x9283 - x4023*x9289 + x4023*x9298 - x4023*x9308 + x4024 + x4025 + x4026 - x4027 - x4029 - x4030 + x4032*x5276 - x4033 - x4034 - x4036 + x4157 - x444*x9345 - x473*x9070 + x479*x9382 + x480*x9384 + x5168*x9330 + x5168*x9332 + x5168*x9334 - x5168*x9335 - x5168*x9341 + x5172*x9338 - x5172*x9340 - x5172*x9343 - x5175*x9338 + x5175*x9340 + x5175*x9343 + x5178*x9330 + x5178*x9332 - x5178*x9334 + x5178*x9335 + x5178*x9341 - x5189*x6723*x9336 + x5276*x9371 + x5283*x9380 + x5286*x9385 - x5322*x9378 + x5375*x9327 + x5375*x9328 + x5399*x9361 + x5400*x9327 + x5400*x9328 - x5404*x9361 - x5440*x9084 + x5469 + x5509*x9377 + x5543*x9379 - x5545*x9379 - x5671*x9346 - x5671*x9347 - x5672*x9348 - x5672*x9349 - x5673*x9348 - x5673*x9349 + x5682*x9386 - x5688*x9346 - x5688*x9347 + x5691*x9386 - x5698*x9366 - x5714*x9091 + x5716*x9091 + x5717*x9099 - x5783*x9367 - x5783*x9368 + x5834*x9364 - x5834*x9365 - x6412*x9100 + x6412*x9292 - x6424*x9364 + x6424*x9365 + x6708*x9337 - x6711*x9337 + x6748*x9317 - 18*x9011 + 6*x9050 + 24*x9115 + x9287*x976 - x9321 - x9322 - x9323 - x9324 + 6*x9325 + 6*x9326 + 14*x9333 - x9342 - x9344*x964 + x9352 + x9354 + x9355 + 14*x9356 + x9357 + 28*x9358 + 36*x9360 - 24*x9362 - x9363 - x9369*x964 + x9372 + x9374 + x9376 + 56*x9387 + 72*x9388 + x9426) - x123*(p3_i_dot*x9232 - x1018*x154*x9038 + x1018*x9102 - x154*x9026 - x154*x9027 + x154*x9033 + x154*x9034 + x154*x9039 + x154*x9350 + x154*x9351 - x154*x9512 + x1954*x9353 + x2061*x9080 - x2094*x9197 + x2139 + x286*x9296 + x286*x9297 - x286*x9307 - x286*x9314 - x286*x9439 - x286*x9440 + x286*x9487 - x4021*x5517 + x4077 + x5168*x9505 + x5168*x9507 + x5178*x9505 + x5178*x9507 - x5219*x9116 - x5219*x9118 + x5219*x9441 + x5219*x9442 - x5227*x9120 - x5227*x9123 + x5227*x9444 - x5245*x9508 - x5246*x9135 + x5246*x9379 - x5249*x9116 - x5249*x9118 + x5249*x9441 + x5249*x9442 + x5251*x9036 + x5251*x9037 - x5251*x9470 - x5251*x9472 + x5257*x9508 + x5258*x9135 - x5258*x9379 + x5260*x9040 - x5260*x9386 - x5298*x9329 - x5298*x9331 + x5509*x9389 + x5509*x9391 - x5509*x9435 - x5509*x9502 + x5512*x9393 + x5512*x9396 - x5512*x9503 - x5512*x9504 + x5514*x9393 + x5514*x9396 - x5514*x9503 - x5514*x9504 - x5517*x9303 - x5520*x9315 + x5520*x9488 - x5524*x9311 - x5524*x9312 + x5524*x9484 + x5524*x9486 + x5525*x9485 - x5525*x9514 + x5528*x9389 + x5528*x9391 - x5528*x9435 - x5528*x9502 - x5530*x9407 + x5530*x9513 - x5553*x9327 - x5553*x9328 - x5556*x9329 - x5556*x9331 + x5559*x9445 + x5559*x9446 + x5565*x9367 + x5565*x9368 + x5572*x9378 - x5573*x9327 - x5573*x9328 + x5716*x9447 + x5716*x9448 + x5860*x9482 + x5862*x9447 + x5862*x9448 - x5881*x9482 - x5989*x9120 - x5989*x9123 + x5989*x9444 + x5991*x9450 - x6000*x9453 + x6002*x9133 - x6004*x9407 + x6004*x9513 + x6005*x9407 - x6005*x9513 - x6006*x9478 + x6007*x9036 - x6007*x9472 + x6011*x9135 - x6011*x9379 - x6625*x9482 + x9153 + x9228*x9506 + 5*x9231 + x9244 - 12*x9325 - 12*x9326 + 48*x9362 + x9373*x964 + 3*x9428 + 3*x9429 - 5*x9454 - 3*x9458 - 3*x9459 - 3*x9460 - 3*x9462 + 7*x9466 + 7*x9468 + 7*x9469 - 3*x9473 - 3*x9475 - 3*x9476 + x9501 - 7*x9509 - x9510*x9511 + x9515) + x168*(p2_b_dot*x9418 + p3_b_dot*x9146 + p3_i_dot*x9247 - x1018*x9131 + x1018*x9253 - x1018*x9257 + x158*x9350 + x158*x9351 - x158*x9439 - x158*x9440 - x2034*x9521 + x2076 + x2137 + x3976*x9506 + x4044 + x4076 - x423*x9522 + x452*x9251 - x5168*x9516 - x5168*x9517 - x5178*x9516 - x5178*x9517 - x5245*x9520 + x5257*x9520 + x5264*x9447 + x5264*x9448 + x5267*x9449 + x5269*x9449 - x5276*x9523 - x5276*x9526 - x5279*x9524 - x5279*x9525 - x5283*x9530 - x5283*x9531 - x5286*x9530 - x5286*x9531 + x5291*x9447 + x5291*x9448 + x5334*x9367 + x5334*x9368 - x5337*x9327 - x5337*x9328 - x5339*x9435 + x5339*x9441 + x5339*x9442 - x5339*x9502 + x5342*x9443 + x5342*x9444 - x5342*x9503 - x5342*x9504 + x5345*x9443 + x5345*x9444 - x5345*x9503 - x5345*x9504 - x5359*x9435 + x5359*x9441 + x5359*x9442 - x5359*x9502 - x5362*x9470 - x5362*x9472 + x5362*x9484 + x5362*x9486 - x5369*x9386 + x5369*x9488 - x5537*x9478 + x5538*x9528 - x5543*x9482 + x5545*x9482 - x5590*x9379 + x5590*x9513 - x5593*x9472 + x5593*x9484 + x5597*x9379 - x5597*x9513 - x5601*x9379 + x5601*x9513 - x5611*x9327 - x5611*x9328 + x5613*x9445 + x5613*x9446 + x5615*x9518 + x5615*x9519 + x5674*x9527 - x5916*x9453 + x5928*x9378 + x9154 + x9260 - 8*x9325 - 8*x9326 + 32*x9362 + x9390 + x9392 + x9394 + x9395 + x9397 + x9398 + x9399 + x9400 - x9401 - x9402 + x9404*x964 - x9405 - x9406 + x9408 + x9409 + x9410 - x9411 - x9412 - x9413 - x9414 - x9415 - x9416 - x9417 + x9425 - x9482*x9533 + x9529*x964 + x9532*x964 + x9535) + x63*(p2_i_dot*x9549 + x1018*x9268 - x1018*x9561 - x129*x9026 - x129*x9027 + x129*x9033 + x129*x9039 + x129*x9350 + x129*x9351 - x129*x9512 - x2106 - x2107 + x2108 + x2109 + x2110 + x2112 + x2114 + x2115 + x2116 - x2117 - x2118 - x2120 - x2122 + x327*x9296 + x327*x9297 - x327*x9307 - x327*x9314 - x327*x9439 - x327*x9440 + x327*x9487 + x3999*x9506 - x4021*x5634 - x4079 - x4080 + x4081 + x4082 - x4083*x9461 + x4084 + x4086 + x4087 + x4088 + x4089 - x4090 - x4091 - x4092 - x4093 + x4160 + x444*x9552 - x473*x9552 - x5168*x9536 - x5168*x9537 - x5168*x9539 - x5178*x9536 - x5178*x9537 - x5178*x9539 - x5245*x9550 - x5245*x9559 + x5245*x9560 + x5257*x9550 + x5257*x9559 - x5257*x9560 + x5298*x9420 - x5312*x9500 - x5375*x9118 + x5375*x9447 + x5375*x9448 - x5376*x9028 + x5376*x9346 + x5376*x9347 - x5378*x9123 + x5378*x9443 + x5378*x9449 + x5378*x9450 - x5399*x9135 + x5399*x9379 + x5399*x9482 + x5399*x9498 - x5400*x9118 + x5400*x9447 + x5400*x9448 - x5401*x9028 + x5401*x9346 + x5401*x9347 + x5402*x9036 + x5402*x9037 - x5402*x9470 - x5402*x9472 + x5404*x9135 - x5404*x9379 - x5404*x9482 - x5404*x9498 + x5405*x9040 - x5405*x9386 + x5407*x9040 - x5407*x9386 + x5427*x9367 + x5427*x9368 + x5440*x9378 - x5441*x9327 - x5441*x9328 + x5553*x9419 + x5556*x9420 + x5573*x9419 + x5629*x9389 + x5629*x9391 - x5629*x9435 - x5629*x9502 + x5630*x9393 + x5630*x9396 - x5630*x9504 + x5631*x9393 + x5631*x9396 - x5633*x9421 - x5633*x9478 - x5634*x9303 - x5640*x9315 + x5640*x9488 - x5644*x9311 - x5644*x9312 + x5644*x9484 + x5644*x9486 + x5645*x9485 - x5645*x9514 - x5648*x9421 + x5651*x9389 + x5651*x9391 - x5651*x9435 - x5651*x9502 - x5653*x9407 + x5653*x9513 - x5655*x9327 - x5655*x9328 + x5657*x9445 + x5657*x9446 + x5658*x9518 + x5658*x9519 - x6032*x9030 + x6032*x9349 - x6033*x9030 + x6033*x9349 - x6043*x9123 + x6043*x9443 + x6056*x9133 + x6061*x9036 - x6061*x9472 - x6062*x9562 - x6062*x9563 - x6065*x9482 + x9024 + x9153 + 6*x9231 + x9273 - x9306*x9551 - x9313*x9551 - 18*x9325 - 18*x9326 - x9344*x976 + 72*x9362 + 6*x9428 + 6*x9429 - 6*x9454 - 6*x9458 - 6*x9459 - 6*x9460 - 6*x9462 + 16*x9466 + x9467*x9557 + 16*x9468 + 16*x9469 - 6*x9473 - 6*x9476 + 12*x9496 - x9506*x9540 - 16*x9509 + x9538 - x9542 - x9543 + x9544 + x9545 + x9546 + x9548 - x9553 - x9554 + x9555 + x9556 + x9558*x964 + x9564 + x9566) + x70*(p3_b*x5192 - p3_b*x5196 - p3_b*x5287*x9320 + p3_b*x5507 - p3_b_dot*x6376 + p3_i*x5203 - p3_i_dot*x6364 - x1018*x9306 - x1026*x6368 + x2038*x5285 - x2042*x9310 + x2049 + x2096*x5172 - x2096*x5175 - x4013 + x4018 + x4020 + x4022 + x5168*x9309 - x5178*x9309 + x5189*x9316 - x5198*x9316 + x5205*x9319 + x5245*x9318 - x5257*x9318 - x5317*x9311 - x5317*x9312 + x5432*x9301 + x5432*x9302 + x5435*x9301 + x5435*x9302 + x5476*x9299 + x5476*x9300 - x5496*x9311 - x5501*x9315 + x5506*x9299 + x5506*x9300 - x5877*x9317 - x5882 - x5888 + x6366 - x6369 + x9274 + x9283 - x9289 + x9291 - x9294 + x9296 + x9297 + x9298 - x9304 - x9305 - x9307 - x9308 - x9314)) + x69*(L*(-p4_b*x6680 - x0*x9577 - x1066*x9583 + x2143 + x4099 + x4101 + x5168*x9574 + x5172*x9578 - x5175*x9578 - x5178*x9574 + x5245*x9584 - x5257*x9584 + x5264*x9571 + x5267*x9572 + x5269*x9572 - x5276*x9582 - x5283*x9587 - x5286*x9587 + x5291*x9571 + x5332*x9588 - x5339*x9585 - x5465*x9580 + x6677*x9585 - x6679*x9586 + x6683 - 8*x9568 + 2*x9570 - 8*x9579 - 4*x9581) - x106*(-p3_b*x7740 + p3_b*x9752 + p3_i*x9753 - p3_i_dot*x9763 + p4_b*x1066*x5679 - p4_b*x4142*x5276 + p4_b*x7740 - p4_b*x9382 + p4_b*x9465 - p4_b*x9752 - p4_i*x9753 - x1018*x9583 - x1066*x9287 + x1066*x9759 - x1858*x9734 - x1858*x9735 + x1858*x9775 - x2147*x5677 + x2184 + x2185 - x2187 - x2189 - x2191 + x2192 + x2194 + x2196 + x2197 + x2198 - x2200 - x2202 + x321*x9590 + x321*x9591 - x4105*x5676 + x4129 + x4130 + x4131 - x4132 - x4134 - x4135 - x4136 + x4137 + x4139 + x4141 + x4143 + x4144 - x4146 - x4148 - x509*x9569 - x5161*x9611*x9777 - x5168*x9732 - x5172*x9728 + x5175*x9728 - x5178*x9732 - x5245*x9733 - x5245*x9767 + x5245*x9771 + x5257*x9733 + x5257*x9767 - x5257*x9771 + x5264*x9622 + x5264*x9623 + x5264*x9685 + x5267*x9624 + x5267*x9626 + x5267*x9690 + x5269*x9624 + x5269*x9626 + x5269*x9690 - x5272*x9766 - x5276*x9738 - x5276*x9739 - x5279*x9700 - x5283*x9661 - x5283*x9662 - x5283*x9769 - x5286*x9661 - x5286*x9768 + x5291*x9622 + x5291*x9623 + x5291*x9685 - x5339*x9571 - x5342*x9572 - x5345*x9572 - x5359*x9571 - x539*x9676 - x540*x9678 - x5432*x9643 - x5432*x9737 + x5432*x9742 + x5432*x9743 - x5435*x9643 - x5435*x9737 + x5435*x9742 + x5435*x9743 + x5465*x9673 - x5476*x9641 - x5476*x9736 + x5476*x9740 + x5476*x9741 + x5490*x9680 - x5506*x9641 - x5506*x9736 + x5506*x9740 + x5506*x9741 + x5538*x9582 - x5543*x9656 - x5543*x9702 + x5545*x9656 + x5545*x9702 + x5671*x9592 + x5672*x9594 + x5673*x9594 + x5674*x9744 + x5678*x9587 + x5680*x9669 - x5680*x9672 - x5682*x9609 + x5688*x9592 - x5808*x9729 - x5808*x9730 - x5811*x9731 - x5813*x9731 + x5845*x9757 + x5847*x9758 + x5847*x9760 + x5850*x9760 - x5860*x9765 - x5863*x9729 - x5863*x9730 + x5874*x9772 + x5874*x9774 + x5877*x9773 + x5881*x9765 + x5882*x9776 + x5888*x9776 - x6708*x9726 + x6708*x9727 + x6711*x9726 - x6711*x9727 + x7121*x9755 - x7713*x9283 + x7713*x9289 - x7713*x9298 - x7741*x9292 + x7741*x9586 - x9295*x9573 - x9336*x9614 - 22*x9360 - 44*x9388 + x9495 + 11*x9568 - 4*x9570 + 11*x9579 + 8*x9581 - 11*x9615 + 2*x9620 + 2*x9621 + 22*x9654 - 8*x9657 + 44*x9682 + x9724 + x9725 + x9745 + x9746 + x9747 - x9748 - x9749 - x9750 - x9751 + 3*x9754 + 3*x9756 - x9761 - x9762 - x9764 + x9780 + x9787) + x123*(p3_i*x6742 - p3_i_dot*x6758 - p4_i_dot*x7072 - x1018*x9639 - x1018*x9663 - x1066*x9344 - x1066*x9369 + x1066*x9664 + x2152 + x2154 - x2156 - x2158 - x2162 + x2190*x5279 + x2204*x7943 + x2342 - x321*x9645 - x321*x9646 + x4108 + x4109 + x4110 - x4111 - x4113 - x4114 + x4115*x5276 - x4116 - x4117 - x4119 + x4241 - x473*x9640 - x503*x9345 + x509*x9676 + x510*x9678 + x5168*x9625 + x5168*x9627 - x5168*x9632 - x5168*x9636 - x5172*x9633 - x5172*x9635 - x5172*x9638 + x5175*x9633 + x5175*x9635 + x5175*x9638 + x5178*x9625 + x5178*x9627 + x5178*x9632 + x5178*x9636 + 18*x5198*x9659 - x5264*x9641 - x5267*x9643 - x5269*x9643 + x5276*x9665 + x5283*x9674 + x5286*x9679 - x5291*x9641 - x5322*x9672 + x5339*x9377 + x5375*x9622 + x5375*x9623 + x5399*x9656 + x5400*x9622 + x5400*x9623 - x5404*x9656 + x5469 + x5543*x9673 - x5545*x9673 + x5553*x9585 - x5553*x9655 - x5671*x9642 - x5672*x9644 - x5673*x9644 + x5682*x9680 - x5688*x9642 + x5691*x9680 - x5783*x9661 - x5783*x9662 - x6677*x9377 - x6708*x9629 + x6708*x9630 + x6711*x9629 - x6711*x9630 - x6716*x9283 + x6716*x9289 - x6716*x9298 - x6741*x9588 - x6743*x9292 + x6743*x9586 - x6744*x9585 + x6744*x9655 + x6750*x9317 + x7063*x9671 + 8*x9333 + 16*x9358 - 48*x9360 + 32*x9387 - 96*x9388 + 24*x9568 + 24*x9579 - 24*x9615 - x9616 - x9617 - x9618 - x9619 + 6*x9620 + 6*x9621 + 18*x9628 - x9637 + x9647 + x9649 + x9650 + 18*x9651 + x9652 + 36*x9653 + 48*x9654 - 24*x9657 - x9658 - 18*x9660 + x9666 + x9668 + x9670 + 72*x9681 + 96*x9682 + x9723) - x123*(x1018*x9667 + x1066*x9373 - x154*x9296 - x154*x9297 + x154*x9304 + x154*x9305 + x154*x9307 + x154*x9314 + x154*x9645 + x154*x9646 - x154*x9797 - x154*x9801 + x2061*x9648 - x2094*x9763 + x2161*x9353 + x2244 + x286*x9590 + x286*x9591 - x286*x9608 - x286*x9734 - x286*x9735 + x286*x9775 - x4105*x5517 + x4159 - x5168*x9792 + x5168*x9793 + x5168*x9794 - x5178*x9792 + x5178*x9793 + x5178*x9794 - x5219*x9389 - x5219*x9391 + x5219*x9641 + x5219*x9736 - x5227*x9393 + x5227*x9643 + x5227*x9737 - x5245*x9795 - x5245*x9798 + x5245*x9799 - x5246*x9407 + x5246*x9673 - x5249*x9389 - x5249*x9391 + x5249*x9641 + x5249*x9736 + x5251*x9311 + x5251*x9312 - x5251*x9758 - x5251*x9760 + x5257*x9795 + x5257*x9798 - x5257*x9799 + x5258*x9407 - x5258*x9673 + x5260*x9315 - x5260*x9680 - x5298*x9624 - x5298*x9626 + x5509*x9683 + x5509*x9685 - x5509*x9788 - x5509*x9789 + x5512*x9687 + x5512*x9690 - x5512*x9790 - x5512*x9791 + x5514*x9687 + x5514*x9690 - x5514*x9790 - x5514*x9791 - x5517*x9598 + x5517*x9757 - x5520*x9609 + x5520*x9776 - x5524*x9605 - x5524*x9606 + x5524*x9772 + x5524*x9774 + x5525*x9773 - x5525*x9800 + x5528*x9683 + x5528*x9685 - x5528*x9788 - x5528*x9789 - x5530*x9702 + x5530*x9765 - x5553*x9622 - x5553*x9623 - x5556*x9624 - x5556*x9626 + x5559*x9738 + x5559*x9739 + x5565*x9661 + x5565*x9662 + x5572*x9672 - x5573*x9622 - x5573*x9623 + x5716*x9740 + x5716*x9741 + x5860*x9770 + x5862*x9740 + x5862*x9741 - x5881*x9770 - x5989*x9393 + x5989*x9643 + x5989*x9737 - x6006*x9766 + x6007*x9311 - x6007*x9760 + x6011*x9407 - x6011*x9673 - x6625*x9770 - x9234*x9700 + x9234*x9755 + x9425 + 5*x9509 + x9515 - 12*x9620 - 12*x9621 + 48*x9657 + 3*x9724 + 3*x9725 - 5*x9745 - 5*x9746 - 5*x9747 - 3*x9748 - 3*x9749 - 3*x9750 - 3*x9751 + 7*x9754 + 7*x9756 - 3*x9761 - 3*x9762 - 3*x9764 + x9787 - 7*x9796 + x9802) + x168*(p3_b_dot*x9713 + p3_b_dot_dt*x9721 + p3_i_dot*x9805 + p4_b_dot*x9418 + x1018*x9698 + x1018*x9815 + x1018*x9818 - x1066*x9404 + x1066*x9529 - x1066*x9532 + x158*x9645 + x158*x9646 - x158*x9734 - x158*x9735 + x2179 - x2190*x5674 + x2242 - x4115*x5538 + x4127 + x4140*x9506 + x4158 - x452*x9809 + x482*x9522 - x5168*x9803 - x5168*x9804 - x5178*x9803 - x5178*x9804 + x5234*x9814 - x5245*x9808 + x5257*x9808 + x5264*x9740 + x5264*x9741 + x5267*x9743 + x5269*x9743 - x5276*x9810 - x5276*x9813 - x5279*x9811 - x5279*x9812 - x5283*x9816 - x5283*x9817 - x5286*x9816 - x5286*x9817 + x5291*x9740 + x5334*x9661 + x5334*x9662 - x5337*x9622 - x5337*x9623 + x5339*x9641 + x5339*x9736 - x5339*x9788 - x5339*x9789 + x5342*x9643 + x5342*x9737 - x5342*x9790 - x5342*x9791 + x5345*x9643 + x5345*x9737 - x5345*x9790 - x5345*x9791 + x5359*x9641 + x5359*x9736 - x5359*x9788 - x5359*x9789 - x5362*x9758 - x5362*x9760 + x5362*x9772 + x5362*x9774 - x5369*x9680 + x5369*x9776 - x5537*x9766 - x5543*x9770 + x5545*x9770 - x5590*x9673 + x5590*x9765 - x5593*x9760 + x5593*x9772 + x5597*x9673 - x5597*x9765 - x5601*x9673 + x5601*x9765 - x5611*x9622 - x5611*x9623 + x5613*x9738 + x5613*x9739 + x5615*x9806 + x5615*x9807 + x5928*x9672 + x9426 + x9521*x9612 - x9533*x9770 + x9535 - 8*x9620 - 8*x9621 + 32*x9657 + x9684 + x9686 + x9688 + x9689 + x9691 + x9692 + x9693 + x9694 - x9695 - x9696 - x9699 - x9701 + x9703 + x9704 + x9705 - x9706 - x9707 - x9708 - x9709 - x9710 - x9711 - x9712 + x9722 + x9820) + x63*(p4_i_dot*x9549 + x1018*x9846 + x1066*x9558 - x129*x9296 - x129*x9297 + x129*x9304 + x129*x9314 + x129*x9645 + x129*x9646 - x129*x9797 - x129*x9801 + x2047*x5395 - x2190*x6056 - x2214 - x2215 + x2216 + x2217 + x2218 + x2220 + x2221 + x2222 + x2223 - x2224 - x2225 - x2226 - x2227 + x327*x9590 + x327*x9591 - x327*x9608 - x327*x9734 - x327*x9735 + x327*x9775 + x4078 - x4105*x5634 - x4162 - x4163 + x4164 + x4165 + x4166*x9506 + x4167 + x4169 + x4170 + x4171 + x4172 - x4173 - x4174 - x4175 - x4176 + x4244 + x473*x9841 - x503*x9841 - x5168*x9821 - x5168*x9822 - x5168*x9824 - x5168*x9825 + x5168*x9836 + x5168*x9837 - x5178*x9821 - x5178*x9822 - x5178*x9824 - x5178*x9825 + x5178*x9836 + x5178*x9837 - x5234*x9839 - x5245*x9838 - x5245*x9847 + x5245*x9848 + x5257*x9838 + x5257*x9847 - x5257*x9848 + x5298*x9781 - x5312*x9786 + x5375*x9641 + x5375*x9740 + x5375*x9741 - x5376*x9299 - x5376*x9300 + x5376*x9642 - x5378*x9396 + x5378*x9643 + x5378*x9742 + x5378*x9743 - x5399*x9407 + x5399*x9673 + x5399*x9770 + x5399*x9784 + x5400*x9641 + x5400*x9740 + x5400*x9741 - x5401*x9299 - x5401*x9300 + x5401*x9642 + x5402*x9311 + x5402*x9312 - x5402*x9758 - x5402*x9760 + x5404*x9407 - x5404*x9673 - x5404*x9770 - x5404*x9784 + x5405*x9315 - x5405*x9680 + x5407*x9315 - x5407*x9680 + x5427*x9661 + x5427*x9662 + x5440*x9672 - x5441*x9622 - x5441*x9623 + x5553*x9714 + x5556*x9781 + x5573*x9714 + x5629*x9683 + x5629*x9685 - x5629*x9788 - x5629*x9789 - x5633*x9716 - x5633*x9766 - x5634*x9598 + x5634*x9757 - x5640*x9609 + x5640*x9776 - x5644*x9605 - x5644*x9606 + x5644*x9772 + x5644*x9774 + x5645*x9773 - x5645*x9800 - x5648*x9716 + x5651*x9683 + x5651*x9685 - x5651*x9788 - x5651*x9789 - x5653*x9702 + x5653*x9765 - x5655*x9622 - x5655*x9623 + x5657*x9738 + x5657*x9739 + x5658*x9806 + x5658*x9807 - x6032*x9301 + x6032*x9644 - x6033*x9301 + x6033*x9644 - x6043*x9396 + x6043*x9643 + x6061*x9311 - x6061*x9760 - x6062*x9849 - x6062*x9850 - x6065*x9770 - x6339*x9700 + x6339*x9755 + x9425 + 6*x9509 - x9538 + x9542 + x9543 - x9544 - x9545 - x9546 - x9548 + x9553 + x9554 - x9555 - x9556 - x9564 + x9566 + x9589*x9835 - x9602*x9840 - x9607*x9840 - 18*x9620 - 18*x9621 + 72*x9657 + 6*x9724 + 6*x9725 - 6*x9746 - 6*x9748 - 6*x9749 - 6*x9750 - 6*x9751 + 16*x9754 + 16*x9756 - 6*x9762 - 6*x9764 - 16*x9796 + x9823 - x9827 - x9829 + x9830 + x9831 + x9832 + x9834 - x9842 - x9843 + x9844 + x9845 + x9851 + x9853) + x70*(p4_b*x5192 - p4_b*x5196 + p4_b*x5507 - p4_b*x9614 - p4_b_dot*x5649 - p4_b_dot*x6695 - p4_b_dt*x5172 + p4_b_dt*x5175 + p4_i*x5203 - p4_i_dot*x5389 - p4_i_dot*x6687 - x1066*x9602 - x1075*x6690 + x2140*x5285 - x2149*x5241 + x2150 - x2209*x5536 + x2240*x5172 - x2240*x5175 - x4097 + x4102 + x4104 + x4106 + x488*x5282 + x5168*x9604 - x5178*x9604 + x5205*x9612 + x5245*x9610 - x5257*x9610 - x5317*x9605 - x5317*x9606 - x5369 + x5432*x9594 + x5432*x9595 + x5435*x9594 + x5435*x9595 + x5476*x9592 + x5476*x9593 - x5496*x9605 - x5501*x9609 + x5506*x9592 + x5506*x9593 + x6688 - x6691 + x6693*x9611 - x6697 + x9567 + x9590 + x9591 + x9597 - x9599 - x9600 - x9601 - x9603 - x9608)) + x69*(L*(p5_b*x6999 - p5_b*x7000 - p5_b*x7002 - x1119*x9870 + x2248 + x4182 + x4184 + x5168*x9861 - x5178*x9861 - x5224*x9865 - x5224*x9866 + x5224*x9872 + x5245*x9871 - x5257*x9871 + x5264*x9858 + x5267*x9859 + x5269*x9859 - x5276*x9869 - x5283*x9874 - x5286*x9874 + x5291*x9858 - x5465*x9867 - x7001*x9873 + x7006 - 10*x9855 + 2*x9857 - 20*x9864 - 4*x9868 + 10*x9875) - x106*(p4_i*x8059 + p5_b*x1119*x5679 - p5_b*x4226*x5276 - p5_b*x9676 - p5_i*x8059 - p5_i_dot*x9763 + x10012 + x10013 - x10014*x6708 + x10014*x6711 + x10015*x6708 - x10015*x6711 + x10016*x5172 - x10016*x5175 - x10017*x5808 - x10017*x5863 - x10018*x5716 - x10018*x5862 - x10019*x5811 - x10019*x5813 - x10020*x5168 - x10020*x5178 - x10021*x5245 + x10021*x5257 - x10022*x1858 - x10023*x1858 - x10024*x5476 - x10024*x5506 - x10025*x5476 - x10025*x5506 - x10026*x5432 - x10026*x5435 - x10027*x5432 - x10027*x5435 - x10028*x5276 - x10029*x5276 + x10030*x5476 + x10030*x5506 + x10031*x5476 + x10031*x5506 + x10032*x5432 + x10032*x5435 + x10033*x5432 + x10033*x5435 + x10034*x5674 + x10035*x5516 + x10036 + x10037*x5241 + x10038*x482 - x10040 - x10041 - x10042 - x10044 + x10045*x5834 - x10045*x6424 - x10046*x5834 + x10046*x6424 + 3*x10048 + x10049*x5241 + 3*x10050 + 3*x10051 + x10052*x5847 + x10053*x1119 + x10054*x5847 + x10054*x5850 - x10055 - x10057 - x10058 - x10059*x5860 + x10059*x5881 - x10060*x5272 - x10061*x5245 + x10061*x5257 - x10062*x5286 - x10063*x5283 + x10065*x5245 - x10065*x5257 + x10066*x5874 + x10067*x5877 + x10068*x5874 + x10069*x1858 + x10070*x5882 + x10070*x5888 + x10076 + x10082 - x1066*x9870 - x1119*x9583 - x2252*x5677 - x2254*x5677 + x2287 + x2288 - x2290 - x2292 - x2293 + x2294 + x2296 + x2298 + x2299 + x2300 - x2302 - x2304 + x321*x9877 + x321*x9878 - x4189*x5676 + x4213 + x4214 + x4215 - x4216 - x4218 - x4219 - x4220 + x4221 + x4223 + x4225 + x4227 + x4228 - x4230 - x4232 + x5264*x9910 + x5264*x9911 + x5267*x9912 + x5267*x9914 + x5269*x9912 + x5269*x9914 - x5283*x9950 - x5283*x9951 - x5286*x9950 + x5291*x9910 + x5291*x9911 - x5339*x9858 - x5342*x9859 - x5345*x9859 - x5359*x9858 - x539*x9856 + x5465*x9961 + x5490*x9968 + x5538*x9869 - x5543*x9944 - x5543*x9991 + x5545*x9944 + x5545*x9991 + x5671*x9879 + x5671*x9880 + x5672*x9881 + x5672*x9882 + x5673*x9881 + x5673*x9882 + x5678*x9874 + x5680*x9958 - x5680*x9960 - x5682*x9900 + x5688*x9879 + x5688*x9880 - x569*x9964 - x5691*x9900 - x570*x9966 + x8032*x9865 + x8032*x9866 - x8032*x9872 - x8061*x9586 + x8061*x9873 - 13*x9568 - 13*x9579 - x9589*x9860 - x9614*x9919 - 26*x9654 - 52*x9682 + x9780 + 13*x9855 - 4*x9857 + 26*x9864 + 8*x9868 + 2*x9908 + 2*x9909 - 8*x9945 + 52*x9970) + x123*(p4_i*x7056 + x10010 - x1066*x9927 - x1066*x9952 + x1078*x9870 - x1119*x9639 - x1119*x9663 + x1119*x9953 + x2258 + x2261 - x2263 - x2265 - x2269 + x2445 - x321*x9933 - x321*x9934 + x4191 + x4192 + x4193 - x4194 - x4196 - x4197 + x4199*x5276 - x4200 - x4201 - x4203 + x4324 - x503*x9928 + x5168*x9913 + x5168*x9915 - x5168*x9924 + x5172*x9921 - x5172*x9923 - x5172*x9926 - x5175*x9921 + x5175*x9923 + x5175*x9926 + x5178*x9913 + x5178*x9915 + x5178*x9924 - x5198*x9930 + x5219*x9659 + x5276*x9954 + x5283*x9962 + x5286*x9967 - x5290*x9930 - x5322*x9960 - x533*x9640 + x5375*x9910 + x5375*x9911 + x539*x9964 + x5399*x9944 + x540*x9966 + x5400*x9910 + x5400*x9911 - x5404*x9944 + x5469 + x5543*x9961 - x5545*x9961 - x5671*x9929 - x5672*x9931 - x5672*x9932 - x5673*x9931 - x5673*x9932 + x5682*x9968 - x5688*x9929 - x5698*x9948 - x5698*x9949 - x5783*x9950 - x5783*x9951 + x5834*x9942 - x5834*x9943 + x6414*x9671 - x6423*x9659 - x6424*x9942 + x6424*x9943 - x6693*x9947 - x6708*x9917 + x6708*x9918 + x6708*x9920 + x6711*x9917 - x6711*x9918 - x6711*x9920 + x7034*x9865 + x7034*x9866 - x7034*x9872 - x7058*x9586 + x7058*x9873 + x7365*x9899 + x9494*x9947 - 30*x9568 - 30*x9579 + x9611*x9972 + 10*x9628 + 10*x9651 + 20*x9653 - 60*x9654 + 40*x9681 - 120*x9682 + 30*x9855 + 60*x9864 - 30*x9875 - x9904 - x9905 - x9906 - x9907 + 6*x9908 + 6*x9909 + 22*x9916 - x9925 + x9935 + x9937 + x9938 + 22*x9939 + x9940 + 44*x9941 - 24*x9945 - x9946 + x9955 + x9957 + x9959 + 88*x9969 + 120*x9970) - x123*(3*x10012 + 3*x10013 - x10018*x5509 - x10018*x5528 - x10022*x286 - x10023*x286 + x10024*x5219 + x10024*x5249 + x10025*x5219 + x10025*x5249 + x10027*x5227 + x10027*x5989 + x10028*x5559 + x10029*x5559 + x10030*x5716 + x10030*x5862 + x10031*x5716 + x10031*x5862 - x10035*x6000 - 5*x10036 - 3*x10040 - 3*x10041 - 3*x10042 - 3*x10044 + 7*x10048 + 7*x10050 + 7*x10051 - x10052*x5251 - x10054*x5251 - x10054*x6007 - 3*x10055 - 3*x10057 - 3*x10058 + x10059*x5530 - x10060*x6006 + x10064*x5860 - x10064*x5881 + x10066*x5524 + x10067*x5525 + x10068*x5524 + x10069*x286 + x10070*x5520 + x10082 - x10083*x5509 - x10083*x5528 - x10084*x5512 - x10084*x5514 - x10085*x5512 - x10085*x5514 + x10086*x5168 + x10086*x5178 + x10087*x5168 + x10087*x5178 + x10088*x5168 + x10088*x5178 - x10089*x5245 + x10089*x5257 - 7*x10090 - x10091*x9511 - x10092*x154 + x10093*x9234 - x10094*x5245 + x10094*x5257 + x10095*x5245 - x10095*x5257 - x10096*x5525 - x10097*x154 - x10098*x10100 + x10101 + x1066*x9956 + x1119*x9667 - x154*x9590 - x154*x9591 + x154*x9599 + x154*x9601 + x154*x9608 + x154*x9933 + x154*x9934 + x2161*x9936 + x2268*x9648 - x2301*x9763 + x2345 + x286*x9877 + x286*x9878 - x286*x9890 - x286*x9897 - x4189*x5517 + x4243 - x5219*x9683 - x5219*x9685 - x5227*x9687 - x5227*x9690 - x5246*x9702 + x5246*x9961 - x5249*x9683 - x5249*x9685 + x5251*x9605 + x5251*x9606 + x5258*x9702 - x5258*x9961 + x5260*x9609 - x5260*x9968 - x5298*x9912 - x5298*x9914 + x5509*x9973 + x5509*x9975 + x5512*x9977 + x5512*x9980 + x5514*x9977 + x5514*x9980 - x5517*x9885 - x5520*x9900 - x5524*x9894 - x5524*x9895 + x5528*x9973 + x5528*x9975 - x5530*x9991 - x5553*x9910 - x5553*x9911 - x5556*x9912 - x5556*x9914 + x5565*x9950 + x5565*x9951 + x5572*x9960 - x5573*x9910 - x5573*x9911 - x5989*x9687 - x5989*x9690 + x6002*x9700 + x6007*x9605 + x6011*x9702 - x6011*x9961 + x9722 + 5*x9796 + x9802 - 12*x9908 - 12*x9909 + 48*x9945) + x168*(p4_b_dot*x10002 + p5_b_dot*x9713 + p5_b_dot_dt*x9721 + p5_i_dot*x9805 - x10000 - x10001 + x10009 - x10018*x5339 - x10018*x5359 - x10022*x158 - x10023*x158 + x10024*x5339 + x10024*x5359 + x10025*x5339 + x10025*x5359 + x10026*x5342 + x10026*x5345 + x10027*x5342 + x10027*x5345 + x10028*x5613 + x10029*x5613 + x10030*x5264 + x10031*x5264 + x10031*x5291 + x10032*x5267 + x10032*x5269 - x10035*x5916 - x10052*x5362 - x10054*x5362 - x10054*x5593 + x10059*x5590 - x10059*x5597 + x10059*x5601 - x10060*x5537 - x10064*x5543 + x10064*x5545 - x10064*x9533 + x10066*x5362 + x10066*x5593 + x10068*x5362 + x10070*x5369 - x10083*x5339 - x10083*x5359 - x10084*x5342 - x10084*x5345 - x10085*x5342 - x10085*x5345 + x10093*x5674 - x10102*x5168 - x10102*x5178 - x10103*x5168 - x10103*x5178 + x10104*x4140 + x10105*x5615 + x10106*x5615 - x10107*x5245 + x10107*x5257 - x10108*x9612 - x10109*x482 - x10110*x5276 - x10111*x5279 - x10112*x5279 - x10113*x5276 + x10114*x5538 + x10115*x1066 - x10116*x5283 - x10116*x5286 - x10117*x5283 - x10117*x5286 + x10118*x1066 + x10120 + x1066*x9988 - x1119*x9698 + x1119*x9815 - x1119*x9818 + x158*x9933 + x158*x9934 + x2283 + x2343 + x4211 + x4242 + x512*x9809 + x5334*x9950 + x5334*x9951 - x5337*x9910 - x5337*x9911 - x5369*x9968 - x5590*x9961 + x5597*x9961 - x5601*x9961 - x5611*x9910 - x5611*x9911 + x5928*x9960 + x9723 + x9820 - 8*x9908 - 8*x9909 + 32*x9945 + x9974 + x9976 + x9978 + x9979 + x9981 + x9982 + x9983 + x9984 - x9985 - x9986 - x9989 - x9990 + x9992 + x9993 + x9994 - x9995 - x9996 - x9997 - x9998 - x9999) + x63*(p4_i_dot*x10135 + x10003*x5553 + x10003*x5573 + x10004*x5298 + x10004*x5556 - x10005*x5633 - x10005*x5648 + 6*x10012 + 6*x10013 - x10018*x5629 - x10018*x5651 - x10022*x327 - x10023*x327 + x10026*x5378 + x10026*x6043 + x10028*x5657 + x10029*x5657 + x10030*x5375 + x10030*x5400 + x10031*x5375 + x10031*x5400 + x10032*x5378 + x10033*x5378 - 6*x10036 - 6*x10040 - 6*x10041 - 6*x10042 - x10043*x4250 - 6*x10044 + 16*x10048 + 16*x10050 + 16*x10051 - x10052*x5402 - x10054*x5402 - x10054*x6061 - 6*x10055 - 6*x10058 + x10059*x5653 - x10060*x5633 + x10064*x5399 - x10064*x5404 - x10064*x6065 + x10066*x5644 + x10067*x5645 + x10068*x5644 + x10069*x327 + x10070*x5640 + 12*x10077 + x10079*x5399 - x10079*x5404 - x10081*x5312 - x10083*x5629 - x10083*x5651 - 16*x10090 - x10092*x129 + x10093*x6339 - x10096*x5645 - x10097*x129 + x10104*x4166 + x10105*x5658 + x10106*x5658 - x10121*x5168 - x10121*x5178 - x10122*x5168 - x10122*x5178 + x10123 - x10124*x5168 - x10124*x5178 - x10125*x5168 - x10125*x5178 - x10127 - x10128 + x10129 + x10130 + x10131 + x10133 + x10134*x5376 + x10134*x5401 + x10136*x5168 + x10136*x5178 + x10137*x5168 + x10137*x5178 - x10138*x5245 + x10138*x5257 - x10139*x9889 - x10139*x9896 + x10140*x503 - x10140*x533 - x10141 - x10142 + x10143 + x10144 + x10145*x1066 - x10146*x5245 + x10146*x5257 + x10147*x5245 - x10147*x5257 - x10148*x6062 - x10149*x6062 + x10150 + x10152 - x1078*x9927 + x1119*x9846 - x129*x9590 - x129*x9591 + x129*x9599 + x129*x9608 + x129*x9933 + x129*x9934 - x2313 - x2314 + x2315 + x2316 + x2317 + x2319 + x2321 + x2322 + x2323 - x2324 - x2325 - x2327 - x2328 + x327*x9877 + x327*x9878 - x327*x9890 - x327*x9897 + x4161 - x4189*x5634 - x4246 - x4247 + x4248 + x4249 + x4251 + x4253 + x4254 + x4255 + x4256 - x4257 - x4258 - x4259 - x4260 + x4327 - x5375*x9685 - x5376*x9592 + x5376*x9929 - x5378*x9690 - x5399*x9702 + x5399*x9961 - x5400*x9685 - x5401*x9592 + x5401*x9929 + x5402*x9605 + x5402*x9606 + x5404*x9702 - x5404*x9961 + x5405*x9609 - x5405*x9968 + x5407*x9609 - x5407*x9968 + x5427*x9950 + x5427*x9951 + x5440*x9960 - x5441*x9910 - x5441*x9911 + x5629*x9973 + x5629*x9975 - x5634*x9885 - x5640*x9900 - x5644*x9894 - x5644*x9895 + x5651*x9973 + x5651*x9975 - x5653*x9991 - x5655*x9910 - x5655*x9911 - x6032*x9594 + x6032*x9932 - x6033*x9594 + x6033*x9932 - x6043*x9690 + x6056*x9700 + x6061*x9605 + x9722 + 6*x9796 - x9823 + x9827 + x9829 - x9830 - x9831 - x9832 - x9834 + x9842 + x9843 - x9844 - x9845 - x9851 + x9853 - 18*x9908 - 18*x9909 + 72*x9945) + x70*(p5_b*x5192 - p5_b*x5196 - p5_b*x5287*x9903 + p5_b*x5507 - p5_b_dot*x5689 + p5_i*x5203 - p5_i_dot*x7009 - x1119*x9889 - x1127*x7012 + x2245*x5285 + x2256 - x2387*x9491 - x4180 + x4186 + x4188 + x4190 + x5168*x9892 + x5172*x9893 - x5175*x9893 - x5178*x9892 + x5189*x9898 - x5198*x9898 + x5205*x9902 + x5245*x9901 - x5253*x9899 - x5257*x9901 - x5260 - x5317*x9894 - x5317*x9895 + x5432*x9881 + x5432*x9882 + x5435*x9881 + x5435*x9882 + x5476*x9879 + x5476*x9880 - x5496*x9894 - x5501*x9900 + x5506*x9879 + x5506*x9880 + x7011 - x7013 - x7018 + x9854 + x9865 + x9866 - x9872 + x9877 + x9878 + x9884 - x9886 - x9887 - x9888 - x9890 - x9891 - x9897)) + x69*(L*(-p7_b*x7626 - 14*x10438 + 2*x10440 + x10441*x5264 + x10441*x5291 + x10442*x5267 + x10442*x5269 - x10444*x6708 + x10444*x6711 - 28*x10447 - x10448*x7622 - x10449*x7622 - x10450*x5465 - 4*x10451 - x10452*x5276 - x10453*x1220 + x10454*x5245 - x10454*x5257 + x10455*x7622 - x10456*x7627 - x10457*x5283 - x10457*x5286 + 14*x10458 + 14*x10459 - 56*x10460 + x2452 + x4348 + x4350 + x7629) - x106*(-p7_b*x10263 + p7_b*x1220*x5679 - p7_b*x4391*x5276 - p7_i_dot*x10348 - 34*x10162 - 17*x10164 - x10168*x1220 - x10171*x10630 - 68*x10175 - x10176*x10443 - x10201*x10503 - 17*x10215 + x10365 + 17*x10438 - x10439*x599 - 4*x10440 - x10441*x5339 - x10441*x5359 - x10442*x5342 - x10442*x5345 + 34*x10447 + x10448*x10600 + x10449*x10600 + 8*x10451 + x10452*x5538 - x10453*x1167 - x10455*x10600 + x10456*x10630 + x10457*x5678 - 17*x10458 - 17*x10459 + 68*x10460 + x10462*x321 + x10463*x321 + x10464*x5671 + x10464*x5688 + x10465*x5671 + x10465*x5688 + x10466*x5672 + x10466*x5673 + x10467*x5672 + x10467*x5673 - x10484*x5682 - x10484*x5691 + 2*x10492 + 2*x10493 + x10494*x5264 + x10494*x5291 + x10495*x5264 + x10495*x5291 + x10496*x5267 + x10496*x5269 + x10498*x5267 + x10498*x5269 - x10529*x5543 + x10529*x5545 - 8*x10530 - x10533*x5283 - x10533*x5286 - x10534*x5283 + x10542*x5680 + 17*x10544 + 17*x10545 - x10546*x5680 + x10547*x5465 - x10550*x629 - x10552*x630 + x10554*x5490 - x10574*x5543 + x10574*x5545 + x10595 + x10596 - x10597*x6708 + x10597*x6711 + x10598*x6708 - x10598*x6711 + x10599*x5172 - x10599*x5175 - x10601*x5808 - x10601*x5863 - x10602*x5716 - x10602*x5862 - x10603*x5811 - x10603*x5813 - x10604*x5168 - x10604*x5178 - x10605*x5245 + x10605*x5257 - x10606*x1858 - x10607*x1858 - x10608*x5476 - x10608*x5506 - x10609*x5476 - x10609*x5506 - x10610*x5432 - x10610*x5435 - x10611*x5432 - x10611*x5435 - x10612*x5276 - x10613*x5276 + x10614*x5476 + x10614*x5506 + x10615*x5476 + x10615*x5506 + x10616*x5432 + x10616*x5435 + x10617*x5432 + x10617*x5435 + x10618*x5674 + x10619*x5516 + x10620 + x10621*x5241 + x10622*x542 - x10624 - x10625 - x10626 - x10628 + x10629*x5834 - x10629*x6424 + 3*x10632 + x10633*x5241 + 3*x10634 + 3*x10635 + x10636*x5847 + x10637*x1220 + x10638*x5847 + x10638*x5850 - x10639 - x10641 - x10642 - x10643*x5860 + x10643*x5881 - x10644*x5272 - x10645*x5245 + x10645*x5257 - x10646*x5286 - x10647*x5283 + x10649*x5245 - x10649*x5257 + x10650*x5874 + x10651*x5877 + x10652*x5874 + x10653*x1858 + x10654*x5882 + x10654*x5888 + x10662 + x10668 - x2456*x5677 - x2458*x5677 + x2491 + x2492 - x2494 - x2496 - x2497 + x2498 + x2500 + x2502 + x2503 + x2504 - x2506 - x2508 - x4355*x5676 + x4378 + x4379 + x4380 - x4381 - x4383 - x4384 - x4385 + x4386 + x4388 + x4390 + x4392 + x4393 - x4395 - x4397) + x123*(-84*x10162 - 42*x10164 - x10171*x7681 - 168*x10175 + x10196*x6748 + 14*x10214 - 42*x10215 - x10226*x1220 - x10227*x593 + 14*x10239 + 28*x10240 + x10242*x5509 - 14*x10243 - x10250*x1220 + 56*x10268 + 42*x10438 + 84*x10447 + x10448*x7656 + x10449*x7656 + x10453*x1179 - x10455*x7656 + x10456*x7681 - 42*x10458 - 42*x10459 + 168*x10460 + x10483*x7997 - x10488 - x10489 - x10490 - x10491 + 6*x10492 + 6*x10493 + x10494*x5375 + x10494*x5400 + x10495*x5375 + x10495*x5400 + x10497*x5168 + x10497*x5178 + x10499*x5168 + x10499*x5178 + 30*x10500 - x10501*x6708 + x10501*x6711 + x10502*x6708 - x10502*x6711 + x10504*x6708 - x10504*x6711 + x10505*x5172 - x10505*x5175 - x10507*x5172 + x10507*x5175 + x10508*x6708 - x10508*x6711 - x10509*x5172 + x10509*x5175 - x10510 - x10511*x1167 - x10512*x563 - x10513*x5671 - x10513*x5688 - x10514*x5671 - x10514*x5688 - x10515*x5672 - x10515*x5673 - x10516*x5672 - x10516*x5673 - x10517*x321 - x10518*x321 + x10519 + x10521 + x10522 + x10523 + 30*x10524 + 60*x10525 + x10526*x5834 - x10526*x6424 - x10527*x6693 + x10527*x9494 - x10528*x5698 + x10529*x5399 - x10529*x5404 - 24*x10530 - x10531 - x10532*x5698 - x10533*x5783 - x10534*x5783 - x10535*x1167 + x10536*x1220 + x10537*x5276 + x10538 + x10541 + x10543 + 42*x10544 + 42*x10545 - x10546*x5322 + x10547*x5543 - x10547*x5545 + x10548*x5283 + x10550*x599 + x10552*x600 + x10553*x5286 + x10554*x5682 + x10554*x5691 + 120*x10555 + x10593 + x2462 + x2465 - x2467 - x2469 - x2473 + x2651 + x4357 + x4358 + x4359 - x4360 - x4362 - x4363 + x4364*x5276 - x4365 - x4366 - x4368 + x4485 + x5469) - x123*(-x10177*x154 - x10178*x154 + x10186*x154 + x10188*x154 + x10192*x5251 + x10192*x6007 + x10193*x5251 + x10195*x154 + x10197*x5260 + x10235*x2472 + x10255*x1220 - x10269*x5219 - x10269*x5249 - x10271*x5219 - x10271*x5249 - x10273*x5227 - x10273*x5989 - x10276*x5227 - x10276*x5989 + x10286*x6002 - x10288*x5246 + x10288*x5258 + x10288*x6011 + x10308 - x10348*x2505 + 5*x10379 + x10388 + x10462*x286 + x10463*x286 - x10470*x5517 - x10475*x286 - x10478*x5524 - x10479*x5524 - x10481*x286 - x10484*x5520 - 12*x10492 - 12*x10493 - x10494*x5553 - x10494*x5573 - x10495*x5553 - x10495*x5573 - x10496*x5298 - x10496*x5556 - x10498*x5298 - x10498*x5556 + x10517*x154 + x10518*x154 + x10520*x2367 + 48*x10530 + x10533*x5565 + x10534*x5565 + x10540*x1167 + x10546*x5572 + x10547*x5246 - x10547*x5258 - x10547*x6011 - x10554*x5260 + x10556*x5509 + x10556*x5528 + x10558*x5509 + x10558*x5528 + x10560*x5512 + x10560*x5514 + x10563*x5512 + x10563*x5514 - x10574*x5530 + 3*x10595 + 3*x10596 - x10602*x5509 - x10602*x5528 - x10606*x286 - x10607*x286 + x10608*x5219 + x10608*x5249 + x10609*x5219 + x10609*x5249 + x10611*x5227 + x10611*x5989 + x10612*x5559 + x10613*x5559 + x10614*x5716 + x10614*x5862 + x10615*x5716 + x10615*x5862 - x10619*x6000 - 5*x10620 - 3*x10624 - 3*x10625 - 3*x10626 - 3*x10628 + 7*x10632 + 7*x10634 + 7*x10635 - x10636*x5251 - x10638*x5251 - x10638*x6007 - 3*x10639 - 3*x10641 - 3*x10642 + x10643*x5530 - x10644*x6006 + x10648*x5860 - x10648*x5881 - x10648*x6625 + x10650*x5524 + x10651*x5525 + x10652*x5524 + x10653*x286 + x10654*x5520 + x10668 - x10669*x5509 - x10669*x5528 - x10670*x5512 - x10670*x5514 - x10671*x5512 - x10671*x5514 + x10672*x5168 + x10672*x5178 + x10673*x5168 + x10673*x5178 + x10674*x5168 + x10674*x5178 - x10675*x5245 + x10675*x5257 - 7*x10676 - x10677*x9511 - x10678*x154 + x10679*x9234 - x10680*x5245 + x10680*x5257 + x10681*x5245 - x10681*x5257 - x10682*x5525 - x10683*x154 + x10684 + x2550 - x4355*x5517 + x4407) + x168*(p6_b_dot*x10585 + p7_b_dot*x10299 - x10284*x1220 + x10306*x10702 + x10309 + x10394*x572 - x10399*x10690 - x10403*x1220 + x10405 - 8*x10492 - 8*x10493 - x10494*x5337 - x10494*x5611 - x10495*x5337 - x10495*x5611 + x10517*x158 + x10518*x158 + 32*x10530 + x10533*x5334 + x10534*x5334 + x10546*x5928 - x10547*x5590 + x10547*x5597 - x10547*x5601 - x10554*x5369 + x10557 + x10559 + x10561 + x10562 + x10564 + x10565 + x10566 + x10567 - x10568 - x10569 + x10571*x1167 - x10572 - x10573 + x10575 + x10576 + x10577 - x10578 - x10579 - x10580 - x10581 - x10582 - x10583 - x10584 + x10592 - x10602*x5339 - x10602*x5359 - x10606*x158 - x10607*x158 + x10608*x5339 + x10608*x5359 + x10609*x5339 + x10609*x5359 + x10610*x5342 + x10610*x5345 + x10611*x5342 + x10611*x5345 + x10612*x5613 + x10613*x5613 + x10614*x5264 + x10615*x5264 + x10615*x5291 + x10616*x5267 + x10616*x5269 + x10617*x5267 + x10617*x5269 - x10619*x5916 - x10636*x5362 - x10638*x5362 - x10638*x5593 + x10643*x5590 - x10643*x5597 + x10643*x5601 - x10644*x5537 - x10648*x5543 + x10648*x5545 - x10648*x9533 + x10650*x5362 + x10650*x5593 + x10652*x5362 + x10654*x5369 - x10669*x5339 - x10669*x5359 - x10670*x5342 - x10670*x5345 - x10671*x5342 - x10671*x5345 + x10679*x5674 - x10685*x5168 - x10685*x5178 - x10686*x5168 - x10686*x5178 + x10687*x5615 + x10688*x5615 - x10689*x5245 + x10689*x5257 - x10691*x542 - x10692*x5276 - x10693*x5279 - x10694*x5279 - x10695*x5276 + x10696*x5538 + x10697*x5616 + x10698*x1167 - x10699*x5283 - x10699*x5286 - x10700*x5283 - x10700*x5286 + x10701*x1167 + x10704 + x2487 + x2547 + x4376 + x4406) + x63*(p6_i_dot*x10718 - x10177*x129 - x10178*x129 - x10179*x5376 - x10179*x5401 - x10181*x6032 - x10181*x6033 + x10186*x129 + x10192*x5402 + x10192*x6061 + x10193*x5402 + x10195*x129 + x10197*x5405 + x10197*x5407 - x10271*x5375 - x10271*x5400 - x10276*x5378 - x10276*x6043 + x10286*x6056 - x10288*x5399 + x10288*x5404 + x10308 + 6*x10379 - x10408 + x10412 + x10414 - x10415 - x10416 - x10417 - x10419 + x10426 + x10427 - x10428 - x10429 - x10434 + x10436 + x10462*x327 + x10463*x327 - x10470*x5634 - x10474*x10722 - x10475*x327 - x10478*x5644 - x10479*x5644 - x10480*x10722 - x10481*x327 - x10484*x5640 - 18*x10492 - 18*x10493 - x10494*x5441 - x10494*x5655 - x10495*x5441 - x10495*x5655 - x10511*x1179 + x10513*x5376 + x10513*x5401 + x10514*x5376 + x10514*x5401 + x10516*x6032 + x10516*x6033 + x10517*x129 + x10518*x129 + 72*x10530 + x10533*x5427 + x10534*x5427 + x10546*x5440 + x10547*x5399 - x10547*x5404 - x10554*x5405 - x10554*x5407 + x10556*x5629 + x10556*x5651 + x10558*x5629 + x10558*x5651 - x10574*x5653 + x10586*x5553 + x10586*x5573 + x10587*x5298 + x10587*x5556 - x10588*x5633 - x10588*x5648 + 6*x10595 + 6*x10596 - x10602*x5629 - x10602*x5651 - x10606*x327 - x10607*x327 + x10610*x5378 + x10610*x6043 + x10612*x5657 + x10613*x5657 + x10614*x5375 + x10614*x5400 + x10615*x5375 + x10615*x5400 + x10616*x5378 + x10617*x5378 + x10617*x6043 - 6*x10620 - 6*x10624 - 6*x10625 - 6*x10626 - x10627*x4414 - 6*x10628 + 16*x10632 + 16*x10634 + 16*x10635 - x10636*x5402 - x10638*x5402 - x10638*x6061 - 6*x10639 - 6*x10642 + x10643*x5653 - x10644*x5633 + x10648*x5399 - x10648*x5404 - x10648*x6065 + x10650*x5644 + x10651*x5645 + x10652*x5644 + x10653*x327 + x10654*x5640 + 12*x10663 + x10665*x5399 - x10665*x5404 - x10667*x5312 - x10669*x5629 - x10669*x5651 - 16*x10676 - x10678*x129 + x10679*x6339 - x10682*x5645 - x10683*x129 + x10687*x5658 + x10688*x5658 + x10697*x5663 - x10705*x5168 - x10705*x5178 - x10706*x5168 - x10706*x5178 + x10707 - x10708*x5168 - x10708*x5178 - x10709*x5168 - x10709*x5178 - x10711 - x10712 + x10713 + x10714 + x10715 + x10717 + x10719*x5168 + x10719*x5178 + x10720*x5168 + x10720*x5178 - x10721*x5245 + x10721*x5257 + x10723*x563 - x10723*x593 - x10724 - x10725 + x10726 + x10727 + x10728*x1167 - x10729*x5245 + x10729*x5257 + x10730*x5245 - x10730*x5257 - x10731*x6062 - x10732*x6062 + x10733 + x10735 - x2517 - x2518 + x2519 + x2520 + x2521 + x2523 + x2525 + x2526 + x2527 - x2528 - x2529 - x2531 - x2532 + x4328 - x4355*x5634 - x4410 - x4411 + x4412 + x4413 + x4415 + x4417 + x4418 + x4419 + x4420 - x4421 - x4422 - x4423 - x4424 + x4488) + x70*(-p7_b*x10487*x5287 + p7_b*x5192 - p7_b*x5196 + p7_b*x5507 - p7_b_dot*x7133 + p7_i*x5203 - p7_i_dot*x7632 - x10073*x2592 + x10437 + x10448 + x10449 - x10455 + x10462 + x10463 + x10464*x5476 + x10464*x5506 + x10465*x5476 + x10465*x5506 + x10466*x5432 + x10466*x5435 + x10467*x5432 + x10467*x5435 + x10469 - x10471 - x10472 - x10473 - x10474*x1220 - x10475 - x10476 + x10477*x5168 - x10477*x5178 - x10478*x5317 - x10478*x5496 - x10479*x5317 - x10481 + x10482*x5189 - x10482*x5198 - x10483*x5525 - x10484*x5501 + x10485*x5245 - x10485*x5257 + x10486*x5205 - x1228*x7114 + x2449*x5285 + x2460 + x2549*x5172 - x2549*x5175 - x4346 + x4352 + x4354 + x4356 - x5520 + x7634 - x7636 - x7641)) + x69*(L*(-p9_b*x11040 - p9_i*x8763 + x11037*x5168 + x11037*x5178 + x11038*x5168 - x11038*x5178 + x11039*x5172 - x11039*x5175 + x11041*x5245 - x11041*x5257 - x1313*x8735 - x1927*x5709 + x2656 - x4023*x8564 + x4023*x8978 + x4507 + x4508 + x5264*x8869 + x5291*x8869 - x5465*x8874 + x5834*x8980 - x6412*x8635 - x6424*x8980 + x8260 - 36*x8586 - 72*x8669 - x8761*x8764 + 2*x8867 - 4*x8875) - x106*(-p8_b*x11040 - p8_i*x8763 + p9_b*x1313*x5679 - p9_b_dot_dt*x11012*x5290 - p9_i_dot*x10944 - 42*x10746 - 21*x10748 - x10752*x1313 - x10755*x11127 - 84*x10758 - x10759*x8582 - x10787*x8594 - 21*x10801 + 21*x10829 - x10851*x8764 + x10962 + x11012*x11152 - x11012*x8613 + 2*x11051 + 2*x11052 + x11053*x5264 + x11053*x5291 + x11054*x5264 + x11054*x5291 + x11056*x5267 + 4*x11058 - x11067*x5476 - x11067*x5506 - x11079*x5543 + x11079*x5545 - 8*x11080 - x11082*x5283 - x11082*x5286 - x11087*x5680 + x11088*x5465 + x11091*x5490 - x11094*x5168 - x11094*x5178 + x11095*x5168 + x11095*x5178 + x11096 + x11097 - x11098*x6708 + x11098*x6711 + x11099*x6708 - x11099*x6711 + x11100*x5172 - x11100*x5175 - x11101*x5172 + x11101*x5175 - x11102*x5716 - x11102*x5862 - x11103*x5811 - x11103*x5813 - x11104*x5168 - x11104*x5178 - x11105*x5245 + x11105*x5257 - x11106*x1858 - x11107*x1858 - x11108*x5476 - x11108*x5506 - x11109*x5432 - x11109*x5435 - x11110*x5432 - x11110*x5435 - x11111*x5276 + x11112*x5476 + x11112*x5506 + x11113*x5476 + x11113*x5506 + x11114*x5432 + x11114*x5435 + x11115*x5432 + x11115*x5435 + x11116*x5168 + x11116*x5178 + x11117*x5168 + x11117*x5178 + x11118 + x11119 + x11120 + x11121*x5516 - x11122 - x11123 - x11124 - x11125 + x11126*x5834 - x11126*x6424 + x11127*x8635 - x11128*x5834 + x11128*x6424 - x11129*x5276 + 3*x11130 + x11131*x5241 + 3*x11132 + 3*x11133 + x11134*x5847 + x11135*x1313 + x11136*x5847 + x11136*x5850 - x11137 - x11138 - x11139 - x11140*x5860 + x11140*x5881 - x11141*x5272 - x11142*x5245 + x11142*x5257 - x11143*x5283 + x11145*x5245 - x11145*x5257 + x11146*x5874 + x11147*x5877 + x11148*x5874 + x11149*x1858 + x11150*x5882 - x11152*x8892 + x11159 - x1268*x8735 - x1881*x5677 + x2672 + x2673 - x2674 - x2676 - x2678 + x2679 + x2680 + x2682 + x2683 + x2684 - x2686 - x2688 + x321*x8818 + x321*x8819 + x3873 - x3901*x5676 - x421*x5285*x8764 - x421*x8763 + x4521 + x4522 + x4523 - x4524 - x4525 - x4526 - x4527 + x4528 + x4529 + x4531 + x4532 + x4533 - x4535 - x4537 + x5264*x8814 - x5279*x8837 + x5291*x8814 - x5339*x8869 - x5359*x8869 - x5543*x8848 + x5545*x8848 + x5671*x8952 + x5678*x8944 + x5680*x8884 - x5682*x8855 + x5688*x8952 - x633*x8570 + 21*x8565 + 42*x8586 + 21*x8591 + x8610*x933 - 21*x8668 + 84*x8669 - x8685*x8761 + x8801 - 4*x8867 + 8*x8875 + 4*x8943) + x123*(-p8_i_dot*x7072 - 108*x10746 - 54*x10748 - x10755*x8310 - 216*x10758 + x10782*x7063 + 18*x10800 - 54*x10801 - x10812*x1313 - x10813*x414 + 18*x10825 + 36*x10826 + 54*x10829 - x10839*x1313 + 72*x10856 - x10898*x8892 + x10951*x8761 + 6*x11051 + 6*x11052 + x11053*x5375 + x11053*x5400 + x11054*x5375 + x11054*x5400 + x11055*x5168 + x11055*x5178 + 12*x11057 + 12*x11058 - x11059*x6708 + x11059*x6711 + x11060*x6708 - x11060*x6711 + x11061*x6708 - x11061*x6711 + x11062*x5172 - x11062*x5175 - x11063*x5172 + x11063*x5175 - x11064*x5172 + x11064*x5175 - x11065*x5168 + x11065*x5178 - x11066*x5172 + x11066*x5175 - x11067*x5264 - x11067*x5291 - x11068*x5671 - x11069*x5168 - x11069*x5178 - x11070*x5672 - x11071*x158 - x11072*x321 - x11073*x321 + x11074*x5834 - x11074*x6424 - x11075*x5834 + x11075*x6424 - x11077*x5189 + x11077*x5198 - x11078*x5698 + x11079*x5399 - x11079*x5404 - 24*x11080 - x11081*x5189 + x11081*x5198 - x11082*x5783 - x11083*x5783 + x11084*x1313 + x11085*x5276 + x11086*x8664 - x11087*x5322 + x11088*x5543 - x11088*x5545 + x11089*x5283 + x11090*x5286 + x11091*x5682 + x11093*x8892 - x1268*x8609 - x1268*x8648 + x1870 + x2660 + x2662 - x2664 - x2666 + x2677*x5279 + x3888 + x4511 + x4512 + x4513 - x4514 - x4515 - x4516 + x4517*x5276 - x4518 - x4519 + x5469 - x623*x8610 + x634*x8763 + x8310*x8635 + 54*x8565 + 38*x8579 + 108*x8586 + 54*x8591 + 38*x8626 + 76*x8629 - 54*x8668 + 216*x8669 + 152*x8694 - x8868 - x8870 - x8872 - x8873 + x8876 + x8877 + x8879 + x8880 - x8881 + x8882 + x8883 + x8885 - x8886 + x8941) - x123*(-x10760*x154 - x10761*x154 + x10769*x154 + x10771*x154 + x10777*x5251 + x10777*x6007 + x10778*x5251 + x10780*x154 + x10783*x5260 + x10813*x1896 + x10821*x1868 + x10844*x1313 - x10859*x5219 - x10859*x5249 - x10861*x5219 - x10861*x5249 - x10863*x5227 - x10863*x5989 - x10866*x5227 - x10866*x5989 - x10879*x5246 + x10879*x5258 + x10879*x6011 + x10898*x8820 + x10899 - x10944*x2685 + 5*x10976 + 5*x10977 + x10984 - 12*x11051 - 12*x11052 - x11053*x5553 - x11053*x5573 - x11054*x5553 - x11054*x5573 - x11056*x5298 - x11056*x5556 + x11067*x5219 + x11067*x5249 + x11072*x154 + x11073*x154 + 48*x11080 + x11082*x5565 + x11083*x5565 + x11087*x5572 + x11088*x5246 - x11088*x5258 - x11088*x6011 - x11091*x5260 - x11093*x8820 + 3*x11096 + 3*x11097 - x11102*x5509 - x11102*x5528 - x11106*x286 - x11107*x286 + x11108*x5219 + x11108*x5249 + x11109*x5227 + x11109*x5989 + x11110*x5227 + x11110*x5989 + x11111*x5559 + x11112*x5716 + x11112*x5862 + x11113*x5716 - 5*x11118 - 5*x11119 - 5*x11120 - 3*x11122 - 3*x11123 - 3*x11124 - 3*x11125 + 7*x11130 + 7*x11132 + 7*x11133 - x11134*x5251 - x11136*x5251 - x11136*x6007 - 3*x11137 - 3*x11138 - 3*x11139 + x11140*x5530 - x11141*x6006 + x11144*x5860 - x11144*x5881 + x11146*x5524 + x11147*x5525 + x11148*x5524 + x11149*x286 + x11150*x5520 + x11159 - x11160*x5298 - x11160*x5556 - x11161*x5509 - x11161*x5528 - x11162*x5512 - x11162*x5514 - x11163*x5512 - x11163*x5514 + x11164*x5168 + x11164*x5178 + x11165*x5168 + x11165*x5178 - x11166*x5245 + x11166*x5257 + x11167*x9234 - x11168*x5245 + x11168*x5257 + x11169*x5245 - x11169*x5257 - x11170*x154 + x1268*x8844 - x154*x602*x8610 + x2572*x8878 + x2717 + x286*x8818 + x286*x8819 - x286*x8853 - x3901*x5517 + x4543 + x5509*x8813 + x5509*x8814 + x5512*x8815 + x5512*x8816 + x5514*x8815 + x5514*x8816 - x5517*x8833 - x5520*x8855 - x5524*x8850 - x5524*x8852 - x5525*x8851 + x5528*x8813 + x5528*x8814 - x5530*x8848 - 7*x8836 - 7*x8838 + x8887) + x168*(p8_b_dot*x8857 - p8_b_dot*x8903 + p9_b_dot*x10890 + x10759*x8892 - x10804*x8865 + x10813*x1921 + x10813*x4539 - x10874*x1313 + x10876*x11180 + x10898*x8916 + x10900 + x10995*x1313 - x10999*x1313 + x11001 - 8*x11051 - 8*x11052 - x11053*x5337 - x11053*x5611 - x11054*x5337 - x11054*x5611 - 16*x11057 - 16*x11058 + x11067*x5339 + x11067*x5359 + x11072*x158 + 32*x11080 + x11082*x5334 + x11083*x5334 + x11087*x5928 - x11088*x5590 + x11088*x5597 - x11088*x5601 - x11091*x5369 - x11093*x8916 - x11102*x5339 - x11102*x5359 - x11106*x158 - x11107*x158 + x11108*x5339 + x11108*x5359 + x11110*x5342 + x11110*x5345 + x11111*x5613 + x11112*x5264 + x11112*x5291 + x11113*x5264 + x11114*x5267 + x11114*x5269 + x11115*x5267 + x11115*x5269 - 4*x11120 + 4*x11133 - x11134*x5362 - x11136*x5362 - x11136*x5593 + x11140*x5590 - x11140*x5597 + x11140*x5601 - x11141*x5537 - x11144*x5543 + x11144*x5545 + x11146*x5362 + x11147*x5365 + x11148*x5362 + x11150*x5369 - x11161*x5339 - x11161*x5359 - x11162*x5342 - x11162*x5345 - x11163*x5342 - x11163*x5345 - x11171*x5168 - x11171*x5178 + x11172*x5168 + x11172*x5178 + x11173*x5615 + x11174*x5615 - x11175*x5245 + x11175*x5257 - x11176*x5276 - x11177*x5279 - x11178*x5279 - x11179*x5276 - x11181*x5283 - x11182*x5283 - x11182*x5286 + x1268*x8898 + x1268*x8908 + x1268*x8912 + x1918 + x2715 + x3922 + x4542 - x602*x8906 + x8866 + x8918 + x8919 + x8920 + x8921 + x8923 + x8924 + x8925 + x8926 - x8927 - x8928 - x8929 - x8930 + x8931 + x8932 + x8933 - x8934 - x8935 - x8936 - x8937 - x8938 - x8939 - x8940 + x8945) + x63*(x10747*x11180 + x10759*x8726 - x10760*x129 - x10761*x129 - x10762*x5376 - x10762*x5401 + x10769*x129 + x10777*x5402 + x10777*x6061 + x10778*x5402 + x10780*x129 + x10783*x5405 + x10783*x5407 + x10813*x1927 - x10861*x5375 - x10861*x5400 - x10866*x5378 - x10866*x6043 - x10879*x5399 + x10879*x5404 + x10899 + x10933*x6056 - x10937*x414 + x10937*x623 + 6*x10976 - x11004 + x11008 + x11009 - x11010 - x11011 - x11013 - x11015 + x11023 + x11024 - x11025 - x11026 + x11027*x1313 - x11032 + x11034*x420 + x11036 - 18*x11051 - 18*x11052 - x11053*x5441 - x11053*x5655 - x11054*x5441 - x11054*x5655 - 36*x11057 - 36*x11058 + x11067*x5375 + x11067*x5400 + x11068*x5376 + x11068*x5401 + x11070*x6032 + x11071*x3943 + x11072*x129 + 72*x11080 + x11082*x5427 + x11083*x5427 + x11087*x5440 + x11088*x5399 - x11088*x5404 - x11091*x5405 - x11091*x5407 + 6*x11096 + 6*x11097 - x11102*x5629 - x11102*x5651 - x11106*x327 - x11107*x327 + x11111*x5657 + x11112*x5375 + x11112*x5400 + x11113*x5375 + x11113*x5400 + x11114*x5378 + x11114*x6043 + x11115*x5378 + x11115*x6043 - 6*x11119 - 6*x11122 - 6*x11123 - 6*x11124 - 6*x11125 + 16*x11130 + 16*x11132 + 16*x11133 - x11134*x5402 - x11136*x5402 - x11136*x6061 - 6*x11137 - 6*x11139 - x11141*x5633 + x11144*x5399 - x11144*x5404 - x11144*x6065 + x11146*x5644 + x11147*x5645 + x11148*x5644 + x11149*x327 + x11150*x5640 + 12*x11153 - 12*x11154 + x11156*x5399 - x11156*x5404 - x11158*x5312 - x11161*x5629 - x11161*x5651 - x11170*x129 + x11173*x5658 + x11174*x5658 - x11183*x5168 - x11183*x5178 - x11184*x5168 - x11184*x5178 - x11185*x5168 - x11185*x5178 - x11186*x5168 - x11186*x5178 + x11187*x5168 + x11187*x5178 + x11188*x5168 + x11188*x5178 + x11189*x5168 + x11189*x5178 - x11190*x5245 + x11190*x5257 - x11191*x8745 - x11191*x8773 - x11192*x5234 - x11193*x5245 + x11193*x5257 + x11194*x5245 - x11194*x5257 - x11195*x6062 - x11196*x6062 + x1268*x8981 + x1930 - x2677*x6056 - x2696 - x2697 + x2698 + x2699 + x2700 + x2702 + x2703 + x2704 + x2705 - x2706 - x2707 - x2709 - x2710 + x327*x8818 + x327*x8819 - x327*x8853 - x3901*x5634 - x3927 + x3931 + x4489 - x4545 - x4546 + x4547 + x4548 + x4549 + x4551 + x4552 + x4553 + x4554 - x4555 - x4556 - x4557 - x4558 + x5298*x8859 + x5553*x8858 + x5556*x8859 + x5573*x8858 + x5629*x8813 + x5629*x8814 - x5633*x8860 - x5634*x8833 - x5640*x8855 - x5644*x8850 - x5644*x8852 - x5645*x8851 - x5648*x8860 + x5651*x8813 + x5651*x8814 - x5653*x8848 - 16*x8836 - 16*x8838 + x8947 + x8954 + x8956 + x8957 + x8958 - x8960 - x8962 + x8974 + x8975 - x8977 - x8979 + x8985 + x8990) + x70*(p9_b*x5192 - p9_b*x5196 - p9_b*x8792 - p9_b_dot*x7441 - p9_b_dt*x5172 + p9_b_dt*x5175 + p9_i*x5203 - p9_i_dot*x8263 - x10657*x913 - x10658*x1827 + x11042*x5476 + x11042*x5506 + x11043*x5432 + x11043*x5435 + x11044*x5432 + x11044*x5435 - x11045*x6708 + x11045*x6711 + x11046*x5172 - x11046*x5175 + x11047*x5189 - x11047*x5198 - x11048*x5151 + x11049*x5245 - x11049*x5257 + x11050*x5205 - x1313*x8745 + x1821*x5285 - x2657*x5241 + x2658 - x3865 + x3899 + x390*x5282 + x3902 + x4510 + x5216*x8780 - x5317*x8850 - x5317*x8852 + x5476*x8952 - x5496*x8850 + x5506*x8952 - x7426*x8664 + x8264 - x8267 - x8269 - x8274 + x8564 + x8818 + x8819 - x8834 - x8835 - x8853 + x8973 - x8976 - x8978)) + x69*(L*(q1_b*x5468 - q1_b*x5730 + q1_i*x5463 - q1_i*x5728 + x0*x5725 + x2720 - x32*x5467 - x32*x5722 - x3675 + x3677 + x38*x5723 - x5276*x5309 + x5291*x5294 + 4*x5300 - x5302*x5465 - 4*x5303 + x5315*x57 + 2*x5327 + 4*x5328 + 4*x5329 - x5331*x57 + 2*x5373 + x5379*x5720 - x5386*x5720 + x5419*x5721 - x5460*x5721 + x5461*x5726 - x5466*x5726 + x5469) - x106*(-L*x5173 + L*x5176 + L*x5177 - L*x5187 - L*x5731 + L*x5732 + L*x5734 - L*x5769 + q1_b*x32*x5679 + q1_b*x5508 - q1_b*x5819 + q1_b*x5827 - q1_b*x5834 - q1_b_dot*x5885 + q1_i*x5211 - q1_i_dot*x5698 + q1_i_dot*x5833 - q2_i*x5728 - x127*x5677 - x131*x5677 + x134*x20 - x1367*x5722 + x174*x5192 - x174*x5196 - x183*x5676 - x1858*x5814 + x1858*x5876 + x2754*x5844 + x2757 + x2802*x5826 - x32*x5820 + x32*x5852 + x321*x5231 + x321*x5233 + x3687*x5516 + x3704 - x49*x5728 + x5168*x5803 - x5168*x5810 - x5172*x5265 + x5175*x5265 + x5178*x5803 - x5178*x5810 + x5184*x5826 - x5189*x5832 + x5194*x5265 + x5198*x5832 + x5217*x5880 + x5221*x5671 + x5221*x5688 + x5223*x5672 + x5223*x5673 + x5226*x5267 + x5226*x5269 - x5235*x5676 + x5241*x5828 + x5245*x5841 + x5245*x5864 - x5245*x5866 + x5245*x5872 - x5252*x5867 - x5252*x5870 - x5257*x5841 - x5257*x5864 + x5257*x5866 - x5257*x5872 - x5261*x5682 - x5261*x5691 + x5264*x5745 + x5264*x5746 + x5267*x5748 + x5269*x5748 - x5272*x5865 - x5276*x5821 - x5283*x5784 - x5286*x5782 - x5286*x5784 - x5286*x5868 + x5290*x5879 + x5291*x5745 + x5291*x5746 - x5294*x5359 - 8*x5300 + 8*x5303 + 4*x5310 + x5313*x5547 - x5315*x5413 + x5323*x5680 - 4*x5327 - 8*x5328 - 8*x5329 + x5331*x5413 + x5333*x5678 + x5373 + x5409 - x5432*x5817 - x5432*x5818 + x5432*x5824 + x5432*x5825 - x5435*x5817 - x5435*x5818 + x5435*x5824 + x5435*x5825 + x5465*x5886 - x5476*x5758 - x5476*x5816 + x5476*x5822 + x5476*x5823 + x5490*x5802 - x5506*x5758 - x5506*x5816 + x5506*x5822 + x5506*x5823 - x5680*x5797 - x5716*x5807 + 2*x5742 + 2*x5744 - x5767 - 8*x5779 + x5804 + x5806 - x5807*x5862 - x5808*x5809 - x5809*x5863 - x5811*x5812 - x5812*x5813 - 3*x5815 + x5831 - x5836 - x5837 - x5838 - x5840 + 3*x5842 + 3*x5843 + x5845*x5846 + x5847*x5848 + x5847*x5849 + x5848*x5850 - x5855 - x5857 - x5858 - x5859 - x5860*x5861 + x5861*x5881 + x5873*x5874 + x5874*x5875 + x5877*x5878 + x5882*x5883 + x5883*x5888 + x5894 + x5900) + x123*(-q1_b*x5718 - q1_i*x4*x5403 + q2_b*x5718 - q2_i*x5713 - x109*x5757 + x129*x5173 - x129*x5176 - x129*x5177 + x129*x5191 - x129*x5199 + x129*x5775 - x129*x5781 + x129*x5795 + x1362*x5722 - x1367*x5755 - x1367*x5786 + x166 + x189 + x195 + x2723 + x2725 - x2726 - x2729 + x2758 - x32*x5756 - x32*x5787 + x32*x5791 - x321*x5769 - x323*x5752 + x323*x5777 + x3678 + x3679 + x3681 - x3684 - x3686 + x3687*x5676 - x3688 + x3690 + x3705 + x5168*x5747 + x5168*x5749 + x5178*x5747 + x5178*x5749 - x5245*x5799 + x5257*x5799 - x5264*x5758 + x5276*x5790 + x5283*x5800 + x5286*x5801 - x5291*x5758 + x5292 - x5293 - x5296 - x5299 - x5301 + x5304 + x5308 + x5311 + x5314 - x5316 + x5319 + x5321 - x5322*x5797 + x5324 - x5325 + x5372 - 6*x5373 + x5375*x5745 + x5375*x5746 - x5379*x5750 + x5379*x5751 + x5386*x5750 - x5386*x5751 + x5399*x5778 + x5400*x5745 + x5400*x5746 + x5403*x5796 - x5404*x5778 - x5410 + x5415 + x5418 - x5420 - x5421 - x5422 - x5426 + x5431 + x5434 - x5436 - x5439 - x5443 + x5469 - x5671*x5759 - x5672*x5760 - x5672*x5761 - x5673*x5760 - x5673*x5761 + x5682*x5802 - x5688*x5759 + x5691*x5802 + x5728*x663 + x5730*x662 - x5739 + 6*x5741 + 6*x5742 + 6*x5744 - 6*x5753 - x5754*x656 - x5762 - x5766 - 2*x5767 - x5770 - x5771 + x5772 + x5773 + 6*x5774 - 24*x5779 - x5782*x5783 - x5783*x5784 - x5788 - x5789 + x5792 + x5793 + x5794*x64 - x5798) - x123*(-x151*x5743 + x154*x5769 - x154*x5942 - x154*x5944 + x154*x5947 + x154*x5949 + x154*x5963 - x154*x5999 - x154*x6008 - x183*x5517 + x2756 - x2759 - x2761 + x2762 + x2763 + x2764*x5230 - x2764*x5914 + x2765 + x2766 + x2767 + x2768 - x2770 - x2773 - x2774 + x2775*x5844 - x2776 + x2788*x5994 + x286*x5231 + x286*x5233 - x286*x5242 - x286*x5256 - x286*x5814 + x286*x5876 - x3687*x6000 + x3703 + x3706*x5754 - x3707 - x3709 + x3710 + x3711 + x3713 + x3715 + x3716 + x3717 - x3719 - x3722 - x3724 - x3725 + x5213*x5921 + x5219*x5758 + x5219*x5816 - x5219*x5932 - x5219*x5934 + x5220*x5509 + x5220*x5528 + x5222*x5509 + x5222*x5528 + x5226*x5512 + x5227*x5817 + x5227*x5818 - x5227*x5936 - x5227*x5990 + 14*x5228 - x5235*x5517 - 7*x5240 - x5243*x6004 + x5243*x6005 - x5245*x5998 + x5246*x5886 - x5246*x5954 + x5249*x5758 + x5249*x5816 - x5249*x5932 - x5249*x5934 - x5250*x5524 - x5251*x5848 - x5251*x5849 + x5251*x5958 + x5251*x5960 - x5252*x5524 - x5254*x5525 + x5257*x5998 - x5258*x5886 + x5258*x5954 - x5260*x5802 + x5260*x5966 - x5261*x5520 - x5262*x5527 + x5290*x6010 - x5298*x5748 - x5298*x5901 + x5312*x5993 + x5317*x6003 + x5326 + x5379*x5995 + x5386*x5995 - x5509*x5807 - x5509*x5904 - x5512*x5906 - x5512*x5988 - x5514*x5906 - x5514*x5988 + x5517*x5846 + x5520*x5883 + x5524*x5873 + x5524*x5875 + x5525*x5878 - x5528*x5807 - x5528*x5904 + x5530*x5861 - x5553*x5745 - x5553*x5746 - x5556*x5748 - x5556*x5901 + x5559*x5821 + x5565*x5782 + x5572*x5797 - x5573*x5745 - x5573*x5746 + x5716*x5822 + x5716*x5823 - 12*x5742 + 48*x5779 + 3*x5804 + 3*x5806 - 7*x5815 + x5817*x5989 + x5818*x5989 + x5823*x5862 + x5824*x5991 + x5824*x5992 + x5825*x5991 + x5825*x5992 - 5*x5831 - 3*x5836 - 3*x5837 - 3*x5838 - 3*x5840 + 7*x5842 + 7*x5843 - x5848*x6007 - 3*x5855 - 3*x5857 - 3*x5858 - 3*x5859 + x5860*x5871 + x5861*x6004 - x5861*x6005 - x5865*x6006 - x5871*x5881 - x5886*x6011 + x5900 + 12*x5922 - x5931*x6012 - x5936*x5989 + x5952*x6002 + x5954*x6011 + x5958*x6007 + x5976 - x5989*x5990 + 5*x6001 + x6027) + x168*(q1_b_dt*x5909 + q1_i_dot*x5908 + x1367*x5353 + x1367*x5927 + x158*x5769 - x158*x5814 + x163 + x186 + x2730 - x2747*x5918 - x2749*x5279 - x2792 - x2793 + x2794*x5230 - x2794*x5914 + x2795 + x2796 + x2799 + x2801 - x2803 - x2805 + x32*x5910 - x32*x5915 - x32*x5924 - x3687*x5916 + x3693 + x3699*x5916 + x3733*x5754 - x3734 - x3735 + x3736 + x3737 + x3739 + x3740 - x3741 - x3742 - x5168*x5902 - x5168*x5903 - x5168*x5905 - x5178*x5902 - x5178*x5903 - x5178*x5905 + x5232*x5907 - x5245*x5912 + x5245*x5923 + x5257*x5912 - x5257*x5923 + x5264*x5822 + x5264*x5823 + x5267*x5824 + x5267*x5825 + x5269*x5824 + x5269*x5825 - x5276*x5839 - x5276*x5917 - x5283*x5925 - x5283*x5926 - x5286*x5925 - x5286*x5926 + x5291*x5822 + x5291*x5823 + x5334*x5782 + x5334*x5784 + x5335*x5921 - x5337*x5745 - x5337*x5746 + x5338 + x5339*x5758 - x5339*x5807 + x5339*x5816 - x5339*x5904 + x5340 + x5341 + x5342*x5817 + x5342*x5818 - x5342*x5906 + x5344 + x5345*x5817 + x5345*x5818 - x5345*x5906 + x5346 + x5347 + x5348 + x5349 + x5350 - x5351 - x5352 - x5354 - x5355 + x5358 + x5359*x5758 - x5359*x5807 + x5359*x5816 - x5359*x5904 + x5360 + x5361 - x5362*x5848 - x5362*x5849 + x5362*x5873 + x5362*x5875 - x5363 - x5364 - x5366 - x5367 - x5368 - x5369*x5802 + x5369*x5883 - x5370 - x5371 - x5537*x5865 - x5543*x5871 + x5545*x5871 + x5590*x5861 - x5593*x5848 + x5593*x5875 - x5597*x5861 + x5601*x5861 - x5601*x5886 - x5611*x5745 - x5611*x5746 + x5613*x5821 + x5674*x5919 - 8*x5742 - 8*x5744 - x5754*x5913 + x5757*x5920 + 32*x5779 + x5797*x5928 - 4*x5815 + 8*x5922 - x5929*x5931 + x5977 + x5987) + x63*(-q1_b_dot*x6063 - q2_b_dot*x109*x5516 + q2_b_dot*x6055 + x129*x5769 - x129*x5942 - x129*x5944 + x129*x5947 + x129*x5963 - x129*x5999 - x129*x6008 - x1362*x5755 - x183*x5634 + x2826*x5230 + x2827 + x327*x5231 + x327*x5233 - x327*x5242 - x327*x5256 - x327*x5814 + x327*x5876 + x3749*x5754 + x3754 - x5168*x6028 - x5168*x6029 - x5168*x6034 + x5168*x6042 - x5178*x6028 - x5178*x6029 - x5178*x6034 + x5178*x6042 + x5220*x5629 + x5220*x5651 + x5222*x5629 + x5222*x5651 + x5226*x5630 + 32*x5228 + x5232*x6044 - x5235*x5634 - x5238*x6049 - 16*x5240 - x5245*x6048 + x5245*x6058 - x5245*x6059 - x5250*x5644 - x5252*x5644 - x5254*x5645 - x5255*x6049 + x5257*x6048 - x5257*x6058 + x5257*x6059 - x5261*x5640 - x5262*x5652 + x5266*x5553 + x5266*x5573 + x5268*x5298 + x5268*x5556 - x5270*x5633 - x5270*x5648 - x5277*x5559 + x5374 + x5375*x5758 + x5375*x5822 + x5375*x5823 - x5375*x5932 - x5375*x5934 + x5376*x5759 + x5378*x5818 + x5378*x5824 + x5378*x5825 + x5379*x6046 + x5380 + x5382 + x5383 + x5384 - x5385 + x5386*x6046 - x5387 + x5388 + x5390 - x5391 - x5392 + x5398 + x5399*x5871 + x5399*x5886 + x5399*x5895 - x5399*x5954 + x5400*x5758 + x5400*x5822 + x5400*x5823 - x5400*x5932 - x5400*x5934 + x5401*x5759 - x5402*x5848 - x5402*x5849 + x5402*x5958 + x5402*x5960 - x5404*x5871 - x5404*x5886 - x5404*x5895 + x5404*x5954 - x5405*x5802 + x5405*x5966 - x5407*x5802 + x5407*x5966 + x5412*x5993 + x5427*x5782 + x5427*x5784 + x5428*x5921 + x5440*x5797 - x5441*x5745 - x5441*x5746 + x5444 - x5629*x5807 - x5629*x5904 - x5630*x5906 - x5630*x5988 - x5631*x5906 - x5631*x5988 - x5633*x5865 + x5634*x5846 + x5640*x5883 + x5644*x5873 + x5644*x5875 + x5645*x5878 - x5646*x5899 - x5651*x5807 - x5651*x5904 + x5653*x5861 - x5655*x5745 - x5655*x5746 + x5657*x5821 - 18*x5742 - 18*x5744 + 72*x5779 + 6*x5804 + 6*x5806 - 16*x5815 + x5818*x6043 + x5824*x6043 + x5825*x6043 - 6*x5831 - 6*x5836 - 6*x5837 - 6*x5838 - 6*x5840 + 16*x5842 + 16*x5843 + x5844*x6057 - x5848*x6061 - 6*x5858 - 6*x5859 - x5871*x6065 + 18*x5922 + x5952*x6056 + x5958*x6061 + x5975 + x5994*x6045 + 6*x6001 - x6030 - x6031*x6032 - x6031*x6033 - x6035 - x6037 - x6038 - x6039 + x6040 + x6041 - x6050 - x6051 + x6053 + x6054 - x6060 - x6062*x6064 + x6067) + x70*(-x169 - x171 + x182 + x184 + x2721 - x32*x5238 + x5165 + x5167 - x5173 + x5176 + x5177 - x5182 + x5183 + x5185 - x5187 - x5191 + x5193 + x5195 - x5197 + x5199 + x5204 - x5206 - x5208 + x5209 + x5212 + x5216*x5737 + x5218 + x5221*x5476 + x5221*x5506 + x5223*x5432 + x5223*x5435 + x5231 + x5233 - x5236 - x5237 - x5242 + x5245*x5736 - x5250*x5317 - x5250*x5496 - x5252*x5317 - x5256 - x5257*x5736 - x5261*x5465 - x5261*x5501 + x5432*x5735 + x5435*x5735 + x5476*x5733 + x5490 + x5492 - x5493 + x5503 + x5506*x5733 - x5731 + x5732 + x5734)) + x69*(L*(q3_b*x5718 - q3_b*x6160 - q3_i*x5713 - x129*x6095 + x129*x6113 + x129*x6114 + x129*x6342 - x129*x6346 - x1440*x6161 + x2934 + x323*x6360 - x4559 + x4560 + x5168*x6357 + x5178*x6357 + x5245*x6359 - x5257*x6359 + x5264*x6290 - x5283*x6296 - x5286*x6296 + x5291*x6290 + x5379*x6358 - x5386*x6358 + x5403*x6135 - x5465*x6293 + 6*x6088 + 2*x6289 - 4*x6294 + x6361) - x106*(-L*x6404 - q3_b*x3768*x5276 - q3_b*x6376 - q3_b*x6457 + q3_b*x6465 - q3_i*x6477 - q4_b*x6160 - q4_b_dot*x5287*x6504 - x0*x6448 + x0*x6464 - x1440*x6132 - x1440*x6458 + x1440*x6485 - x1494*x6161 + x1858*x6095 - x1858*x6113 - x1858*x6114 + x1858*x6119 + x1858*x6385 + x1858*x6405 - x1858*x6411 - x1858*x6452 + x1858*x6501 - x2883*x5677 + x2910*x6184 + x2951 + x2953 - x2954 - x2955 - x2956 + x2957 + x2959 + x2960 + x2961 - x2963 - x2965*x5172 + x2965*x5175 + x2965*x6479 - x2966 + x321*x6252 + x321*x6254 - x3805*x5676 + x4572*x5516 + x4574 + x4575 + x4577 - x4580 + x4581*x6102 - x4582 - x4583 - x4584 + x4585 + x4587 + x4588 + x4589 + x4590*x5845 - x4591 - x4593 - x5168*x6438 + x5168*x6439 + x5168*x6440 - x5168*x6449 - x5178*x6438 + x5178*x6439 + x5178*x6440 - x5178*x6449 + x5189*x6473 - x5189*x6474 - x5198*x6473 + x5198*x6474 - x5245*x6451 - x5245*x6492 - x5245*x6494 + x5245*x6498 + x5257*x6451 + x5257*x6492 + x5257*x6494 - x5257*x6498 + x5264*x6241 + x5264*x6381 + x5264*x6382 - x5272*x6493 - x5282*x6475 - x5283*x6495 - x5286*x6415 - x5286*x6416 - x5286*x6495 - x5286*x6496 + x5291*x6241 + x5291*x6381 + x5291*x6382 + x5317*x6481 - x5339*x6290 - x5359*x6290 - x5379*x6194 + x5379*x6444 + x5386*x6194 - x5386*x6444 - x5432*x6455 - x5432*x6456 + x5432*x6461 + x5432*x6462 - x5435*x6455 - x5435*x6456 + x5435*x6461 + x5435*x6462 + x5465*x6429 - x5476*x6398 - x5476*x6454 + x5476*x6459 + x5476*x6460 + x5490*x6434 - x5506*x6398 - x5506*x6454 + x5506*x6459 + x5506*x6460 - x5543*x6264 - x5543*x6409 + x5545*x6264 + x5545*x6409 + x5671*x6243 + x5672*x6327 + x5672*x6363 + x5673*x6327 + x5673*x6363 + x5679*x6297 + x5680*x6298 - x5680*x6428 - x5682*x6276 + x5688*x6243 - x5691*x6276 - x5716*x6445 - x5716*x6446 - x5811*x6450 - x5813*x6450 + x5847*x6482 + x5847*x6483 + x5850*x6482 - x5862*x6445 - x5862*x6446 + x5874*x6499 + x5874*x6500 - x5877*x6135 + x5877*x6425 + x5877*x6502 + x5882*x6503 + x5888*x6503 - 3*x6088 + x6184*x721 + x6208 - 4*x6289 + 8*x6294 + 2*x6378 + 2*x6380 - x6402 - 8*x6410 - x6431*x692 + 12*x6435 + x6441 + x6443 - 3*x6453 + x6468 - x6469 - x6470 - x6471 - x6472 + 3*x6478 + 3*x6480 - x6487 - x6489 - x6490 - x6491 + x6518 + x6525) + x123*(-q3_b*x6426 - q3_b*x6430 + q3_b*x6437 + q4_i_dot*x5715 - x0*x6394 - x1440*x6395 - x1440*x6417 + x1440*x6421 + x1468*x6161 - x1494*x6101 - x1494*x6126 + x2902 + x2938 + x2940 - x2942 - x2945 - x2971*x5710 - x321*x6404 + x3816 + x4023*x6095 - x4023*x6113 - x4023*x6114 + x4023*x6119 + x4023*x6385 + x4023*x6405 - x4023*x6411 + x4562 + x4563 + x4564 + x4566 + x4567 - x4569 - x4571 + x4572*x5676 - x4573 + x5168*x6383 + x5168*x6384 + x5168*x6388 + x5168*x6391 - x5172*x6390 + x5172*x6397 + x5175*x6390 - x5175*x6397 + x5178*x6383 + x5178*x6384 - x5178*x6388 - x5178*x6391 - x5219*x6127 - x5264*x6398 + x5276*x6420 + x5283*x6432 + x5286*x6432 + x5286*x6433 - x5322*x6428 + x5375*x6381 + x5375*x6382 - x5379*x6337 + x5379*x6386 + x5386*x6337 - x5386*x6386 + x5399*x6409 + x5400*x6381 + x5400*x6382 - x5404*x6409 - x5440*x6116 + x5469 + x5543*x6429 - x5545*x6429 - x5671*x6399 - x5672*x6400 - x5672*x6401 - x5673*x6400 - x5673*x6401 + x5682*x6434 - x5688*x6399 - x5716*x6418 - x5717*x6419 - x5783*x6415 - x5783*x6416 - x5834*x6413 - 10*x6083 - 18*x6088 - x6100*x6389 - x6102*x714 - 10*x6107 - 10*x6108 + 10*x6112 + 18*x6122 + x6127*x6423 - x6129*x6414 - x6135*x6412 - 40*x6137 - 18*x6174 + 10*x6207 + x6288 - x6309 - x6310 - x6311 - x6312 + x6313 + x6314 + x6315 + x6317 - x6318 + x6319 + x6320 + x6321 - x6322 - 6*x6377 + 6*x6378 + 6*x6380 - x6396*x685 - 2*x6402 + 36*x6408 - 24*x6410 + x6412*x6425 + x6413*x6424 + 6*x6422 - 24*x6427 + x6431*x721 + 72*x6435) - x123*(x154*x6404 - x154*x6565 - x154*x6567 + x154*x6570 + x154*x6572 + x154*x6586 - x154*x6617 - x154*x6623 + x286*x6252 + x286*x6254 - x286*x6262 - x286*x6273 - x286*x6452 + x286*x6501 - x2977 + x2978*x6303 - x2979 + x2981 + x2982 + x2983*x6085 - x2983*x6184 + x2984 + x2985 + x2986 + x2987 - x2989 + x2990*x6619 - x2992 - x2993 + x2994*x6479 - x2995 + x3792*x6396 - x3805*x5517 - x4572*x6000 + x4590*x5517 + x4597*x6102 - x4598 - x4599 + x4600 + x4601 + x4603 + x4605 + x4606 + x4607 - x4609 - x4612 - x4614 - x4615 + x5219*x6398 + x5219*x6454 - x5219*x6555 - x5219*x6557 + x5227*x6455 + x5227*x6456 - x5227*x6559 - x5227*x6614 - x5245*x6616 - x5245*x6621 + x5246*x6429 + x5249*x6398 + x5249*x6454 - x5249*x6555 - x5249*x6557 - x5251*x6482 - x5251*x6483 + x5251*x6581 + x5251*x6583 + x5257*x6616 + x5257*x6621 - x5258*x6429 - x5260*x6434 + x5260*x6589 - x5298*x6526 - x5298*x6528 + x5509*x6241 + x5509*x6244 - x5509*x6445 - x5509*x6446 + x5512*x6246 + x5512*x6301 - x5512*x6531 - x5512*x6613 + x5514*x6246 + x5514*x6301 - x5514*x6531 - x5514*x6613 - x5517*x6256 - x5520*x6276 + x5520*x6503 - x5524*x6268 - x5524*x6270 + x5524*x6499 + x5524*x6500 + x5525*x6502 - x5525*x6622 + x5528*x6241 + x5528*x6244 - x5528*x6445 - x5528*x6446 - x5530*x6264 + x5530*x6548 - x5553*x6381 - x5553*x6382 - x5556*x6526 - x5556*x6528 + x5565*x6415 + x5565*x6416 + x5567*x6546 + x5567*x6547 + x5572*x6428 - x5573*x6381 - x5573*x6382 + x5716*x6459 + x5716*x6460 + x5860*x6550 + x5862*x6459 + x5862*x6460 - x5881*x6550 + x5989*x6455 + x5989*x6456 - x5989*x6559 - x5989*x6614 + x5991*x6461 + x5991*x6462 + x5992*x6461 + x5992*x6462 - x6004*x6264 + x6004*x6548 + x6005*x6264 - x6005*x6548 - x6006*x6493 - x6007*x6482 + x6007*x6581 - x6011*x6429 + x6011*x6577 - 7*x6306 + x6316*x6615 + x6323 - 12*x6378 - 12*x6380 + 48*x6410 + 3*x6441 + 3*x6443 - 7*x6453 - 5*x6468 - 3*x6469 - 3*x6470 - 3*x6471 - 3*x6472 + 7*x6478 + 7*x6480 - 3*x6487 - 3*x6489 - 3*x6490 - 3*x6491 + x6525 - x6550*x6625 + x6600 + 5*x6618 + x6639) + x168*(q3_i_dot*x6532 - q4_b_dot*x6239*x6520 + q4_i_dot*x6221 - x1440*x6539 - x1440*x6549 + x1494*x6228 + x1494*x6236 + x158*x6404 - x158*x6452 + x2916 - x3010 - x3011 + x3012*x6085 - x3012*x6184 + x3013 + x3014 + x3015 + x3016 - x3018 - x3020 - x3811*x6554 + x3818*x6396 + x3829 - x4572*x5916 + x4590*x5916 + x4623*x6102 - x4624 - x4625 + x4626 + x4627 + x4628 + x4629 - x4630 - x4631 - x5168*x6527 - x5168*x6529 - x5168*x6530 + x5168*x6533 - x5178*x6527 - x5178*x6529 - x5178*x6530 + x5178*x6533 - x5245*x6537 + x5257*x6537 + x5264*x6459 + x5264*x6460 + x5267*x6461 + x5267*x6462 + x5269*x6461 + x5269*x6462 - x5276*x6540 - x5276*x6543 - x5279*x6541 - x5279*x6542 - x5283*x6551 - x5283*x6552 - x5286*x6552 + x5291*x6459 + x5291*x6460 + x5334*x6415 + x5334*x6416 - x5337*x6381 - x5337*x6382 + x5339*x6398 - x5339*x6445 - x5339*x6446 + x5339*x6454 + x5342*x6455 - x5342*x6531 + x5345*x6455 - x5345*x6531 + x5359*x6398 - x5359*x6445 - x5359*x6446 + x5359*x6454 - x5362*x6482 - x5362*x6483 + x5362*x6499 + x5362*x6500 - x5369*x6434 + x5369*x6503 - x5537*x6493 - x5543*x6550 + x5545*x6550 - x5590*x6429 + x5590*x6548 - x5593*x6482 + x5593*x6500 + x5597*x6429 - x5597*x6548 - x5601*x6429 + x5601*x6548 - x5611*x6381 - x5611*x6382 + x5615*x6534 + x5615*x6535 + x5616*x6546 + x5616*x6547 + x5674*x6544 + x5928*x6428 - x6102*x6538 - x6222*x6379 + x6242 + x6245 + x6247 + x6248 + x6250 + x6251 + x6253 + x6255 - x6258 - x6260 - x6261 - x6263 + x6265 + x6266 + x6267 - x6269 - x6271 - x6272 - x6274 - x6275 - x6277 - x6278 + x6287 + x6299 - 8*x6378 - 8*x6380 + x6396*x6545 + 32*x6410 + x6601 + x6612) + x63*(-q4_b_dot*x6348 + q4_b_dot*x6662 + x129*x6404 - x129*x6565 - x129*x6567 + x129*x6570 + x129*x6586 - x129*x6617 - x129*x6623 - x1468*x6101 + x3042*x6479 + x3044*x6085 + x3045*x6149 + x3046 + x327*x6252 + x327*x6254 - x327*x6262 - x327*x6273 - x327*x6452 + x327*x6501 - x3805*x5634 + x3836*x6396 + x4590*x5634 + x4639*x6102 + x4644 - x5168*x6640 - x5168*x6641 - x5168*x6644 + x5168*x6652 - x5178*x6640 - x5178*x6641 - x5178*x6644 + x5178*x6652 - x5245*x6653 + x5245*x6663 - x5245*x6664 + x5257*x6653 - x5257*x6663 + x5257*x6664 + x5298*x6281 - x5312*x6524 + x5375*x6398 + x5375*x6459 + x5375*x6460 - x5375*x6555 - x5375*x6557 + x5376*x6399 + x5378*x6461 + x5378*x6462 + x5399*x6429 + x5399*x6519 + x5399*x6550 - x5399*x6577 + x5400*x6398 + x5400*x6459 + x5400*x6460 - x5400*x6555 - x5400*x6557 + x5401*x6399 - x5402*x6482 - x5402*x6483 + x5402*x6581 + x5402*x6583 - x5404*x6429 - x5404*x6519 - x5404*x6550 + x5404*x6577 - x5405*x6434 + x5405*x6589 - x5407*x6434 + x5407*x6589 + x5427*x6415 + x5427*x6416 + x5440*x6428 - x5441*x6381 - x5441*x6382 + x5553*x6279 + x5556*x6281 - x5559*x6283 + x5573*x6279 + x5629*x6241 + x5629*x6244 - x5629*x6445 - x5629*x6446 + x5630*x6246 + x5630*x6301 - x5630*x6531 - x5630*x6613 + x5631*x6246 + x5631*x6301 - x5631*x6531 - x5631*x6613 - x5633*x6282 - x5633*x6493 - x5634*x6256 - x5640*x6276 + x5640*x6503 - x5644*x6268 - x5644*x6270 + x5644*x6499 + x5644*x6500 + x5645*x6502 - x5645*x6622 - x5648*x6282 + x5651*x6241 + x5651*x6244 - x5651*x6445 - x5651*x6446 - x5653*x6264 + x5653*x6548 - x5655*x6381 - x5655*x6382 + x5658*x6534 + x5658*x6535 + x5663*x6546 + x5663*x6547 + x6032*x6400 - x6032*x6643 + x6033*x6400 - x6033*x6643 + x6043*x6461 + x6043*x6462 + x6056*x6575 - x6061*x6482 + x6061*x6581 - x6062*x6666 - x6062*x6667 - x6065*x6550 - x6171*x6654 - x6188*x6654 - 16*x6306 + x6326 + x6329 + x6331 + x6332 + x6333 - x6334 - x6335 + x6343 + x6344 - x6345 - x6347 + x6351 + x6356 - 18*x6378 - 18*x6380 + 72*x6410 + 6*x6441 + 6*x6443 - 16*x6453 - 6*x6468 - 6*x6469 - 6*x6470 - 6*x6471 - 6*x6472 + 16*x6478 + 16*x6480 - 6*x6490 - 6*x6491 + x6599 + 6*x6618 - x6642 - x6645 - x6647 - x6648 - x6649 + x6650 + x6651 - x6657 - x6658 + x6659 + x6661 - x6665 + x6669) + x70*(q3_b*x5507 + q3_b_dot*x6376 + q3_i*x5203 + q3_i_dot*x6364 + x0*x6371 + x1404*x6368 - x1440*x6171 + x2936 - x2962*x5172 + x2962*x5175 - x3765 + x3803 + x3806 - x4561 - x5168*x6367 + x5178*x6367 - x5189*x6373 + x5198*x6373 - x5205*x6372 + x5245*x6375 - x5257*x6375 - x5317*x6268 - x5317*x6270 + x5432*x6327 + x5432*x6363 + x5435*x6327 + x5435*x6363 - x5465*x6276 + x5476*x6243 + x5476*x6362 - x5496*x6268 - x5501*x6276 + x5506*x6243 + x5506*x6362 + x5877*x6129 + x5882 + x5888 + x6087 - x6095 + x6113 + x6114 - x6119 - x6157 + x6162 + x6163 + x6252 + x6254 - x6257 - x6259 - x6262 - x6273 + x6342 - x6346 - x6366 + x6369)) + x69*(L*(-q4_b*x6457 + q4_b*x6680 + x0*x6675 - x1494*x6458 - x197*x6676 + x3048 - x4646 + x4647 + x5168*x6670 - x5172*x6672 + x5175*x6672 + x5178*x6670 + x5245*x6673 - x5257*x6673 + x5264*x6603 - x5283*x6609 - x5286*x6609 + x5291*x6603 + x5339*x6678 + x5379*x6536 - x5386*x6536 - x5465*x6606 + x6405*x6674 + x6425*x6679 + 2*x6602 - 4*x6607 + 8*x6671 - x6677*x6678 + x6683) - x106*(-L*x6735 - q4_b*x4570*x5276 - q4_b*x5689 + q4_b*x6430 - q4_b*x6437 - q4_b*x6783 + q4_b*x6790 - q4_i*x6804 + q5_b*x5689 - q5_b*x6457 - q5_b_dot*x5287*x6828 - q5_i*x6477 - q5_i_dot*x6488 - x1494*x6421 - x1494*x6784 + x1494*x6812 - x154*x6385 - x154*x6405 + x154*x6411 - x154*x6656 + x154*x6660 + x154*x6706 - x154*x6717 + x154*x6736 + x154*x6737 - x154*x6800 - x154*x6802 + x154*x6808 - x1545*x6458 - x1858*x6780 + x1858*x6825 + x2990*x5172 - x2990*x5175 + x3067 + x3069 + x3070*x6615 - x3071 - x3073 - x3074 + x3075 + x3077 + x3078 + x3079 - x3081 - x3082*x6700 + x3082*x6806 - x3083 + x321*x6565 + x321*x6567 - x4610*x5676 + x4663*x5516 + x4665 + x4668 + x4670 + x4671*x6396 - x4672 - x4673 - x4674 - x4675 + x4676 + x4678 + x4679 + x4680 + x4681*x5845 - x4682 - x4684 - x5168*x6768 + x5168*x6769 + x5168*x6770 - x5168*x6777 - x5178*x6768 + x5178*x6769 + x5178*x6770 - x5178*x6777 + x5241*x6756 - x5245*x6779 - x5245*x6818 + x5245*x6822 - x5248*x6407 - x5253*x6425 + x5253*x6760 + x5257*x6779 + x5257*x6818 - x5257*x6822 + x5264*x6555 + x5264*x6557 + x5264*x6702 + x5264*x6703 - x5272*x6817 - x5279*x6575 - x5283*x6819 - x5286*x6752 - x5286*x6753 - x5286*x6819 - x5286*x6820 + x5291*x6557 + x5291*x6702 + x5291*x6703 - x5339*x6603 - x5359*x6603 - x5379*x6620 + x5379*x6774 + x5386*x6620 - x5386*x6774 - x5432*x6781 - x5432*x6782 + x5432*x6788 + x5432*x6789 - x5435*x6781 - x5435*x6782 + x5435*x6788 + x5435*x6789 + x5465*x6763 - x5476*x6729 - x5476*x6730 + x5476*x6785 + x5476*x6786 + x5490*x6766 - x5506*x6729 - x5506*x6730 + x5506*x6785 + x5506*x6786 - x5543*x6577 - x5543*x6746 + x5545*x6577 + x5545*x6746 + x5672*x6643 + x5672*x6686 + x5673*x6643 + x5673*x6686 + x5678*x6609 + x5679*x6610 + x5680*x6611 - x5680*x6762 - x5682*x6589 - x5716*x6776 - x5808*x6775 - x5811*x6778 - x5813*x6778 + x5847*x6809 + x5847*x6810 + x5850*x6809 - x5860*x6816 - x5862*x6776 - x5863*x6775 + x5874*x6823 + x5874*x6824 + x5877*x6826 + x5881*x6816 + x5882*x6827 + x5888*x6827 - x6477*x721 + x6518 - 4*x6602 + 8*x6607 + 2*x6699 + 2*x6701 - x6733 + 10*x6740 - 8*x6747 + x6771 + x6773 + x6793 - x6795 - x6796 - x6797 - x6799 + 3*x6805 + 3*x6807 - x6813 - x6814 - x6815 + x6834 + x6841) + x123*(q4_i*x6742 - q5_i*x6742 + q5_i_dot*x6758 - x1494*x6727 - x1494*x6754 + x1494*x6757 - x1545*x6395 - x1545*x6417 - x2971*x6723 + x3008 + x3053 + x3056 - x3058 - x3061 - x321*x6735 + x4621 + x4650 + x4652 + x4654 + x4655 + x4657 - x4660 - x4662 + x4663*x5676 - x4664 + x5168*x6704 + x5168*x6705 + x5168*x6718 + x5172*x6715 + x5172*x6722 + x5172*x6725 - x5175*x6715 - x5175*x6722 - x5175*x6725 + x5178*x6704 + x5178*x6705 - x5178*x6718 - x5264*x6729 - x5264*x6730 + x5276*x6755 + x5279*x6756 + x5283*x6764 + x5286*x6764 + x5286*x6765 - x5291*x6729 - x5291*x6730 - x5322*x6762 - x5339*x6749 + x5375*x6702 + x5375*x6703 + x5399*x6746 + x5400*x6702 + x5400*x6703 - x5404*x6746 + x5469 - x5509*x6418 + x5543*x6763 - x5545*x6763 - x5553*x6678 + x5553*x6745 - x5672*x6731 - x5672*x6732 - x5673*x6731 - x5673*x6732 + x5682*x6766 + x5691*x6766 + x5698*x6759 - x5783*x6752 - x5783*x6753 - 14*x6377 - x6393*x6714 - x6396*x743 - x6405*x6716 - 48*x6408 - x6419*x6748 + 14*x6422 - x6425*x6743 - 56*x6427 - 96*x6435 + x6477*x750 + x6601 - x6626 - x6627 - x6628 - x6629 + x6630 + x6631 + x6632 + x6633 - x6634 + x6635 + x6636 + x6637 - x6638 - 24*x6671 + x6677*x6749 + x6678*x6744 - 8*x6698 + 6*x6699 + 6*x6701 + 24*x6707 - x6708*x6710 + x6708*x6712 - x6708*x6713 + x6710*x6711 - x6711*x6712 + x6711*x6713 - x6716*x6717 + x6716*x6736 + x6716*x6737 - 16*x6721 - 8*x6726 - x6728*x714 - 2*x6733 + 48*x6740 + x6743*x6760 - x6744*x6745 - 24*x6747 - x6750*x6751 - 32*x6761 + 96*x6767) - x123*(x154*x6735 - x154*x6855 - x154*x6879 - x154*x6881 + x154*x6884 + x154*x6886 + x154*x6889 + x154*x6900 + x154*x6929 - x154*x6944 + x286*x6565 + x286*x6567 - x286*x6586 - x286*x6780 + x286*x6825 + x2978*x6932 - x2990*x6935 - x2994*x6619 - x3092 - x3093 + x3094 + x3095 + x3096 + x3097 + x3098 + x3099 - x3101 - x3104 - x3105 - x3106*x6700 + x3106*x6806 - x3107 + x4597*x6728 - x4610*x5517 - x4663*x6000 + x4681*x5517 + x4688*x6396 - x4689 - x4690 + x4691 + x4692 + x4694 + x4696 + x4697 + x4698 - x4700 - x4703 - x4705 - x4706 + x5168*x6930 + x5168*x6931 + x5178*x6930 + x5178*x6931 + x5219*x6729 + x5219*x6730 - x5219*x6868 - x5219*x6871 + x5227*x6781 + x5227*x6782 - x5227*x6873 - x5227*x6928 - x5245*x6934 + x5245*x6937 - x5245*x6939 + x5245*x6941 - x5245*x6942 + x5249*x6729 + x5249*x6730 - x5249*x6868 - x5249*x6871 - x5251*x6809 - x5251*x6810 + x5251*x6895 + x5251*x6897 + x5257*x6934 - x5257*x6937 + x5257*x6939 - x5257*x6941 + x5257*x6942 - x5260*x6766 + x5260*x6903 - x5298*x6842 - x5298*x6844 + x5509*x6555 + x5509*x6557 - x5509*x6776 - x5509*x6846 + x5512*x6559 + x5512*x6614 - x5512*x6848 - x5512*x6927 + x5514*x6559 + x5514*x6614 - x5514*x6848 - x5514*x6927 - x5517*x6569 - x5520*x6589 + x5520*x6827 - x5524*x6581 - x5524*x6583 + x5524*x6823 + x5524*x6824 + x5525*x6826 - x5525*x6943 + x5528*x6555 + x5528*x6557 - x5528*x6776 - x5528*x6846 - x5530*x6577 + x5530*x6816 - x5553*x6702 - x5553*x6703 - x5556*x6842 - x5556*x6844 + x5565*x6752 + x5565*x6753 + x5567*x6861 + x5567*x6862 + x5572*x6762 - x5573*x6702 - x5573*x6703 + x5716*x6785 + x5716*x6786 + x5860*x6821 + x5862*x6785 + x5862*x6786 - x5881*x6821 + x5989*x6781 + x5989*x6782 - x5989*x6873 - x5989*x6928 - x6006*x6817 - x6007*x6809 + x6007*x6895 - x6011*x6763 + x6011*x6891 - x6488*x6833 - 7*x6618 + x6639 - 12*x6699 - 12*x6701 + 48*x6747 + 3*x6771 + 3*x6773 - 5*x6793 - 3*x6795 - 3*x6796 - 3*x6797 - 3*x6799 + 7*x6805 + 7*x6807 - 3*x6813 - 3*x6814 - 3*x6815 + x6841 + x6853*x6933 - x6867*x6945 + x6914 + 5*x6936 + x6960) + x168*(q4_i_dot*x6849 + q5_i_dot*x6532 - x1494*x6856 - x1494*x6863 + x1545*x6539 + x1545*x6549 + x158*x6735 - x158*x6780 - x158*x6855 - x3012*x6700 + x3012*x6806 + x3026 - x3124 - x3125 + x3126 + x3127 + x3128 + x3130 - x3133 - x3134 + x4623*x6728 + x4634 - x4663*x5916 + x4681*x5916 - x4707*x6554 + x4714*x6396 - x4715 - x4716 + x4717 + x4718 + x4719 + x4720 - x4721 - x4722 - x5168*x6843 - x5168*x6845 - x5168*x6847 + x5168*x6851 - x5178*x6843 - x5178*x6845 - x5178*x6847 + x5178*x6851 - x5245*x6854 + x5257*x6854 + x5264*x6785 + x5264*x6786 + x5267*x6788 + x5267*x6789 + x5269*x6788 + x5269*x6789 - x5276*x6857 - x5276*x6860 - x5279*x6858 - x5279*x6859 - x5283*x6864 - x5283*x6865 - x5286*x6864 + x5291*x6786 + x5334*x6752 + x5334*x6753 - x5337*x6702 - x5337*x6703 + x5339*x6729 + x5339*x6730 - x5339*x6776 - x5339*x6846 + x5342*x6781 - x5342*x6848 + x5345*x6781 - x5345*x6848 + x5359*x6729 + x5359*x6730 - x5359*x6776 - x5359*x6846 - x5362*x6809 - x5362*x6810 + x5362*x6823 + x5362*x6824 - x5369*x6766 + x5369*x6827 - x5537*x6817 - x5543*x6821 + x5545*x6821 - x5590*x6763 + x5590*x6816 - x5593*x6809 + x5593*x6824 + x5597*x6763 - x5597*x6816 - x5601*x6763 + x5601*x6816 - x5611*x6702 - x5611*x6703 + x5615*x6852 + x5615*x6853 + x5616*x6861 + x5616*x6862 - x5674*x6756 + x5928*x6762 + x6379*x6850 + x6538*x6728 + x6556 + x6558 + x6560 + x6561 + x6563 + x6564 + x6566 + x6568 - x6571 - x6573 - x6574 - x6576 + x6578 + x6579 + x6580 - x6582 - x6584 - x6585 - x6587 - x6588 - x6590 - x6591 + x6600 + x6612 - 8*x6699 - 8*x6701 + 32*x6747 + x6836*x6866 - x6836*x6867 + x6915 + x6926) + x63*(-q5_b_dot*x6662 + q5_b_dot*x6985 + x129*x6735 - x129*x6855 - x129*x6879 - x129*x6881 + x129*x6884 + x129*x6900 + x129*x6929 - x129*x6944 - x3042*x6619 + x3102*x5395 - x3151*x6700 + x3151*x6806 + x3154 + x327*x6565 + x327*x6567 - x327*x6586 - x327*x6780 + x327*x6825 - x4610*x5634 + x4639*x6728 + x4681*x5634 + x4730*x6396 + x4735 - x5168*x6961 - x5168*x6962 - x5168*x6964 - x5168*x6965 - x5168*x6967 + x5168*x6975 + x5168*x6977 + x5168*x6978 - x5178*x6961 - x5178*x6962 - x5178*x6964 - x5178*x6965 - x5178*x6967 + x5178*x6975 + x5178*x6977 + x5178*x6978 - x5245*x6979 + x5245*x6986 - x5245*x6987 + x5257*x6979 - x5257*x6986 + x5257*x6987 + x5298*x6594 - x5312*x6840 + x5375*x6729 + x5375*x6730 + x5375*x6785 + x5375*x6786 - x5375*x6868 - x5376*x6870 + x5378*x6788 + x5378*x6789 + x5399*x6763 + x5399*x6821 + x5399*x6835 - x5399*x6891 + x5400*x6729 + x5400*x6730 + x5400*x6785 + x5400*x6786 - x5400*x6868 - x5401*x6870 - x5402*x6809 - x5402*x6810 + x5402*x6895 + x5402*x6897 - x5404*x6763 - x5404*x6821 - x5404*x6835 + x5404*x6891 - x5405*x6766 + x5405*x6903 - x5407*x6766 + x5407*x6903 + x5427*x6752 + x5427*x6753 + x5440*x6762 - x5441*x6702 - x5441*x6703 + x5553*x6592 + x5556*x6594 - x5559*x6596 + x5573*x6592 + x5629*x6555 + x5629*x6557 - x5629*x6776 - x5629*x6846 - x5633*x6595 - x5633*x6817 - x5634*x6569 - x5640*x6589 + x5640*x6827 - x5644*x6581 - x5644*x6583 + x5644*x6823 + x5644*x6824 + x5645*x6826 - x5645*x6943 - x5648*x6595 + x5651*x6555 + x5651*x6557 - x5651*x6776 - x5651*x6846 - x5653*x6577 + x5653*x6816 - x5655*x6702 - x5655*x6703 + x5658*x6852 + x5658*x6853 + x5663*x6861 + x5663*x6862 + x6032*x6731 - x6032*x6966 + x6033*x6731 - x6033*x6966 + x6043*x6788 + x6043*x6789 - x6056*x6756 - x6061*x6809 + x6061*x6895 - x6062*x6989 - x6062*x6990 - x6065*x6821 + x6442*x6976 - x6466*x6980 - x6484*x6980 - 16*x6618 + x6642 + x6645 + x6647 + x6648 + x6649 - x6650 - x6651 + x6657 + x6658 - x6659 - x6661 + x6665 + x6669 - 18*x6699 - 18*x6701 + 72*x6747 + 6*x6771 + 6*x6773 - 6*x6793 - 6*x6795 - 6*x6796 - 6*x6797 - 6*x6799 + 16*x6805 + 16*x6807 - 6*x6814 - 6*x6815 + x6913 + 6*x6936 - x6963 - x6968 - x6970 - x6971 - x6972 + x6973 + x6974 - x6981 - x6982 + x6983 + x6984 - x6988 + x6993) + x70*(q4_b*x5192 - q4_b*x5196 + q4_b*x5507 + q4_b_dot*x5649 + q4_b_dot*x6695 - q4_b_dt*x5172 + q4_b_dt*x5175 + q4_b_dt*x5194 + q4_i*x5203 + q4_i_dot*x5389 + q4_i_dot*x6687 + x1457*x6690 - x1494*x6466 - x3012*x5205 - x3021*x5172 + x3021*x5175 - x3050*x5241 + x3051 - x4568 + x4608 + x4611 - x4649 - x5168*x6689 + x5178*x6689 + x5245*x6694 - x5257*x6694 - x5317*x6581 - x5317*x6583 + x5336*x6692 + x5369 + x5432*x6643 + x5432*x6686 + x5435*x6643 + x5435*x6686 - x5465*x6589 + x5476*x6684 + x5476*x6685 - x5496*x6581 - x5501*x6589 + x5506*x6684 + x5506*x6685 + x6385 + x6405 - x6411 - x6436*x6693 + x6565 + x6567 - x6570 - x6572 - x6586 + x6656 - x6660 - x6688 + x6691 + x6697)) + x69*(L*(-q5_b*x6783 - q5_b*x6999 + q5_b*x7000 + q5_b*x7002 - x1545*x6784 + x3156 - x4736 + x4737 + x5168*x6994 + x5178*x6994 - x5224*x6717 + x5224*x6736 + x5224*x6737 + x5245*x6996 - x5257*x6996 + x5264*x6917 - x5283*x6923 - x5286*x6923 + x5291*x6917 + x5379*x6995 - x5386*x6995 - x5465*x6920 - x5891*x6997 + 10*x6707 + 20*x6740 + x6760*x7001 + 2*x6916 - 4*x6921 + x7006) - x106*(-L*x7051 - q5_b*x4661*x5276 - q5_b*x7098 + q5_b*x7105 - q5_b*x7133 - q5_i*x7118 - q5_i_dot*x7130 - q6_b*x6783 + q6_b*x7133 - q6_b_dot*x5287*x7146 - q6_i*x6804 - x1545*x6757 - x1545*x7099 + x1545*x7127 - x1598*x6784 - x1858*x7093 + x1858*x7143 - x286*x6706 + x286*x6717 - x286*x6736 - x286*x6737 + x286*x6800 + x286*x7027 + x286*x7052 - x286*x7113 - x3102*x5677 + x3131*x6806 + x3173 + x3175 - x3176 - x3177 - x3178 + x3179 + x3181 + x3182 + x3183 - x3185 - x3188 + x321*x6879 + x321*x6881 - x3216*x5172 + x3216*x5175 - x4701*x5676 + x4751*x5516 + x4753 + x4756 + x4758 + x4759*x6728 - x4760 - x4761 - x4762 - x4763 + x4764 + x4766 + x4767 + x4768 + x4769*x5845 - x4770 - x4772 - x5168*x7081 + x5168*x7082 + x5168*x7083 - x5168*x7090 - x5178*x7081 + x5178*x7082 + x5178*x7083 - x5178*x7090 + x5189*x7115 - x5189*x7116 - x5198*x7115 + x5198*x7116 - x5245*x7092 - x5245*x7136 + x5245*x7140 + x5257*x7092 + x5257*x7136 - x5257*x7140 + x5264*x6868 + x5264*x7023 + x5264*x7024 - x5272*x7135 - x5283*x7137 - x5286*x7066 - x5286*x7067 - x5286*x7137 - x5286*x7138 + x5291*x6868 + x5291*x7023 + x5291*x7024 + x5317*x7123 - x5339*x6917 - x5359*x6917 - x5379*x6938 + x5379*x7087 + x5386*x6938 - x5386*x7087 - x5432*x7096 - x5432*x7097 + x5432*x7103 + x5432*x7104 - x5435*x7096 - x5435*x7097 + x5435*x7103 + x5435*x7104 + x5465*x7076 - x5476*x7045 - x5476*x7095 + x5476*x7100 + x5476*x7101 + x5490*x7079 - x5506*x7045 - x5506*x7095 + x5506*x7100 + x5506*x7101 - x5525*x6760 + x5525*x7073 - x5527*x6739 + x5527*x7054 - x5543*x6891 - x5543*x7060 + x5545*x6891 + x5545*x7060 + x5671*x6870 + x5672*x6966 + x5672*x7008 + x5673*x6966 + x5673*x7008 + x5679*x6924 + x5680*x6925 - x5680*x7075 - x5682*x6903 + x5688*x6870 - x5691*x6903 - x5716*x7088 - x5716*x7089 - x5811*x7091 - x5813*x7091 + x5847*x7124 + x5847*x7125 + x5850*x7124 - x5860*x7134 - x5862*x7088 - x5862*x7089 + x5874*x7141 + x5874*x7142 + x5877*x7144 + x5881*x7134 + x5882*x7145 + x5888*x7145 - x6804*x750 + x6806*x779 + x6834 - 4*x6916 + 8*x6921 + 2*x7020 + 2*x7022 - x7049 - 8*x7061 + x7084 + x7086 - 3*x7094 + x7108 - x7109 - x7110 - x7111 - x7112 + 3*x7119 + x7120*x7121 + 3*x7122 - x7129 - x7131 - x7132 + x7148 + x7153) + x123*(q5_i*x7056 + q5_i_dot*x7072 + 30*q6_b*x6424 - q6_i*x7056 - x1545*x7043 - x1545*x7068 + x1545*x7070 + x1572*x6784 - x1598*x6727 - x1598*x6754 + x3122 + x3160 + x3162 - x3164 - x3167 - x321*x7051 + x4712 + x4739 + x4740 + x4742 + x4743 + x4745 - x4748 - x4750 + x4751*x5676 - x4752 + x5168*x7025 + x5168*x7026 + x5168*x7033 + x5168*x7036 - x5172*x7035 + x5172*x7040 + x5172*x7041 + x5175*x7035 - x5175*x7040 - x5175*x7041 + x5178*x7025 + x5178*x7026 - x5178*x7033 - x5178*x7036 + x5189*x7062 - x5198*x7062 - x5219*x7064 - x5264*x7045 + x5276*x7069 + x5283*x7077 + x5286*x7077 + x5286*x7078 - x5291*x7045 - x5322*x7075 + x5375*x7023 + x5375*x7024 + x5399*x7060 + x5400*x7023 + x5400*x7024 - x5404*x7060 + x5469 + x5543*x7076 - x5545*x7076 - x5671*x7046 - x5672*x7047 - x5672*x7048 - x5673*x7047 - x5673*x7048 + x5682*x7079 - x5688*x7046 + x5691*x7079 + x5698*x7071 - x5783*x7066 - x5783*x7067 + x5834*x7057 - x6414*x7065 + x6423*x7064 - x6424*x7057 - 18*x6698 - 30*x6707 + x6717*x7034 - 36*x6721 - 18*x6726 - x6728*x772 - x6736*x7034 - x6737*x7034 - 60*x6740 - x6751*x7063 - x6760*x7058 - 72*x6761 - 120*x6767 + x6804*x779 + x6915 - x6946 - x6947 - x6948 - x6949 + x6950 + x6951 + x6952 + x6954 - x6955 + x6956 + x6957 + x6958 - x6959 - 10*x7019 + 6*x7020 + 6*x7022 + 30*x7028 - x7029*x7030 + x7029*x7031 + x7030*x7032 - x7031*x7032 + x7034*x7052 - 20*x7039 - 10*x7042 - x7044*x743 - 2*x7049 + 60*x7055 + x7058*x7073 - 30*x7059 - 24*x7061 - 40*x7074 + 120*x7080) - x123*(x154*x7051 - x154*x7189 - x154*x7191 + x154*x7194 + x154*x7196 + x154*x7210 - x154*x7243 - x154*x7250 + x286*x6879 + x286*x6881 - x286*x6889 - x286*x6900 - x286*x7093 + x286*x7143 - x3200 + x3201*x6932 - x3202 + x3203 + x3204 + x3205*x6700 - x3205*x6806 + x3206 + x3207 + x3208 + x3209 - x3211 - x3214 - x3215 + x3216*x6935 - x3217 + x4688*x7044 - x4701*x5517 - x4751*x6000 + x4769*x5517 + x4776*x6728 - x4777 - x4778 + x4779 + x4780 + x4782 + x4784 + x4785 + x4786 - x4788 - x4791 - x4793 - x4794 + x5168*x7238 + x5168*x7239 + x5178*x7238 + x5178*x7239 + x5219*x7045 + x5219*x7095 - x5219*x7179 - x5219*x7181 + x5227*x7096 + x5227*x7097 - x5227*x7183 - x5227*x7237 - x5245*x7242 + x5245*x7245 - x5245*x7246 + x5245*x7247 + x5245*x7249 - x5246*x7201 + x5249*x7045 + x5249*x7095 - x5249*x7179 - x5249*x7181 - x5251*x7124 - x5251*x7125 + x5251*x7205 + x5251*x7207 + x5257*x7242 - x5257*x7245 + x5257*x7246 - x5257*x7247 - x5257*x7249 + x5258*x7201 - x5260*x7079 + x5260*x7213 - x5298*x7154 - x5298*x7156 + x5509*x6868 + x5509*x6871 - x5509*x7088 - x5509*x7089 + x5512*x6873 + x5512*x6928 - x5512*x7159 - x5512*x7236 + x5514*x6873 + x5514*x6928 - x5514*x7159 - x5514*x7236 - x5517*x6883 - x5520*x6903 + x5520*x7145 - x5524*x6895 - x5524*x6897 + x5524*x7141 + x5524*x7142 + x5525*x7144 - x5525*x7248 + x5528*x6868 + x5528*x6871 - x5528*x7088 - x5528*x7089 - x5530*x6891 + x5530*x7134 - x5553*x7023 - x5553*x7024 - x5556*x7154 - x5556*x7156 + x5565*x7066 + x5565*x7067 + x5567*x7172 + x5567*x7173 + x5572*x7075 - x5573*x7023 - x5573*x7024 + x5716*x7100 + x5716*x7101 + x5862*x7100 + x5862*x7101 + x5989*x7096 + x5989*x7097 - x5989*x7183 - x5989*x7237 + x6002*x7199 - x6006*x7135 - x6007*x7124 + x6007*x7205 - x6011*x7076 + x6011*x7201 - x6625*x7139 - x6833*x7130 - 7*x6936 + x6953*x7240 + x6960 - 12*x7020 - 12*x7022 + 48*x7061 + 3*x7084 + 3*x7086 - 7*x7094 - 5*x7108 - 3*x7109 - 3*x7110 - 3*x7111 - 3*x7112 + 7*x7119 + 7*x7122 - 3*x7129 - 3*x7131 - 3*x7132 + x7153 + x7223 + 5*x7244 + x7264) + x168*(q5_b_dot*x7177 + q5_i_dot*x7160 - q6_b_dot*x6239*x6912 + q6_i_dot*x6849 - x1545*x7166 - x1545*x7174 + x158*x7051 - x158*x7093 + x1598*x6856 + x1598*x6863 + x3137 - x3232 - x3233 + x3234*x6700 - x3234*x6806 + x3235 + x3236 + x3238 + x3239 - x3240 - x3242 + x4714*x7044 + x4725 - x4751*x5916 + x4769*x5916 + x4802*x6728 - x4803 - x4804 + x4805 + x4806 + x4807 + x4808 - x4809 - x4810 - x5168*x7155 - x5168*x7157 - x5168*x7158 + x5168*x7161 - x5178*x7155 - x5178*x7157 - x5178*x7158 + x5178*x7161 - x5245*x7164 + x5257*x7164 + x5264*x7100 + x5264*x7101 + x5267*x7103 + x5267*x7104 + x5269*x7103 + x5269*x7104 - x5276*x7167 - x5276*x7170 - x5279*x7168 - x5279*x7169 - x5283*x7175 - x5283*x7176 - x5286*x7175 - x5286*x7176 + x5334*x7066 + x5334*x7067 - x5337*x7023 - x5337*x7024 + x5339*x7045 - x5339*x7088 - x5339*x7089 + x5339*x7095 + x5342*x7096 - x5342*x7159 + x5345*x7096 - x5345*x7159 + x5359*x7045 - x5359*x7088 - x5359*x7089 + x5359*x7095 - x5362*x7124 - x5362*x7125 + x5362*x7141 + x5362*x7142 - x5369*x7079 + x5369*x7145 - x5537*x7135 - x5543*x7139 + x5545*x7139 - x5590*x7076 + x5590*x7134 - x5593*x7124 + x5593*x7142 + x5597*x7076 - x5597*x7134 - x5601*x7076 + x5601*x7134 - x5611*x7023 - x5611*x7024 + x5615*x7162 + x5615*x7163 + x5616*x7172 + x5616*x7173 + x5674*x7120 + x5928*x7075 - x6728*x7165 - x6850*x7021 + x6866*x7178 + x6869 + x6872 + x6874 + x6875 + x6877 + x6878 + x6880 + x6882 - x6885 - x6887 - x6888 - x6890 + x6892 + x6893 + x6894 - x6896 - x6898 - x6899 - x6901 - x6902 - x6904 - x6905 + x6914 + x6926 - 8*x7020 - 8*x7022 + x7044*x7171 + 32*x7061 + x7224 + x7235) + x63*(-q6_b_dot*x6985 + q6_b_dot*x7291 + x129*x7051 - x129*x7189 - x129*x7191 + x129*x7194 + x129*x7210 - x129*x7243 - x129*x7250 - x1572*x6727 + x3261*x6700 + x3262*x6772 + x3263 + x327*x6879 + x327*x6881 - x327*x6889 - x327*x6900 - x327*x7093 + x327*x7143 - x4701*x5634 + x4730*x7044 + x4769*x5634 + x4818*x6728 + x4823 - x5168*x7265 - x5168*x7266 - x5168*x7268 - x5168*x7269 - x5168*x7271 + x5168*x7279 + x5168*x7280 + x5168*x7281 - x5178*x7265 - x5178*x7266 - x5178*x7268 - x5178*x7269 - x5178*x7271 + x5178*x7279 + x5178*x7280 + x5178*x7281 - x5245*x7282 + x5245*x7292 - x5245*x7293 + x5257*x7282 - x5257*x7292 + x5257*x7293 + x5298*x6907 - x5312*x7152 + x5375*x7045 + x5375*x7100 + x5375*x7101 - x5375*x7179 - x5375*x7181 + x5376*x7046 + x5378*x7103 + x5378*x7104 + x5399*x7076 + x5399*x7139 + x5399*x7149 - x5399*x7201 + x5400*x7045 + x5400*x7100 + x5400*x7101 - x5400*x7179 - x5400*x7181 + x5401*x7046 - x5402*x7124 - x5402*x7125 + x5402*x7205 + x5402*x7207 - x5404*x7076 - x5404*x7139 - x5404*x7149 + x5404*x7201 - x5405*x7079 + x5405*x7213 - x5407*x7079 + x5407*x7213 + x5427*x7066 + x5427*x7067 + x5440*x7075 - x5441*x7023 - x5441*x7024 + x5553*x6906 + x5556*x6907 - x5559*x6909 + x5573*x6906 + x5629*x6868 + x5629*x6871 - x5629*x7088 - x5629*x7089 - x5633*x6908 - x5633*x7135 - x5634*x6883 - x5640*x6903 + x5640*x7145 - x5644*x6895 - x5644*x6897 + x5644*x7141 + x5644*x7142 + x5645*x7144 - x5645*x7248 - x5648*x6908 + x5651*x6868 + x5651*x6871 - x5651*x7088 - x5651*x7089 - x5653*x6891 + x5653*x7134 - x5655*x7023 - x5655*x7024 + x5658*x7162 + x5658*x7163 + x5663*x7172 + x5663*x7173 + x6032*x7047 - x6032*x7270 + x6033*x7047 - x6033*x7270 + x6043*x7103 + x6043*x7104 + x6056*x7199 - x6061*x7124 + x6061*x7205 - x6062*x7295 - x6062*x7296 - x6065*x7139 + x6339*x7120 - x6791*x7283 - x6811*x7283 - 16*x6936 + x6963 + x6968 + x6970 + x6971 + x6972 - x6973 - x6974 + x6981 + x6982 - x6983 - x6984 + x6988 + x6993 - 18*x7020 - 18*x7022 + 72*x7061 + 6*x7084 + 6*x7086 - 16*x7094 - 6*x7108 - 6*x7109 - 6*x7110 - 6*x7111 - 6*x7112 + 16*x7119 + 16*x7122 - 6*x7131 - 6*x7132 + x7222 + 6*x7244 - x7267 - x7272 - x7274 - x7275 - x7276 + x7277 + x7278 - x7286 - x7287 + x7288 + x7290 - x7294 + x7299) + x70*(q5_b*x5192 - q5_b*x5196 + q5_b*x5507 + q5_b_dot*x5689 + q5_b_dt*x5194 + q5_i*x5203 + q5_i_dot*x7009 + x1509*x7012 - x1545*x6791 - x3100*x5172 + x3100*x5175 + x3158 - x4658 + x4699 + x4702 - x4738 - x5168*x6940 + x5178*x6940 - x5189*x7016 + x5198*x7016 - x5205*x7015 + x5245*x7017 + x5248*x7014 + x5253*x6751 - x5257*x7017 + x5260 - x5317*x6895 - x5317*x6897 + x5432*x6966 + x5432*x7008 + x5435*x6966 + x5435*x7008 - x5465*x6903 + x5476*x6870 + x5476*x7007 - x5496*x6895 - x5501*x6903 + x5506*x6870 + x5506*x7007 + x6706 - x6717 + x6736 + x6737 - x6800 - x6802 + x6808 + x6879 + x6881 - x6884 - x6886 - x6889 - x6900 - x7011 + x7013 + x7018)) + x69*(L*(-q6_b*x7098 - x1598*x7099 + x3265 + x3943*x7027 + x3943*x7052 - x3943*x7113 - x4824 + x4825 + x5168*x7300 - x5172*x7301 + x5175*x7301 + x5178*x7300 + x5245*x7302 - x5257*x7302 + x5264*x7226 - x5283*x7232 - x5286*x7232 + x5291*x7226 + x5375*x7303 + x5379*x7241 - x5386*x7241 - x5465*x7229 + x6120*x7073 + 24*x7055 - 12*x7059 + 48*x7080 + 2*x7225 - 4*x7230 + x7305) - x106*(-L*x7351 - q6_b*x4749*x5276 - q6_b*x7404 + q6_b*x7412 - q6_b*x7441 - q6_i*x7429 - q7_b*x7098 + q7_b*x7441 - q7_b_dot*x5287*x7455 - q7_i*x7118 - x1598*x7070 - x1598*x7405 + x1598*x7436 - x1649*x7099 - x1858*x7401 + x1858*x7452 + x321*x7189 + x321*x7191 - x323*x7394 + x323*x7411 + x3284 + x3286 + x3287*x7240 - x3288 - x3290 - x3291 + x3292 + x3294 + x3295 + x3296 - x3298 - x3299*x7320 + x3299*x7431 - x3300 - x4046*x7027 - x4046*x7052 + x4046*x7113 + x4046*x7326 - x4046*x7334 + x4046*x7352 + x4046*x7353 - x4046*x7423 - x4789*x5676 + x4839*x5516 + x4841 + x4844 + x4846 + x4847*x7044 - x4848 - x4849 - x4850 - x4851 + x4852 + x4854 + x4855 + x4856 + x4857*x5845 - x4858 - x4860 - x5168*x7386 + x5168*x7387 + x5168*x7388 - x5168*x7398 + x5172*x7395 - x5175*x7395 - x5178*x7386 + x5178*x7387 + x5178*x7388 - x5178*x7398 + x5189*x7425 - x5189*x7427 - x5198*x7425 + x5198*x7427 - x5245*x7400 - x5245*x7445 + x5245*x7449 + x5257*x7400 + x5257*x7445 - x5257*x7449 + x5264*x7179 + x5264*x7181 + x5264*x7322 + x5264*x7323 - x5272*x7444 - x5279*x7199 - x5283*x7446 - x5286*x7369 - x5286*x7370 - x5286*x7446 - x5286*x7447 - x5290*x7443 + x5291*x7179 + x5291*x7181 + x5291*x7322 + x5291*x7323 - x5339*x7226 - x5359*x7226 - x5432*x7402 - x5432*x7403 + x5432*x7409 + x5432*x7410 - x5435*x7402 - x5435*x7403 + x5435*x7409 + x5435*x7410 + x5465*x7381 - x5476*x7345 - x5476*x7346 + x5476*x7406 + x5476*x7407 + x5490*x7384 - x5506*x7345 - x5506*x7346 + x5506*x7406 + x5506*x7407 - x5543*x7201 - x5543*x7362 + x5545*x7201 + x5545*x7362 + x5672*x7270 + x5672*x7308 + x5673*x7270 + x5673*x7308 + x5678*x7232 + x5679*x7233 + x5680*x7234 - x5680*x7380 - x5682*x7213 - x5691*x7213 - x5716*x7397 - x5808*x7396 - x5811*x7399 - x5813*x7399 + x5847*x7433 + x5847*x7434 + x5850*x7433 - x5860*x7442 - x5863*x7396 + x5874*x7450 + x5874*x7451 + x5877*x7453 + x5881*x7442 + x5882*x7454 + x6239*x7456 - x6708*x7392 + x6708*x7393 + x6711*x7392 - x6711*x7393 - x7073*x7426 - x7118*x779 + x7148 - 4*x7225 + 8*x7230 + 2*x7319 + 2*x7321 - x7349 - 8*x7363 + x7378*x7426 + x7389 + x7391 + x7413 + x7416 - x7418 - x7419 - x7420 - x7422 + 3*x7430 + 3*x7432 - x7437 - x7438 - x7439 - x7440 + x7462 + x7470) + x123*(q6_i*x7358 - q7_i*x7358 + q7_i_dot*x7375 - x1598*x7343 - x1598*x7371 + x1598*x7374 - x1649*x7043 - x1649*x7068 - x321*x7351 + x3230 + x3270 + x3273 - x3275 - x3278 + x4800 + x4827 + x4828 + x4830 + x4831 + x4833 - x4836 - x4838 + x4839*x5676 - x4840 + x5168*x7324 + x5168*x7325 + x5168*x7335 + x5172*x7332 + x5172*x7339 + x5172*x7341 - x5175*x7332 - x5175*x7339 - x5175*x7341 + x5178*x7324 + x5178*x7325 - x5178*x7335 + x5189*x7364 + x5189*x7376 - x5198*x7364 - x5264*x7345 - x5264*x7346 + x5276*x7372 + x5279*x7373 + x5283*x7382 + x5286*x7382 + x5286*x7383 - x5291*x7345 - x5291*x7346 - x5322*x7380 + x5375*x7322 + x5375*x7323 - x5375*x7366 + x5399*x7362 + x5400*x7322 + x5400*x7323 - x5404*x7362 + x5469 + x5543*x7381 - x5545*x7381 - x5655*x7303 + x5655*x7361 - x5672*x7347 - x5672*x7348 - x5673*x7347 - x5673*x7348 + x5682*x7384 + x5691*x7384 + x5698*x7377 - x5783*x7369 - x5783*x7370 - x6708*x7331 + x6711*x7331 - 22*x7019 - 36*x7028 - x7031*x7328 + x7031*x7330 - 44*x7039 - 22*x7042 - x7044*x801 - x7052*x7333 - 72*x7055 - x7065*x7365 - x7073*x7359 - 88*x7074 - 144*x7080 + x7118*x808 + x7224 - x7251 - x7252 - x7253 - x7254 + x7255 + x7256 + x7257 + x7258 - x7259 + x7260 + x7261 + x7262 - x7263 + x7303*x7360 - 12*x7318 + 6*x7319 + 6*x7321 + 36*x7327 + x7328*x7329 - x7329*x7330 - x7333*x7334 + x7333*x7352 + x7333*x7353 - 24*x7338 - 12*x7342 - x7344*x772 - 2*x7349 + 72*x7356 + x7359*x7378 - x7360*x7361 - 24*x7363 - x7367*x7368 - 48*x7379 + 144*x7385) - x123*(x154*x7351 - x154*x7484 - x154*x7508 - x154*x7510 + x154*x7513 + x154*x7515 + x154*x7518 + x154*x7529 + x154*x7558 - x154*x7569 + x1598*x7565 + x286*x7189 + x286*x7191 - x286*x7210 - x286*x7401 + x286*x7452 + x3201*x7561 - x3310 - x3311 + x3312 + x3313 + x3314 + x3315 + x3316 + x3317 - x3319 - x3322 - x3323 - x3324*x7320 + x3324*x7431 - x3325 + x4776*x7344 - x4789*x5517 - x4839*x6000 + x4857*x5517 + x4864*x7044 - x4865 - x4866 + x4867 + x4868 + x4870 + x4872 + x4873 + x4874 - x4876 - x4879 - x4881 - x4882 + x5168*x7559 + x5168*x7560 + x5178*x7559 + x5178*x7560 + x5219*x7345 + x5219*x7346 - x5219*x7497 - x5219*x7500 + x5227*x7402 + x5227*x7403 - x5227*x7502 - x5227*x7557 - x5241*x7563 - x5245*x7562 + x5245*x7566 - x5245*x7567 + x5246*x7381 - x5246*x7520 + x5249*x7345 + x5249*x7346 - x5249*x7497 - x5249*x7500 - x5251*x7433 - x5251*x7434 + x5251*x7524 + x5251*x7526 + x5257*x7562 - x5257*x7566 + x5257*x7567 - x5258*x7381 + x5258*x7520 - x5260*x7384 + x5260*x7532 - x5298*x7471 - x5298*x7473 + x5509*x7179 + x5509*x7181 - x5509*x7397 - x5509*x7475 + x5512*x7183 + x5512*x7237 - x5512*x7477 - x5512*x7556 + x5514*x7183 + x5514*x7237 - x5514*x7477 - x5514*x7556 - x5517*x7193 - x5520*x7213 + x5520*x7454 - x5524*x7205 - x5524*x7207 + x5524*x7450 + x5524*x7451 + x5525*x7453 - x5525*x7568 + x5528*x7179 + x5528*x7181 - x5528*x7397 - x5528*x7475 - x5530*x7201 + x5530*x7442 - x5553*x7322 - x5553*x7323 - x5556*x7471 - x5556*x7473 + x5565*x7369 + x5565*x7370 + x5567*x7490 + x5572*x7380 - x5573*x7322 - x5573*x7323 + x5716*x7406 + x5716*x7407 + x5860*x7448 + x5862*x7406 + x5862*x7407 - x5881*x7448 + x5989*x7402 + x5989*x7403 - x5989*x7502 - x5989*x7557 - x6006*x7444 - x6007*x7433 + x6007*x7524 - x6011*x7381 + x6011*x7520 - x6625*x7448 + x6933*x7482 - 7*x7244 + x7264 - 12*x7319 - 12*x7321 + 48*x7363 + 3*x7389 + 3*x7391 - 5*x7413 - 5*x7416 - 3*x7418 - 3*x7419 - 3*x7420 - 3*x7422 + 7*x7430 + 7*x7432 - 3*x7437 - 3*x7438 - 3*x7439 - 3*x7440 + x7470 + x7543 + 5*x7564 + x7584) + x168*(q6_i_dot*x7478 - q7_b_dot*x6239*x7178 + q7_i_dot*x7160 + x158*x7351 - x158*x7401 - x158*x7484 - x1598*x7485 - x1598*x7492 + x1649*x7166 + x1649*x7174 - x3234*x7320 + x3234*x7431 + x3245 + x3302*x7496 - x3341 - x3342 + x3343 + x3344 + x3345 + x3346 - x3349 - x3350 + x4802*x7344 + x4813 - x4839*x5916 + x4857*x5916 + x4890*x7044 - x4891 - x4892 + x4893 + x4894 + x4895 + x4896 - x4897 - x4898 - x5168*x7472 - x5168*x7474 - x5168*x7476 + x5168*x7480 - x5178*x7472 - x5178*x7474 - x5178*x7476 + x5178*x7480 - x5245*x7483 + x5257*x7483 + x5264*x7406 + x5264*x7407 + x5267*x7409 + x5267*x7410 + x5269*x7409 + x5269*x7410 - x5276*x7486 - x5276*x7489 - x5279*x7487 - x5279*x7488 - x5283*x7493 - x5283*x7494 - x5286*x7493 - x5286*x7494 + x5334*x7369 + x5334*x7370 - x5337*x7322 - x5337*x7323 + x5339*x7345 + x5339*x7346 - x5339*x7397 - x5339*x7475 + x5342*x7402 - x5342*x7477 + x5345*x7402 - x5345*x7477 + x5359*x7345 + x5359*x7346 - x5359*x7397 - x5359*x7475 - x5362*x7433 - x5362*x7434 + x5362*x7450 + x5362*x7451 - x5369*x7384 + x5369*x7454 - x5537*x7444 - x5543*x7448 + x5545*x7448 - x5590*x7381 + x5590*x7442 - x5593*x7433 + x5593*x7451 + x5597*x7381 - x5597*x7442 - x5601*x7381 + x5601*x7442 - x5611*x7322 - x5611*x7323 + x5615*x7481 + x5615*x7482 + x5616*x7490 + x5616*x7491 - x5674*x7373 + x5928*x7380 + x7021*x7479 + x7165*x7344 + x7178*x7495 + x7180 + x7182 + x7184 + x7185 + x7187 + x7188 + x7190 + x7192 - x7195 - x7197 - x7198 - x7200 + x7202 + x7203 + x7204 - x7206 - x7208 - x7209 - x7211 - x7212 - x7214 - x7215 + x7223 + x7235 - 8*x7319 - 8*x7321 + 32*x7363 + x7544 + x7555) + x63*(-q7_b_dot*x7291 + q7_b_dot*x7611 + x129*x7351 - x129*x7484 - x129*x7508 - x129*x7510 + x129*x7513 + x129*x7529 + x129*x7558 - x129*x7569 + x327*x7189 + x327*x7191 - x327*x7210 - x327*x7401 + x327*x7452 + x3320*x5395 - x3367*x7320 + x3367*x7431 + x3369 - x4789*x5634 + x4818*x7344 + x4857*x5634 + x4906*x7044 + x4911 - x5168*x7585 - x5168*x7586 - x5168*x7588 - x5168*x7589 - x5168*x7591 + x5168*x7599 + x5168*x7600 + x5168*x7601 - x5178*x7585 - x5178*x7586 - x5178*x7588 - x5178*x7589 - x5178*x7591 + x5178*x7599 + x5178*x7600 + x5178*x7601 - x5245*x7602 + x5245*x7612 - x5245*x7613 + x5257*x7602 - x5257*x7612 + x5257*x7613 + x5298*x7217 - x5312*x7469 + x5375*x7345 + x5375*x7346 + x5375*x7406 + x5375*x7407 - x5375*x7497 - x5376*x7499 + x5378*x7409 + x5378*x7410 + x5399*x7381 + x5399*x7448 + x5399*x7464 - x5399*x7520 + x5400*x7345 + x5400*x7346 + x5400*x7406 + x5400*x7407 - x5400*x7497 - x5401*x7499 - x5402*x7433 - x5402*x7434 + x5402*x7524 + x5402*x7526 - x5404*x7381 - x5404*x7448 - x5404*x7464 + x5404*x7520 - x5405*x7384 + x5405*x7532 - x5407*x7384 + x5407*x7532 + x5427*x7369 + x5427*x7370 + x5440*x7380 - x5441*x7322 - x5441*x7323 + x5553*x7216 + x5556*x7217 - x5559*x7219 + x5573*x7216 + x5629*x7179 + x5629*x7181 - x5629*x7397 - x5629*x7475 - x5633*x7218 - x5633*x7444 - x5634*x7193 - x5640*x7213 + x5640*x7454 - x5644*x7205 - x5644*x7207 + x5644*x7450 + x5644*x7451 + x5645*x7453 - x5645*x7568 - x5648*x7218 + x5651*x7179 + x5651*x7181 - x5651*x7397 - x5651*x7475 - x5653*x7201 + x5653*x7442 - x5655*x7322 - x5655*x7323 + x5658*x7481 + x5658*x7482 + x5663*x7490 + x5663*x7491 + x6032*x7347 - x6032*x7590 + x6033*x7347 - x6033*x7590 + x6043*x7409 + x6043*x7410 - x6056*x7373 - x6061*x7433 + x6061*x7524 - x6062*x7615 - x6062*x7616 - x6065*x7448 - x6339*x7199 - x7106*x7603 - x7126*x7603 - 16*x7244 + x7267 + x7272 + x7274 + x7275 + x7276 - x7277 - x7278 + x7286 + x7287 - x7288 - x7290 + x7294 + x7299 - 18*x7319 - 18*x7321 + 72*x7363 + 6*x7389 + 6*x7391 - 6*x7416 - 6*x7418 - 6*x7419 - 6*x7420 - 6*x7422 + 16*x7430 + 16*x7432 - 6*x7439 - 6*x7440 + 12*x7463 + x7542 + 6*x7564 - x7587 - x7592 - x7594 - x7595 - x7596 + x7597 + x7598 - x7606 - x7607 + x7608 + x7610 - x7614 + x7619) + x70*(q6_b*x5192 - q6_b*x5196 + q6_b*x5507 + q6_b_dot*x5718 + q6_b_dot*x7317 - q6_b_dt*x5172 + q6_b_dt*x5175 + q6_b_dt*x5194 + q6_i*x5203 + q6_i_dot*x7309 + x1561*x5710 - x1598*x7106 - x3260*x5172 + x3260*x5175 - x3267*x5241 + x3268 - x4746 + x4787 + x4790 - x4826 - x5168*x7311 + x5178*x7311 + x5245*x7316 - x5257*x7316 - x5317*x7205 - x5317*x7207 + x5322*x7313 + x5403*x7065 + x5405 + x5407 + x5432*x7270 + x5432*x7308 + x5435*x7270 + x5435*x7308 - x5465*x7213 + x5476*x7306 + x5476*x7307 - x5496*x7205 - x5501*x7213 + x5506*x7306 + x5506*x7307 - x6693*x7315 + x7027 + x7052 - x7113 + x7189 + x7191 - x7194 - x7196 - x7210 + x7285 - x7289 - x7310 + x7312 - x7314*x779)) + x69*(L*(-q7_b*x7404 + q7_b*x7626 - x1649*x7405 + x3371 - x4912 + x4913 + x5168*x7620 + x5178*x7620 + x5245*x7623 - x5257*x7623 + x5264*x7546 - x5283*x7552 - x5286*x7552 + x5291*x7546 + x5379*x7621 - x5386*x7621 - x5465*x7549 + 14*x7327 - x7334*x7622 + x7352*x7622 + x7353*x7622 + 28*x7356 + x7378*x7627 + 56*x7385 + 2*x7545 - 4*x7550 - 14*x7624 - 14*x7625 + x7629) - x106*(-L*x7673 - q7_b*x4837*x5276 - q7_b*x7725 + q7_b*x7732 - q7_b*x7740 - q7_i*x7743 - q8_b*x7404 + q8_b*x7740 - q8_b_dot*x5287*x7770 - q8_i*x7429 - x1649*x7374 - x1649*x7726 + x1649*x7751 - x1702*x7405 - x1858*x7720 + x1858*x7767 + x321*x7508 + x321*x7510 - x3320*x5677 + x3347*x7431 + x3388 + x3390 - x3391 - x3392 - x3393 + x3394 + x3396 + x3397 + x3398 - x3400 + x3402*x7745 - x3403 - x4877*x5676 + x4926*x5516 + x4928 + x4931 + x4933 + x4934*x7344 - x4935 - x4936 - x4937 - x4938 + x4939 + x4941 + x4942 + x4943 + x4944*x5845 - x4945 - x4947 - x5168*x7705 + x5168*x7706 + x5168*x7707 - x5168*x7717 - x5172*x7714 + x5175*x7714 - x5178*x7705 + x5178*x7706 + x5178*x7707 - x5178*x7717 - x5245*x7719 - x5245*x7760 + x5245*x7764 + x5257*x7719 + x5257*x7760 - x5257*x7764 + x5264*x7497 + x5264*x7646 + x5264*x7647 - x5272*x7759 - x5283*x7761 - x5286*x7689 - x5286*x7690 - x5286*x7761 - x5286*x7762 + x5291*x7497 + x5291*x7646 + x5291*x7647 + x5317*x7747 - x5339*x7546 - x5359*x7546 - x5379*x7711 + x5386*x7711 - x5432*x7723 - x5432*x7724 + x5432*x7730 + x5432*x7731 - x5435*x7723 - x5435*x7724 + x5435*x7730 + x5435*x7731 + x5465*x7700 - x5476*x7667 - x5476*x7722 + x5476*x7727 + x5476*x7728 + x5490*x7703 - x5506*x7667 - x5506*x7722 + x5506*x7727 + x5506*x7728 - x5543*x7520 - x5543*x7685 + x5545*x7520 + x5545*x7685 + x5671*x7499 + x5672*x7590 + x5672*x7631 + x5673*x7590 + x5673*x7631 + x5679*x7553 + x5680*x7554 - x5680*x7699 - x5682*x7532 + x5688*x7499 - x5691*x7532 - x5716*x7715 - x5716*x7716 - x5811*x7718 - x5813*x7718 + x5847*x7748 + x5847*x7749 + x5850*x7748 - x5860*x7758 - x5862*x7715 - x5862*x7716 + x5874*x7765 + x5874*x7766 + x5877*x7768 + x5881*x7758 + x5882*x7769 + x5888*x7769 - 11*x7327 + x7334*x7713 - x7352*x7713 - x7353*x7713 - 22*x7356 - x7378*x7741 - 44*x7385 - x7429*x808 + x7431*x837 + x7462 - 4*x7545 + 8*x7550 + 11*x7624 + 11*x7625 + 2*x7643 + 2*x7645 + 11*x7651 - x7653*x7712 - x7671 + x7674*x7713 + x7675*x7712 + 22*x7678 - 11*x7679 - 11*x7682 - 8*x7686 + x7697*x7741 + 44*x7704 + x7708 + x7710 - 3*x7721 + x7735 - x7736 - x7737 - x7738 - x7739 + 3*x7744 + 3*x7746 - x7753 - x7755 - x7756 - x7757 + x7774 + x7779) + x123*(-q7_b*x7680 + q7_i_dot*x7696 + q8_b*x7680 - x1649*x7665 - x1649*x7691 + x1649*x7693 + x1676*x7405 - x1702*x7343 - x1702*x7371 - x321*x7673 + x3339 + x3375 + x3377 - x3379 - x3382 + x4888 + x4915 + x4916 + x4917 + x4918 + x4920 - x4923 - x4925 + x4926*x5676 - x4927 + x5168*x7648 + x5168*x7649 - x5172*x7657 + x5172*x7662 + x5172*x7663 + x5175*x7657 - x5175*x7662 - x5175*x7663 + x5178*x7648 + x5178*x7649 + x5189*x7683 - x5198*x7683 - x5264*x7667 + x5276*x7692 + x5283*x7701 + x5286*x7701 + x5286*x7702 - x5291*x7667 - x5322*x7699 + x5375*x7646 + x5375*x7647 - x5379*x7652 + x5386*x7652 + x5399*x7685 + x5400*x7646 + x5400*x7647 - x5404*x7685 + x5469 - x5509*x7687 + x5543*x7700 - x5545*x7700 - x5671*x7668 - x5672*x7669 - x5672*x7670 - x5673*x7669 - x5673*x7670 + x5682*x7703 - x5688*x7668 + x5691*x7703 + x5698*x7694 - x5783*x7689 - x5783*x7690 - x6708*x7655 - x6708*x7658 + x6711*x7655 + x6711*x7658 - x6748*x7688 - 26*x7318 - 42*x7327 + x7334*x7656 - 52*x7338 - 26*x7342 - x7344*x830 - x7352*x7656 - x7353*x7656 - 84*x7356 - x7368*x7684 - x7378*x7681 - 104*x7379 - 168*x7385 + x7429*x837 + x7544 - x7570 - x7571 - x7572 - x7573 + x7574 + x7575 + x7576 + x7578 - x7579 + x7580 + x7581 + x7582 - x7583 + 42*x7624 + 42*x7625 - 14*x7642 + 6*x7643 + 6*x7645 + 42*x7651 - x7653*x7654 + x7654*x7675 + x7656*x7674 - 28*x7661 - 14*x7664 - x7666*x801 - 2*x7671 + 84*x7678 - 42*x7679 + x7681*x7697 - 42*x7682 - 24*x7686 + 14*x7695 - 56*x7698 + 168*x7704) - x123*(q7_b_dot*x7877 - x154*x1649*x7750 + x154*x7673 - x154*x7818 - x154*x7820 + x154*x7823 + x154*x7825 + x154*x7839 - x154*x7872 + x1702*x7565 + x286*x7508 + x286*x7510 - x286*x7518 - x286*x7529 - x286*x7720 + x286*x7767 - x3415 + x3416*x7561 - x3417 + x3419 + x3420 + x3421*x7320 - x3421*x7431 + x3422 + x3423 + x3424 + x3425 - x3427 - x3430 - x3431 + x3432*x7745 - x3433 + x4864*x7666 - x4877*x5517 - x4926*x6000 + x4944*x5517 + x4951*x7344 - x4952 - x4953 + x4954 + x4955 + x4957 + x4959 + x4960 + x4961 - x4963 - x4966 - x4968 - x4969 + x5168*x7868 + x5168*x7869 + x5178*x7868 + x5178*x7869 + x5219*x7667 + x5219*x7722 - x5219*x7808 - x5219*x7810 + x5227*x7723 + x5227*x7724 - x5227*x7812 - x5227*x7867 - x5245*x7871 + x5245*x7874 - x5245*x7875 + x5246*x7700 - x5246*x7830 + x5249*x7667 + x5249*x7722 - x5249*x7808 - x5249*x7810 - x5251*x7748 - x5251*x7749 + x5251*x7834 + x5251*x7836 + x5257*x7871 - x5257*x7874 + x5257*x7875 - x5258*x7700 + x5258*x7830 - x5260*x7703 + x5260*x7842 - x5298*x7780 - x5298*x7782 + x5509*x7497 + x5509*x7500 - x5509*x7715 - x5509*x7716 + x5512*x7502 + x5512*x7557 - x5512*x7785 - x5512*x7866 + x5514*x7502 + x5514*x7557 - x5514*x7785 - x5514*x7866 - x5517*x7512 - x5520*x7532 + x5520*x7769 - x5524*x7524 - x5524*x7526 + x5524*x7765 + x5524*x7766 + x5525*x7768 - x5525*x7876 + x5528*x7497 + x5528*x7500 - x5528*x7715 - x5528*x7716 - x5530*x7520 + x5530*x7758 - x5553*x7646 - x5553*x7647 - x5556*x7780 - x5556*x7782 + x5565*x7689 + x5565*x7690 + x5567*x7801 + x5572*x7699 - x5573*x7646 - x5573*x7647 + x5716*x7727 + x5716*x7728 + x5860*x7763 + x5862*x7728 - x5881*x7763 + x5989*x7723 + x5989*x7724 - x5989*x7812 - x5989*x7867 + x6002*x7828 - x6006*x7759 - x6007*x7748 + x6007*x7834 - x6011*x7700 + x6011*x7830 - x6625*x7763 - 7*x7564 + x7577*x7870 + x7584 - 12*x7643 - 12*x7645 + 48*x7686 + 3*x7708 + 3*x7710 - 7*x7721 - 5*x7735 - 3*x7736 - 3*x7737 - 3*x7738 - 3*x7739 + 7*x7744 + 7*x7746 - 3*x7753 - 3*x7755 - 3*x7756 - 3*x7757 + x7779 + x7852 + 5*x7873 + x7891) + x168*(q7_b*x7807 + q7_i_dot*x7786 - q8_b_dot*x6239*x7541 + q8_i_dot*x7478 + x158*x7673 - x158*x7720 - x1649*x7792 - x1649*x7802 + x1702*x7485 + x1702*x7492 + x3353 - x3448 - x3449 + x3450*x7320 - x3450*x7431 + x3451 + x3452 + x3454 + x3455 - x3456 - x3458 + x4890*x7666 + x4901 - x4926*x5916 + x4944*x5916 + x4977*x7344 - x4978 - x4979 + x4980 + x4981 + x4982 + x4983 - x4984 - x4985 - x5168*x7781 - x5168*x7783 - x5168*x7784 + x5168*x7787 - x5178*x7781 - x5178*x7783 - x5178*x7784 + x5178*x7787 - x5245*x7790 + x5257*x7790 + x5264*x7727 + x5264*x7728 + x5267*x7730 + x5267*x7731 + x5269*x7730 + x5269*x7731 - x5276*x7793 - x5276*x7796 - x5279*x7794 - x5279*x7795 - x5283*x7803 - x5283*x7804 - x5286*x7803 - x5286*x7804 + x5291*x7727 + x5334*x7689 + x5334*x7690 - x5337*x7646 - x5337*x7647 + x5339*x7667 - x5339*x7715 - x5339*x7716 + x5339*x7722 + x5342*x7723 - x5342*x7785 + x5345*x7723 - x5345*x7785 - x5359*x7715 - x5359*x7716 + x5359*x7722 - x5362*x7748 - x5362*x7749 + x5362*x7765 + x5362*x7766 - x5369*x7703 + x5369*x7769 - x5537*x7759 - x5543*x7763 + x5545*x7763 - x5590*x7700 + x5590*x7758 - x5593*x7748 + x5593*x7766 + x5597*x7700 - x5597*x7758 - x5601*x7700 + x5601*x7758 - x5611*x7646 - x5611*x7647 + x5615*x7788 + x5615*x7789 + x5616*x7801 + x5674*x7797 + x5928*x7699 - x7344*x7791 - x7479*x7644 + x7495*x7805 + x7498 + x7501 + x7503 + x7504 + x7506 + x7507 + x7509 + x7511 - x7514 - x7516 - x7517 - x7519 + x7521 + x7522 + x7523 - x7525 - x7527 - x7528 - x7530 - x7531 - x7533 - x7534 + x7543 + x7555 - 8*x7643 - 8*x7645 + x7666*x7798 + 32*x7686 + 8*x7800 + x7853 + x7865) + x63*(-q8_b_dot*x7611 + q8_b_dot*x7919 + x129*x7673 - x129*x7818 - x129*x7820 + x129*x7823 + x129*x7839 - x129*x7872 - x1649*x7924 - x1676*x7343 + x327*x7508 + x327*x7510 - x327*x7518 - x327*x7529 - x327*x7720 + x327*x7767 + x3478*x7745 + x3479*x7320 + x3480*x7390 + x3481 + x3584*x7496 - x4877*x5634 + x4906*x7666 + x4944*x5634 + x4993*x7344 + x4998 - x5168*x7892 - x5168*x7893 - x5168*x7895 - x5168*x7896 - x5168*x7898 + x5168*x7906 + x5168*x7907 + x5168*x7908 - x5178*x7892 - x5178*x7893 - x5178*x7895 - x5178*x7896 - x5178*x7898 + x5178*x7906 + x5178*x7907 + x5178*x7908 - x5245*x7909 + x5245*x7920 - x5245*x7922 + x5257*x7909 - x5257*x7920 + x5257*x7922 + x5298*x7536 - x5312*x7778 + x5375*x7667 + x5375*x7727 + x5375*x7728 - x5375*x7808 - x5375*x7810 + x5376*x7668 + x5378*x7730 + x5378*x7731 + x5399*x7700 + x5399*x7763 + x5399*x7775 - x5399*x7830 + x5400*x7667 + x5400*x7728 - x5400*x7808 - x5400*x7810 + x5401*x7668 - x5402*x7748 - x5402*x7749 + x5402*x7834 + x5402*x7836 - x5404*x7700 - x5404*x7763 - x5404*x7775 + x5404*x7830 - x5405*x7703 + x5405*x7842 - x5407*x7703 + x5407*x7842 + x5427*x7689 + x5427*x7690 + x5440*x7699 - x5441*x7646 - x5441*x7647 + x5553*x7535 + x5556*x7536 - x5559*x7538 + x5573*x7535 + x5629*x7497 + x5629*x7500 - x5629*x7715 - x5629*x7716 - x5633*x7537 - x5633*x7759 - x5634*x7512 - x5640*x7532 + x5640*x7769 - x5644*x7524 - x5644*x7526 + x5644*x7765 + x5644*x7766 + x5645*x7768 - x5645*x7876 - x5648*x7537 + x5651*x7497 + x5651*x7500 - x5651*x7715 - x5651*x7716 - x5653*x7520 + x5653*x7758 - x5655*x7646 - x5655*x7647 + x5658*x7788 + x5658*x7789 + x5663*x7801 + x6032*x7669 - x6032*x7897 + x6033*x7669 - x6033*x7897 + x6043*x7730 + x6043*x7731 + x6056*x7828 - x6061*x7748 + x6061*x7834 - x6062*x7925 - x6062*x7926 - x6065*x7763 - x7414*x7910 - x7435*x7910 - 16*x7564 + x7587 + x7592 + x7594 + x7595 + x7596 - x7597 - x7598 + x7606 + x7607 - x7608 - x7610 + x7614 + x7619 - 18*x7643 - 18*x7645 + 72*x7686 + 6*x7708 + 6*x7710 - 16*x7721 - 6*x7735 - 6*x7736 - 6*x7737 - 6*x7738 - 6*x7739 + 16*x7744 + 16*x7746 - 6*x7756 - 6*x7757 + 18*x7800 + x7851 + 6*x7873 - x7894 - x7899 - x7901 - x7902 - x7903 + x7904 + x7905 - x7913 - x7914 + x7916 + x7918 - x7923 + x7929) + x70*(q7_b*x5192 - q7_b*x5196 + q7_b*x5507 + q7_b_dot*x7133 + q7_b_dt*x5194 + q7_i*x5203 + q7_i_dot*x7632 + x1613*x7114 - x1649*x7414 + x3373 - x3418*x5172 + x3418*x5175 - x4834 + x4875 + x4878 - x4914 - x5168*x7635 + x5178*x7635 - x5189*x7639 + x5198*x7639 - x5205*x7638 + x5245*x7640 - x5257*x7640 - x5317*x7524 - x5317*x7526 + x5432*x7590 + x5432*x7631 + x5435*x7590 + x5435*x7631 - x5465*x7532 + x5476*x7499 + x5476*x7630 - x5496*x7524 - x5501*x7532 + x5506*x7499 + x5506*x7630 + x5520 + x5525*x7368 + x5527*x7637 + x7326 - x7334 + x7352 + x7353 - x7423 + x7508 + x7510 - x7513 - x7515 - x7518 - x7529 + x7605 - x7609 - x7634 + x7636 + x7641)) + x69*(L*(-q8_b*x7725 - x1702*x7726 + x327*x7650 + x327*x7674 - x327*x7915 - x3478*x5172 + x3478*x5175 + x3483 - x4999 + x5000 + x5168*x7930 + x5178*x7930 + x5245*x7931 - x5257*x7931 + x5264*x7855 - x5283*x7861 - x5286*x7861 + x5291*x7855 + x5379*x7921 - x5386*x7921 - x5465*x7858 + x5611*x7933 + x5645*x7697 + 32*x7678 + 64*x7704 + 2*x7854 - 4*x7859 - x7932*x7933 + x7935) - x106*(-q8_b*x4924*x5276 - q8_b*x8042 + q8_b*x8049 - q8_i*x8028 + q8_i*x8059 - q8_i*x8063 - q9_b*x7725 - q9_b_dot*x5287*x8088 - q9_i*x7743 - q9_i*x8059 - x1702*x7693 - x1702*x8043 + x1702*x8069 - x1752*x7726 - x1858*x8039 + x1858*x8085 + x321*x7818 + x321*x7820 + x3502 + x3505 + x3506*x7870 - x3507 - x3509 - x3510 + x3511 + x3513 + x3514 + x3515 - x3517 - x3518*x7956 + x3518*x8065 - x3519 - x4964*x5676 + x5015*x5516 + x5017 + x5018 + x5019 + x5021 + x5022*x7666 - x5023 - x5024 - x5025 - x5026 + x5027 + x5029 + x5030 + x5031 + x5032*x5845 - x5033 - x5035 - x5168*x8021 + x5168*x8022 + x5168*x8023 - x5168*x8036 + x5172*x8031 - x5175*x8031 - x5178*x8021 + x5178*x8022 + x5178*x8023 - x5178*x8036 - x5245*x8038 - x5245*x8078 + x5245*x8082 + x5257*x8038 + x5257*x8078 - x5257*x8082 + x5264*x7808 + x5264*x7810 + x5264*x7958 + x5264*x7959 - x5272*x8077 - x5279*x7828 - x5283*x8079 - x5286*x8003 - x5286*x8004 - x5286*x8079 - x5286*x8080 + x5291*x7808 + x5291*x7810 + x5291*x7958 + x5291*x7959 - x5339*x7855 - x5359*x7855 - x5379*x8030 + x5386*x8030 - x5432*x8040 - x5432*x8041 + x5432*x8047 + x5432*x8048 - x5435*x8040 - x5435*x8041 + x5435*x8047 + x5435*x8048 + x5465*x8014 - x5476*x7980 - x5476*x7981 + x5476*x8044 + x5476*x8045 + x5490*x8017 - x5506*x7980 - x5506*x7981 + x5506*x8044 + x5506*x8045 - x5543*x7830 - x5543*x7998 + x5545*x7830 + x5545*x7998 + x5672*x7897 + x5672*x7938 + x5673*x7897 + x5673*x7938 + x5678*x7861 + x5679*x7862 + x5680*x7864 - x5680*x8013 - x5682*x7842 - x5691*x7842 - x5716*x8035 - x5811*x8037 - x5813*x8037 + x5834*x8060 - x5834*x8062 + x5847*x7985 + x5847*x8067 + x5850*x8067 - x5860*x8074 - x5862*x8035 + x5874*x8083 + x5874*x8084 + x5877*x8086 + x5881*x8074 + x5882*x8087 - x6424*x8060 + x6424*x8062 - 13*x7651 - x7674*x8032 - 26*x7678 - x7697*x8061 - 52*x7704 - x7743*x837 + x7774 - 4*x7854 + 8*x7859 + 2*x7955 + 2*x7957 + 13*x7963 - x7966*x8029 - x7969*x8032 - x7984 + x7987*x8032 + x7988*x8032 + x7989*x8029 + 26*x7992 - 8*x7999 + x8011*x8061 + 52*x8018 + x8024 + x8027 - x8033*x8034 - x8034*x8076 + x8034*x8089 + x8050 + x8053 - x8055 - x8056 - x8057 - x8058 + 3*x8064 + 3*x8066 - x8070 - x8071 - x8072 - x8073 + x8095 + x8101) + x123*(q8_i*x7993 - q9_i*x7993 + q9_i_dot*x8009 - x1702*x7978 - x1702*x8005 + x1702*x8008 - x1752*x7665 - x1752*x7691 - x321*x7986 + x3446 + x3488 + x3491 - x3493 - x3496 + x4975 + x5002 + x5004 + x5006 + x5007 + x5009 - x5012 - x5014 + x5015*x5676 - x5016 + x5168*x7960 + x5168*x7961 + x5168*x7970 + x5172*x7968 + x5172*x7974 + x5172*x7976 - x5175*x7968 - x5175*x7974 - x5175*x7976 + x5178*x7960 + x5178*x7961 - x5178*x7970 - 30*x5198*x7687 - x5264*x7980 - x5264*x7981 + x5276*x8006 + x5279*x8007 + x5283*x8015 + x5286*x8015 + x5286*x8016 - x5291*x7980 - x5291*x7981 - x5322*x8013 + x5375*x7958 + x5375*x7959 - x5379*x7965 + x5386*x7965 + x5399*x7998 + x5400*x7958 + x5400*x7959 - x5404*x7998 + x5469 + x5543*x8014 - x5545*x8014 - x5611*x8000 - x5672*x7982 - x5672*x7983 - x5673*x7982 - x5673*x7983 + x5682*x8017 + x5698*x8010 - x5783*x8003 - x5783*x8004 + x5834*x7994 - x5834*x7996 + x6239*x8020 - x6424*x7994 + x6424*x7996 - x6708*x7967 - x6709*x7674 - x6709*x7969 + x6709*x7987 + x6709*x7988 + x6711*x7967 - 30*x7642 - 48*x7651 - 60*x7661 - 30*x7664 - x7666*x859 - 96*x7678 - x7688*x7997 + 30*x7695 - x7697*x7995 - 120*x7698 - 192*x7704 + x7743*x866 + x7853 - x7878 - x7879 - x7880 - x7881 + x7882 + x7883 + x7884 + x7885 - x7886 + x7887 + x7888 + x7889 - x7890 + x7932*x8000 - 16*x7953 + 6*x7955 + 6*x7957 + 48*x7963 - x7964*x7966 + x7964*x7989 - 32*x7973 - 16*x7977 - x7979*x830 - 2*x7984 + 96*x7992 + x7995*x8011 - 24*x7999 - x8001*x8002 - 64*x8012 + 192*x8018) - x123*(q9_b_dot*x7877 + x154*x7986 - x154*x8116 - x154*x8142 - x154*x8144 + x154*x8147 + x154*x8149 + x154*x8152 + x154*x8163 + x154*x8192 - x154*x8202 + x286*x7818 + x286*x7820 - x286*x7839 - x286*x8039 + x286*x8085 + x3416*x8195 - x3432*x8197 - x3528 - x3529 + x3530 + x3531 + x3532 + x3533 + x3534 + x3535 - x3537 - x3540 - x3541 - x3542*x7956 + x3542*x8065 - x3543 + x3547 + x4951*x7979 - x4964*x5517 - x5015*x6000 + x5032*x5517 + x5039*x7666 - x5040 - x5041 + x5042 + x5043 + x5045 + x5047 + x5048 + x5049 - x5051 - x5054 - x5056 - x5057 + x5058 + x5168*x8193 + x5168*x8194 + x5178*x8193 + x5178*x8194 + x5219*x7980 + x5219*x7981 - x5219*x8131 - x5219*x8134 + x5227*x8040 + x5227*x8041 - x5227*x8136 - x5227*x8191 - x5245*x8196 + x5245*x8199 - x5245*x8200 + x5246*x8014 - x5246*x8154 + x5249*x7980 + x5249*x7981 - x5249*x8131 - x5249*x8134 - x5251*x7985 - x5251*x8067 + x5251*x8158 + x5251*x8160 + x5257*x8196 - x5257*x8199 + x5257*x8200 - x5258*x8014 + x5258*x8154 - x5260*x8017 + x5260*x8166 - x5298*x8102 - x5298*x8104 + x5509*x7808 + x5509*x7810 - x5509*x8035 - x5509*x8106 + x5512*x7812 + x5512*x7867 - x5512*x8108 - x5512*x8190 + x5514*x7812 + x5514*x7867 - x5514*x8108 - x5514*x8190 - x5517*x7822 - x5520*x7842 + x5520*x8087 - x5524*x7834 - x5524*x7836 + x5524*x8083 + x5524*x8084 + x5525*x8086 - x5525*x8201 + x5528*x7808 + x5528*x7810 - x5528*x8035 - x5528*x8106 - x5530*x7830 + x5530*x8074 - x5553*x7958 - x5553*x7959 - x5556*x8102 - x5556*x8104 + x5565*x8003 + x5565*x8004 + x5567*x8125 + x5572*x8013 - x5573*x7958 - x5573*x7959 + x5716*x8044 + x5716*x8045 + x5860*x8081 + x5862*x8044 - x5881*x8081 + x5989*x8040 + x5989*x8041 - x5989*x8136 - x5989*x8191 - x6006*x8077 - x6007*x8067 + x6007*x8158 - x6011*x8014 + x6011*x8154 + x6933*x8114 - 7*x7873 + x7891 - 12*x7955 - 12*x7957 + 48*x7999 + 3*x8024 + 3*x8027 - 5*x8050 - 5*x8053 - 3*x8055 - 3*x8056 - 3*x8057 - 3*x8058 + 7*x8064 + 7*x8066 - 3*x8070 - 3*x8071 - 3*x8072 - 3*x8073 + x8101 + 12*x8124 - x8130*x8203 + x8176 + 5*x8198 + x8218) + x168*(q8_i_dot*x8110 - q9_b*x7807 + q9_i_dot*x7786 + x158*x7986 - x158*x8039 - x158*x8116 - x1702*x8118 - x1702*x8126 + x1752*x7792 + x1752*x7802 - x3450*x7956 + x3450*x8065 + x3463 + x3559 - x3560 - x3561 + x3562 + x3563 + x3564 + x3565 - x3566 - x3567 + x3598 + x4977*x7979 + x4988 - x5015*x5916 + x5032*x5916 + x5065*x7666 + x5066 - x5067 - x5068 + x5069 + x5070 + x5071 + x5072 - x5073 - x5074 + x5100 - x5168*x8103 - x5168*x8105 - x5168*x8107 + x5168*x8112 - x5178*x8103 - x5178*x8105 - x5178*x8107 + x5178*x8112 - x5241*x8117 - x5245*x8115 + x5257*x8115 + x5264*x8044 + x5264*x8045 + x5267*x8047 + x5267*x8048 + x5269*x8047 + x5269*x8048 - x5276*x8119 - x5276*x8122 - x5279*x8120 - x5279*x8121 - x5283*x8127 - x5283*x8128 - x5286*x8127 - x5286*x8128 + x5291*x8045 + x5334*x8003 + x5334*x8004 - x5337*x7958 - x5337*x7959 + x5339*x7980 + x5339*x7981 - x5339*x8035 - x5339*x8106 + x5342*x8040 - x5342*x8108 + x5345*x8040 - x5345*x8108 + x5359*x7980 + x5359*x7981 - x5359*x8106 - x5362*x7985 - x5362*x8067 + x5362*x8083 + x5362*x8084 - x5369*x8017 + x5369*x8087 - x5537*x8077 - x5543*x8081 + x5545*x8081 - x5590*x8014 + x5590*x8074 - x5593*x8067 + x5593*x8084 + x5597*x8014 - x5597*x8074 - x5601*x8014 + x5601*x8074 - x5611*x7958 - x5611*x7959 + x5615*x8113 + x5615*x8114 + x5616*x8125 + x5928*x8013 + x7644*x8111 + x7791*x7979 + x7805*x8129 - x7805*x8130 + x7809 + x7811 + x7813 + x7814 + x7816 + x7817 + x7819 + x7821 - x7824 - x7826 - x7827 - x7829 + x7831 + x7832 + x7833 - x7835 - x7837 - x7838 - x7840 - x7841 - x7843 - x7844 + x7852 + x7865 - 8*x7955 - 8*x7957 + 32*x7999 + 8*x8124 + x8177 + x8189) + x63*(-q9_b_dot*x7919 + x129*x7986 - x129*x8116 - x129*x8142 - x129*x8144 + x129*x8147 + x129*x8163 + x129*x8192 - x129*x8202 + x327*x7818 + x327*x7820 - x327*x7839 - x327*x8039 + x327*x8085 - x3478*x8197 + x3538*x5395 - x3583*x7956 + x3583*x8065 + x3585 - x4964*x5634 + x4993*x7979 + x5032*x5634 + x5081*x7666 + x5083*x5516 + x5087 - x5168*x8219 - x5168*x8220 - x5168*x8222 - x5168*x8223 - x5168*x8225 + x5168*x8233 + x5168*x8235 + x5168*x8236 - x5178*x8219 - x5178*x8220 - x5178*x8222 - x5178*x8223 - x5178*x8225 + x5178*x8233 + x5178*x8235 + x5178*x8236 - x5245*x8238 + x5245*x8249 - x5245*x8250 + x5257*x8238 - x5257*x8249 + x5257*x8250 + x5298*x7846 - x5312*x8100 + x5375*x7980 + x5375*x7981 + x5375*x8044 + x5375*x8045 - x5375*x8131 - x5376*x8133 + x5378*x8047 + x5378*x8048 + x5399*x8014 + x5399*x8081 + x5399*x8096 - x5399*x8154 + x5400*x7980 + x5400*x7981 + x5400*x8044 + x5400*x8045 - x5400*x8131 - x5401*x8133 - x5402*x7985 - x5402*x8067 + x5402*x8158 + x5402*x8160 - x5404*x8014 - x5404*x8081 - x5404*x8096 + x5404*x8154 - x5405*x8017 + x5405*x8166 - x5407*x8017 + x5407*x8166 + x5427*x8003 + x5427*x8004 + x5440*x8013 - x5441*x7958 - x5441*x7959 + x5553*x7845 + x5556*x7846 - x5559*x7848 + x5573*x7845 + x5629*x7808 + x5629*x7810 - x5629*x8035 - x5629*x8106 - x5633*x7847 - x5633*x8077 - x5634*x7822 - x5640*x7842 + x5640*x8087 - x5644*x7834 - x5644*x7836 + x5644*x8083 + x5644*x8084 + x5645*x8086 - x5645*x8201 - x5648*x7847 + x5651*x7808 + x5651*x7810 - x5651*x8035 - x5651*x8106 - x5653*x7830 + x5653*x8074 - x5655*x7958 - x5655*x7959 + x5658*x8113 + x5658*x8114 + x6032*x7982 - x6032*x8224 + x6033*x7982 - x6033*x8224 + x6043*x8047 + x6043*x8048 - x6056*x8007 - x6061*x8067 + x6061*x8158 - x6062*x8252 - x6062*x8253 - x6065*x8081 + x7709*x8234 - x7733*x8239 - x7750*x8239 + x7799*x8248 - 16*x7873 + x7894 + x7899 + x7901 + x7902 + x7903 - x7904 - x7905 + x7913 + x7914 - x7916 - x7918 + x7923 + x7929 - 18*x7955 - 18*x7957 + 72*x7999 + 6*x8024 + 6*x8027 - 6*x8053 - 6*x8055 - 6*x8056 - 6*x8057 - 6*x8058 + 16*x8064 + 16*x8066 - 6*x8072 - 6*x8073 + 18*x8124 + x8176 + 6*x8198 - x8221 - x8226 - x8228 - x8229 - x8230 + x8231 + x8232 - x8242 - x8243 + x8245 + x8247 - x8251 + x8256) + x70*(q8_b*x5192 - q8_b*x5196 + q8_b*x5507 + q8_b_dot*x6680 - q8_b_dt*x5172 + q8_b_dt*x5175 + q8_b_dt*x5194 + q8_i*x5203 + q8_i_dot*x7939 + x0*x7946 + x1665*x7943 - x1702*x7733 - x3485*x5241 + x3486 - x4921 + x4962 + x4965 - x5001 - x5168*x7942 - x5172*x7806 + x5175*x7806 + x5178*x7942 - x5205*x7948 + x5245*x7950 - x5257*x7950 - x5317*x7834 - x5317*x7836 + x5339*x7949 + x5432*x7897 + x5432*x7938 + x5435*x7897 + x5435*x7938 - x5465*x7842 + x5476*x7936 + x5476*x7937 - x5496*x7834 - x5501*x7842 + x5506*x7936 + x5506*x7937 - x6677*x7949 + x6679*x7688 + x7650 + x7674 + x7818 + x7820 - x7823 - x7825 - x7839 + x7912 - x7915 - x7917 - x7941 + x7944 + x7947 + x7952)) + x69*(L*(-q9_b*x8042 - q9_i*x8063 - x1752*x8043 + x3587 + x4023*x7962 - x4023*x7969 + x4023*x7987 + x4023*x7988 - x4023*x8244 - x5088 + x5089 + x5168*x8257 + x5178*x8257 + x5245*x8258 - x5257*x8258 + x5264*x8179 - x5286*x8185 + x5291*x8179 + x5379*x8237 - x5386*x8237 - x5465*x8182 - x5834*x8248 + x6412*x8011 + x6424*x8248 + 36*x7992 + 72*x8018 + 2*x8178 - 4*x8183 + x8260) - x106*(-q10_b*x8042 + q10_b*x8340 - q10_i*x8063 - q10_i*x8367 + q10_i_dot*x6758 - q10_i_dt*x8323 - q9_b*x5013*x5276 - q9_b*x8340 + q9_b_dot*x1790*x5847 + q9_i*x8367 - x1752*x8008 - x1752*x8354 - x1790*x8028 + x321*x8142 + x321*x8144 - x3538*x5677 + x3614*x8195 - x3619*x8350 + x3619*x8372 + x3622 - x5052*x5676 + x5106*x7979 + x5111*x5234 + x5114*x5241 + x5115 - x5168*x8333 + x5168*x8334 + x5168*x8341 - x5172*x8343 + x5172*x8344 + x5175*x8343 - x5175*x8344 - x5178*x8333 + x5178*x8334 - x5178*x8341 + x5189*x8335 - x5189*x8348 + x5198*x8335 - x5198*x8345 - x5198*x8346 - x5198*x8348 - x5245*x8349 - x5245*x8385 + x5245*x8389 + x5257*x8349 + x5257*x8385 - x5257*x8389 + x5264*x8131 + x5264*x8278 + x5264*x8279 - x5272*x8384 - x5283*x8318 - x5283*x8386 - x5286*x8318 - x5286*x8319 - x5286*x8386 - x5286*x8387 + x5287*x8359 - x5290*x8345 - x5290*x8346 + x5291*x8131 + x5291*x8278 + x5291*x8279 - x5332*x8294 - x5339*x8179 - x5339*x8315 - x5359*x8179 - x5432*x8352 + x5432*x8357 - x5435*x8352 + x5435*x8357 + x5465*x8328 - x5465*x8388 - x5476*x8299 - x5476*x8301 - x5476*x8351 + x5476*x8355 + x5476*x8356 + x5476*x8358 + x5490*x8331 - x5506*x8299 - x5506*x8351 + x5506*x8355 + x5506*x8356 - x5543*x8154 - x5543*x8313 + x5545*x8154 + x5545*x8313 + x5671*x8133 + x5672*x8224 + x5672*x8262 + x5673*x8224 + x5673*x8262 + x5678*x8185 + x5679*x8186 + x5680*x8188 - x5680*x8327 - x5682*x8166 + x5688*x8133 - x5700*x8381 - x5811*x8347 - x5813*x8347 - x5834*x8368 + x5834*x8369 + x5847*x8374 + x5847*x8375 + x5850*x8375 - x5860*x8383 + x5874*x8390 + x5877*x8391 + x5881*x8383 + x5882*x8392 + x5888*x8392 + x6424*x8368 - x6424*x8369 + x6677*x8315 - x6750*x8317 - 15*x7963 + x7966*x8339 + x7969*x8342 - x7987*x8342 - x7988*x8342 - 30*x7992 - x8011*x8370 - 60*x8018 - x8019*x8089 - x8043*x8297 + x8052*x8373 - x8063*x866 + x8065*x875 + x8069*x8373 + x8095 - 4*x8178 + 8*x8183 - 8*x8275 + 2*x8276 + 2*x8277 + 15*x8282 - x8283*x8339 - 16*x8291 - x8301*x8353 - x8302 - x8303 + 30*x8306 - 8*x8314 + x8325*x8370 - 32*x8326 + 60*x8332 + x8337 + x8338 + x8353*x8358 + x8361 + x8362 - x8363 - x8364 - x8365 - x8366 + 3*x8371 + x8377 - x8378 - x8380 - x8382 + x8397) + x123*(q10_b*x8285 - q10_i*x8307 + q10_i_dot*x7072 - q9_b*x8285 + q9_i*x8307 - x1752*x8296 - x1752*x8321 + x1752*x8322 + x1777*x8043 + x3548 + x3599 + x5059 + x5101 + x5111*x5276 - x5122*x8033 - x5122*x8076 + x5122*x8089 + x5168*x8280 + x5168*x8289 - x5172*x8288 + x5172*x8292 + x5172*x8293 + x5175*x8288 - x5175*x8292 - x5175*x8293 + x5178*x8280 - x5178*x8289 + x5189*x8281 + x5189*x8311 + x5189*x8316 + x5198*x8281 - x5198*x8311 - x5198*x8316 - x5264*x8299 - x5264*x8301 + x5283*x8329 + x5286*x8329 + x5286*x8330 - x5291*x8299 - x5322*x8327 + x5375*x8278 + x5375*x8279 + x5399*x8313 + x5400*x8278 + x5400*x8279 - x5404*x8313 - x5412*x8294 + x5469 + x5543*x8328 - x5545*x8328 - x5672*x8300 - x5673*x8300 + x5682*x8331 + x5698*x8324 - x5783*x8318 - x5783*x8319 - x5834*x8308 + x5834*x8309 - x6134*x8301 + x6424*x8308 - x6424*x8309 - x6708*x8286 + x6711*x8286 - x7063*x8317 - 34*x7953 - 54*x7963 + x7966*x8284 + x7969*x8287 - 68*x7973 - 34*x7977 - x7978*x8297 - x7987*x8287 - x7988*x8287 - 108*x7992 - x8002*x8312 - x8005*x8297 - x8011*x8310 - 136*x8012 - 216*x8018 + x8063*x875 + x8177 - x8204 - x8205 - x8206 - x8207 + x8208 + x8209 + x8210 + x8212 - x8213 + x8214 + x8215 + x8216 - x8217 - 18*x8275 + 6*x8276 + 6*x8277 + 54*x8282 - x8283*x8284 + x8287*x8304 - 36*x8291 - x8295*x859 - x8298*x877 - 2*x8302 - 2*x8303 + 108*x8306 + x8310*x8325 - 24*x8314 + x8323*x872 - 72*x8326 + 216*x8332) - x123*(-x1752*x8464 + x286*x8142 + x286*x8144 - x286*x8152 - x286*x8163 + x286*x8476 + x3667*x8298 - x3667*x8414 + x3669*x8195 - x3669*x8415 + x3670*x8065 + x3670*x8350 - x3671*x8350 + x3671*x8372 + x3673*x7956 - x3673*x8065 - x3673*x8350 + x3673*x8372 + x3674 + x5039*x8295 - x5052*x5517 - x5061*x5117*x6624 + x5129*x7954 - x5129*x8416 - x5129*x8425 + x5130 + x5168*x8460 + x5178*x8460 + x5219*x8299 + x5219*x8301 + x5219*x8351 - x5219*x8406 - x5219*x8408 - x5219*x8410 - x5219*x8458 + x5227*x8352 + x5241*x8465 - x5245*x8462 - x5245*x8470 + x5245*x8471 - x5245*x8473 + x5245*x8474 + x5249*x8299 + x5249*x8351 - x5249*x8406 - x5249*x8408 - x5251*x8374 - x5251*x8375 + x5251*x8443 + x5251*x8444 + x5257*x8462 + x5257*x8470 - x5257*x8471 + x5257*x8473 - x5257*x8474 - x5260*x8331 + x5260*x8448 - x5298*x8398 - x5317*x8463 + x5317*x8468 - x5322*x8424 + x5399*x8404 - x5404*x8404 - x5496*x8463 + x5496*x8468 + x5509*x8131 + x5509*x8134 - x5509*x8407 - x5509*x8409 - x5509*x8456 + x5512*x8136 + x5512*x8191 - x5512*x8411 + x5514*x8136 + x5514*x8191 - x5514*x8411 - x5517*x8146 - x5520*x8166 + x5520*x8392 - x5524*x8158 - x5524*x8160 + x5524*x8390 + x5524*x8445 + x5525*x8391 - x5525*x8475 + x5528*x8131 + x5528*x8134 - x5528*x8407 - x5528*x8409 - x5530*x8154 + x5530*x8383 - x5553*x8278 - x5553*x8279 - x5553*x8400 + x5553*x8402 + x5553*x8403 - x5556*x8398 + x5565*x8318 + x5572*x8327 - x5573*x8278 - x5573*x8279 + x5573*x8402 - x5701*x8381 + x5716*x8355 + x5716*x8356 + x5716*x8358 + x5860*x8388 + x5862*x8355 + x5862*x8356 - x5881*x8388 + x5989*x8352 - x6006*x8384 - x6007*x8375 + x6007*x8443 - x6011*x8328 + x6011*x8437 + x6423*x8301 - x6423*x8410 - x6423*x8458 - x6744*x8400 + x6744*x8403 + x8123*x8469 + x8218 - 12*x8276 - 12*x8277 + x8297*x8464 + 48*x8314 + 3*x8337 + 3*x8338 + x8360*x8467 - 5*x8361 - 5*x8362 - 3*x8363 - 3*x8364 - 3*x8365 - 3*x8366 + 7*x8371 + x8376*x8467 - 5*x8377 - 3*x8378 - 3*x8380 - 3*x8382 + x8397 - 24*x8405 - x8416*x8459 + 5*x8428 + x8430*x8459 + x8455 - 14*x8457 + 6*x8461) + x168*(q10_i_dot*x8110 - x158*x8417 + x158*x8435 + x3576 + x3655*x8298 - x3655*x8414 + x3660*x8195 - x3660*x8415 - x3660*x8438 + x3661*x7956 - x3661*x8065 - x3661*x8350 - x3663*x5279 + x3666 + x5065*x8295 + x5078 - x5109*x5279 + x5122*x7954 - x5122*x8416 - x5122*x8425 + x5122*x8430 + x5127 - x5168*x8399 + x5168*x8418 - x5178*x8399 + x5178*x8418 - x5189*x8412 - x5189*x8413 - x5198*x8412 - x5198*x8413 + x5241*x8432 + x5241*x8433 - x5245*x8421 + x5257*x8421 + x5264*x8355 + x5264*x8356 + x5264*x8358 + x5267*x8357 + x5269*x8357 - x5273*x5282*x8336 - x5276*x8426 - x5279*x8427 - x5283*x8441 - x5286*x8441 - x5286*x8442 - x5290*x8439 + x5291*x8356 + x5334*x8318 + x5334*x8319 - x5334*x8422 - x5336*x8424 - x5337*x8278 - x5337*x8279 + x5337*x8402 + x5339*x8299 + x5339*x8301 + x5339*x8351 - x5339*x8406 - x5339*x8407 - x5339*x8408 - x5339*x8409 - x5339*x8410 - x5342*x8411 - x5345*x8411 + x5359*x8299 + x5359*x8351 - x5359*x8406 - x5359*x8407 - x5362*x8374 - x5362*x8375 + x5362*x8390 + x5362*x8443 + x5362*x8444 + x5362*x8445 - x5365*x8440 + x5365*x8446 - x5369*x8331 + x5369*x8392 + x5369*x8448 - x5537*x8384 - x5543*x8388 + x5545*x8388 - x5590*x8328 + x5590*x8383 - x5590*x8404 + x5590*x8437 - x5593*x8375 + x5593*x8390 + x5593*x8443 + x5597*x8328 - x5597*x8383 + x5597*x8404 - x5597*x8437 - x5601*x8328 + x5601*x8383 + x5601*x8437 - x5611*x8278 - x5611*x8279 - x5611*x8400 + x5611*x8402 + x5611*x8403 + x5615*x8420 + x5928*x8327 + x6134*x8358 - x6677*x8410 - x7932*x8400 + x7932*x8403 + x8054*x8429 + x8109*x8336 - x8111*x8350 + x8118*x8297 + x8123*x8436 + x8126*x8297 + x8129*x8447 + x8132 + x8135 + x8137 + x8138 + x8140 + x8141 + x8143 + x8145 - x8148 - x8150 - x8151 - x8153 + x8155 + x8156 + x8157 - x8159 - x8161 - x8162 - x8164 - x8165 - x8167 - x8168 - x8175*x8449 + x8176 + x8189 - 8*x8276 - 8*x8277 + x8297*x8431 + 32*x8314 + x8319*x8423 - 4*x8361 - 4*x8362 + 8*x8401 - 16*x8405 + 8*x8419 - x8422*x8423 + 4*x8428 + x8455) + x63*(-q10_b*x5625 - q10_b*x6695 + q10_b_dot*x5667 - q10_i*x5389 - x158*x8304 - x1752*x8488 - x1752*x8490 - x1777*x7978 + x1777*x8296 - x323*x8481 + x327*x8142 + x327*x8144 - x327*x8152 - x327*x8163 - x327*x8417 + x327*x8435 + x327*x8476 + x3582 + x3605*x5419 - x3605*x5460 + x3607*x5275*x879 + x3623*x8195 - x3623*x8415 + x3624 - x3625 - x3626 + x3627 + x3628 + x3629*x8026 + x3630 + x3631 + x3632*x7956 - x3632*x8350 + x3633 + x3634 + x3635 - x3639 - x3641 - x3642*x8350 + x3642*x8372 - x3643 - x3645 + x3646*x8298 - x3646*x8414 + x3662*x5172 - x3662*x5175 - x3663*x6056 - x3664*x5430 + x3664*x5438 - x3669*x8438 - x5052*x5634 + x5081*x8295 - x5082 + x5086 - x5109*x6056 + x5125*x5461 - x5125*x5466 - x5125*x5660 + x5125*x5661 + x5131 + x5132 - x5133 - x5134 - x5135 + x5136 + x5137 + x5138 - x5139*x5234 + x5140 + x5141 + x5142 + x5143 - x5144 - x5145 - x5146 - x5147 - x5168*x8477 - x5168*x8478 + x5168*x8483 + x5168*x8484 + x5168*x8485 - x5178*x8477 - x5178*x8478 + x5178*x8483 + x5178*x8484 + x5178*x8485 - x5189*x8479 - x5189*x8480 - x5198*x8480 + x5205*x8492 + x5241*x8494 - x5245*x8486 - x5245*x8496 + x5245*x8497 + x5257*x8486 + x5257*x8496 - x5257*x8497 + x5298*x8170 - x5312*x8396 + x5330*x8283 + x5375*x8299 + x5375*x8301 + x5375*x8351 + x5375*x8355 + x5375*x8356 + x5375*x8358 - x5375*x8406 - x5375*x8408 - x5375*x8410 + x5378*x8357 + x5399*x8328 + x5399*x8388 + x5399*x8393 - x5399*x8437 + x5400*x8299 + x5400*x8355 + x5400*x8356 - x5400*x8406 - x5402*x8374 - x5402*x8375 + x5402*x8443 + x5402*x8444 - x5403*x8440 + x5403*x8446 - x5404*x8328 - x5404*x8388 - x5404*x8393 + x5404*x8437 - x5405*x8331 + x5405*x8448 + x5427*x8318 + x5427*x8319 - x5427*x8422 - x5429*x8424 + x5440*x8327 - x5441*x8278 - x5441*x8279 + x5441*x8402 + x5553*x8169 + x5556*x8170 - x5559*x8172 + x5573*x8169 + x5629*x8131 + x5629*x8134 - x5629*x8407 - x5629*x8409 - x5629*x8456 - x5633*x8171 - x5633*x8384 - x5634*x8146 - x5640*x8166 + x5640*x8392 - x5644*x8158 - x5644*x8160 + x5644*x8390 + x5644*x8445 + x5645*x8391 - x5645*x8475 - x5648*x8171 + x5651*x8131 + x5651*x8134 - x5651*x8407 - x5651*x8409 - x5653*x8154 + x5653*x8383 - x5655*x8278 - x5655*x8279 - x5655*x8400 + x5655*x8402 + x5655*x8403 + x5658*x8420 - x5659*x8404 + x5662*x8404 - x5717*x8381 + x6043*x8357 - x6056*x8491 + x6056*x8493 - x6061*x8375 + x6061*x8443 - x6062*x8336 - x6062*x8379 - x6065*x8328 + x6065*x8437 + x6693*x8429 - x7360*x8400 + x7360*x8403 + x7954*x8482 - x8051*x8489 - x8068*x8489 + x8123*x8495 + x8211*x8438 + x8221 + x8226 + x8228 + x8229 + x8230 - x8231 - x8232 + x8242 + x8243 - x8245 - x8247 + x8251 + x8256 + 2*x8275 - 18*x8276 - 18*x8277 - 4*x8282 + 4*x8291 + x8297*x8488 + x8297*x8490 + 72*x8314 + x8319*x8487 - 16*x8332 + 6*x8337 + 6*x8338 - 6*x8363 - 6*x8365 + 16*x8371 - 6*x8382 + 18*x8401 - 36*x8405 - x8416*x8482 + 12*x8419 - x8422*x8487 - x8449*x8498 + x8455 - 32*x8457 + 12*x8461) + x70*(q9_b*x5192 - q9_b*x5196 + q9_b*x5507 + q9_b_dot*x7441 + q9_i*x5203 + q9_i_dot*x8263 + x1717*x7424 - x1752*x8051 + x2*x3591 + x3589 - x5010 + x5050 + x5053 - x5090 - x5172*x8266 + x5175*x8266 - x5189*x8271 + x5198*x8271 - x5205*x8270 + x5245*x8272 - x5257*x8272 - x5317*x8158 - x5317*x8160 + x5429*x8268 + x5432*x8224 + x5432*x8262 + x5435*x8224 + x5435*x8262 - x5465*x8166 + x5476*x8133 + x5476*x8261 - x5496*x8158 - x5501*x8166 + x5506*x8133 + x5506*x8261 + x6708*x8265 - x6711*x8265 + x7426*x8002 + x7962 - x7969 + x7987 + x7988 + x8142 + x8144 - x8147 - x8149 - x8152 - x8163 + x8241 - x8244 - x8246 - x8264 + x8267 + x8269 + x8274)) + x69*(L*(-x10153*x3943 + 2*x10155 + x10156*x5264 + x10156*x5291 + x10157*x5267 + x10157*x5269 + x10159*x5168 - x10159*x5178 - 24*x10162 + x10163*x5172 - x10163*x5175 - 12*x10164 - x10165*x5465 - 4*x10166 - x10167*x5276 - x10168*x1167 + x10169*x5245 - x10169*x5257 - x10170*x5375 - x10171*x6120 - x10172*x5283 - x10172*x5286 + 12*x10173 + x10174*x3943 - 48*x10175 + x2349 + x4265 + x4267 + x7305) - x106*(-p5_b*p6_b_dot_dt*x5808 + p5_i*x8367 - p5_i_dot*x10348 + p6_b*x10047 - p6_b*x4309*x5276 + 15*p6_b*x6424 - p6_b*x9964 - p6_i*x8367 + x10076 - x10154*x569 - 4*x10155 - x10156*x5339 - x10156*x5359 - x10157*x5342 - x10157*x5345 - x10158*x9876 + 30*x10162 + 15*x10164 + 8*x10166 + x10167*x5538 - x10168*x1119 + x10171*x8370 + x10172*x5678 - 15*x10173 + 60*x10175 + x10177*x321 + x10178*x321 + x10179*x5671 + x10179*x5688 + x10181*x5672 + x10181*x5673 - x10197*x5682 - x10197*x5691 + x10199*x9972 - x10201*x9919 + 2*x10206 + 2*x10207 + x10208*x5264 + x10208*x5291 + x10209*x5264 + x10209*x5291 + x10210*x5267 + x10210*x5269 + x10212*x5267 + x10212*x5269 + 15*x10215 - x10228*x5476 - x10228*x5506 - x10230*x5432 - x10230*x5435 - x10244*x5543 + x10244*x5545 - 8*x10245 - x10248*x5283 - x10248*x5286 - x10249*x5283 + x10257*x5680 - x10259*x5680 + x10260*x5465 - x10263*x599 - x10265*x600 + x10267*x5490 + x10271*x5264 + x10271*x5291 + x10276*x5267 + x10276*x5269 - x10286*x5279 - x10288*x5543 + x10288*x5545 + x10310 + x10311 - x10312*x6708 + x10312*x6711 + x10313*x6708 - x10313*x6711 - x10314*x5172 + x10314*x5175 - x10315*x5808 - x10315*x5863 - x10316*x5811 - x10316*x5813 - x10317*x5168 - x10317*x5178 - x10318*x5245 + x10318*x5257 - x10319*x1858 - x10320*x1858 - x10321*x5476 - x10321*x5506 - x10322*x5432 - x10322*x5435 - x10323*x5276 - x10324*x5276 + x10325*x5476 + x10325*x5506 + x10326*x5476 + x10326*x5506 + x10327*x5432 + x10327*x5435 + x10328*x5432 + x10328*x5435 + x10329*x5674 + x10330 + x10331 + x10332 - x10333 - x10334 - x10335 - x10336 + x10337*x5834 - x10337*x6424 + 3*x10338 + x10339*x7121 + 3*x10340 + x10341*x5845 + x10342*x5679 + x10343*x5847 + x10344*x1167 + x10345*x5847 + x10345*x5850 - x10346 - x10347 - x10349 - x10350*x5860 + x10350*x5881 - x10351*x5290 - x10352*x5272 - x10353*x5245 + x10353*x5257 - x10354*x5286 - x10355*x5283 + x10357*x5245 - x10357*x5257 + x10358*x5874 + x10359*x5877 + x10360*x5874 + x10361*x1858 + x10362*x5882 + x10365 + x10370 - x1167*x9870 - x2353*x5677 + x2390 + x2391 - x2393 - x2395 - x2397 + x2398 + x2400 + x2402 + x2403 + x2404 - x2406 - x2408 - x4272*x5676 + x4296 + x4297 + x4298 - x4299 - x4301 - x4302 - x4303 + x4304 + x4306 + x4308 + x4310 + x4311 - x4313 - x4315 - x8342*x9865 - x8342*x9866 + x8342*x9872 - x8370*x9873 - 15*x9855 - 30*x9864 - 60*x9970) + x123*(p5_i*x7358 - p5_i_dot*x7375 - p6_i*x7358 - p6_i_dot*x7696 + 72*x10162 + 36*x10164 + x10170*x5655 - x10170*x7360 + x10171*x7359 + 144*x10175 + x10196*x7684 - x10202 - x10203 - x10204 - x10205 + 6*x10206 + 6*x10207 + x10208*x5375 + x10208*x5400 + x10209*x5375 + x10209*x5400 + x10211*x5168 + x10211*x5178 + x10213*x5168 + x10213*x5178 + 26*x10214 + 36*x10215 - x10216*x6708 + x10216*x6711 + x10217*x6708 - x10217*x6711 + x10219*x6708 - x10219*x6711 - x10220*x5172 + x10220*x5175 - x10222*x5172 + x10222*x5175 - x10223*x5168 + x10223*x5178 - x10224*x5172 + x10224*x5175 - x10225 - x10226*x1119 - x10227*x533 - x10228*x5264 - x10228*x5291 - x10229*x5671 - x10229*x5688 - x10230*x5267 - x10230*x5269 - x10231*x5672 - x10231*x5673 - x10232*x321 - x10233*x321 + x10234 + x10236 + x10237 + x10238 + 26*x10239 + 52*x10240 - x10241*x5655 + x10241*x7360 + 26*x10242*x5198 - 26*x10243 + x10244*x5399 - x10244*x5404 - 24*x10245 - x10246 - x10247*x6693 - x10248*x5783 - x10249*x5783 - x10250*x1119 + x10251*x1167 + x10252*x5276 + x10253*x5375 + x10254 + x10256 + x10258 - x10259*x5322 + x10260*x5543 - x10260*x5545 + x10261*x5283 + x10263*x569 + x10265*x570 + x10266*x5286 + x10267*x5682 + x10267*x5691 + 104*x10268 + x10309 - x1167*x9927 - x1167*x9952 + x2358 + x2360 - x2362 - x2364 - x2368 + x2396*x5279 + x2546 + x4274 + x4275 + x4276 - x4277 - x4279 - x4281 + x4282*x5276 - x4283 - x4284 - x4286 + x4405 + x5469 - x563*x9928 - x7333*x9865 - x7333*x9866 + x7333*x9872 - x7359*x9873 + x7367*x9899 - 36*x9855 - 72*x9864 + 12*x9916 + 12*x9939 + 24*x9941 + 48*x9969 - 144*x9970) - x123*(x10009 + 5*x10090 - x10100*x10387 + x10101 + x10177*x286 + x10178*x286 - x10185*x5517 - x10192*x5524 - x10193*x5524 - x10195*x286 - x10197*x5520 - 12*x10206 - 12*x10207 - x10208*x5553 - x10208*x5573 - x10209*x5553 - x10209*x5573 - x10210*x5298 - x10210*x5556 - x10212*x5298 - x10212*x5556 + x10228*x5219 + x10228*x5249 + x10230*x5227 + x10230*x5989 + x10232*x154 + x10233*x154 + x10235*x2268 + 48*x10245 + x10248*x5565 + x10249*x5565 + x10255*x1119 + x10259*x5572 - x10260*x6011 - x10267*x5260 + x10269*x5509 + x10269*x5528 + x10271*x5509 + x10271*x5528 + x10273*x5512 + x10273*x5514 + x10276*x5512 + x10276*x5514 - x10286*x9234 - x10288*x5530 + 3*x10310 + 3*x10311 - x10319*x286 - x10320*x286 + x10321*x5219 + x10321*x5249 + x10322*x5227 + x10322*x5989 + x10323*x5559 + x10324*x5559 + x10325*x5716 + x10325*x5862 + x10326*x5716 + x10326*x5862 - 5*x10330 - 5*x10331 - 5*x10332 - 3*x10333 - 3*x10334 - 3*x10335 - 3*x10336 + 7*x10338 + x10339*x9234 + 7*x10340 + x10341*x5517 - x10343*x5251 - x10345*x5251 - x10345*x6007 - 3*x10346 - 3*x10347 - x10348*x2301 - 3*x10349 + x10350*x5530 - x10352*x6006 + x10356*x5860 - x10356*x5881 + x10358*x5524 + x10359*x5525 + x10360*x5524 + x10361*x286 + x10362*x5520 + x10370 - x10371*x5509 - x10371*x5528 - x10372*x5509 - x10372*x5528 - x10373*x5512 - x10373*x5514 - x10374*x5512 - x10374*x5514 - x10375*x5168 - x10375*x5178 + x10376*x5168 + x10376*x5178 + x10377*x5168 + x10377*x5178 - x10378*x5245 + x10378*x5257 - 7*x10379 - x10380*x154 - x10381*x5245 + x10381*x5257 + x10382*x5245 - x10382*x5257 - x10383*x5245 + x10383*x5257 + x10384*x5245 - x10384*x5257 - x10385*x5525 - x10386*x154 + x10388 + x1167*x9956 - x154*x9877 - x154*x9878 + x154*x9886 + x154*x9888 + x154*x9890 + x154*x9897 + x2367*x9936 + x2448 - x4272*x5517 + x4326 - x5219*x9973 - x5219*x9975 - x5227*x9977 - x5249*x9973 - x5249*x9975 + x5251*x9894 + x5251*x9895 + x5260*x9900 - x5989*x9977 + x6007*x9894 + x6011*x9991) + x168*(p5_b_dot*x10299 + p5_b_dot_dt*x10307 + p6_b_dot*x10002 + x10010 + x10108*x10399 + x10109*x542 + x10115*x1167 - x10118*x1167 + x10120 - 8*x10206 - 8*x10207 - x10208*x5337 - x10208*x5611 - x10209*x5337 - x10209*x5611 + x10228*x5339 + x10228*x5359 + x10230*x5342 + x10230*x5345 + x10232*x158 + x10233*x158 + 32*x10245 + x10248*x5334 + x10249*x5334 + x10259*x5928 - x10260*x5590 + x10260*x5597 - x10260*x5601 - x10267*x5369 + x10270 + x10272 + x10274 + x10275 + x10277 + x10278 + x10279 + x10280 - x10281 - x10282 + x10284*x1119 - x10285 - x10287 + x10289 + x10290 + x10291 - x10292 - x10293 - x10294 - x10295 - x10296 - x10297 - x10298 + x10308 - x10319*x158 - x10320*x158 + x10321*x5339 + x10321*x5359 + x10322*x5342 + x10322*x5345 + x10323*x5613 + x10324*x5613 + x10325*x5264 + x10325*x5291 + x10326*x5264 + x10327*x5267 + x10327*x5269 + x10328*x5267 + x10328*x5269 + x10341*x5916 - x10343*x5362 - x10345*x5362 - x10345*x5593 + x10350*x5590 - x10350*x5597 + x10350*x5601 - x10352*x5537 - x10356*x5543 + x10356*x5545 - x10356*x9533 + x10358*x5362 + x10358*x5593 + x10360*x5362 + x10362*x5369 - x10371*x5339 - x10371*x5359 - x10372*x5339 - x10372*x5359 - x10373*x5342 - x10373*x5345 - x10374*x5342 - x10374*x5345 - x10389*x5168 - x10389*x5178 - x10390*x5168 - x10390*x5178 + x10391*x5615 + x10392*x5615 - x10393*x5245 + x10393*x5257 - x10394*x512 - x10395*x5276 - x10396*x5279 - x10397*x5279 - x10398*x5276 + x10400*x5616 - x10401*x5283 - x10401*x5286 - x10402*x5283 - x10402*x5286 + x10403*x1119 + x10405 - x1167*x9988 + x2385 - x2396*x5674 + x2446 - x4282*x5538 + x4294 + x4325) + x63*(p6_i_dot*x10135 + x10009 + 6*x10090 - x10123 + x10127 + x10128 - x10129 - x10130 - x10131 - x10133 + x10141 + x10142 - x10143 - x10144 + x10145*x1167 - x10150 + x10152 + x10176*x10420 + x10177*x327 + x10178*x327 - x10185*x5634 - x10189*x10424 - x10192*x5644 - x10193*x5644 - x10194*x10424 - x10195*x327 - x10197*x5640 - 18*x10206 - 18*x10207 - x10208*x5441 - x10208*x5655 - x10209*x5441 - x10209*x5655 + x10228*x5375 + x10228*x5400 + x10229*x5376 + x10229*x5401 + x10230*x5378 + x10230*x6043 + x10231*x6032 + x10231*x6033 + x10232*x129 + x10233*x129 + 72*x10245 + x10248*x5427 + x10249*x5427 + x10259*x5440 + x10260*x5399 - x10260*x5404 - x10267*x5405 - x10267*x5407 + x10269*x5629 + x10269*x5651 + x10271*x5629 + x10271*x5651 - x10286*x6339 - x10288*x5653 + x10300*x5553 + x10300*x5573 + x10301*x5298 + x10301*x5556 - x10302*x5633 - x10302*x5648 - x10303*x5559 + 6*x10310 + 6*x10311 - x10319*x327 - x10320*x327 + x10323*x5657 + x10324*x5657 + x10325*x5375 + x10325*x5400 + x10326*x5375 + x10326*x5400 + x10327*x5378 + x10327*x6043 + x10328*x5378 - 6*x10331 - 6*x10333 - 6*x10334 - 6*x10335 - 6*x10336 + 16*x10338 + x10339*x6339 + 16*x10340 + x10341*x5634 - x10343*x5402 - x10345*x5402 - x10345*x6061 - 6*x10347 - 6*x10349 + x10350*x5653 - x10352*x5633 + x10356*x5399 - x10356*x5404 - x10356*x6065 + x10358*x5644 + x10359*x5645 + x10360*x5644 + x10361*x327 + x10362*x5640 + x10367*x5399 - x10367*x5404 - x10369*x5312 - x10371*x5629 - x10371*x5651 - x10372*x5629 - x10372*x5651 - 16*x10379 - x10380*x129 - x10385*x5645 - x10386*x129 + x10391*x5658 + x10392*x5658 + x10400*x5663 - x10406*x5168 - x10406*x5178 - x10407*x5168 - x10407*x5178 + x10408 - x10409*x5168 - x10409*x5178 - x10410*x5168 - x10410*x5178 - x10412 - x10414 + x10415 + x10416 + x10417 + x10419 + x10421*x5168 + x10421*x5178 + x10422*x5168 + x10422*x5178 - x10423*x5245 + x10423*x5257 + x10425*x533 - x10425*x563 - x10426 - x10427 + x10428 + x10429 - x10430*x5245 + x10430*x5257 + x10431*x5245 - x10431*x5257 - x10432*x6062 - x10433*x6062 + x10434 + x10436 - x129*x9877 - x129*x9878 + x129*x9886 + x129*x9897 + x2254*x5395 - x2396*x6056 - x2419 - x2420 + x2421 + x2422 + x2423 + x2425 + x2426 + x2427 + x2428 - x2429 - x2430 - x2431 - x2432 + x4245 - x4272*x5634 - x4329 - x4330 + x4331 + x4332 + x4333 + x4335 + x4336 + x4337 + x4338 - x4339 - x4340 - x4341 - x4342 + x4408 - x5376*x9879 - x5376*x9880 - x5378*x9980 - x5399*x9991 - x5401*x9879 - x5401*x9880 + x5402*x9894 + x5402*x9895 + x5404*x9991 + x5405*x9900 + x5407*x9900 - x6032*x9881 - x6033*x9881 - x6043*x9980 + x6061*x9894) + x70*(-p6_b*x10201 + p6_b*x5192 - p6_b*x5196 + p6_b*x5507 - p6_b_dot*x5718 - p6_b_dot*x7317 - p6_b_dt*x5172 + p6_b_dt*x5175 + p6_i*x5203 - p6_i_dot*x7309 + x10153 - x10174 + x10177 + x10178 + x10179*x5476 + x10179*x5506 + x10180*x5476 + x10180*x5506 + x10181*x5432 + x10181*x5435 + x10182*x5432 + x10182*x5435 + x10184 - x10186 - x10187 - x10188 - x10189*x1167 + x10190*x5168 - x10190*x5178 + x10191*x5172 - x10191*x5175 - x10192*x5317 - x10192*x5496 - x10193*x5317 - x10195 - x10196*x5403 - x10197*x5501 + x10198*x5245 - x10198*x5257 + x10199*x6693 - x1176*x5710 + x2346*x5285 - x2355*x5241 + x2356 - x2415*x5712 - x4264 + x4269 + x4271 + x4273 + x5282*x548 - x5405 - x5407 + x600*x7314 + x7310 - x7312)) + x69*(L*(-x10736*x327 + 2*x10738 + x10739*x5264 + x10739*x5291 + x10740*x5267 + 4*x10741 + x10743*x5168 - x10743*x5178 - 32*x10746 + x10747*x5172 - x10747*x5175 - 16*x10748 - x10749*x5465 - 4*x10750 - x10751*x5276 - x10752*x1268 + x10753*x5245 - x10753*x5257 - x10754*x5611 + x10754*x7932 - x10755*x5645 - x10756*x5283 - x10756*x5286 + x10757*x327 - 64*x10758 + x2554 + x4429 + x4431 + x7935) - x106*(-p7_i_dot*x10944 - p8_b*x10550 + p8_b*x10631 + p8_b*x1268*x5679 - p8_b*x4472*x5276 - 19*x10438 - 38*x10447 - x10448*x10905 - x10449*x10905 - x10453*x1268 + x10455*x10905 - x10456*x10931 + 19*x10459 - 76*x10460 - x10461*x10742 - x10503*x10787 + x10662 - x10737*x629 - 4*x10738 - x10739*x5339 - x10739*x5359 - x10740*x5342 - 8*x10741 + 38*x10746 + 19*x10748 + 8*x10750 + x10751*x5538 - x10752*x1220 + x10755*x10931 + x10756*x5678 + 76*x10758 + x10760*x321 + x10761*x321 + x10762*x5671 + x10762*x5688 + x10764*x5672 + x10764*x5673 - x10783*x5682 - x10783*x5691 + 2*x10792 + 2*x10793 + x10794*x5264 + x10794*x5291 + x10795*x5264 + x10795*x5291 + x10796*x5267 + x10796*x5269 + x10798*x5267 + x10798*x5269 + 19*x10801 - x10814*x5476 - x10814*x5506 - x10816*x5432 - x10816*x5435 - 19*x10829 - x10833*x5543 + x10833*x5545 - 8*x10834 - x10837*x5283 - x10837*x5286 - x10838*x5283 + x10846*x5680 - x10848*x5680 + x10849*x5465 - x10851*x10951 - x10853*x634 + x10855*x5490 + x10861*x5264 + x10861*x5291 + x10866*x5267 + x10866*x5269 - x10879*x5543 + x10879*x5545 + x10901 + x10902 - x10903*x6708 + x10903*x6711 + x10904*x6708 - x10904*x6711 - x10906*x5172 + x10906*x5175 - x10907*x5808 - x10907*x5863 - x10908*x5808 - x10908*x5863 - x10909*x5811 - x10909*x5813 - x10910*x5168 - x10910*x5178 - x10911*x5245 + x10911*x5257 - x10912*x1858 - x10913*x1858 - x10914*x5476 - x10914*x5506 - x10915*x5432 - x10915*x5435 - x10916*x5276 - x10917*x5276 + x10918*x5476 + x10918*x5506 + x10919*x5476 + x10919*x5506 + x10920*x5432 + x10920*x5435 + x10921*x5432 + x10921*x5435 + x10922*x5674 + x10923 + x10924 + x10925 - x10926 - x10927 - x10928 - x10929 + x10930*x5834 - x10930*x6424 - x10932*x5834 + x10932*x6424 - x10933*x5279 + 3*x10934 + x10935*x7121 + 3*x10936 + 3*x10937*x578 + x10938*x5847 + x10939*x1268 + x10940*x5847 + x10941*x5210 - x10942 - x10943 - x10945 - x10946*x5860 + x10946*x5881 - x10947*x5272 - x10948*x5245 + x10948*x5257 - x10949*x5286 - x10950*x5283 + x10953*x5245 - x10953*x5257 + x10954*x5874 + x10955*x5877 + x10956*x5874 + x10957*x1858 + x10958*x5882 + x10958*x5888 + x10962 + x10967 - x2558*x5677 + x2595 + x2596 - x2598 - x2600 - x2602 + x2603 + x2605 + x2607 + x2608 + x2609 - x2611 - x2613 - x4436*x5676 + x4459 + x4460 + x4461 - x4462 - x4464 - x4465 - x4466 + x4467 + x4469 + x4471 + x4473 + x4474 - x4476 - x4477) + x123*(-p7_i_dot*x8009 - 48*x10438 - 96*x10447 - x10448*x6709 - x10449*x6709 + x10455*x6709 - x10456*x7995 + 48*x10459 - 192*x10460 + x10483*x8001 + 16*x10500 - x10511*x1268 - x10512*x623 + 16*x10524 + 32*x10525 - x10535*x1268 + 64*x10555 + 96*x10746 + 48*x10748 + x10755*x7995 + 192*x10758 + x10782*x8312 - x10788 - x10789 - x10790 - x10791 + 6*x10792 + 6*x10793 + x10794*x5375 + x10794*x5400 + x10795*x5375 + x10795*x5400 + x10797*x5168 + x10797*x5178 + x10799*x5168 + x10799*x5178 + 34*x10800 + 48*x10801 - x10802*x6708 + x10802*x6711 + x10803*x6708 - x10803*x6711 + x10805*x6708 - x10805*x6711 - x10806*x5172 + x10806*x5175 - x10808*x5172 + x10808*x5175 - x10809*x5168 + x10809*x5178 - x10810*x5172 + x10810*x5175 - x10811 - x10812*x1220 - x10813*x593 - x10814*x5264 - x10814*x5291 - x10815*x5671 - x10815*x5688 - x10816*x5267 - x10816*x5269 - x10817*x5672 - x10817*x5673 - x10818*x321 - x10819*x321 + x10820 + x10822 + x10823 + x10824 + 34*x10825 + 68*x10826 + x10827*x5834 - x10827*x6424 - x10828*x5834 + x10828*x6424 - 48*x10829 - x10831*x5189 + x10831*x5198 - x10832*x5698 + x10833*x5399 - x10833*x5404 - 24*x10834 - x10835 + x10836*x5611 - x10836*x7932 - x10837*x5783 - x10838*x5783 - x10839*x1220 + x10840*x1268 + x10841*x5276 + x10842 + x10845 + x10847 - x10848*x5322 + x10849*x5543 - x10849*x5545 + x10850*x5283 + x10851*x5153*x629 + x10853*x630 + x10854*x5286 + x10855*x5682 + 136*x10856 + x10858*x5690 + x10900 + x2563 + x2565 - x2567 - x2569 - x2573 + x2601*x5279 + x2714 + x4438 + x4439 + x4440 - x4441 - x4443 - x4445 + x4446*x5276 - x4447 - x4448 - x4450 + x4541 + x5469) - x123*(-x10462*x154 - x10463*x154 + x10471*x154 + x10473*x154 + x10475*x154 + x10478*x5251 + x10478*x6007 + x10479*x5251 + x10481*x154 + x10484*x5260 + x10520*x2572 + x10540*x1268 - x10556*x5219 - x10556*x5249 - x10558*x5219 - x10558*x5249 - x10560*x5227 - x10560*x5989 - x10574*x5246 + x10574*x5258 + x10574*x6011 + x10592 + 5*x10676 + x10684 + x10760*x286 + x10761*x286 - x10768*x5517 - x10777*x5524 - x10778*x5524 - x10780*x286 - x10783*x5520 - 12*x10792 - 12*x10793 - x10794*x5553 - x10794*x5573 - x10795*x5553 - x10795*x5573 - x10796*x5298 - x10796*x5556 - x10798*x5298 - x10798*x5556 + x10814*x5219 + x10814*x5249 + x10816*x5227 + x10816*x5989 + x10818*x154 + x10819*x154 + x10821*x2472 + 48*x10834 + x10837*x5565 + x10838*x5565 + x10844*x1220 + x10848*x5572 + x10849*x5246 - x10849*x5258 - x10849*x6011 - x10855*x5260 + x10859*x5509 + x10859*x5528 + x10861*x5509 + x10861*x5528 + x10863*x5512 + x10863*x5514 + x10866*x5512 + x10866*x5514 - x10879*x5530 + 3*x10901 + 3*x10902 - x10912*x286 - x10913*x286 + x10914*x5219 + x10914*x5249 + x10915*x5227 + x10915*x5989 + x10916*x5559 + x10917*x5559 + x10918*x5716 + x10918*x5862 + x10919*x5716 + x10919*x5862 - 5*x10923 - 5*x10924 - 5*x10925 - 3*x10926 - 3*x10927 - 3*x10928 - 3*x10929 + 7*x10934 + x10935*x9234 + 7*x10936 - x10938*x5251 - x10940*x5251 - x10941*x5253 - 3*x10942 - 3*x10943 - x10944*x2505 - 3*x10945 + x10946*x5530 - x10947*x6006 + x10952*x5860 - x10952*x5881 - x10952*x6625 + x10954*x5524 + x10955*x5525 + x10956*x5524 + x10957*x286 + x10958*x5520 + x10967 - x10968*x5509 - x10968*x5528 - x10969*x5509 - x10969*x5528 - x10970*x5512 - x10970*x5514 - x10971*x5512 - x10971*x5514 - x10972*x5168 - x10972*x5178 + x10973*x5168 + x10973*x5178 + x10974*x5168 + x10974*x5178 - x10975*x5245 + x10975*x5257 - 7*x10976 - 7*x10977 - x10978*x154 + x10979*x5517 - x10980*x5245 + x10980*x5257 + x10981*x5245 - x10981*x5257 - x10982*x5525 - x10983*x154 + x10984 + x2654 - x4436*x5517 + x4487) + x168*(p7_b_dot*x10890 + p8_b_dot*x10585 - x10571*x1268 + x10593 + x10690*x10994 + x10691*x602 + x10698*x1268 - x10701*x1268 + x10702*x10897 + x10704 - 8*x10792 - 8*x10793 - x10794*x5337 - x10794*x5611 - x10795*x5337 - x10795*x5611 + x10814*x5339 + x10814*x5359 + x10816*x5342 + x10816*x5345 + x10818*x158 + x10819*x158 + 32*x10834 + x10837*x5334 + x10838*x5334 + x10848*x5928 - x10849*x5590 + x10849*x5597 - x10849*x5601 - x10855*x5369 + x10860 + x10862 + x10864 + x10865 + x10867 + x10868 + x10869 + x10870 - x10871 - x10872 + x10874*x1220 - x10875 - x10878 + x10880 + x10881 + x10882 - x10883 - x10884 - x10885 - x10886 - x10887 - x10888 - x10889 + x10899 - x10912*x158 - x10913*x158 + x10914*x5339 + x10914*x5359 + x10915*x5342 + x10915*x5345 + x10916*x5613 + x10917*x5613 + x10918*x5264 + x10918*x5291 + x10919*x5264 + x10920*x5267 + x10920*x5269 + x10921*x5267 + x10921*x5269 - x10938*x5362 - x10940*x5362 - x10941*x5365 + x10946*x5590 - x10946*x5597 + x10946*x5601 - x10947*x5537 - x10952*x5543 + x10952*x5545 - x10952*x9533 + x10954*x5362 + x10954*x5593 + x10956*x5362 + x10958*x5369 - x10968*x5339 - x10969*x5339 - x10969*x5359 - x10970*x5342 - x10970*x5345 - x10971*x5342 - x10971*x5345 - x10978*x158 + x10979*x5916 - x10985*x5168 - x10985*x5178 - x10986*x5168 - x10986*x5178 + x10987*x5615 + x10988*x5615 - x10989*x5245 + x10989*x5257 - x10990*x5276 - x10991*x5279 - x10992*x5279 - x10993*x5276 + x10995*x1220 - x10996*x5290 - x10997*x5283 - x10997*x5286 - x10998*x5283 - x10998*x5286 + x10999*x1220 + x11001 + x2590 - x2601*x5674 + x2652 - x4446*x5538 + x4457 + x4486) + x63*(p8_i_dot*x10718 + x10461*x11012 - x10462*x129 - x10463*x129 - x10464*x5376 - x10464*x5401 - x10465*x5376 - x10465*x5401 - x10466*x6032 - x10466*x6033 + x10471*x129 + x10478*x5402 + x10478*x6061 + x10479*x5402 + x10481*x129 + x10484*x5405 + x10484*x5407 - x10563*x5378 - x10563*x6043 - x10574*x5399 + x10574*x5404 + x10592 + 6*x10676 - x10707 + x10711 + x10712 - x10713 - x10714 - x10715 - x10717 + x10724 + x10725 - x10726 - x10727 + x10728*x1268 - x10733 + x10735 - x10747*x10877 + x10759*x11016 + x10760*x327 + x10761*x327 - x10768*x5634 - x10772*x11020 - x10777*x5644 - x10778*x5644 - x10779*x11020 - x10780*x327 - x10783*x5640 - 18*x10792 - 18*x10793 - x10794*x5441 - x10794*x5655 - x10795*x5441 - x10795*x5655 + x10814*x5375 + x10814*x5400 + x10815*x5376 + x10815*x5401 + x10816*x5378 + x10816*x6043 + x10817*x6032 + x10817*x6033 + x10818*x129 + 72*x10834 + x10837*x5427 + x10838*x5427 + x10848*x5440 + x10849*x5399 - x10849*x5404 - x10855*x5405 - x10858*x5406 + x10859*x5629 + x10859*x5651 + x10861*x5629 + x10861*x5651 + x10891*x5553 + x10891*x5573 + x10892*x5298 + x10892*x5556 - x10893*x5633 - x10893*x5648 - x10894*x5559 + 6*x10901 + 6*x10902 - x10912*x327 - x10913*x327 + x10916*x5657 + x10917*x5657 + x10918*x5375 + x10918*x5400 + x10919*x5375 + x10919*x5400 + x10920*x5378 + x10920*x6043 + x10921*x5378 - 6*x10924 - 6*x10926 - 6*x10927 - 6*x10928 - 6*x10929 + 16*x10934 + x10935*x6339 + 16*x10936 - x10938*x5402 - x10940*x5402 - x10941*x5403 - 6*x10943 - 6*x10945 + x10946*x5653 - x10947*x5633 + x10952*x5399 - x10952*x5404 - x10952*x6065 + x10954*x5644 + x10955*x5645 + x10956*x5644 + x10957*x327 + x10958*x5640 + x10964*x5399 - x10964*x5404 - x10966*x5312 - x10968*x5629 - x10968*x5651 - x10969*x5629 - x10969*x5651 - 16*x10976 + x10979*x5634 - x10982*x5645 - x10983*x129 + x10987*x5658 + x10988*x5658 - x11002*x5168 - x11002*x5178 - x11003*x5168 - x11003*x5178 + x11004 - x11005*x5168 - x11005*x5178 - x11006*x5168 - x11006*x5178 - x11008 - x11009 + x11010 + x11011 + x11013 + x11015 + x11017*x5168 + x11017*x5178 + x11018*x5168 + x11018*x5178 - x11019*x5245 + x11019*x5257 + x11021*x593 - x11021*x623 - x11022*x5234 - x11023 - x11024 + x11025 + x11026 + x11027*x1220 - x11028*x5245 + x11028*x5257 + x11029*x5245 - x11029*x5257 - x11030*x6062 - x11031*x6062 + x11032 - x11034*x633 + x11036 + x2458*x5395 - x2601*x6056 - x2624 - x2625 + x2626 + x2627 + x2628 + x2630 + x2631 + x2632 + x2633 - x2634 - x2635 - x2636 - x2637 + x4409 - x4436*x5634 - x4490 - x4491 + x4492 + x4493 + x4494 + x4496 + x4497 + x4498 + x4499 - x4500 - x4501 - x4502 - x4503 + x4544) + x70*(-p8_b*x10787 + p8_b*x5192 - p8_b*x5196 + p8_b*x5507 - p8_b_dot*x6680 - p8_b_dt*x5172 + p8_b_dt*x5175 + p8_i*x5203 - p8_i_dot*x7939 + x10736 - x10757 + x10760 + x10761 + x10762*x5476 + x10762*x5506 + x10763*x5476 + x10763*x5506 + x10764*x5432 + x10764*x5435 + x10765*x5432 + x10765*x5435 + x10767 - x10769 - x10770 - x10771 - x10772*x1268 + x10773*x5168 - x10773*x5178 - x10774*x2555 + x10775*x5172 - x10775*x5175 - x10776*x1276 - x10777*x5317 - x10777*x5496 - x10778*x5317 - x10780 - x10781*x5339 + x10781*x6677 - x10782*x6679 - x10783*x5501 + x10784*x5245 - x10784*x5257 + x10785*x5205 + x2551*x5285 - x2560*x5241 + x2561 - x4428 + x4433 + x4435 + x4437 + x5282*x608 + x7941 - x7944 - x7947 - x7952)) + x69*(L*(-p10_i*x8522 + x1798 + x3844 + x3846 - x385*x8512 - x387*x8513 + x5168*x8516 - x5178*x8516 + x5245*x8533 - x5257*x8533 + x5267*x8505 + x5291*x8501 - x5465*x8528 + 400*x5632 + x5834*x8530 - x6424*x8530 + 200*x6682 - x7003*x8532 + x7005*x8532 - 20*x8500 + 4*x8502 + 2*x8504 + 4*x8506 - 40*x8509 - 20*x8510 + x8517*x8518 - x8518*x8526 + x8518*x8527 - x8519*x8520 - x8523*x8524 - 4*x8529 - 80*x8531) - x106*(p10_b*x387*x5679 - p10_b_dot*x8696 - p10_i*x8763 - p10_i_dot*x7375 - p10_i_dot*x8777 - p9_i*x8522 - x1*x1857*x8539 - x1313*x8513 + x158*x8538*x8709 - x1805*x5677 - x1858*x8730 + x1858*x8787 - x1863*x8760 + x1867 + x321*x8535 + x321*x8536 - x3851*x5676 - x387*x8735 + x387*x8774 + x3881*x8765 + x3886 - x390*x8512 - x420*x8503 + x421*x8744 + x5168*x8713 - x5168*x8717 - x5168*x8719 - x5168*x8727 + x5168*x8741 + x5172*x8721 - x5175*x8721 + x5178*x8713 + x5178*x8717 + x5178*x8719 - x5178*x8727 + x5178*x8741 + x5210*x8771 + x5241*x8767 - x5245*x8722 - x5245*x8729 - x5245*x8782 + x5245*x8785 + x5257*x8722 + x5257*x8729 + x5257*x8782 - x5257*x8785 + x5264*x8573 + x5264*x8574 + x5267*x8576 + x5267*x8605 + x5269*x8605 - x5272*x8781 - x5276*x8736 - x5276*x8759 + x5291*x8573 + x5291*x8574 + x5317*x8769 - x5336*x8638 + x5375*x8665 - x5432*x8617 - x5432*x8734 + x5432*x8739 + x5432*x8740 - x5435*x8617 - x5435*x8734 + x5435*x8738 + x5435*x8739 + x5435*x8740 - x5465*x8784 - x5476*x8733 + x5476*x8737 + x5490*x8692 - x5506*x8733 + x5506*x8737 - x5506*x8783 - x5543*x8640 - x5543*x8697 + x5545*x8640 + x5545*x8697 + x5547*x8623 + x5671*x8540 + x5680*x8661 - x5682*x8559 + x5688*x8540 - x5811*x8728 - x5813*x8728 - x5834*x8756 + x5834*x8757 + x5847*x8770 + x5847*x8772 - x5853*x8775 - x5860*x8779 - x5862*x8723 - x5867*x8534 - x5867*x8556 - x5870*x8534 - x5870*x8556 + x5874*x8786 + x5874*x8788 + x5877*x8789 + x5881*x8779 + x5882*x8790 + x6424*x8756 - x6424*x8757 - x6708*x8718 + x6711*x8718 + x7367*x8667 + 23*x8500 - 8*x8502 - 4*x8504 - 8*x8506 + 46*x8509 + 23*x8510 + x8511*x8743 - x8514*x8618 + x8514*x8792 - x8517*x8720 + x8520*x8758 - x8523*x8764 - x8524*x8761 + x8526*x8720 - x8527*x8720 + 8*x8529 + 92*x8531 + x8545*x8742 + x8561*x8738 - 23*x8565 + 2*x8571 + 2*x8572 + 4*x8578 + 12*x8580 - 46*x8586 - 23*x8591 + x8612*x8725 + 12*x8630 + 24*x8631 - x8635*x8758 - 12*x8636 - 8*x8641 + 23*x8668 - 92*x8669 - x8671*x8780 + 48*x8695 - x8710*x8726 - 8*x8712 + x8715 + x8716 - 6*x8724 - x8725*x8726 + x8726*x8794 - x8731*x8732 + x8731*x8768 + x8747 + x8748 - x8750 - x8752 - x8753 - x8755 + 3*x8766 - x8776 - x8778 + x8801 + x8808) + x123*(p9_b_dot*x8696 - x1313*x8608 - x1313*x8646 + x1813 + x1816 + x1818 + x1837 - x321*x8619 - x321*x8620 + x3855 + x3858 + x3860 + x3867*x8512 + x3868*x5276 - x387*x8609 - x387*x8648 + x387*x8649 + x3871 - x413*x8610 - x414*x8545 + x421*x8522 + x5168*x8575 - x5168*x8581 - x5168*x8616 + x5172*x8590 - x5172*x8596 - x5175*x8590 + x5175*x8596 + x5178*x8575 + x5178*x8581 - x5178*x8616 - x5189*x8643 + x5198*x8643 + 42*x5198*x8665 - x5245*x8593 + x5257*x8593 - x5267*x8617 - x5269*x8617 + x5283*x8684 + x5286*x8683 + x5375*x8573 + x5375*x8574 + x5399*x8640 + x5400*x8573 + x5400*x8574 - x5404*x8640 + x5469 + x5543*x8680 - x5545*x8680 - x5671*x8615 + x5682*x8692 - x5688*x8615 - x5698*x8637 - x5698*x8644 - x5783*x8645 - x5783*x8647 - x5834*x8632 + x5834*x8633 + x6424*x8632 - x6424*x8633 - x6708*x8583 + x6708*x8588 + x6708*x8595 + x6711*x8583 - x6711*x8588 - x6711*x8595 + 60*x8500 + 120*x8509 + 60*x8510 + x8513*x926 - x8517*x8589 + x8520*x8634 + x8523*x8685 + x8526*x8589 - x8527*x8589 + 240*x8531 - 60*x8565 - x8566 - x8567 - x8568 - x8569 + 6*x8571 + 6*x8572 + 12*x8577 + 12*x8578 + 20*x8579 + 42*x8580 - 120*x8586 - 60*x8591 - x8597 - x8599 - x8601 - x8603 - x8604 - x8606 - x8607 - x8611 - x8612*x8613 - x8614 + x8622 + x8624 + x8625 + 20*x8626 + x8627 + 40*x8629 + 42*x8630 + 84*x8631 - x8634*x8635 - 42*x8636 - x8639 - 24*x8641 + x8650 + x8651 + x8654 + x8655 + x8657 + x8660 + x8662 + x8663*x8664 + x8666*x8667 + 60*x8668 - 240*x8669 - x8670*x8671 - x8674 - x8678 - x8679 - x8681*x8682 + x8686 + x8688 + x8689 + x8690 + x8691 + x8693 + 80*x8694 + 168*x8695 + x8699 + x8711) - x123*(p10_b*x8843 - p10_b_dot*x2685*x5853 + x1313*x8659 + x154*x8619 + x154*x8620 - x154*x8818 - x154*x8819 - x154*x8830 - x154*x8831 + x154*x8834 + x154*x8835 - x154*x8849 + x154*x8853 + x1812 - x1862*x8777 + x1866 - x1871 - x1872 + x1873 + x1874 + x1876 + x1878 + x1879 + x1880 - x1883 - x1885 - x1887 - x1889 + x1896*x8545 + x286*x8535 + x286*x8536 - x286*x8550 - x286*x8558 - x286*x8730 + x286*x8787 - x3851*x5517 + x3854 + x387*x8824 + x387*x8844 + x3885 - x3889 - x3891 + x3892 + x3893 + x3895 + x3896 + x3897 + x3898 - x3900 - x3903 - x3905 - x3906 + x5168*x8821 + x5168*x8822 + x5178*x8821 + x5178*x8822 + x5219*x8733 + x5219*x8783 - x5219*x8813 - x5219*x8814 + x5227*x8617 + x5227*x8734 - x5227*x8815 - x5227*x8816 - x5245*x8827 + x5245*x8845 - x5245*x8846 + x5246*x8680 - x5246*x8848 + x5249*x8733 + x5249*x8783 - x5249*x8813 - x5249*x8814 - x5251*x8770 - x5251*x8772 + x5251*x8850 + x5251*x8852 - x5253*x8771 + x5253*x8851 + x5257*x8827 - x5257*x8845 + x5257*x8846 - x5258*x8680 + x5258*x8848 - x5260*x8692 + x5260*x8855 - x5298*x8576 - x5298*x8809 - x5379*x8812 + x5379*x8826 - x5386*x8812 + x5386*x8826 + x5512*x8605 - x5512*x8811 + x5514*x8605 - x5514*x8811 - x5517*x8828 - x5520*x8559 + x5520*x8790 - x5524*x8534 - x5524*x8556 + x5524*x8786 + x5524*x8788 - x5525*x8687 + x5525*x8789 - x5527*x8847 + x5528*x8600 - x5528*x8723 - x5530*x8697 + x5530*x8779 - x5553*x8573 - x5553*x8574 - x5556*x8809 + x5559*x8736 + x5565*x8647 - x5573*x8573 - x5573*x8574 + x5716*x8737 + x5860*x8784 + x5862*x8737 - x5881*x8784 + x5989*x8617 + x5989*x8734 - x5989*x8815 - x5989*x8816 - x6006*x8781 - x6011*x8680 + x6011*x8848 + x8514*x8810 + x8566 + x8567 + x8568 + x8569 - 12*x8571 - 12*x8572 - 24*x8578 - x8582*x8810 + x8597 - x8622 - x8624 - x8625 - x8627 + x8639 + 48*x8641 - x8657 - x8660 - x8662 + 6*x8709*x8738 + 3*x8715 + 3*x8716 - 14*x8724 + x8725*x8820 - x8745*x8832 - 5*x8747 - 5*x8748 - 3*x8750 - 3*x8752 - 3*x8755 + 7*x8766 - x8773*x8832 - 3*x8776 - x8794*x8820 + x8808 - 7*x8817 + 12*x8823 + 14*x8825 - 7*x8829 + 5*x8836 + 5*x8838 + 7*x8839 + 7*x8841 + 7*x8842 + 14*x8854 + 24*x8856 + x8866 + x8887) + x168*(p10_b_dot*x8857 + p10_b_dot*x8903 + p10_i_dot*x8905 + p9_b_dot*x8701 + x1313*x8653 + x1313*x8897 + x1313*x8915 + x158*x8620 - x158*x8730 - x158*x8831 + x1815 + x1817 + x1836 + x1903 + x1905 - x1906 - x1907 + x1908 + x1909 + x1911 + x1912 - x1913 - x1914 + x1921*x8545 + x379*x8906 + x3857 + x3859 - x387*x8897 - x387*x8898 + x387*x8908 - x387*x8912 + x3870 + x3910 + x3911 - x3912 - x3913 + x3914 + x3915 + x3916 + x3917 - x3918 - x3919 - x4539*x8545 - x5168*x8888 - x5168*x8889 - x5178*x8888 - x5178*x8889 - x5245*x8895 + x5245*x8909 - x5245*x8911 + x5257*x8895 - x5257*x8909 + x5257*x8911 + x5264*x8737 + x5264*x8893 + x5267*x8739 + x5267*x8740 + x5269*x8739 + x5269*x8740 - x5276*x8899 - x5276*x8900 - x5276*x8902 - x5279*x8901 - x5283*x8913 - x5283*x8914 - x5286*x8914 + x5291*x8737 - x5332*x8623 + x5332*x8894 + x5334*x8645 + x5334*x8647 - x5334*x8656 - x5336*x8661 - x5336*x8847 + x5336*x8917 + x5337*x8501 - x5337*x8573 - x5337*x8574 - x5339*x8723 + x5339*x8733 + x5339*x8783 + x5342*x8617 + x5342*x8734 - x5342*x8890 + x5345*x8617 + x5345*x8734 - x5345*x8890 - x5359*x8723 + x5359*x8733 + x5359*x8783 - x5362*x8770 - x5362*x8772 + x5362*x8786 + x5362*x8788 - x5365*x8771 + x5365*x8789 - x5369*x8692 + x5369*x8790 - x5537*x8781 - x5543*x8784 + x5545*x8784 - x5590*x8528 + x5597*x8528 - x5601*x8680 - x5611*x8573 - x5611*x8574 + 16*x8502 + 8*x8504 + 16*x8506 - 16*x8529 - x8545*x8891 - 8*x8571 - 8*x8572 - 16*x8577 - 16*x8578 - x8582*x8598 - x8587*x8865 + x8599 + x8601 + x8603 + x8604 + x8606 + x8607 + x8610*x8891 + x8611 + x8612*x8618 + x8614 + 32*x8641 - x8650 - x8651 - x8654 - x8655 + x8674 + x8678 + x8679 - x8686 - x8688 - x8689 - x8690 - x8691 - x8693 - x8699 - x8700*x8892 + x8710*x8916 + x8711 + 16*x8712 - 4*x8748 - x8794*x8916 + 8*x8823 + 16*x8856 + x8941 + x8945) + x63*(p10_b_dot*x5667 - p10_i_dot*x5665 + p10_i_dot*x5666 + p9_b_dot_dt*x3943*x8682 + x129*x8619 + x129*x8620 - x129*x8818 - x129*x8819 - x129*x8830 + x129*x8834 - x129*x8849 + x129*x8853 + x1313*x8969 + x158*x8499 - x158*x8517 + x158*x8526 - x158*x8527 + x158*x8544 - x158*x8547 + x1850*x5211 + x1927*x8545 + x1932 + x323*x8961 + x327*x8535 + x327*x8536 - x327*x8550 - x327*x8558 - x327*x8730 + x327*x8787 - x3851*x5634 - x387*x8969 + x387*x8981 + x3932 - x413*x8971 + x414*x8971 + x5152*x8959 - x5157*x8959 - x5168*x8672 - x5168*x8946 - x5168*x8949 - x5168*x8953 + x5168*x8966 + x5178*x8672 - x5178*x8946 - x5178*x8949 - x5178*x8953 + x5178*x8966 - x5245*x8967 + x5245*x8982 - x5245*x8983 + x5257*x8967 - x5257*x8982 + x5257*x8983 + x5298*x8703 - x5312*x8805 + x5322*x8675*x8738 + x5375*x8737 - x5375*x8814 + x5375*x8893 + x5376*x8615 - x5376*x8952 + x5376*x8963 + x5378*x8617 + x5378*x8734 + x5378*x8739 + x5378*x8740 - x5378*x8815 - x5379*x8950 + x5379*x8965 - x5386*x8950 + x5386*x8965 + x5399*x8680 + x5399*x8784 + x5399*x8803 - x5399*x8848 + x5400*x8737 - x5400*x8814 + x5401*x8615 - x5401*x8952 - x5402*x8770 - x5402*x8772 + x5402*x8850 + x5402*x8852 - x5403*x8771 + x5403*x8851 - x5404*x8680 - x5404*x8784 - x5404*x8803 + x5404*x8848 - x5405*x8692 + x5405*x8855 - x5406*x8987 + x5407*x8855 - x5412*x8623 + x5412*x8894 + x5427*x8645 + x5427*x8647 - x5427*x8656 - x5429*x8661 + x5441*x8501 - x5441*x8573 - x5441*x8574 + x5461*x8587 - x5466*x8587 + x5540*x8553 + x5553*x8702 + x5556*x8703 - x5559*x8705 + x5572*x8807 - x5633*x8704 - x5633*x8781 - x5634*x8828 - x5640*x8559 + x5640*x8790 - x5644*x8534 - x5644*x8556 + x5644*x8786 + x5644*x8788 - x5645*x8687 + x5645*x8789 - x5648*x8704 + x5651*x8600 - x5651*x8723 - x5652*x8698 + x5652*x8917 - x5655*x8573 - x5655*x8574 - x5659*x8528 - x5660*x8587 + x5661*x8587 + x5662*x8528 + x6043*x8617 + x6043*x8734 + x6043*x8739 + x6043*x8740 - x6043*x8815 + x6056*x8837 - x6062*x8775 - x6062*x8986 - x6065*x8784 + x6354*x892 + 36*x8502 + 18*x8504 + 36*x8506 + 4*x8510 + x8514*x8948 - 36*x8529 + 16*x8531 - x8545*x8951 - x8549*x8970 - x8557*x8970 - 18*x8571 - 18*x8572 - 36*x8577 - 36*x8578 + 2*x8580 - x8582*x8948 - x8608*x926 + x8610*x8951 + 72*x8641 + x8700*x8964 - x8710*x8984 + 36*x8712 + 6*x8715 + 6*x8716 - 32*x8724 - 6*x8747 - 6*x8750 - 6*x8752 - 6*x8753 - 6*x8755 + 16*x8766 - 6*x8776 - 6*x8778 - 16*x8817 + 18*x8823 + 32*x8825 - 16*x8829 + 6*x8836 + 16*x8839 + 16*x8841 + 16*x8842 + 32*x8854 + 36*x8856 + x8866 - x8947 - x8954 - x8956 - x8957 - x8958 + x8960 + x8962 - x8974 - x8975 + x8977 + x8979 - x8985 + x8990) + x70*(-p10_b*x5196 + p10_b*x5507 - p10_b_dot*x7000 - p10_b_dot*x7002 + p10_i*x5203 + x15*x8539 + x1795*x5285 + x1807 - x3842 + x3848 + x385*x5282 + x3850 + x3852 - x387*x8549 - x5166*x8537 + x5168*x8552 - x5178*x8552 + x5205*x8563 - x5211*x8537 + x5245*x8554 + x5245*x8555 + x5245*x8560 - x5257*x8554 - x5257*x8555 - x5257*x8560 - 40*x5259 - x5317*x8534 - x5317*x8556 + x5432*x8541 + x5432*x8542 + x5435*x8538 + x5435*x8541 + x5435*x8542 - x5465*x8559 + x5476*x8540 - x5496*x8534 - x5501*x8559 + x5506*x8540 - x6389*x6696 + x6998*x8562 - x6998*x892 + x8499 - x8517 - x8518*x8553 + x8526 - x8527 + x8535 + x8536 + x8538*x8561 + x8544 - x8546 - x8547 - x8548 - x8550 - x8558)) + x69*(-L*x1796 + L*x1798 - x106*(x1849 + x1867) + x123*(x1814 + x1820 + x1828 + x1837) + x123*(x1814 - x1866 + x1870 + x1871 + x1872 - x1873 - x1874 - x1876 - x1878 - x1879 - x1880 + x1883 + x1885 + x1887 + x1889 + x1895 + x1901) - x168*(x1820 - x1836 - x1903 - x1905 + x1906 + x1907 - x1908 - x1909 - x1911 - x1912 + x1913 + x1914 + x1920 + x1924) + x63*(x1926 + x1929 + x1932) + x70*(-x1800 - x1801 + x1807)) + x69*(-L*x1934 + L*x1936 + x106*(-x1977 - x1978 + x1980 + x1982 + x1984 - x1986 - x1988 - x1990 - x1991 - x1992 + x1995 + x1997 + x2007) - x123*(x1956 + x2036 + x2037) - x123*(-x1945 - x1947 + x1949 + x1951 + x1956 + x1963 + x1973 + x1976) + x168*(x1973 + x2028 + x2033 + x2035 + x320) - x63*(x2008 + x2009 - x2010 - x2011 - x2012 - x2013 - x2014 - x2015 - x2016 + x2017 + x2018 + x2020 + x2021 + x2024 + x2027 + x316 - x329) + x70*(-x1938 - x1939 + x1943)) + x69*(-L*x2039 + L*x2041 + x106*(-x2080 - x2081 + x2083 + x2085 + x2086 - x2087 - x2089 - x2091 - x2092 - x2093 + x2095 + x2097 + x2105) - x123*(x1956 + x2032 + x2063 + x2138 + x2139) - x123*(-x2051 - x2054 + x2056 + x2058 + x2063 + x2070 + x2077 + x2079) + x168*(x2033 + x2077 + x2129 + x2134 + x2137) - x63*(x1963 + x2024 + x2106 + x2107 - x2108 - x2109 - x2110 - x2112 - x2114 - x2115 - x2116 + x2117 + x2118 + x2120 + x2122 + x2125 + x2128) + x70*(-x2043 - x2044 + x2049)) + x69*(-L*x2141 + L*x2143 + x106*(-x2184 - x2185 + x2187 + x2189 + x2191 - x2192 - x2194 - x2196 - x2197 - x2198 + x2200 + x2202 + x2213) - x123*(x2063 + x2133 + x2163 + x2243 + x2244) - x123*(-x2152 - x2154 + x2156 + x2158 + x2163 + x2170 + x2180 + x2183) + x168*(x2134 + x2180 + x2234 + x2239 + x2242) - x63*(x2070 + x2125 + x2214 + x2215 - x2216 - x2217 - x2218 - x2220 - x2221 - x2222 - x2223 + x2224 + x2225 + x2226 + x2227 + x2230 + x2233) + x70*(-x2145 - x2146 + x2150)) + x69*(-L*x2246 + L*x2248 + x106*(-x2287 - x2288 + x2290 + x2292 + x2293 - x2294 - x2296 - x2298 - x2299 - x2300 + x2302 + x2304 + x2312) - x123*(x2163 + x2238 + x2270 + x2344 + x2345) - x123*(-x2258 - x2261 + x2263 + x2265 + x2270 + x2277 + x2284 + x2286) + x168*(x2239 + x2284 + x2335 + x2340 + x2343) - x63*(x2170 + x2230 + x2313 + x2314 - x2315 - x2316 - x2317 - x2319 - x2321 - x2322 - x2323 + x2324 + x2325 + x2327 + x2328 + x2331 + x2334) + x70*(-x2250 - x2251 + x2256)) + x69*(-L*x2347 + L*x2349 + x106*(-x2390 - x2391 + x2393 + x2395 + x2397 - x2398 - x2400 - x2402 - x2403 - x2404 + x2406 + x2408 + x2418) - x123*(x2270 + x2339 + x2369 + x2447 + x2448) - x123*(-x2358 - x2360 + x2362 + x2364 + x2369 + x2376 + x2386 + x2389) + x168*(x2340 + x2386 + x2439 + x2444 + x2446) - x63*(x2277 + x2331 + x2419 + x2420 - x2421 - x2422 - x2423 - x2425 - x2426 - x2427 - x2428 + x2429 + x2430 + x2431 + x2432 + x2435 + x2438) + x70*(-x2351 - x2352 + x2356)) + x69*(-L*x2450 + L*x2452 + x106*(-x2491 - x2492 + x2494 + x2496 + x2497 - x2498 - x2500 - x2502 - x2503 - x2504 + x2506 + x2508 + x2516) - x123*(x2369 + x2443 + x2474 + x2548 + x2550) - x123*(-x2462 - x2465 + x2467 + x2469 + x2474 + x2481 + x2488 + x2490) + x168*(x2444 + x2488 + x2539 + x2544 + x2547) - x63*(x2376 + x2435 + x2517 + x2518 - x2519 - x2520 - x2521 - x2523 - x2525 - x2526 - x2527 + x2528 + x2529 + x2531 + x2532 + x2535 + x2538) + x70*(-x2454 - x2455 + x2460)) + x69*(-L*x2552 + L*x2554 + x106*(-x2595 - x2596 + x2598 + x2600 + x2602 - x2603 - x2605 - x2607 - x2608 - x2609 + x2611 + x2613 + x2623) - x123*(x2474 + x2543 + x2574 + x2653 + x2654) - x123*(-x2563 - x2565 + x2567 + x2569 + x2574 + x2581 + x2591 + x2594) + x168*(x2544 + x2591 + x2645 + x2650 + x2652) - x63*(x2481 + x2535 + x2624 + x2625 - x2626 - x2627 - x2628 - x2630 - x2631 - x2632 - x2633 + x2634 + x2635 + x2636 + x2637 + x2640 + x2644) + x70*(-x2556 - x2557 + x2561)) + x69*(-L*x2655 + L*x2656 + x106*(-x2672 - x2673 + x2674 + x2676 + x2678 - x2679 - x2680 - x2682 - x2683 - x2684 + x2686 + x2688 + x2695) - x123*(x2574 + x2649 + x2668 + x2716 + x2717) - x123*(x1920 - x2660 - x2662 + x2664 + x2666 + x2668 + x2671) + x168*(x1919 + x1926 + x2650 + x2713 + x2715) - x63*(-x1930 + x2581 + x2640 + x2696 + x2697 - x2698 - x2699 - x2700 - x2702 - x2703 - x2704 - x2705 + x2706 + x2707 + x2709 + x2710 + x2712) + x70*(-x1899 - x1900 + x2658)) + x69*(-L*x2718 + L*x2720 - x106*(x2745 + x2757) - x123*(x141 + x153 - x2723 - x2725 + x2726 + x2729 + x2730 + x2734) + x123*(-x2756 + x2758 + x2759 + x2761 - x2762 - x2763 - x2765 - x2766 - x2767 - x2768 + x2770 + x2773 + x2774 + x2776 + x2782 + x2786 + x2791) - x168*(x141 - x163 + x166 + x2792 + x2793 - x2795 - x2796 - x2799 - x2801 + x2803 + x2805 + x2814 + x2815 + x2820) + x63*(x2824 + x2825 + x2827) + x70*(-x144 - x145 + x2721)) + x69*(-L*x275 + L*x277 - x106*(x322 + x325) + x123*(x302 + x320) + x123*(-x287 - x288 - x292 + x296 + x302) - x168*(-x304 + x307 + x310 + x316) + x63*(x328 + x331) + x70*(-x279 - x280 + x285)) + x69*(-L*x2828 + L*x2829 + x106*(-x2847 - x2849 + x2851 + x2853 + x2854 - x2855 - x2858 - x2859 - x2860 + x2862 + x2864 + x2867 + x2872) - x123*(x2789 + x2814 - x2834 - x2837 + x2838 + x2841 + x2846) + x123*(x2791 + x2867 + x2873 + x2874 - x2875 - x2876 - x2877 - x2878 - x2879 - x2880 + x2882 + x2885 + x2886 + x2888 + x2894 + x2897 + x2903) - x168*(x2782 + x2820 + x2904 + x2905 - x2906 - x2907 - x2908 - x2909 + x2912 + x2913 + x2920 + x2921 + x2924 + x2925) + x63*(x2824 + x2928 + x2929 + x2932) + x70*(-x2784 - x2785 + x2832)) + x69*(-L*x2933 + L*x2934 + x106*(-x2951 - x2953 + x2954 + x2955 + x2956 - x2957 - x2959 - x2960 - x2961 + x2963 + x2966 + x2970 + x2976) - x123*(x2901 + x2920 - x2938 - x2940 + x2942 + x2945 + x2950) + x123*(x2903 + x2970 + x2977 + x2979 - x2981 - x2982 - x2984 - x2985 - x2986 - x2987 + x2989 + x2992 + x2993 + x2995 + x3001 + x3004 + x3009) - x168*(x2894 + x2924 + x3010 + x3011 - x3013 - x3014 - x3015 - x3016 + x3018 + x3020 + x3030 + x3031 + x3035 + x3036) + x63*(x2928 + x3039 + x3040 + x3046) + x70*(-x2895 - x2896 + x2936)) + x69*(-L*x3047 + L*x3048 + x106*(-x3067 - x3069 + x3071 + x3073 + x3074 - x3075 - x3077 - x3078 - x3079 + x3081 + x3083 + x3086 + x3091) - x123*(x3007 + x3030 - x3053 - x3056 + x3058 + x3061 + x3066) + x123*(x3009 + x3086 + x3092 + x3093 - x3094 - x3095 - x3096 - x3097 - x3098 - x3099 + x3101 + x3104 + x3105 + x3107 + x3114 + x3117 + x3123) - x168*(x3001 + x3035 + x3124 + x3125 - x3126 - x3127 - x3128 - x3130 + x3133 + x3134 + x3141 + x3142 + x3145 + x3146) + x63*(x3039 + x3149 + x3150 + x3154) + x70*(-x3002 - x3003 + x3051)) + x69*(-L*x3155 + L*x3156 + x106*(-x3173 - x3175 + x3176 + x3177 + x3178 - x3179 - x3181 - x3182 - x3183 + x3185 + x3188 + x3193 + x3199) - x123*(x3121 + x3141 - x3160 - x3162 + x3164 + x3167 + x3172) + x123*(x3123 + x3193 + x3200 + x3202 - x3203 - x3204 - x3206 - x3207 - x3208 - x3209 + x3211 + x3214 + x3215 + x3217 + x3223 + x3226 + x3231) - x168*(x3114 + x3145 + x3232 + x3233 - x3235 - x3236 - x3238 - x3239 + x3240 + x3242 + x3249 + x3250 + x3254 + x3255) + x63*(x3149 + x3258 + x3259 + x3263) + x70*(-x3115 - x3116 + x3158)) + x69*(-L*x3264 + L*x3265 + x106*(-x3284 - x3286 + x3288 + x3290 + x3291 - x3292 - x3294 - x3295 - x3296 + x3298 + x3300 + x3304 + x3309) - x123*(x3229 + x3249 - x3270 - x3273 + x3275 + x3278 + x3283) + x123*(x3231 + x3304 + x3310 + x3311 - x3312 - x3313 - x3314 - x3315 - x3316 - x3317 + x3319 + x3322 + x3323 + x3325 + x3331 + x3334 + x3340) - x168*(x3223 + x3254 + x3341 + x3342 - x3343 - x3344 - x3345 - x3346 + x3349 + x3350 + x3357 + x3358 + x3361 + x3362) + x63*(x3258 + x3365 + x3366 + x3369) + x70*(-x3224 - x3225 + x3268)) + x69*(-L*x3370 + L*x3371 + x106*(-x3388 - x3390 + x3391 + x3392 + x3393 - x3394 - x3396 - x3397 - x3398 + x3400 + x3403 + x3408 + x3414) - x123*(x3338 + x3357 - x3375 - x3377 + x3379 + x3382 + x3387) + x123*(x3340 + x3408 + x3415 + x3417 - x3419 - x3420 - x3422 - x3423 - x3424 - x3425 + x3427 + x3430 + x3431 + x3433 + x3439 + x3442 + x3447) - x168*(x3331 + x3361 + x3448 + x3449 - x3451 - x3452 - x3454 - x3455 + x3456 + x3458 + x3467 + x3468 + x3472 + x3473) + x63*(x3365 + x3476 + x3477 + x3481) + x70*(-x3332 - x3333 + x3373)) + x69*(-L*x3482 + L*x3483 + x106*(-x3502 - x3505 + x3507 + x3509 + x3510 - x3511 - x3513 - x3514 - x3515 + x3517 + x3519 + x3522 + x3527) - x123*(x3445 + x3467 - x3488 - x3491 + x3493 + x3496 + x3501) + x123*(x3447 + x3522 + x3528 + x3529 - x3530 - x3531 - x3532 - x3533 - x3534 - x3535 + x3537 + x3540 + x3541 + x3543 + x3549 + x3552 + x3558) - x168*(x3439 + x3472 + x3558 - x3559 + x3560 + x3561 - x3562 - x3563 - x3564 - x3565 + x3566 + x3567 + x3569 + x3570 + x3577) + x63*(x3476 + x3579 + x3581 + x3585) + x70*(-x3440 - x3441 + x3486)) + x69*(-L*x3586 + L*x3587 - x106*(x3604 + x3613 + x3622) + x123*(x3549 + x3579 + x3594 + x3599) - x123*(x3604 + x3659 + x3668 + x3674) + x168*(x3577 + x3579 + x3657 + x3659 + x3666) - x63*(-x3582 - x3624 + x3625 + x3626 - x3627 - x3628 - x3630 - x3631 - x3633 - x3634 - x3635 - x3637 + x3639 + x3641 + x3643 + x3645 + x3654) + x70*(-x3550 - x3551 + x3589));
T_others[1] = -MOI*x5201 + x69*(x106*(x11200 + x11201) - x123*(x11197 - x11199)) + x69*(-L*x11200 - q1_b_dot_dt*x11203 + x106*(-x11200 + x11201 + x11267 + x11268) - x123*(-x11197 + x11263 - x11264 - x11266)) + x69*(-p10_b_dot_dt*x11203 - p10_b_dt*x11202 + x106*(-x11212 - x11216 + x11217 + x11218) - x123*(-x11210 + x11211 - x11213 - x11215)) + x69*(-p1_b_dot_dt*x11203 - p1_b_dt*x11202 + x106*(-x11208 + x11209) - x123*(-x11204 - x11206)) + x69*(-p2_b_dot_dt*x11203 - p2_b_dt*x11202 + x106*(x11208 + x11209 - x11223 + x11224) - x123*(x11204 - x11219 - x11220 - x11222)) + x69*(-p3_b_dot_dt*x11203 - p3_b_dt*x11202 + x106*(x11223 + x11224 - x11229 + x11230) - x123*(x11219 - x11225 - x11226 - x11228)) + x69*(-p4_b_dot_dt*x11203 - p4_b_dt*x11202 + x106*(x11229 + x11230 - x11235 + x11236) - x123*(x11225 - x11231 - x11232 - x11234)) + x69*(-p5_b_dot_dt*x11203 - p5_b_dt*x11202 + x106*(x11235 + x11236 - x11241 + x11242) - x123*(x11231 - x11237 - x11238 - x11240)) + x69*(-p6_b_dot_dt*x11203 - p6_b_dt*x11202 + x106*(x11241 + x11242 - x11247 + x11248) - x123*(x11237 - x11243 - x11244 - x11246)) + x69*(-p7_b_dot_dt*x11203 - p7_b_dt*x11202 + x106*(x11247 + x11248 - x11253 + x11254) - x123*(x11243 - x11249 - x11250 - x11252)) + x69*(-p8_b_dot_dt*x11203 - p8_b_dt*x11202 + x106*(x11253 + x11254 - x11259 + x11260) - x123*(x11249 - x11255 - x11256 - x11258)) + x69*(-p9_b_dot_dt*x11203 - p9_b_dt*x11202 + x106*(-x11217 + x11218 + x11259 + x11260) - x123*(-x11211 + x11255 - x11261 - x11262)) + x69*(-q2_b_dot_dt*x11203 - q2_b_dt*x11202 + x106*(-x11267 + x11268 + x11273 + x11274) - x123*(-x11263 + x11269 - x11270 - x11272)) + x69*(-q3_b_dot_dt*x11203 - q3_b_dt*x11202 + x106*(-x11273 + x11274 + x11279 + x11280) - x123*(-x11269 + x11275 - x11276 - x11278)) + x69*(-q4_b_dot_dt*x11203 - q4_b_dt*x11202 + x106*(-x11279 + x11280 + x11285 + x11286) - x123*(-x11275 + x11281 - x11282 - x11284)) + x69*(-q5_b_dot_dt*x11203 - q5_b_dt*x11202 + x106*(-x11285 + x11286 + x11291 + x11292) - x123*(-x11281 + x11287 - x11288 - x11290)) + x69*(-q6_b_dot_dt*x11203 - q6_b_dt*x11202 + x106*(-x11291 + x11292 + x11297 + x11298) - x123*(-x11287 + x11293 - x11294 - x11296)) + x69*(-q7_b_dot_dt*x11203 - q7_b_dt*x11202 + x106*(-x11297 + x11298 + x11303 + x11304) - x123*(-x11293 + x11299 - x11300 - x11302)) + x69*(-q8_b_dot_dt*x11203 - q8_b_dt*x11202 + x106*(-x11303 + x11304 + x11309 + x11310) - x123*(-x11299 + x11305 - x11306 - x11308)) + x69*(-q9_b_dot_dt*x11203 - q9_b_dt*x11202 + x106*(-x11309 + x11310 - x11312 + x11315) - x123*(-x11305 + x11311 - x11313 - x11314)) + x69*(-2.0/3.0*x11316 - x123*(-x11339 - x11340 - x11342*x154 - x11343*x154 - x11344*x154 - x11345*x154 + 10*x11346 + x11347*x5222 - x11350*x154 - x11352*x5252 + x11354*x154 + x11355*x154 + x11356*x154 + x11357*x154 + x11358*x5224 - x11361*x11362 - x11362*x11364 - x11363*x154 - x11365*x154 + x11378 + x11397) + x168*(x11407 + x11429) + x173*(-x11318 + x11320 + 3*x11321 - 3*x11322 - x11325 + x11327 - 3*x11330 + 3*x11333 + x11334 - x11335) + x63*(-x11342*x129 - x11344*x129 - x11345*x129 + 12*x11346 - x11350*x129 + x11354*x129 + x11356*x129 + x11357*x129 + x11358*x3943 - x11361*x11436 - x11363*x129 - x11364*x11436 - x11365*x129 + x11378 - x11430 - x11431 - x11432*x120 + x11433*x5221 - x11434*x5252 + x11435*x120 + x11454 + x11457)) + x69*(L*(q1_b*x11654 + q1_b*x11656 - q1_i*x11653 + q1_i*x11655 - x11370*x5302 - 4*x11400 + x11648 + x11650 + x11652 + x11662 - x5309*x7) - x106*(-q1_b*x11762 + q1_b*x11767 + q1_b*x11770 - q1_b*x11778 + q1_b*x11789 + q1_b*x11791 - q1_b*x5353 + q1_b*x5791 - q1_b*x5927 - q1_b_dot*x11788 + q2_b*x11654 - q2_i*x11653 + q2_i*x11655 - x11349*x11787 - x11351*x5849 + x11353*x11787 - x11360*x11784 - x11360*x5800 - x11360*x5801 + x11360*x5925 + x11375*x5784 - x11385*x663 + 4*x11387 + 8*x11400 - 4*x11402 - 4*x11403 + 4*x11404 - 4*x11405 - x11447 + x11474*x5782 + x11474*x5784 + x11474*x5868 - x11613*x5221 - x11624*x183 - x11624*x5235 - x11625*x127 - x11625*x131 + x11655*x49 - x11679*x5505 - x11724 + x11725 + x11726 - x11728 - x11730 - x11731 - x11732 + x11733 + x11734 + x11736 + x11737 + x11738 + x11739 + x11741 + x11742 + x11743 + x11744 + x11746 + x11747 + x11748 + x11749 - x11750 - x11752 - x11754 - x11755*x3687 - x11756*x1858 - 3*x11758 - x11759*x2754 - 3*x11761 + x11763 + x11764 + x11765 + x11766 + 6*x11768 + x11771 + x11772 + x11773*x3687 + x11775 + x11776 - x11777 - x11779 - x11781 - x11782 - x11783 - x11784*x5161 - x11785*x11786 + x11790*x5252 + x11792*x1858 + 3*x11793 + x11794*x2754 + x11795*x5255 + x11797 + x11799 - x11800*x5873 - x11801*x11802 - x11802*x11804 - x11803*x5873 + x11805*x5252 + x11807*x5252 + x11813 + x11819 + x11825 - x5161*x5800 - x5161*x5801 + x5161*x5925 + x5247*x5828 - x5278*x5822 - x5278*x5823 + x5394*x5807 - x5547*x5745 - x5547*x5746 - x5679*x5778 + x5722*x662 - x5821*x7) + x123*(q1_b*x11677 - q1_b*x11682 + q1_b*x11697 + q1_b*x5915 + q2_b*x11432 - q2_b*x11435 + q2_b*x11698 - x11374*x5801 + x11378 - x11379 + x11380 + x11382 - x11384 - x11386 + x11388 + x11392 - x11394 - x11395 - x11396 + x11429 - x11474*x5801 + x11613*x5759 + x11624*x3687 - x11654*x662 - x11655*x663 - x11656*x662 + x11669 + x11670 - x11674 - x11675 + x11676 + 6*x11678 + x11679*x5694 - 12*x11680 - x11681 - 6*x11685 - x11686*x11687 - x11689 - x11690 + x11691*x5505 - x11692 - x11693 + x11695 - x11699 + x11700 + x11701 + x11702*x5782 + x11702*x5784 - x11703*x662 + x11705 + x11711 + x11723 - x5312*x5745 - x5312*x5746 + x5505*x5828 + x5782*x6624 + x5784*x6624 + x5790*x7) - x123*(-q1_b*x11913 - q1_b*x11925 + q1_b*x11930 - q1_b*x11932 - q1_b*x11934 + q2_b*x11925 + q2_b*x11932 + q2_b*x11934 + x11342*x286 + x11343*x286 + x11344*x286 + x11345*x286 - 14*x11346 - x11347*x5816 + x11347*x5934 - x11348*x6003 - x11349*x11935 + x11350*x286 + x11352*x5849 - x11352*x5960 + x11353*x11935 - x11354*x286 - x11355*x286 - x11356*x286 - x11357*x286 - x11360*x11933 - x11360*x6003 - x11361*x11939 + x11361*x11943 + x11363*x286 - x11364*x11939 + x11364*x11943 + x11365*x286 - x11383*x5821 + x11385*x2764 + x11389*x11931 + x11397 - x11515*x5222 + x11515*x5807 + x11517*x5252 - x11517*x5873 + x11537*x5821 - 12*x11678 + 24*x11680 + x11686*x2788 + 3*x11746 + 3*x11747 + 3*x11748 + 3*x11749 + 5*x11752 + 5*x11754 - x11756*x286 - 7*x11758 - x11759*x2775 - 7*x11761 + 14*x11768 - x11769*x11936 - 5*x11771 + x11774*x11936 + 3*x11775 + 3*x11776 - 3*x11779 - 3*x11781 - 3*x11782 - 3*x11783 + x11792*x286 + 7*x11793 + x11794*x2775 + 3*x11797 + 3*x11799 + x11801*x5925 + x11804*x5925 + x11825 - 12*x11839 + x11846*x154 - x11854*x2764 - x11855*x154 + x11863*x11936 + x11865*x11936 - x11869*x154 - x11871*x154 - x11878*x154 + x11881*x154 + x11883*x154 + 5*x11885 - x11890*x154 - x11892*x154 - x11894*x154 - x11896*x154 + x11901 - x11909 - x11910 - x11911 - x11912 - x11915 - x11916 + x11918 + x11920 + x11921 + x11922 + x11923 + x11924 - 6*x11926 - 6*x11927 - 5*x11928 - x11929*x5952 - x11933*x5161 + 5*x11937 - x11938*x5873 - x11940*x5873 + x11941*x5849 + x11942*x5849 + x11956 - x2760*x5150 - x5161*x6003 - x5255*x6012 + x5745*x6741 + x5746*x6741) + x168*(-q1_b*x11830 - q1_b*x11838 + q1_b*x11847 - q1_b*x11853 + q1_b*x11857 + q1_b*x11864 + q1_b*x11866 - q2_b*x11841 - q2_b*x11852 + q2_b*x11858 - q2_b*x11861 - q2_b*x11862 - x11360*x11850 - x11360*x11851 - x11368*x5829 + x11374*x5925 + x11374*x5926 + x11375*x5925 + x11375*x5926 + x11377*x6064 + x11385*x2794 + x11407 + x11408 + x11409 + x11410 + x11411 + x11412 + x11413 - x11414 - x11415 + x11416 + x11417*x5849 - x11417*x5873 + x11418 - x11419 - x11420 - x11421 - x11422 + x11423*x11859 - x11424 + x11425 + x11426 + x11427 + x11428 + x11474*x5925 - 8*x11678 - x11679*x5536 + 16*x11680 + x11684*x2802 + 8*x11685 + x11686*x11848 + x11691*x5271 + 4*x11752 - x11756*x158 - x11757*x2802 + 8*x11768 - 4*x11771 - x11780*x5505 + x11792*x158 + x11824*x5919 - x11826 - x11827 - x11828 - x11829 - x11831*x5821 + x11833 + x11834 + x11836 + x11837 - 8*x11839 - x11840*x5784 + x11842 + x11843 + x11844 + x11845 + x11846*x158 - x11849 - x11850*x5161 - x11851*x5161 - x11854*x2794 - x11855*x158 - x11856 + x11860*x5849 - x11860*x5873 + x11902 + x11908 - x2749*x5505 - x5238*x5929 - x5271*x5919 + x5332*x5807 - x5332*x5816 + x5643*x5745 + x5643*x5746 + x5690*x5849 - x5690*x5873 + x5821*x8676 - x5839*x7 - x5917*x7) + x63*(-q1_b*x11961 - q1_b*x11974 + q1_b*x11976 - q1_b*x11978 - q1_b*x11982 + q2_b*x11974 + q2_b*x11978 + q2_b*x11982 - x10658*x11679 + x11341*x11975 + x11342*x327 + x11343*x327 + x11344*x327 + x11345*x327 - 32*x11346 + x11349*x11975 - x11349*x11981 + x11350*x327 - x11353*x11975 + x11353*x11981 - x11354*x327 - x11355*x327 - x11356*x327 - x11357*x327 - x11360*x11979 - x11360*x11980 + x11360*x11990 - x11361*x11987 + x11361*x5397 + x11363*x327 - x11364*x11987 + x11364*x5397 + x11365*x327 + x11385*x2826 + x11432*x662 - x11433*x5759 + x11434*x5849 - x11434*x5960 - x11435*x662 + x11446 + x11457 - x11583*x5222 + x11583*x5807 - x11588*x5280 + x11591*x5252 - x11591*x5873 - x11677*x662 - 18*x11678 + 36*x11680 + x11682*x662 + 18*x11685 + x11686*x6045 + x11691*x5694 + 6*x11746 + 6*x11747 + 6*x11749 + 6*x11752 - x11756*x327 - 16*x11758 - x11759*x6057 - 16*x11761 + 32*x11768 - x11769*x11985 - 6*x11771 + x11774*x11985 + 6*x11775 + 6*x11776 - 6*x11779 - 6*x11781 - 6*x11782 - 6*x11783 + x11792*x327 + 16*x11793 + x11794*x6057 + x11796*x11975 + x11796*x6012 + x11798*x11975 + x11798*x6012 - 24*x11822 - 18*x11839 - x11854*x2826 + x11863*x11985 + x11865*x11985 - x11869*x129 - x11873*x5694 - x11878*x129 + x11881*x129 + 6*x11885 - x11890*x129 - x11892*x129 - x11894*x129 - x11896*x129 + x11901 - 12*x11926 - 12*x11927 + 6*x11937 - x11957 - x11958 - x11959 - x11960 - x11962*x5821 - x11964 - x11965 + x11966 + x11967 + x11968 + x11969 + x11970 + x11971 + x11972 - x11973*x5784 + x11977*x5821 - x11979*x5161 - x11980*x5161 - x11984 - x11986*x5873 + x11988*x5849 + x11990*x5161 + x11991 + x11997 + x12001 + x2749*x5694 - x5270*x7367 + x5280*x5712 + x5312*x5934 - x5694*x5952 + x5745*x7357 + x5746*x7357 + x5849*x5887 - x5873*x7951) + x70*(-q1_b_dot*x11666 - q1_b_dot*x5722 + x11342 + x11343 + x11344 + x11345 + x11348*x5252 + x11350 - x11354 - x11355 - x11356 - x11357 + x11360*x5250 + x11363 + x11365 + x11663 + x11664 + x11665 + x11667 + x11668 + x5161*x5250 - x5278*x5733)) + x69*(L*(p2_b*x13044 - x11370*x8995 + x11375*x9000 + x11474*x9000 + x12002 + x13040 + x13042 + x13043 + x13056 - x5505*x9173 - x5547*x8993 - x7*x8997) - x106*(p1_b*x13044 + p1_b*x9561 + p2_b*x11466 - p2_b*x13229 + p2_b*x13231 + p2_b*x9097 - p2_b*x9131 - p2_b*x9257 - x11351*x9191 - x11360*x13226 - x11360*x9108 - x11360*x9113 + x11375*x9093 + x11375*x9095 + x11474*x9093 + x11474*x9095 + x11474*x9202 - x11487*x9003 + x11491*x9003 - x11607*x8997 - x11614*x9000 - x11624*x3941 - x11625*x1940 - x11785*x13228 - x11800*x9208 - x11801*x13239 - x11803*x9208 - x11804*x13239 + x13044*x479 - x13063*x13227 + x13065*x13227 + x13069*x450 + x13131*x480 - x13171 + x13172 + x13173 - x13175 - x13177 - 4*x13178 - x13179 - x13180 + x13181 + x13182 + x13183 + x13184 + x13185 + x13186 + x13188 + x13189 + x13190 + x13191 + x13192 + x13194 + x13195 - x13196 - x13197 - x13198 - x13200 - 3*x13202 - x13203*x1994 - x13205*x1858 - x13206*x3983 + x13208 + x13209 + x13210 + x13211 + 4*x13212 + 4*x13213 + 6*x13214 + x13215 + x13216 + x13217 + x13218 + x13219 - x13220 - x13222 - x13224 - x13225 - x13226*x5161 - x13230*x5531 + x13232*x1994 + x13233*x1858 + x13234*x8675 + x13235*x5531 + x13236*x5531 + x13237 + x13238 + x13240*x479 + x13241*x479 + x13255 + x13261 + x479*x9068 - x5161*x9108 - x5161*x9113 + x5278*x9071 - x5278*x9169 - x5278*x9170 + x5332*x8993 - x5505*x9133 - x5505*x9248 - x5505*x9249 - x5547*x9051 - x5547*x9052 - x5547*x9118 - x5679*x9086 - x7*x9167 - x7*x9168) + x123*(-L*x13085 + L*x13096 + p1_b*x13094 - p1_b*x13104 + p1_b*x13114 + p2_b*x13095 - p2_b*x13109 + p2_b*x13115 + p2_b*x5586 + x11360*x13127 + x11360*x13128 - x11374*x9113 - x11375*x9108 + x11467 - x11474*x9108 - x11474*x9113 - x11504*x3943 + x11505*x3943 - x11506*x3943 + x11507*x3943 - x13044*x450 + x13048*x3943 - 12*x13050 + x13052*x3943 - x13054*x3943 - x13082 + x13083 + x13084 - x13086 - x13088 - x13091 - x13092 - x13093 + x13098 + x13099 - 12*x13100 - x13101 - 10*x13103 - 6*x13107 - 6*x13108 - x13110 - x13111 - x13112 - x13113 + 10*x13117 + x13118 + x13119 - x13121 - x13122 - 10*x13124 + x13125*x5505 + x13126 + x13127*x5161 + x13128*x5161 + 10*x13130 - x13131*x249 + x13137 + x13170 + x1983*x5505 + x3951*x7 - x5312*x9051 - x5312*x9052 + x5547*x9071 + x5694*x9248 + x5694*x9249 + x7*x9098) - x123*(-p1_i*x13266 - p2_i*x11535 + p2_i_dot*x13283 + x11347*x5511 - x11347*x9071 - x11352*x5497 + x11352*x9191 - x11360*x13284 - x11360*x13285 - x11383*x9167 - x11383*x9168 - x11481*x154 - x11482*x154 - x11483*x154 - x11484*x154 + x11487*x13289 - x11488*x154 - x11491*x13289 + x11492*x154 + x11493*x154 + x11494*x154 + x11495*x154 - x11498*x154 - x11499*x154 - x11500*x154 - x11501*x154 + 10*x11514 - x11515*x9118 + x11515*x9224 + x11517*x9037 - x11517*x9208 - x11519*x13294 - x11519*x13295 + x11527*x13289 + x11528*x13289 + x11537*x9167 + x11537*x9168 + x11539*x1954 + x11546 + x11576 - x11938*x9208 - x11940*x9208 + x11941*x9191 + x11942*x9191 - x11951*x9093 - x11951*x9095 + x13060*x286 + x13061*x286 + x13062*x286 - x13063*x13287 + x13064*x286 + x13065*x13287 - x13066*x286 - x13067*x286 - x13068*x286 + x13072*x286 + x13073*x286 + 24*x13100 + x13106*x299 - 14*x13147 - x13155*x9158 - 14*x13157 + 3*x13191 + 3*x13192 + 3*x13194 + 3*x13195 + 5*x13196 + 5*x13197 + 5*x13198 + 5*x13200 - 7*x13202 - x13205*x286 + 14*x13214 - 5*x13215 - 5*x13216 - 5*x13217 + 3*x13218 + 3*x13219 - 3*x13220 - 3*x13222 - 3*x13224 - 3*x13225 + x13233*x286 + x13235*x13296 + x13236*x13296 + 3*x13237 + 3*x13238 + x13261 - x13262 - x13263 - x13264 - x13265 - x13267 - x13268 + x13270 + x13272 + x13273 + x13275 + x13276 + x13277 - 10*x13278 - 7*x13279 - x13280*x286 - 6*x13281 - 6*x13282 - x13284*x5161 - x13285*x5161 - 10*x13286 - x13288*x5498 + 7*x13290 + x13291*x286 + x13292*x5224 + 14*x13293 + x13294*x13297 + x13295*x13297 + x13298 + x6741*x9051 + x6741*x9052) + x168*(-p1_b*x13307 - p1_b*x13315 + p1_b*x13318 - p1_b*x13320 - p1_b*x13321 - p2_b*x13316 + p2_b*x13319 + p2_b*x13322 + p2_b*x13323 - x11360*x13313 - x11360*x13314 + x11374*x9255 + x11374*x9256 + x11375*x9255 + x11375*x9256 + x11417*x9191 - x11417*x9208 + x11474*x9255 + x11474*x9256 + x11577 + x11607*x3951 + x11647 - x11831*x9167 - x11831*x9168 - x11840*x9093 - x11840*x9095 + x11860*x9191 - x11860*x9208 + 16*x13100 + 8*x13107 + 8*x13108 + x13141 + x13142 + x13143 + x13144 + x13145 + x13146 - x13148 - x13149 + x13150 + x13151 - x13152 - x13153 - x13154 - x13156 - x13158 + x13159 + x13160 + x13161 + x13162 + x13169 + 4*x13197 + 4*x13198 + 4*x13200 - x13203*x2034 - x13205*x158 + 8*x13214 - 4*x13215 - 4*x13216 - 4*x13217 - x13221*x5505 + x13232*x2034 + x13233*x158 - 8*x13278 - x13280*x158 - 4*x13281 - 4*x13282 + x13291*x158 + 8*x13293 - x13299 - x13300 - x13301 - x13302 + x13303 + x13304 + x13305 + x13306 + x13308 + x13309 + x13310 + x13311 - x13312 - x13313*x5161 - x13314*x5161 - x13317 + x13327 - x5332*x9071 + x5332*x9224 - x5505*x9252 - x5536*x9248 - x5536*x9249 + x5643*x9051 + x5643*x9052 + x5690*x9191 - x5690*x9208 - x7*x9178 - x7*x9182 + x8676*x9167 + x8676*x9168) + x63*(-x10658*x9248 - x10658*x9249 - x10774*x13204 - x11360*x13343 - x11360*x13344 + x11433*x5478 - x11434*x5497 + x11434*x9191 - x11481*x129 - x11483*x129 - x11484*x129 + x11487*x13350 - x11488*x129 - x11491*x13350 + x11492*x129 + x11494*x129 + x11495*x129 - x11498*x129 - x11499*x129 - x11500*x129 - x11501*x129 + 12*x11514 - x11526*x9343 + x11527*x13288 + x11527*x13350 + x11528*x13288 + x11528*x13350 + x11576 - x11583*x9118 + x11583*x9224 + x11591*x9037 - x11591*x9208 - x11592*x13294 - x11592*x13295 + x11604 - x11962*x9167 - x11962*x9168 - x11973*x9093 - x11973*x9095 + x11977*x9167 + x11977*x9168 - x11986*x9208 + x11988*x9191 + x13060*x327 + x13061*x327 + x13062*x327 - x13063*x13345 + x13063*x13348 + x13064*x327 + x13065*x13345 - x13065*x13348 - x13066*x327 - x13067*x327 - x13068*x327 + x13072*x327 + x13073*x327 + x13094*x450 - x13095*x450 + 36*x13100 - x13104*x450 + 18*x13107 + 18*x13108 + x13109*x450 - 32*x13147 - 32*x13157 - 24*x13165 + 6*x13191 + 6*x13192 + x13193*x13341 + 6*x13194 + 6*x13195 + 6*x13197 + 6*x13198 + 6*x13200 - 16*x13202 + 32*x13214 - 6*x13216 - 6*x13217 + 6*x13218 + 6*x13219 - 6*x13220 - 6*x13222 - x13223*x13341 - 6*x13225 + x13233*x327 + x13235*x13348 + x13235*x9241 + x13236*x13348 + x13236*x9241 + 12*x13258 - 12*x13278 - 16*x13279 - x13280*x327 - 12*x13281 - 12*x13282 + 16*x13290 + x13291*x327 + x13292*x3943 + 32*x13293 + x13294*x13351 + x13295*x13351 - x13328 - x13329 - x13330 - x13331 - x13332 - x13333 + x13334 + x13335 + x13336 + x13337 + x13338 + x13339 + x13340 + 16*x13342 - x13343*x5161 - x13344*x5161 - 16*x13346 - x13347*x5498 - x13349 + x13361 + x13364 - x5312*x9071 + x5887*x9191 + x7357*x9051 + x7357*x9052 - x7367*x9149 - x7951*x9208) + x70*(-p2_b_dot*x13069 - p2_b_dot*x8998 + x11348*x9037 + x13057 + x13058 + x13060 + x13061 + x13062 + x13064 - x13066 - x13067 - x13068 + x13070 + x13071 + x13072 + x13073 + x13075 + x13081 + x1942*x5150 - x1942*x5247 - x5278*x9028 + x5365)) + x69*(L*(p3_b*x13369 - x11370*x9284 + x11375*x9293 + x11474*x9293 + x12311 + x13365 + x13367 + x13368 + x13381 - x5505*x9451 - x5547*x9277 - x7*x9286) - x106*(p2_b*x13369 + p3_b*x13044 - p3_b*x13541 + p3_b*x13542 + p3_b*x9370 - p3_b*x9404 - p3_b*x9532 - p3_i_dot*x13223 - x11351*x9470 - x11360*x13538 - x11360*x13553 - x11360*x9380 - x11360*x9385 + x11375*x9367 + x11375*x9368 + x11474*x9367 + x11474*x9368 + x11474*x9480 - x11607*x9286 - x11613*x9300 - x11614*x9293 - x11624*x4021 - x11625*x2045 - x11625*x2047 - x11785*x13540 - x11801*x13551 - x11804*x13551 - x13048*x4046 + 9*x13050 - x13052*x4046 + x13054*x4046 - x13063*x9279 + x13065*x9279 - x13087*x2096 + x13106*x2096 - x13230*x9336 + 9*x13242 + x13254 + x13350*x9313 + x13369*x509 + x13373*x4046 + x13377*x4046 - x13379*x4046 - x13392*x13539 + x13394*x13539 + x13401*x479 - x13410*x4046 - x13419*x2084 + x13435*x2084 + x13462*x510 - x13495 + x13496 + x13497 - 9*x13498 - x13500 - x13502 - x13503 - x13504 + x13505 + x13506 + x13507 + x13508 + x13509 + x13510 + x13512 + x13513 + x13514 + x13515 + x13516 + x13518 + x13519 - x13520 - 3*x13522 - x13523*x2094 - x13524*x9528 + x13526 + x13527 + x13528 + x13529 + x13530*x9286 + 4*x13531 + 6*x13532 + x13533 + x13534 - x13535 - x13536 - x13537 - x13538*x5161 + x13543*x2094 + 3*x13544 + x13546 + x13548 + x13549 + x13550 - x13553*x5161 + x13554*x509 + x13555*x509 + x13557 + x13564 - x4032*x5149 + x4032*x8675 + x479*x9287 - x5150*x9455 - x5161*x9380 - x5161*x9385 + x5247*x9455 - x5271*x9451 - x5278*x9447 - x5278*x9448 + x5332*x9277 + x5394*x9435 - x5505*x9518 - x5505*x9519 - x5547*x9327 - x5547*x9328 - x5679*x9361 - x7*x9445 - x7*x9446) + x123*(-L*x13415 + L*x13428 + p2_b*x13424 - p2_b*x13433 + p2_b*x13444 + p3_b*x13094 - p3_b*x13104 + p3_b*x13114 + p3_b*x9131 + x11360*x13457 + x11360*x13458 - x11374*x9385 - x11375*x9380 + x11467 - x11474*x9380 - x11474*x9385 + x11613*x9346 - x13048*x4023 + 18*x13050 - x13052*x4023 + x13054*x4023 - x13369*x479 + x13373*x4023 + x13377*x4023 - x13379*x4023 - x13410*x4023 - x13412 + x13413 + x13414 - x13417 - x13418 - x13420 - x13421 - x13422 - x13423 + 6*x13425 + x13427 + x13429 - 14*x13430 - 12*x13431 - x13432 - 6*x13436 - 6*x13437 - x13438 - x13439 - x13440 - x13442 - x13443 + x13445 + x13446 + x13447 + 14*x13448 - 14*x13450 - x13452 - x13453 - x13454 + x13455*x5505 + x13456 + x13457*x5161 + x13458*x5161 + x13459 + 14*x13461 - x13462*x480 + x13494 + x4032*x7 - x5312*x9327 - x5312*x9328 + x5505*x9455 + x5694*x9518 + x7*x9371) - x123*(-p3_i*x13266 - p3_i_dot*x13283 + x11347*x9118 - x11347*x9441 - x11352*x9037 + x11352*x9470 - x11360*x13589 - x11360*x13590 - x11383*x9445 - x11383*x9446 - x11515*x9391 + x11515*x9435 + x11517*x9312 - x11517*x9486 + x11537*x9445 + x11537*x9446 - x11938*x9486 - x11940*x9486 + x11941*x9470 + x11942*x9470 - x11951*x9367 - x11951*x9368 - x13060*x154 - x13061*x154 - x13062*x154 + x13063*x13597 - x13064*x154 - x13065*x13597 + x13066*x154 + x13067*x154 + x13068*x154 - x13070*x154 - x13071*x154 - x13072*x154 - x13073*x154 - x13087*x2061 + x13106*x2061 + 10*x13147 + 10*x13157 + x13169 - x13223*x2094 + x13235*x13597 + x13236*x13597 - x13297*x13600 - x13297*x13601 + x13298 - 5*x13342 + 5*x13346 + x13385*x286 + x13386*x286 + x13387*x286 + x13388*x286 - x13392*x13592 + x13393*x286 + x13394*x13592 - x13395*x286 - x13396*x286 - x13397*x286 - x13398*x286 + x13406*x286 + x13407*x286 + 24*x13431 + x13435*x1954 - 14*x13472 + 3*x13515 + 3*x13516 + 3*x13518 + 3*x13519 + 5*x13520 - 7*x13522 + 14*x13532 + 3*x13533 + 3*x13534 - 3*x13535 - 3*x13536 - 3*x13537 + 7*x13544 + 3*x13546 + 3*x13548 + 3*x13549 + 3*x13550 + x13564 - x13565 - x13566 - x13567 - x13568 - x13569 - x13570 + x13572 + x13574 + x13575 + x13577 + x13578 + x13579 - 10*x13580 - x13581*x286 - 7*x13582 - 6*x13583 - 6*x13584 + x13585*x154 + x13586*x154 + x13587*x9510 + x13588*x9003 - x13588*x9279 - x13589*x5161 - x13590*x5161 - 10*x13591 - 6*x13593 - x13594*x154 - x13595*x154 - x13596*x154 + x13598*x9158 + x13599*x286 + x13600*x13602 + x13601*x13602 + x13603 + x6741*x9327 + x6741*x9328) + x168*(-p2_b*x13612 - p2_b*x13621 + p2_b*x13624 - p2_b*x13626 - p2_b*x13627 + p3_b*x13315 - p3_b*x13318 + p3_b*x13320 + p3_b*x13321 - x11360*x13619 - x11360*x13620 + x11374*x9530 + x11374*x9531 + x11375*x9530 + x11375*x9531 + x11417*x9470 - x11417*x9486 + x11474*x9530 + x11474*x9531 - x11607*x9528 - x11831*x9445 - x11831*x9446 - x11840*x9367 - x11840*x9368 + x11860*x9470 - x11860*x9486 + x13170 + x13327 - 8*x13425 + 16*x13431 + 8*x13436 + 8*x13437 + x13466 + x13467 + x13468 + x13469 + x13470 + x13471 - x13473 - x13474 + x13475 + x13476 - x13477 - x13478 - x13479 - x13480 - x13482 + x13483 + x13484 + x13485 + x13486 + x13493 + 4*x13520 + x13530*x9528 + 8*x13532 - 8*x13580 - x13581*x158 - 4*x13583 - 4*x13584 + x13585*x158 + x13586*x158 - x13594*x158 - x13595*x158 + x13598*x9009 + x13599*x158 - x13604 - x13605 - x13606 - x13607 + x13608 + x13609 + x13610 + x13611 + x13613 + x13614 + x13615 + x13616 + x13617*x2034 - x13618 - x13619*x5161 - x13620*x5161 - x13622*x5247 - x13623 + 8*x13625 + x13631 - x5271*x9527 + x5332*x9435 - x5332*x9441 - x5505*x9524 - x5505*x9525 - x5536*x9518 + x5643*x9327 + x5643*x9328 + x5690*x9470 - x5690*x9486 - x7*x9523 - x7*x9526 + x8676*x9445 + x8676*x9446) + x63*(-x10658*x9518 - x11360*x13646 - x11360*x13647 - x11433*x9346 - x11434*x9037 + x11434*x9470 - x11583*x9391 + x11583*x9435 + x11591*x9312 - x11591*x9486 - x11962*x9445 - x11962*x9446 - x11973*x9367 - x11973*x9368 + x11977*x9445 + x11977*x9446 - x11986*x9486 + x11988*x9470 - x129*x13060 - x129*x13062 - x129*x13064 + x129*x13066 + x129*x13068 - x129*x13070 - x129*x13071 - x129*x13072 - x129*x13073 + x129*x13586 - x129*x13595 - x129*x13596 + x13063*x13653 - x13065*x13653 - x13094*x479 + x13104*x479 + 12*x13147 + x13169 + x13235*x13653 + x13236*x13653 + x13288*x13545 + x13288*x13547 + 6*x13346 + x13347*x9038 - x13351*x13600 - x13351*x13601 + x13364 + x13385*x327 + x13386*x327 + x13387*x327 + x13388*x327 - x13392*x13648 + x13392*x13651 + x13393*x327 + x13394*x13648 - x13394*x13651 - x13395*x327 - x13396*x327 - x13397*x327 - x13398*x327 + x13406*x327 + x13407*x327 + x13424*x479 - 18*x13425 + 36*x13431 - x13433*x479 + 18*x13436 + 18*x13437 - 32*x13472 - 32*x13481 - 24*x13489 + 6*x13515 + 6*x13516 + x13517*x13645 + 6*x13518 + 6*x13519 + 6*x13520 - 16*x13522 - x13523*x9557 + 32*x13532 + 6*x13533 + 6*x13534 - 6*x13535 - 6*x13536 - 6*x13537 + x13543*x9557 + 16*x13544 + x13545*x13651 + x13547*x13651 + 6*x13549 + 6*x13550 + 12*x13560 - 12*x13580 - x13581*x327 - 16*x13582 - 12*x13583 - 12*x13584 - x13598*x9343 + x13599*x327 + x13600*x13654 + x13601*x13654 + 32*x13625 - x13632 - x13633 - x13634 - x13635 - x13636 - x13637 + x13638 + x13639 + x13640 + x13641 + x13642 + x13643 + x13644 - x13646*x5161 - x13647*x5161 - x13649*x9038 - x13650 - x13652*x5247 + x13668 + x13671 + x5312*x9118 - x5694*x9133 + x5887*x9470 + x7357*x9327 + x7357*x9328 - x7367*x9421 - x7951*x9486 + x9310*x9510) + x70*(-p3_b_dot*x13401 - p3_b_dot*x9287 + x11348*x9312 + x13382 + x13383 + x13385 + x13386 + x13387 + x13388 + x13391 + x13393 - x13395 - x13396 - x13397 - x13398 - x13400 + x13403 + x13404 + x13405 + x13406 + x13407 - x13408 + x13409 + x13411 - x5278*x9299 + x5403)) + x69*(L*(p8_b*x14847 - x10739*x5547 - x10749*x11370 - x10751*x7 + x10756*x11375 + x10756*x11474 - x10922*x5505 + x14842 + x14843 + x14845 + x14846 + x14859) - x106*(p7_b*x14847 + p8_b*x10840 - p8_b*x10874 - p8_b*x10999 + p8_b*x14561 - p8_b*x15011 + p8_b*x15012 + x10511*x633 + x10739*x5332 - x10742*x14574 + x10742*x14576 - x10751*x11607 + x10751*x13530 - x10756*x11614 + x10779*x14821 - x10794*x5547 - x10795*x5547 + x10814*x5278 - x10833*x5679 + x10837*x11375 + x10837*x11474 + x10838*x11375 + x10838*x11474 - x10850*x11360 - x10850*x5161 - x10854*x11360 - x10854*x5161 - x10861*x5547 + x10905*x14565 - x10905*x14566 + x10905*x14855 - x10905*x14857 - x10916*x7 - x10917*x7 - x10918*x5278 - x10919*x5278 - x10922*x5271 - x10933*x5505 - x10938*x11351 + x10949*x11474 - x10952*x11370 - x10956*x11800 - x10956*x11803 - x10987*x5505 - x10988*x5505 - x11360*x15008 - x11624*x4436 - x11625*x2558 - x11785*x15010 - x11801*x15022 - x11804*x15022 + 19*x14555 - 19*x14560 + 19*x14564 + x14732 + x14847*x633 - 19*x14849 - 19*x14853 - x14869*x15009 + x14871*x15009 + x14877*x629 - x14893*x2599 + x14906*x2599 + x14928*x634 - x14960 + x14961 + x14962 - x14964 - x14966 - x14967 - x14968 + x14969 + x14970 + x14971 + x14972 + x14973 + x14974 + x14976 + x14977 + x14978 + x14979 + x14980 + x14982 + x14983 - x14984 - x14985 - x14986 - 3*x14988 - 3*x14989 - x14990*x1858 - x14991*x2621 + x14993 + x14994 + x14995 + x14996 + 4*x14997 + 6*x14998 + 19*x14999 + x15000 + x15001 + x15002 + x15003 - x15004 - x15005 - x15006 - x15007 - x15008*x5161 + 3*x15013 + x15014*x1858 + x15015*x2621 + x15017 + x15019 + x15020 + x15021 + x15023*x633 + x15024*x633 + x15026 + x15032) + x123*(p7_b*x14897 - p7_b*x14904 + p7_b*x14913 + p8_b*x10571 + p8_b*x14608 - p8_b*x14615 + p8_b*x14624 - x10794*x5312 - x10795*x5312 + x10814*x5547 + x10841*x7 - x10850*x11375 - x10850*x11474 - x10854*x11374 - x10854*x11474 + x10987*x5694 + x10988*x5694 + x11360*x14924 + x11360*x14925 + x11467 + 48*x14555 - x14559*x6709 + x14563*x6709 + x14565*x6709 - x14566*x6709 - 16*x14612 + 16*x14627 - 16*x14629 + 16*x14638 - x14847*x629 - 48*x14849 + x14851*x6709 - 48*x14853 + x14855*x6709 - x14857*x6709 - x14886 + x14887 + x14888 - x14890 - x14891 - x14892 - x14894 - x14895 - x14896 + x14899 + x14900 - 34*x14901 - 12*x14902 - x14903 - 6*x14907 - 6*x14908 - x14909 - x14910 - x14911 - x14912 + x14914 + x14915 + 34*x14916 - 34*x14918 - x14920 - x14921 + x14922*x5505 + x14923 + x14924*x5161 + x14925*x5161 + 34*x14927 - x14928*x630 + x14959 + x2601*x5505 + x4446*x7) - x123*(x10443*x15054 - x10474*x15051 - x10479*x11352 - x10480*x15051 + x10558*x11347 - x10742*x15054 + x10778*x11517 + x10794*x6741 + x10795*x6741 - x10814*x11347 - x10837*x11951 - x10838*x11951 - x10861*x11515 - x10916*x11383 + x10916*x11537 - x10917*x11383 + x10917*x11537 + x10933*x15053 + x10938*x11352 + x10938*x11941 + x10938*x11942 - x10956*x11517 - x10956*x11938 - x10956*x11940 + x10969*x11515 - x11360*x15055 - x11360*x15056 - x14570*x154 - x14571*x154 - x14572*x154 - x14573*x154 + x14574*x15061 - x14575*x154 - x14576*x15061 + x14577*x154 + x14578*x154 + x14579*x154 + x14580*x154 - x14582*x154 - x14583*x154 - x14584*x154 - x14585*x154 - x14604*x2572 + x14617*x2572 + 10*x14649 + 10*x14658 + x14670 + x14722*x15061 + x14724*x15061 + x14775 + x14863*x286 + x14864*x286 + x14865*x286 - x14869*x15058 + x14870*x286 + x14871*x15058 - x14872*x286 - x14873*x286 - x14874*x286 + x14882*x286 + x14883*x286 - x14893*x2472 + 24*x14902 + x14906*x2472 - 14*x14938 + 3*x14979 + 3*x14980 + 3*x14982 + 3*x14983 + 5*x14984 + 5*x14985 + 5*x14986 - 7*x14988 - 7*x14989 - x14990*x286 + 14*x14998 - 5*x15000 - 5*x15001 + 3*x15002 + 3*x15003 - 3*x15004 - 3*x15005 - 3*x15007 + 7*x15013 + x15014*x286 + 3*x15017 + 3*x15019 + 3*x15020 + 3*x15021 + x15032 - x15033 - x15034 - x15035 - x15036 - x15037 - x15038 + x15040 + x15042 + x15043 + x15045 + x15046 + x15047 - 10*x15048 - x15049*x286 - 6*x15050 + x15052*x154 - x15055*x5161 - x15056*x5161 - 10*x15057 - 7*x15059 - x15060*x154 - x15062*x2505 + x15063*x286 - x15064*x15065 + x15064*x15067 - x15065*x15066 + x15066*x15067 + x15068) + x168*(-p7_b*x15077 - p7_b*x15085 + p7_b*x15087 - p7_b*x15089 - p7_b*x15090 + p7_b_dt*x14946*x158 + p8_b*x14793 - p8_b*x14795 + p8_b*x15091 + p8_b*x15092 - x10474*x10897 + x10794*x5643 + x10795*x5643 - x10814*x5332 - x10837*x11840 - x10838*x11840 - x10916*x11831 + x10916*x8676 - x10917*x11831 + x10917*x8676 + x10938*x11417 + x10938*x11860 + x10938*x5690 - x10956*x11417 - x10956*x11860 - x10956*x5690 + x10969*x5332 - x10987*x5536 - x10988*x5536 - x10990*x7 - x10991*x5505 - x10992*x5505 - x10993*x7 - x10994*x14789 + x10997*x11374 + x10997*x11375 + x10997*x11474 + x10998*x11374 + x10998*x11375 + x11031*x11377 - x11360*x15083 - x11360*x15084 + x11607*x4446 - x13530*x4446 + x14671 + x14800 + 16*x14902 + 8*x14907 + 8*x14908 + x14932 + x14933 + x14934 + x14935 + x14936 + x14937 - x14939 - x14940 + x14941 + x14942 - x14943 - x14944 - x14945 - x14947 - x14949 + x14950 + x14951 + x14952 + x14953 + x14958 + 4*x14986 - x14990*x158 + 8*x14998 - 4*x15001 + x15014*x158 - 8*x15048 - x15049*x158 - 4*x15050 + x15052*x158 - x15060*x158 + x15063*x158 - x15069 - x15070 - x15071 - x15072 + x15073 + x15074 + x15075 + x15076 + x15078 + x15079 + x15080 + x15081 - x15082 - x15083*x5161 - x15084*x5161 - x15086 + 8*x15088 + x15096 + x2601*x5271) + x63*(p8_i_dot*x15111 + x10465*x11433 - x10474*x11016 - x10479*x11434 + x10480*x14818 - x10480*x15115 - x10658*x10987 - x10658*x10988 - x10747*x14946 + x10778*x11591 + x10794*x7357 + x10795*x7357 - 12*x10807*x14946 - x10814*x5312 - x10837*x11973 - x10838*x11973 - x10861*x11583 - x10893*x7367 - x10916*x11962 + x10916*x11977 - x10917*x11962 + x10917*x11977 + x10938*x11434 + x10938*x11988 + x10938*x5887 - x10956*x11591 - x10956*x11986 - x10956*x7951 + x10969*x11583 + x11012*x14574 - x11012*x14576 + x11012*x14722 + x11012*x14724 + x11016*x14862 + x11016*x14869 - x11016*x14871 + x11016*x15016 + x11016*x15018 - x11360*x15112 - x11360*x15113 - x129*x14570 - x129*x14572 - x129*x14573 - x129*x14575 + x129*x14577 + x129*x14579 + x129*x14580 - x129*x14582 - x129*x14583 - x129*x14584 - x129*x14585 + x129*x15052 - x129*x15060 - x14608*x629 + x14615*x629 + 12*x14649 + x14670 + x14722*x15051 + x14724*x15051 - x14824*x15064 - x14824*x15066 + x14841 + x14863*x327 + x14864*x327 + x14865*x327 - x14869*x15114 + x14870*x327 + x14871*x15114 - x14872*x327 - x14873*x327 - x14874*x327 + x14882*x327 + x14883*x327 + x14897*x629 + 36*x14902 - x14904*x629 + 18*x14907 + 18*x14908 - 32*x14938 - 32*x14948 + 6*x14979 + 6*x14980 + x14981*x15110 + 6*x14982 + 6*x14983 + 6*x14986 - 16*x14988 - 16*x14989 - x14990*x327 + 32*x14998 - 6*x15001 + 6*x15002 + 6*x15003 - 6*x15004 - 6*x15005 - 6*x15006 - 6*x15007 + 16*x15013 + x15014*x327 + 6*x15017 + 6*x15019 - 24*x15029 - 12*x15048 - x15049*x327 - 12*x15050 + x15063*x327 + x15064*x15117 + x15066*x15117 + 32*x15088 - x15097 - x15098 - x15099 - x15100 - x15101 - x15102 + x15103 + x15104 + x15105 + x15106 + x15107 + x15108 + x15109 - x15112*x5161 - x15113*x5161 - x15116 + x15131 + x15134 + x2601*x5694) + x70*(-p8_b_dot*x10752 - p8_b_dot*x14877 - x10762*x5278 + x10778*x11348 + x10785*x11329 - x10785*x11332 + x14860 + x14861 + x14863 + x14864 + x14865 + x14868 + x14870 - x14872 - x14873 - x14874 - 8*x14876 + 8*x14879 + x14880 + x14881 + x14882 + x14883 + x14885 + x2560*x5150 - x2560*x5247 + x5645)) + x69*(L*(-q2_b*x11762 + q2_b*x11767 - x11370*x5982 + x11375*x5984 + x11474*x5984 - x11906*x5505 + x12002 + x12003 + x12004 + x12005 + x12006 - x5547*x5979) - x106*(-q2_b*x12103 + q2_b*x12108 + q2_b*x12112 - q2_b*x12118 - q2_b*x12126 + q2_b*x12127 + q2_b*x12128 - q2_b*x5915 - q2_b*x5924 + q2_b*x6132 - q3_b*x11762 + q3_b*x11767 - q3_b_dot*x11788 - x11351*x6187 - x11360*x12123 - x11360*x6142 - x11360*x6143 + x11360*x6238 + x11375*x6124 + x11474*x6123 + x11474*x6124 + x11474*x6199 - x11614*x5984 - x11624*x3720 + x11684*x2850 - x11755*x3770 - x11757*x2850 + x11767*x662 + x11769*x12125 + x11773*x3770 - x11774*x12125 - x11785*x12124 - x11800*x6202 - x11801*x12137 - x11803*x6202 - x11804*x12137 + x11819 - x11873*x5505 - x12029*x5505 + x12059*x663 - x12068 + x12069 + x12070 - x12072 - x12074 - x12075*x3776 - x12076 - x12077 + x12078 + x12079 + x12081 + x12082 + x12083 + x12084 + x12085 + x12086 + x12087 + x12089 + x12091 + x12093 + x12094 - x12096 - x12097 - x12098 - x12099*x1858 - 3*x12100 - x12101*x2863 - 3*x12102 + x12104 + x12105 + x12106 + x12107 + x12109*x3776 + 6*x12110 + x12113 + x12114 + x12116 + x12117 - x12119 - x12120 - x12121 - x12122 - x12123*x5161 + x12129*x1858 + 3*x12130 + x12131*x2863 + x12132*x5851 + x12134 + x12136 + x12138*x662 + x12139*x662 + x12145 + x12151 - x5161*x6142 - x5161*x6143 + x5161*x6238 + x5214*x6182 + x5278*x6104 - x5278*x6164 - x5278*x6165 + x5332*x5979 - x5505*x5952 - x5505*x6224 - x5547*x5934 - x5547*x6089 - x5547*x6090 - x5679*x6117 + x6101*x662) + x123*(q2_b*x12028 - q2_b*x12039 + q2_b*x12049 + q2_b*x6228 + q3_b*x11677 - q3_b*x11682 + q3_b*x11697 - x11374*x6143 - x11375*x6142 + x11467 - x11474*x6142 - x11474*x6143 + x11624*x3770 - x11687*x12041 + x11702*x6123 + x11702*x6124 - x11717*x3943 + x11719*x3943 - x11721*x3943 - x11767*x691 + x11814*x3943 + x11902 - x11944 + x11945 + x11946 - x11947 - x11948 + x11949 + x11950 - x11952 - x11954 - x11955 + x12018 + x12019 - x12022 - x12026 - x12027 + x12029*x5694 + x12032 + x12033 - x12034*x3943 - 12*x12035 - x12038 - 6*x12042 - x12044 - x12045 + x12046*x5505 - x12047 - x12048 + x12052 + x12053*x3943 - x12054*x3943 - x12055 + x12056 + x12057 + x12058*x3943 - x12059*x692 + x12067 - x5312*x6089 - x5312*x6090 + x5505*x6131 + x5547*x6104 + x5694*x6224 + x6123*x6624 + x6124*x6624 + x6130*x7) - x123*(-q2_b*x12242 - q2_b*x12243 - q2_b*x12247 - q2_b*x12250 - q3_b*x11913 + q3_b*x11930 + q3_b*x12243 + q3_b*x12247 + q3_b*x12250 - x11347*x6104 + x11347*x6244 + x11352*x6187 - x11352*x6270 - x11360*x12254 + x11360*x12255 - x11515*x5934 + x11515*x6218 + x11517*x5960 - x11517*x6202 + x11684*x6316 - x11757*x6316 + x11769*x12251 - x11774*x12251 + x11801*x6238 + x11804*x6238 + x11869*x286 + x11871*x286 + x11878*x286 - x11881*x286 - x11883*x286 - 7*x11885 + x11892*x286 + x11896*x286 + 7*x11928 - x11938*x6202 - x11940*x6202 + x11941*x6187 + x11942*x6187 - x11951*x6124 + x11956 + 24*x12035 + x12041*x12246 + x12041*x2788 - x12075*x3792 + 3*x12089 + 3*x12091 + 3*x12093 + 3*x12094 + 5*x12096 + 5*x12097 + 5*x12098 - x12099*x286 - 7*x12100 - x12101*x2887 - 7*x12102 + x12109*x3792 + 14*x12110 - x12111*x12253 - 5*x12113 - 5*x12114 + x12115*x12253 + 3*x12116 + 3*x12117 - 3*x12119 - 3*x12120 - 3*x12121 - 3*x12122 + x12129*x286 + 7*x12130 + x12131*x2887 + x12133*x12253 + 3*x12134 + x12135*x12253 + 3*x12136 + x12151 + x12168*x154 - x12175*x154 - x12183*x154 - x12185*x154 - x12189*x154 - x12193*x154 + x12196*x154 + x12198*x154 + x12201*x154 - x12204*x154 - x12206*x154 - x12208*x154 - x12210*x154 + x12215 - x12224 - x12225 - x12226 - x12227 - x12228*x12246 - x12228*x2788 - x12230 - x12231 + x12233 + x12235 + x12236 + x12237 + x12239 + x12240 - 14*x12241 - 6*x12244 - 6*x12245 - x12248*x6123 - x12248*x6124 - x12249*x6123 - x12249*x6124 - x12252*x5851 - x12254*x5161 + x12255*x5161 + x12266 + x5150*x6305 - x5247*x6305 + x6089*x6741 + x6090*x6741) + x168*(-q2_b*x12161 - q2_b*x12162 - q2_b*x12173 + q2_b*x12177 + q2_b*x12179 + q2_b*x12180 - q2_b_dot*x12172 - q3_b*x11830 + q3_b*x11838 + q3_b*x11847 + q3_b*x11853 - q3_b*x11857 - q3_b*x11864 - q3_b*x11866 - q3_b*x12163 + x11374*x6237 + x11374*x6238 + x11375*x6237 + x11375*x6238 + x11377*x6352 + x11417*x6187 + x11474*x6238 - x11684*x3017 - x11753*x2910 - x11840*x6124 + x11848*x12041 + x11860*x6187 - x11860*x6202 + x11867 + x11868 + x11870 + x11872 + x11874 + x11875 - x11876 - x11877 + x11879 + x11880 - x11882 - x11884 - x11886 - x11888 - x11889 + x11891 + x11893 + x11895 + x11897 + x11901 + x11908 - x12029*x5536 + 16*x12035 + 8*x12042 + x12046*x5271 - x12075*x3818 + 4*x12096 - x12099*x158 - x12101*x2794 + x12109*x3818 + x12129*x158 + 4*x12130 + x12131*x2794 - x12152 - x12153 - x12154 - x12155 + x12156 + x12157 + x12159 + x12160 + x12164 + x12165 + x12166 + x12167 + x12168*x158 - x12169 - x12170*x6123 - x12170*x6124 - x12171*x6123 - x12171*x6124 - x12174*x2743 - x12175*x158 - x12176 + x12178*x5852 + x12216 + x12223 + x5271*x6131 - x5332*x6104 + x5332*x6218 - x5505*x6230 - x5505*x6231 - x5536*x6224 + x5643*x6089 + x5643*x6090 + x5690*x6187 - x5690*x6202 - x5829*x6520 - x5929*x6171 - x6229*x7 - x6232*x7) + x63*(-q2_b*x12281 - q2_b*x12282 - q2_b*x12285 - q2_b*x12289 - q3_b*x11961 + q3_b*x11976 + q3_b*x12282 + q3_b*x12285 + q3_b*x12289 - x10658*x12029 - x10658*x6224 - x11360*x12295 + x11360*x12296 + x11433*x6243 + x11434*x6187 - x11434*x6270 - x11583*x5934 + x11583*x6218 + x11591*x5960 - x11591*x6202 + x11677*x691 - x11682*x691 + x11702*x6238 + x11745*x11983 - x11769*x11983 + x11769*x12288 + x11774*x11983 - x11774*x12288 - x11795*x12111 + x11795*x12115 + x11795*x12133 + x11795*x12135 + x11869*x327 + x11871*x327 + x11878*x327 - x11881*x327 - x11883*x327 - 16*x11885 + x11892*x327 + x11896*x327 + 16*x11928 - 16*x11937 - x11973*x6124 - x11986*x6202 + x11988*x6187 + x12001 + x12006 - x12028*x691 + 36*x12035 + x12039*x691 + x12041*x12294 + x12041*x6045 + 18*x12042 + x12046*x5694 - x12075*x3836 + 6*x12089 + 6*x12094 + 6*x12096 - x12099*x327 - 16*x12100 - x12101*x2930 - 16*x12102 + x12109*x3836 + 32*x12110 - 6*x12113 - 6*x12114 + 6*x12116 + 6*x12117 - 6*x12119 - 6*x12121 - 6*x12122 + x12129*x327 + 16*x12130 + x12131*x2930 + x12133*x6012 + x12135*x6012 - 24*x12148 - x12183*x129 - x12189*x129 - x12193*x129 + x12196*x129 + x12201*x129 - x12204*x129 - x12206*x129 - x12208*x129 - x12210*x129 + x12215 - 32*x12241 - 12*x12244 - 12*x12245 + x12248*x5974 + x12249*x5974 - x12267 - x12268 - x12269 - x12270 - x12272 - x12273 + x12274 + x12275 + x12276 + x12277 + x12278 + x12279 + x12280 - x12283*x5694 + x12284*x5952 - x12286*x6123 - x12286*x6124 - x12287*x6123 - x12287*x6124 - x12291 - x12292*x5247 - x12293*x6009 - x12295*x5161 + x12296*x5161 + x12302 + x12310 - x5312*x6104 + x5694*x6131 + x5694*x6230 + x5694*x6231 + x5712*x5973 + x5887*x6187 - x5971*x7367 + x6089*x7357 + x6090*x7357 - x6202*x7951 + x6238*x6624) + x70*(-q2_b_dot*x12010 - q2_b_dot*x5820 + x11348*x5960 + x11869 + x11871 + x11878 - x11881 - x11883 + x11890 + x11892 + x11894 + x11896 + x12007 + x12008 + x12009 + x12011 + x12017 + x2830*x5150 - x2830*x5247 + x2831*x5150 - x2831*x5247 - x5278*x6073)) + x69*(L*(-q3_b*x12103 + q3_b*x12108 - x11370*x6293 + x11375*x6296 + x11474*x6296 + x12311 + x12312 + x12313 + x12314 + x12321 - x5505*x6295 - x5547*x6290) - x106*(-q3_b*x12409 + q3_b*x12414 + q3_b*x12418 - q3_b*x12423 - q3_b*x12431 + q3_b*x12433 + q3_b*x12434 - q3_b*x6228 - q3_b*x6236 + q3_b*x6421 - q3_b_dot*x12432 + q3_i*x12435 - q4_b*x12103 + q4_b*x12108 - x11348*x6481 - x11351*x6483 - x11360*x12446 - x11360*x6432 - x11360*x6433 - x11360*x6481 + x11474*x6415 + x11474*x6416 + x11474*x6496 - x11613*x6243 - x11624*x3805 - x11625*x2883 - x11755*x4572 + x11773*x4572 - x11785*x12428 - x11801*x12447 - x11804*x12447 - x12090*x2965 - x12101*x2910 - x12101*x721 + x12108*x691 + x12111*x12429 - x12115*x12429 + x12144 - x12220*x4581 + x12221*x4581 + 4*x12222 - x12283*x5505 + x12293*x2965 + x12352*x2962 + x12357*x5247 + x12376*x692 - x12377 + x12378 + x12379 - x12381 - x12383 - x12384 - x12385 + x12386 + x12387 + x12389 + x12390 + x12391 + x12392 + x12393 + x12394 + x12395 + x12396 + x12398 + x12399 + x12400 + x12401 - x12403 - x12404 - x12405 - x12406*x1858 - x12407*x2962 - 3*x12408 + x12410 + x12411 + x12412 + x12413 + x12415 + 6*x12416 + x12419 + x12421 + x12422 - x12424 - x12425 - x12426 - x12427 - x12430 + x12436 + x12437*x1858 + x12438*x6188 + x12440 + x12441 + x12443 + x12444 - x12446*x5161 + x12448*x691 + x12449*x691 + x12455 + x12457 + x12462 - x5161*x6432 - x5161*x6433 - x5161*x6481 + x5214*x6475 - x5278*x6459 - x5278*x6460 + x5332*x6290 + x5394*x6445 - x5505*x6534 - x5505*x6535 - x5547*x6381 - x5547*x6382 - x5679*x6409 + x6161*x720) + x123*(-L*x12333 + q3_b*x12339 - q3_b*x12350 + q3_b*x12362 + q3_b*x6539 + q4_b*x12028 - q4_b*x12039 + q4_b*x12049 - x11374*x6433 - x11375*x6432 + x11467 - x11474*x6432 - x11474*x6433 + x11613*x6399 + x11624*x4572 + x11702*x6415 + x11702*x6416 + x12034*x4023 - x12041*x12354 - x12053*x4023 + x12054*x4023 - x12058*x4023 - x12108*x720 + 10*x12140 - 10*x12141 + 10*x12142 - 10*x12143 + x12216 - x12256 + x12257 + x12258 - x12259 - x12260 + x12261 + x12262 - x12263 - x12264 - x12265 + x12330 + x12331 - x12337 - x12338 + x12342 + x12343 + x12344 - x12345*x4023 - 12*x12346 - x12349 - 6*x12353 - x12356 + x12357*x5505 - x12358 + x12359*x5505 - x12360 - x12361 + x12365 + x12366*x4023 - x12367*x4023 - x12370 + x12371 + x12374 + x12375*x4023 - x12376*x721 - x5312*x6381 - x5312*x6382 + x5694*x6534 + x5694*x6535 + x6415*x6624 + x6416*x6624 + x6420*x7) - x123*(-q3_b*x12548 - q3_b*x12549 - q3_b*x12554 - q3_b*x12555 - q4_b*x12242 + q4_b*x12549 + q4_b*x12554 + q4_b*x12555 - x11347*x6454 + x11347*x6557 + x11352*x6483 - x11352*x6583 - x11515*x6244 + x11515*x6445 + x11517*x6270 - x11517*x6499 - x11938*x6499 - x11940*x6499 + x11941*x6483 + x11942*x6483 + x12041*x2978 - x12041*x2980 - x12090*x2994 + x12101*x2983 + x12111*x12556 - x12115*x12556 - x12131*x2983 + x12183*x286 + x12185*x286 + x12189*x286 + x12193*x286 - x12196*x286 - x12198*x286 - x12201*x286 + x12206*x286 + x12210*x286 - x12220*x4597 + x12221*x4597 - x12228*x2978 + x12228*x2980 - x12248*x6415 - x12248*x6416 - x12249*x6415 - x12249*x6416 + x12266 + x12293*x2994 + 24*x12346 + x12352*x2980 + x12352*x6316 + 3*x12398 + 3*x12399 + 3*x12400 + 3*x12401 + 5*x12403 + 5*x12404 - x12406*x286 - x12407*x2980 - x12407*x6316 - 7*x12408 + 14*x12416 - x12417*x12557 - 5*x12419 + x12420*x12557 + 3*x12421 + 3*x12422 - 3*x12424 - 3*x12425 - 3*x12426 - 3*x12427 + x12437*x286 + x12439*x12557 + 3*x12440 + 3*x12441 + x12442*x12557 + 3*x12443 + 3*x12444 + x12462 - x12467*x3792 + x12481*x154 + x12483*x3792 - x12486*x154 - x12494*x154 - x12496*x154 - x12503*x154 + x12506*x154 + x12508*x154 - x12514*x154 - x12516*x154 - x12518*x154 - x12520*x154 + x12525 - x12531 - x12532 - x12533 - x12534 - x12536 - x12537 + x12539 + x12541 + x12542 + x12543 + x12545 + x12546 - 14*x12547 - 6*x12550 - 6*x12551 - 5*x12552 - x12553*x2990 + 5*x12558 + x12559*x2990 - x12560*x12561 + x12560*x12563 - x12561*x12562 + x12562*x12563 + x12574 - x6188*x6945 + x6381*x6741 + x6382*x6741) + x168*(-q3_b*x12473 - q3_b*x12474 - q3_b*x12485 + q3_b*x12488 + q3_b*x12490 + q3_b*x12491 + q4_b*x12161 - q4_b*x12162 + q4_b*x12173 - q4_b*x12177 - q4_b*x12179 - q4_b*x12180 - q4_b*x12476 + q4_b_dot*x12172 + x11374*x6551 + x11374*x6552 + x11375*x6551 + x11375*x6552 + x11377*x6666 + x11377*x6667 - x11417*x6499 + x11860*x6483 - x11860*x6499 + x12041*x12482 - x12041*x3021 + x12101*x3012 - x12131*x3012 - x12170*x6415 - x12170*x6416 - x12171*x6415 - x12171*x6416 + x12181 + x12182 + x12184 + x12186 + x12187*x2943 + x12188 + x12190 - x12191 - x12192 + x12194 + x12195 - x12197 - x12199 - x12200 - x12202 - x12203 + x12205 + x12207 + x12209 + x12211 + x12215 - x12220*x4623 + x12221*x4623 + x12223 + x12293*x3019 + 16*x12346 + x12352*x3017 + 8*x12353 + 4*x12403 - x12406*x158 + x12437*x158 - x12463 - x12464 - x12465 - x12466 - x12467*x3818 + x12468 + x12469 + x12471 + x12472 - x12475*x2839 + x12477 + x12478 + x12479 + x12480 + x12481*x158 + x12483*x3818 - x12484 - x12486*x158 - x12487 + x12489*x6189 + x12526 + x12530 - x5271*x6544 + x5332*x6445 - x5332*x6454 - x5505*x6541 - x5505*x6542 - x5536*x6534 - x5536*x6535 + x5643*x6381 + x5643*x6382 + x5690*x6483 - x5690*x6499 - x6171*x6836 - x6466*x6520 - x6540*x7 - x6543*x7) + x63*(-q3_b*x12589 - q3_b*x12590 - q3_b*x12593 - q3_b*x12595 - q4_b*x12281 + q4_b*x12590 + q4_b*x12593 + q4_b*x12595 - x10658*x6534 - x10658*x6535 - x11433*x6399 + x11434*x6483 - x11434*x6583 - x11583*x6244 + x11583*x6445 + x11591*x6270 - x11591*x6499 - x11986*x6499 + x11988*x6483 + x12028*x720 - x12039*x720 + x12041*x12592 - x12041*x3041 + x12088*x12290 + x12090*x12591 - x12090*x3042 + x12101*x3044 - x12111*x12290 + x12111*x12594 + x12115*x12290 - x12115*x12594 - x12131*x3044 - x12132*x12417 + x12132*x12420 + x12132*x12439 + x12132*x12442 + x12133*x12290 + x12133*x6945 + x12135*x12290 + x12135*x6945 + x12183*x327 + x12185*x327 + x12189*x327 + x12193*x327 - x12196*x327 - x12198*x327 - x12201*x327 + x12206*x327 + x12210*x327 - x12220*x4639 + x12221*x4639 + x12228*x3041 + x12252*x12439 + x12252*x12442 - x12286*x6415 - x12286*x6416 - x12287*x6415 - x12287*x6416 + x12293*x3042 - x12293*x6397 + x12310 - x12339*x720 + 36*x12346 + x12350*x720 + x12352*x3041 + 18*x12353 + x12359*x5694 + 6*x12398 + 6*x12401 + 6*x12403 - x12406*x327 - x12407*x3041 - 16*x12408 + 32*x12416 - 6*x12419 + 6*x12421 + 6*x12422 - 6*x12424 - 6*x12425 - 6*x12427 + x12437*x327 - 24*x12460 - x12467*x3836 + x12483*x3836 - x12494*x129 - x12498*x5694 - x12503*x129 + x12506*x129 - x12514*x129 - x12516*x129 - x12518*x129 - x12520*x129 + x12525 - 32*x12547 - 12*x12550 - 12*x12551 + 6*x12558 + x12559*x3043 - x12560*x12599 + x12560*x12600 - x12562*x12599 + x12562*x12600 - x12575 - x12576 - x12577 - x12578 - x12580 - x12581 + x12582 + x12583 + x12584 + x12585 + x12586 + x12587 + x12588 - x12597 - x12598*x5247 + x12601 + x12608 + x12611 + x5312*x6557 + x5694*x6541 + x5694*x6542 - x5694*x6575 + x5887*x6483 - x6282*x7367 + x6381*x7357 + x6382*x7357 - x6499*x7951) + x70*(-q3_b_dot*x12325 - q3_b_dot*x6161 + x11348*x6270 + x12183 + x12185 + x12189 + x12193 - x12196 - x12198 - x12201 + x12204 + x12206 + x12208 + x12210 + x12322 + x12323 + x12324 + x12326 + x12329 + x2935*x5150 - x2935*x5247 - x5278*x6362)) + x69*(L*(-q8_b*x16292 + q8_b*x16297 - x11370*x7858 + x11375*x7861 + x11474*x7861 + x14843 + x16498 + x16499 + x16500 + x16506 - x5505*x7860 - x5547*x7855) - x106*(-q8_b*x16590 + q8_b*x16595 + q8_b*x16598 - q8_b*x16604 - q8_b*x16612 + q8_b*x16613 - q8_b*x7792 - q8_b*x7802 + q8_b*x8008 + q8_i*x16614 - q9_b*x16292 + q9_b*x16297 + q9_b*x7924 - q9_b_dot*x16314 + q9_i*x16317 - x11351*x7985 - x11360*x16609 - x11360*x8015 - x11360*x8016 + x11474*x8003 + x11474*x8004 + x11474*x8080 - x11614*x7861 - x11624*x4964 - x11755*x5015 + x11773*x5015 - x11785*x16610 - x11800*x8083 - x11801*x16623 - x11803*x8083 - x11804*x16623 + 13*x16221 + x16232*x8032 + x16239*x3506 - x16252*x8032 + x16254*x8032 - x16260*x8032 - x16289*x3506 + x16297*x836 + x16299*x16611 - x16302*x16611 + x16317*x837 + x16336 - x16347*x5022 + x16363*x5022 - x16378*x5505 + x16513*x865 - 13*x16519 - x16530*x8032 + x16547*x8032 - x16548*x8032 + x16554*x8032 - x16555 + x16556 + x16557 - x16559 - x16561 - x16562 - x16563 + x16564 + x16565 + x16567 + x16568 + x16569 + x16570 + x16571 + x16572 + x16573 + x16575 + x16577 + x16579 + x16580 - x16582 - x16583 - x16584 - x16585*x1858 - 3*x16587 - x16588*x3518 - 3*x16589 + x16591 + x16592 + x16593 + x16594 + 6*x16596 + x16599 + x16600 + x16602 + x16603 - x16605 - x16606 - x16607 - x16608 - x16609*x5161 + x16615*x1858 + 3*x16616 + x16618 + x16619 + x16621 + x16622 + x16624*x836 + x16625*x836 + x16627 + x16632 + x3518*x8075 - x5161*x8015 - x5161*x8016 + x5278*x7981 - x5278*x8044 - x5278*x8045 + x5332*x7855 - x5505*x7828 - x5505*x8113 - x5505*x8114 - x5547*x7810 - x5547*x7958 - x5547*x7959 - x5679*x7998 + x7978*x836) + x123*(q8_b*x16525 - q8_b*x16534 + q8_b*x16544 + q8_b*x8118 + q9_b*x16227 - q9_b*x16237 + q9_b*x16249 - x11374*x8016 - x11375*x8015 + x11467 - x11474*x8015 - x11474*x8016 + x11624*x5015 + x11702*x8003 + x11702*x8004 + 48*x16221 + x16232*x6709 - 30*x16235 - x16241*x16536 + 30*x16251 - x16252*x6709 + x16254*x6709 - 30*x16256 + 30*x16259 - x16260*x6709 - x16297*x865 - x16317*x866 + x16407 - x16443 + x16444 + x16445 - x16446 - x16447 + x16448 + x16449 - x16450 - x16451 - x16452 + x16516 + x16517 - 48*x16519 - x16523 - x16524 + x16528 + x16529 - x16530*x6709 - 16*x16532 - 12*x16533 - 6*x16537 - x16539 - x16540 + x16541*x5505 - x16542 - x16543 + 16*x16546 + x16547*x6709 - x16548*x6709 - 16*x16550 + x16551 + 16*x16553 + x16554*x6709 - x5312*x7958 - x5312*x7959 + x5505*x8007 + x5547*x7981 + x5694*x8113 + x5694*x8114 + x6624*x8003 + x6624*x8004 + x7*x8006) - x123*(-q8_b*x16722 - q8_b*x16723 - q8_b*x16728 - q8_b*x16729 - q9_b*x16429 + q9_b*x16723 + q9_b*x16728 + q9_b*x16729 - x11347*x7981 + x11347*x8134 + x11352*x7985 - x11352*x8160 - x11360*x16734 + x11360*x16735 - x11515*x7810 + x11515*x8106 + x11517*x7836 - x11517*x8083 - x11938*x8083 - x11940*x8083 + x11941*x7985 + x11942*x7985 - x12248*x8003 - x12248*x8004 - x12249*x8003 - x12249*x8004 + x154*x16652 - x154*x16656 - x154*x16664 - x154*x16666 - x154*x16670 - x154*x16674 + x154*x16677 + x154*x16679 + x154*x16683 - x154*x16686 - x154*x16688 - x154*x16690 - x154*x16692 + x16239*x8211 - x16289*x8211 + x16299*x16730 - x16302*x16730 - x16307*x3432 - x16347*x5039 + x16363*x5039 + x16374*x286 + x16376*x286 + x16383*x286 - x16386*x286 - x16388*x286 - 7*x16390 + x16397*x286 + x16401*x286 + 7*x16433 + x16453 + 24*x16533 + x16536*x16733 + x16536*x3416 + 3*x16575 + 3*x16577 + 3*x16579 + 3*x16580 + 5*x16582 + 5*x16583 + 5*x16584 - x16585*x286 - x16586*x3416 - 7*x16587 - x16588*x3542 - 7*x16589 + 14*x16596 - x16597*x16732 - 5*x16599 - 5*x16600 + x16601*x16732 + 3*x16602 + 3*x16603 - 3*x16605 - 3*x16606 - 3*x16607 - 3*x16608 + x16615*x286 + 7*x16616 + x16617*x16732 + 3*x16618 + 3*x16619 + x16620*x16732 + 3*x16621 + 3*x16622 + x16632 - x16637*x4951 + x16653*x4951 + x16698 - x16705 - x16706 - x16707 - x16708 - x16710 - x16711 + x16713 + x16715 + x16716 + x16717 + x16719 + x16720 - 14*x16721 - 6*x16724 - 6*x16725 - 5*x16726 + x16727*x3432 - x16731*x7750 - x16734*x5161 + x16735*x5161 + x16747 + x3542*x8075 + x6741*x7958 + x6741*x7959) + x168*(-q8_b*x16643 - q8_b*x16644 - q8_b*x16655 + q8_b*x16658 + q8_b*x16660 + q8_b*x16661 + q9_b*x16353 - q9_b*x16354 + q9_b*x16365 - q9_b*x16368 - q9_b*x16370 - q9_b*x16371 - q9_b*x16646 + x11374*x8127 + x11374*x8128 + x11375*x8127 + x11375*x8128 + x11377*x8252 + x11377*x8253 + x11417*x7985 - x11417*x8083 + x11860*x7985 - x11860*x8083 - x12170*x8003 - x12170*x8004 - x12171*x8003 - x12171*x8004 - x158*x16585 + x158*x16615 + x158*x16652 - x158*x16656 - x16347*x5065 + x16355*x3494 + x16362*x16536 + x16363*x5065 + x16372 + x16373 + x16375 + x16377 + x16379 + x16380 - x16381 - x16382 + x16384 + x16385 - x16387 - x16389 - x16391 - x16393 - x16394 + x16396 + x16398 + x16400 + x16402 + x16406 + x16411 + 16*x16533 + 8*x16537 + 4*x16582 - x16588*x3450 - 4*x16600 + 4*x16616 - x16633 - x16634 - x16635 - x16636 - x16637*x4977 + x16638 + x16639 + x16641 + x16642 - x16645*x3380 + x16647 + x16648 + x16650 + x16651 + x16653*x4977 - x16654 - x16657 + x16659*x7751 + x16699 + x16704 + x3450*x8075 - x5247*x8117 + x5271*x8007 - x5332*x7981 + x5332*x8106 - x5505*x8120 - x5505*x8121 - x5536*x8113 - x5536*x8114 + x5643*x7958 + x5643*x7959 + x5690*x7985 - x5690*x8083 - x7*x8119 - x7*x8122 - x7733*x8175 - x7805*x8051) + x63*(-q8_b*x16762 - q8_b*x16763 - q8_b*x16764 - q8_b*x16766 - q9_b*x16468 + q9_b*x16763 + q9_b*x16764 + q9_b*x16766 - x10658*x8113 - x10658*x8114 - x11360*x16769 + x11360*x16770 + x11433*x8133 + x11434*x7985 - x11434*x8160 - x11583*x7810 + x11583*x8106 + x11591*x7836 - x11591*x8083 - x11986*x8083 + x11988*x7985 - x12286*x8003 - x12286*x8004 - x12287*x8003 - x12287*x8004 - x129*x16664 - x129*x16670 - x129*x16674 + x129*x16677 + x129*x16683 - x129*x16686 - x129*x16688 - x129*x16690 - x129*x16692 + x16227*x865 - x16237*x865 + x16280*x16474 - x16299*x16474 + x16299*x16765 + x16302*x16474 - x16302*x16765 - x16307*x3478 - x16307*x3584 - x16321*x16597 + x16321*x16601 + x16321*x16617 + x16321*x16620 + x16322*x16474 + x16325*x16474 - x16347*x5081 + x16363*x5081 + x16374*x327 + x16376*x327 + x16383*x327 - x16386*x327 - x16388*x327 - 16*x16390 + x16397*x327 + x16401*x327 + 16*x16433 + x16470*x16536 + x16497 - x16525*x865 + 36*x16533 + x16534*x865 + 18*x16537 + x16541*x5694 + 6*x16575 + 6*x16579 + 6*x16580 + 6*x16582 - x16585*x327 - 16*x16587 - x16588*x3583 - 16*x16589 + 32*x16596 - 6*x16599 - 6*x16600 + 6*x16602 + 6*x16603 - 6*x16605 - 6*x16607 - 6*x16608 + x16615*x327 + 16*x16616 + x16617*x8203 + 6*x16619 + x16620*x8203 + 6*x16622 - 24*x16630 - x16637*x4993 + x16653*x4993 - x16668*x5694 + 6*x16681 + x16698 - 32*x16721 - 12*x16724 - 12*x16725 + x16727*x3478 + x16727*x3584 - x16748 - x16749 - x16750 - x16751 - x16753 - x16754 + x16755 + x16756 + x16757 + x16758 + x16759 + x16760 + x16761 - x16767 - x16768*x7773 - x16769*x5161 + x16770*x5161 + x16771 + x16784 + x16786 + x3583*x8075 - x5312*x7981 + x5694*x8007 + x5694*x8120 + x5887*x7985 + x7357*x7958 + x7357*x7959 - x7367*x7847 - x7951*x8083) + x70*(-q8_b_dot*x16513 - q8_b_dot*x7726 - x11329*x7948 + x11332*x7948 + x11348*x7836 + x16374 + x16376 + x16383 - x16386 - x16388 + x16395 + x16397 + x16399 + x16401 + x16507 + x16508 + x16509 - x16511 - 8*x16512 + 8*x16514 + x16515 + x3484*x5150 - x3484*x5247 + x3485*x5150 - x3485*x5247 - x5278*x7936)) + x69*(L*(L*x13674 - L*x13679 + p4_b*x13680 - x11370*x9580 + x11375*x9587 + x11474*x9587 + x13672 + x13676 + x13677 + x13682 + 8*x13683 + x13684*x6674 - x13685*x6674 - x5505*x9744 - x5547*x9571 - x7*x9582) - x106*(p3_b*x13680 + p4_b*x13369 - p4_b*x13842 + p4_b*x13844 + p4_b*x9664 - p4_b*x9698 - p4_b*x9818 - x11351*x9758 - x11360*x13839 - x11360*x9674 - x11360*x9679 + x11375*x9661 + x11375*x9662 + x11474*x9661 + x11474*x9662 + x11474*x9768 - x11607*x9582 - x11614*x9587 - x11624*x4105 - x11625*x2147 - x11785*x13841 - x11800*x9774 - x11801*x13854 - x11803*x9774 - x11804*x13854 - x13377*x7713 + x13379*x7713 - x13392*x9573 + x13394*x9573 + 11*x13498 + x13530*x9582 + x13557 + x13653*x9607 + x13680*x539 - 11*x13683 - x13684*x7713 + x13685*x7713 - x13692*x13840 + x13694*x13840 + x13698*x509 - 11*x13720 - x13724*x2188 - 11*x13733 + x13739*x2188 + 11*x13750 + 11*x13751 + x13761*x540 - x13793 + x13794 + x13795 - x13797 - x13799 - x13800 - x13801 + x13802 + x13803 + x13804 + x13805 + x13806 + x13807 + x13809 + x13810 + x13811 + x13812 + x13813 + x13815 + x13816 - x13817 - x13818 - x13819 - 3*x13821 - 3*x13822 - x13823*x1858 - x13824*x4147 + x13826 + x13827 + x13828 + x13829 + 4*x13830 + 6*x13831 + x13832 + x13833 + x13834 + x13835 - x13836 - x13837 - x13838 - x13839*x5161 - x13843*x9336 + 3*x13845 + x13846*x1858 + x13847*x8675 + x13849 + x13851 + x13852 + x13853 + x13855*x539 + x13856*x539 + x13862 + x13868 - x5161*x9674 - x5161*x9679 - x5247*x9812 - x5271*x9744 + x5278*x9641 - x5278*x9740 - x5278*x9741 + x5332*x9571 + x539*x9344 - x5505*x9700 - x5505*x9806 - x5505*x9807 - x5547*x9622 - x5547*x9623 - x5547*x9685 - x5679*x9656 - x7*x9738 - x7*x9739) + x123*(p3_b*x13729 - p3_b*x13737 + p3_b*x13746 + p4_b*x13424 - p4_b*x13433 + p4_b*x13444 + p4_b*x9404 + x11360*x13758 + x11360*x13759 - x11374*x9679 - x11375*x9674 + x11467 - x11474*x9674 - x11474*x9679 - x13377*x6716 + x13379*x6716 - 8*x13430 + 8*x13448 - 8*x13450 + 8*x13461 + 24*x13498 - x13680*x509 - 24*x13683 - x13684*x6716 + x13685*x6716 - x13717 + x13718 + x13719 - 24*x13720 - x13722 - x13723 - x13725 - x13726 - x13727 - x13728 + x13731 + x13732 - 24*x13733 - 18*x13734 - 12*x13735 - x13736 - 6*x13740 - 6*x13741 - x13742 - x13743 - x13744 - x13745 + x13747 + x13748 + 18*x13749 + 24*x13750 + 24*x13751 - 18*x13752 - x13754 - x13755 + x13756*x5505 + x13757 + x13758*x5161 + x13759*x5161 + 18*x13760 - x13761*x510 + x13792 + x2190*x5505 + x4115*x7 - x5312*x9622 - x5312*x9623 + x5547*x9641 + x5694*x9806 + x5694*x9807 + x7*x9665) - x123*(x11347*x9391 - x11347*x9641 - x11352*x9312 + x11352*x9758 - x11360*x13891 - x11360*x13892 - x11383*x9738 - x11383*x9739 - x11515*x9685 + x11515*x9789 + x11517*x9606 - x11517*x9774 + x11537*x9738 + x11537*x9739 - x11938*x9774 - x11940*x9774 + x11941*x9758 + x11942*x9758 - x11951*x9661 - x11951*x9662 - x13385*x154 - x13386*x154 - x13387*x154 - x13388*x154 + x13392*x13897 - x13393*x154 - x13394*x13897 + x13395*x154 + x13396*x154 + x13397*x154 + x13398*x154 - x13404*x154 - x13405*x154 - x13406*x154 - x13407*x154 - x13419*x2161 + x13435*x2161 + 10*x13472 + 10*x13481 + x13493 + x13545*x13897 + x13547*x13897 - x13602*x13900 - x13602*x13901 + x13603 + x13689*x286 + x13690*x286 + x13691*x286 - x13692*x13894 + x13693*x286 + x13694*x13894 - x13695*x286 - x13696*x286 - x13697*x286 + x13701*x286 + x13702*x286 - x13724*x2061 + 24*x13735 + x13739*x2061 - 14*x13771 + 3*x13812 + 3*x13813 + 3*x13815 + 3*x13816 + 5*x13817 + 5*x13818 + 5*x13819 - 7*x13821 - 7*x13822 - x13823*x286 + 14*x13831 - 5*x13832 - 5*x13833 + 3*x13834 + 3*x13835 - 3*x13836 - 3*x13837 - 3*x13838 + 7*x13845 + x13846*x286 + 3*x13849 + 3*x13851 + 3*x13852 + 3*x13853 + x13868 - x13869 - x13870 - x13871 - x13872 - x13873 - x13874 + x13876 + x13878 + x13879 + x13881 + x13882 + x13883 - 10*x13884 - x13885*x286 - 6*x13886 - x13887*x9306 - x13887*x9313 + x13888*x154 + 7*x13889 + x13890*x9279 - x13890*x9573 - x13891*x5161 - x13892*x5161 - 10*x13893 - 7*x13895 - x13896*x154 - x13898*x2094 + x13899*x286 + x13900*x13902 + x13901*x13902 + x13903 + x6741*x9622 + x6741*x9623) + x168*(-p3_b*x13912 - p3_b*x13920 + p3_b*x13922 - p3_b*x13925 - p3_b*x13926 + p3_b_dt*x13923 + p4_b*x13621 - p4_b*x13624 + p4_b*x13626 + p4_b*x13627 - x11360*x13918 - x11360*x13919 - x11360*x13927 + x11374*x9816 + x11374*x9817 + x11375*x9816 + x11375*x9817 + x11377*x9850 + x11417*x9758 - x11417*x9774 + x11474*x9816 + x11607*x4115 - x11831*x9738 - x11831*x9739 - x11840*x9661 - x11840*x9662 + x11860*x9758 - x13419*x2240 + x13435*x2240 + x13494 - x13530*x4115 - x13617*x9612 + x13631 + 16*x13735 + 8*x13740 + 8*x13741 + x13765 + x13766 + x13767 + x13768 + x13769 + x13770 - x13772 - x13773 + x13774 + x13775 - x13776 - x13777 - x13778 - x13780 - x13782 + x13783 + x13784 + x13785 + x13786 + x13791 + 4*x13819 + 8*x13831 - 4*x13833 - 8*x13884 - x13885*x158 - 4*x13886 + x13888*x158 - x13896*x158 - x13904 - x13905 - x13906 - x13907 + x13908 + x13909 + x13910 + x13911 + x13913 + x13914 + x13915 + x13916 - x13917 - x13918*x5161 - x13919*x5161 - x13921 + 8*x13924 - x13927*x5161 + x13931 + x2190*x5271 - x5332*x9641 + x5332*x9789 - x5505*x9811 - x5505*x9812 - x5536*x9806 - x5536*x9807 + x5643*x9622 + x5643*x9623 + x5690*x9758 - x7*x9810 - x7*x9813 + x8675*x9814 + x8676*x9738 + x8676*x9739 - x9306*x9720) + x63*(-x10658*x9806 - x10658*x9807 - x11360*x13946 - x11360*x13947 + x11433*x9300 - x11434*x9312 + x11434*x9758 - x11583*x9685 + x11583*x9789 + x11591*x9606 - x11591*x9774 - x11962*x9738 - x11962*x9739 - x11973*x9661 - x11973*x9662 + x11977*x9738 + x11977*x9739 - x11986*x9774 + x11988*x9758 - x129*x13385 - x129*x13387 - x129*x13388 - x129*x13393 + x129*x13395 + x129*x13397 + x129*x13398 - x129*x13404 - x129*x13405 - x129*x13406 - x129*x13407 + x129*x13888 - x129*x13896 + x13392*x13951 - x13394*x13951 - x13424*x509 + x13433*x509 + 12*x13472 + x13493 + x13545*x13887 + x13545*x13951 + x13547*x13887 + x13547*x13951 - x13598*x9779 + x13649*x9313 - x13654*x13900 - x13654*x13901 + x13671 + x13688*x9835 + x13689*x327 + x13690*x327 + x13691*x327 - x13692*x13948 + x13692*x9835 + x13693*x327 + x13694*x13948 - x13694*x9835 - x13695*x327 - x13696*x327 - x13697*x327 + x13701*x327 + x13702*x327 + x13729*x509 + 36*x13735 - x13737*x509 + 18*x13740 + 18*x13741 - 32*x13771 - 12*x13779*x9634 - 32*x13781 + 6*x13812 + 6*x13813 + x13814*x13945 + 6*x13815 + 6*x13816 + 6*x13819 - 16*x13821 - 16*x13822 - x13823*x327 + 32*x13831 - 6*x13833 + 6*x13834 + 6*x13835 - 6*x13836 - 6*x13837 - 6*x13838 + 16*x13845 + x13846*x327 + x13848*x9835 + 6*x13849 + x13850*x9835 + 6*x13851 - 24*x13865 - 12*x13884 - x13885*x327 - 12*x13886 + 16*x13889 - 16*x13895 + x13899*x327 + x13900*x13952 + x13901*x13952 + 32*x13924 - x13932 - x13933 - x13934 - x13935 - x13936 - x13937 + x13938 + x13939 + x13940 + x13941 + x13942 + x13943 + x13944 - x13946*x5161 - x13947*x5161 - x13949*x9313 - x13950 + x13966 + x13969 + x2190*x5694 - x5312*x9641 + x5887*x9758 + x7357*x9622 + x7357*x9623 - x7367*x9716 - x7951*x9774 - x9306*x9835) + x70*(-p4_b_dot*x13698 - p4_b_dot*x9583 + x11348*x9606 + x13686 + x13687 + x13689 + x13690 + x13691 + x13693 - x13695 - x13696 - x13697 + x13699 + x13700 + x13701 + x13702 + x13704 + x13716 + x2149*x5150 - x2149*x5247 - x5278*x9592 + x6679)) + x69*(L*(L*x14258 + p6_b*x14263 - x10156*x5547 - x10165*x11370 - x10167*x7 + x10172*x11375 + x10172*x11474 - x10329*x5505 + x14256 + x14260 + x14261 - x14262*x3943 + x14265 + 12*x14266 + x14267*x3943 - x14268*x3943) - x106*(p5_b*x14263 + p6_b*x10251 - p6_b*x10284 - p6_b*x10403 + p6_b*x13977 - p6_b*x14425 + p6_b*x14427 + x10156*x5332 - x10158*x13989 + x10158*x13991 - x10167*x11607 + x10167*x13530 - x10172*x11614 + x10194*x14237 - x10208*x5547 - x10209*x5547 + x10228*x5278 - x10244*x5679 + x10248*x11375 + x10248*x11474 + x10249*x11375 + x10249*x11474 - x10261*x11360 - x10261*x5161 - x10266*x11360 - x10266*x5161 - x10271*x5547 - x10286*x5505 - x10323*x7 - x10324*x7 - x10325*x5278 - x10326*x5278 - x10329*x5271 - x10343*x11351 + x10354*x11474 - x10360*x11800 - x10360*x11803 - x10391*x5505 - x10392*x5505 - x11360*x14422 - x11624*x4272 - x11625*x2353 - x11785*x14424 - x11801*x14437 - x11804*x14437 + 15*x13972 - x13976*x8342 + x13979*x8342 + x13980*x8342 - x13981*x8342 + x14148 + x14262*x8342 + x14263*x599 - 15*x14266 - x14267*x8342 + x14268*x8342 - x14275*x14423 + x14277*x14423 + x14281*x569 - 15*x14303 - x14308*x2394 + x14322*x2394 + x14343*x600 - x14375 + x14376 + x14377 - x14379 - x14381 - x14382 - x14383 + x14384 + x14385 + x14386 + x14387 + x14388 + x14389 + x14391 + x14392 + x14393 + x14394 + x14395 + x14397 + x14398 - x14399 - x14400 - x14401 - 3*x14403 - 3*x14404 - x14405*x1858 - x14406*x4314 + x14408 + x14409 + x14410 + x14411 + 4*x14412 + 6*x14413 + x14414 + x14415 + x14416 + x14417 - x14418 - x14419 - x14420 - x14421 - x14422*x5161 - x14426*x9919 + 3*x14428 + x14429*x1858 + x14430*x8675 + x14432 + x14434 + x14435 + x14436 + x14438*x599 + x14439*x599 + x14445 + x14451 + x599*x9927) + x123*(p5_b*x14312 - p5_b*x14320 + p5_b*x14329 + p6_b*x14025 - p6_b*x14033 + p6_b*x14042 + p6_b*x9988 - x10208*x5312 - x10209*x5312 + x10228*x5547 + x10252*x7 - x10261*x11375 - x10261*x11474 - x10266*x11374 - x10266*x11474 + x10391*x5694 + x10392*x5694 + x11360*x14340 + x11360*x14341 + x11467 + 36*x13972 + x13980*x7333 - x13981*x7333 + 36*x14029 - 36*x14046 - x14263*x569 - 36*x14266 - x14267*x7333 + x14268*x7333 + x14291*x14316 - x14293*x14316 + x14295*x14316 - x14297*x14316 - x14300 + x14301 + x14302 - 36*x14303 - x14305 - x14306 - x14307 - x14309 - x14310 - x14311 + x14314 + x14315 - 12*x14317 - x14318 - x14319 - 6*x14323 - 6*x14324 - x14325 - x14326 - x14327 - x14328 + x14330 + x14331 + x14332 + 36*x14333 - x14334 - x14336 - x14337 + x14338*x5505 + x14339 + x14340*x5161 + x14341*x5161 + x14342 - x14343*x570 + x14374 + x2396*x5505 + x4282*x7) - x123*(-x10158*x14472 + x10193*x11517 + x10208*x6741 + x10209*x6741 - x10228*x11347 - x10248*x11951 - x10249*x11951 - x10271*x11515 - x10323*x11383 + x10323*x11537 - x10324*x11383 + x10324*x11537 + x10343*x11352 + x10343*x11941 + x10343*x11942 - x10360*x11517 - x10360*x11938 - x10360*x11940 + x10372*x11515 + x11347*x9975 - x11352*x9895 - x11360*x14473 - x11360*x14474 - x13985*x154 - x13986*x154 - x13987*x154 - x13988*x154 + x13989*x14478 - x13990*x154 - x13991*x14478 + x13992*x154 + x13993*x154 + x13994*x154 + x13995*x154 - x13997*x154 - x13998*x154 - x13999*x154 - x14000*x154 - x14020*x2367 + x14035*x2367 + 10*x14066 + 10*x14075 + x14087 + x14138*x14478 + x14140*x14478 - x14188*x14481 - x14188*x14482 + x14189 + x14272*x286 + x14273*x286 + x14274*x286 - x14275*x14476 + x14276*x286 + x14277*x14476 - x14278*x286 - x14279*x286 - x14280*x286 + x14284*x286 + x14285*x286 - x14308*x2268 + x14308*x9893 + 24*x14317 + x14322*x2268 - x14322*x9893 - 14*x14353 + 3*x14394 + 3*x14395 + 3*x14397 + 3*x14398 + 5*x14399 + 5*x14400 + 5*x14401 - 7*x14403 - 7*x14404 - x14405*x286 + 14*x14413 - 5*x14414 - 5*x14415 + 3*x14416 + 3*x14417 - 3*x14418 - 3*x14419 - 3*x14421 + 7*x14428 + x14429*x286 + 3*x14432 + 3*x14434 + 3*x14435 + 3*x14436 + x14451 - x14452 - x14453 - x14454 - x14455 - x14456 - x14457 + x14459 + x14461 + x14462 + x14464 + x14465 + x14466 - 10*x14467 - x14468*x286 - 6*x14469 - x14470*x9889 - x14470*x9896 + 7*x14471 + x14472*x9860 - x14473*x5161 - x14474*x5161 - 10*x14475 - 7*x14477 - x14479*x2301 + x14480*x286 + x14481*x14483 + x14482*x14483 + x14484) + x168*(-p5_b*x14493 - p5_b*x14502 + p5_b*x14505 - p5_b*x14508 - p5_b*x14509 + p5_b_dt*x14506 + p6_b*x14207 - p6_b*x14209 + x10208*x5643 + x10209*x5643 - x10228*x5332 - x10248*x11840 - x10249*x11840 - x10306*x9889 - x10323*x11831 + x10323*x8676 - x10324*x11831 + x10324*x8676 + x10343*x11417 + x10343*x11860 + x10343*x5690 - x10360*x11417 - x10360*x11860 - x10360*x5690 + x10372*x5332 - x10391*x5536 - x10392*x5536 - x10395*x7 - x10396*x5505 - x10397*x5505 - x10398*x7 - x10399*x14203 + x10401*x11374 + x10401*x11375 + x10401*x11474 + x10402*x11374 + x10402*x11375 + x10433*x11377 - x11360*x14500 - x11360*x14501 + x11607*x4282 - x13530*x4282 + x14088 + x14138*x14510 + x14140*x14510 + x14216 + 16*x14317 + 8*x14323 + 8*x14324 + x14347 + x14348 + x14349 + x14350 + x14351 + x14352 - x14354 - x14355 + x14356 + x14357 - x14358 - x14359 - x14360 - x14362 - x14364 + x14365 + x14366 + x14367 + x14368 + x14373 + 4*x14401 - x14405*x158 + 8*x14413 - 4*x14415 + x14429*x158 - 8*x14467 - x14468*x158 - 4*x14469 + x14480*x158 - x14485 - x14486 - x14487 - x14488 + x14489 + x14490 + x14491 + x14492 + x14494 + x14495 + x14496 + x14497 + x14498*x158 - x14499 - x14500*x5161 - x14501*x5161 - x14503*x158 - x14504 + 8*x14507 + x14514 + x2396*x5271) + x63*(x10099*x14431 + x10099*x14433 + x10193*x11591 + x10208*x7357 + x10209*x7357 - 12*x10221*x14361 - x10228*x5312 - x10248*x11973 - x10249*x11973 - x10271*x11583 - x10302*x7367 - x10323*x11962 + x10323*x11977 - x10324*x11962 + x10324*x11977 + x10343*x11434 + x10343*x11988 + x10343*x5887 - x10360*x11591 - x10360*x11986 - x10360*x7951 + x10372*x11583 - x10391*x10658 - x10392*x10658 + x10420*x14271 + x10420*x14275 - x10420*x14277 + x10420*x14431 + x10420*x14433 - x10420*x9889 - x11360*x14529 - x11360*x14530 + x11433*x9880 - x11434*x9895 - x129*x13985 - x129*x13987 - x129*x13988 - x129*x13990 + x129*x13992 + x129*x13994 + x129*x13995 - x129*x13997 - x129*x13998 - x129*x13999 - x129*x14000 + x129*x14498 - x129*x14503 + x13989*x14534 - x13991*x14534 - x14025*x569 + x14033*x569 + 12*x14066 + x14087 + x14138*x14470 + x14138*x14534 + x14140*x14470 + x14140*x14534 + x14234*x9896 - x14238*x14481 - x14238*x14482 + x14255 + x14272*x327 + x14273*x327 + x14274*x327 - x14275*x14531 + x14276*x327 + x14277*x14531 - x14278*x327 - x14279*x327 - x14280*x327 + x14284*x327 + x14285*x327 + x14312*x569 + 36*x14317 - x14320*x569 + 18*x14323 + 18*x14324 - 32*x14353 - 32*x14363 + 6*x14394 + 6*x14395 + x14396*x14528 + 6*x14397 + 6*x14398 + 6*x14401 - 16*x14403 - 16*x14404 - x14405*x327 + 32*x14413 - 6*x14415 + 6*x14416 + 6*x14417 - 6*x14418 - 6*x14419 - 6*x14420 - 6*x14421 + 16*x14428 + x14429*x327 - 24*x14448 - 12*x14467 - x14468*x327 - 12*x14469 + 16*x14471 - 16*x14477 + x14480*x327 + x14481*x14535 + x14482*x14535 + 32*x14507 - x14515 - x14516 - x14517 - x14518 - x14519 - x14520 + x14521 + x14522 + x14523 + x14524 + x14525 + x14526 + x14527 - x14529*x5161 - x14530*x5161 - x14532*x9896 - x14533 + x14549 + x14552 + x2396*x5694) + x70*(-p6_b_dot*x10168 - p6_b_dot*x14281 - x10179*x5278 + x10193*x11348 + x14269 + x14270 + x14272 + x14273 + x14274 + x14276 - x14278 - x14279 - x14280 + x14282 + x14283 + x14284 + x14285 + x14287 + x14299 + x2355*x5150 - x2355*x5247 + x6120)) + x69*(L*(L*x15136 + L*x15140 - p9_b*x12804 + p9_b*x12812 + p9_b*x12828 - p9_b_dt*x12805 + p9_i*x12829 - x11370*x8874 - x12691*x4023 - x12728*x4023 + x12756*x4023 + x15135 + x15137 + x15138 + x15139 - x5547*x8869) - x106*(-p8_b*x12804 + p8_b*x12812 - p8_b_dot*x12827 + p8_i*x12829 + p9_b*x11084 + p9_b*x14847 + p9_b*x15024 - p9_b*x15211 + p9_b*x15212 + p9_b*x15220 - p9_b*x8898 + x11012*x8773 - x11053*x5547 - x11054*x5547 + x11067*x5278 - x11079*x5679 + x11082*x11375 + x11082*x11474 - x11089*x11360 - x11089*x5161 - x11090*x11360 - x11090*x5161 + x11102*x5394 - x11111*x7 - x11112*x5278 - x11113*x5278 - x11131*x5150 + x11131*x5247 - x11134*x11351 - x11148*x11800 - x11148*x11803 - x11173*x5505 - x11174*x5505 - x11360*x15208 - x11624*x3901 - x11625*x1881 - x11785*x15210 - x11801*x15219 - x11804*x15219 - 21*x12690 + 21*x12692 + x12701*x2675 - 21*x12727 + x12728*x15207 - x12756*x15207 + x12812*x420 + x12815*x15209 - x12817*x15209 + x12828*x420 + x12829*x421 + x12844 - x12912*x933 - x12914*x2675 + x12916*x933 - 4*x12978 + 4*x12979 - 4*x12980 - x13524*x15193 + 21*x14849 + 21*x14853 - x14855*x15207 + x14857*x15207 - x14869*x8582 + x14871*x8582 - 21*x14999 + x15026 + x15145*x633 + x15165*x420 - x15166 + x15167 + x15168 - x15170 - x15172 - x15173 - x15174 + x15175 + x15176 + x15177 + x15178 + x15179 + x15180 + x15181 + x15182 + x15183 + x15184 + x15185 + x15186 + x15187 - x15188 - x15189 - x15190 - 3*x15191 - x15192*x1858 + x15194 + x15195 + x15196 + x15197 + 6*x15198 + x15199 + x15200 + x15201 + x15202 - x15203 - x15204 - x15205 - x15206 - x15208*x5161 + x15213*x1858 + 3*x15214 + x15215 + x15216 + x15217 + x15218 + x15226 + x5332*x8869 - x5505*x8837 - x5547*x8814 - x8773*x8892) + x123*(p8_b*x12679 - p8_b*x12699 + p8_b*x12715 - p8_b*x8844 + p9_b*x10874 + p9_b*x14897 - p9_b*x14904 + p9_b*x14913 - x11053*x5312 - x11054*x5312 + x11067*x5547 + x11085*x7 - x11090*x11374 - x11090*x11474 + x11174*x5694 + x11360*x15163 + x11360*x15164 + x11467 - 54*x12690 + x12691*x8287 - 38*x12694 + 38*x12725 - 54*x12727 + x12728*x8287 - 38*x12732 + 38*x12753 - x12756*x8287 + x12805*x2675 - x12812*x633 - x12828*x633 - x12829*x634 - x12908 + x12909 + x12911 - x12913 - x12915 + x12917 + x12918 - x12919 - x12921 - x12922 + x12975 + 54*x14849 - x14851*x8287 + 54*x14853 - x14855*x8287 + x14857*x8287 - 18*x14901 + 18*x14916 - 18*x14918 + 18*x14927 + x15149 + x15150 - x15151 - x15152 - x15153 - x15154 + 6*x15155 - 6*x15156 - 6*x15157 - x15158 - x15159 - x15160 - x15161 + x15162 + x15163*x5161 + x15164*x5161 - x15165*x633 + x2677*x5505 + x4517*x7) - x123*(-p8_i*x12867 + x10742*x15249 - x10772*x8820 - x10778*x11352 - x10779*x8820 - x10804*x12872 + x10861*x11347 - x10933*x11929 + x11053*x6741 + x11054*x6741 - x11067*x11347 - x11082*x11951 + x11102*x11515 - x11111*x11383 + x11111*x11537 + x11134*x11352 + x11134*x11941 + x11134*x11942 - x11148*x11517 - x11148*x11938 - x11148*x11940 - x11167*x15053 - x11360*x15250 - x11360*x15251 - x11515*x8814 + x11517*x8852 + x12701*x2572 + x12815*x15253 - x12817*x15253 + x12873*x286 + x12874*x286 + x12875*x286 + 7*x12876 + x12889*x286 - x12891*x286 - x12892*x286 - x12893*x286 - 7*x12894 + x12898*x15257 + x12898*x15258 + x12902*x286 + x12903*x286 - x12914*x2572 + x12923 - 14*x12961 - x14863*x154 - x14864*x154 - x14865*x154 + x14869*x15255 - x14870*x154 - x14871*x15255 + x14872*x154 + x14873*x154 + x14874*x154 - x14880*x154 - x14881*x154 - x14882*x154 - x14883*x154 - x14893*x1868 + x14906*x1868 + 10*x14938 + 10*x14948 + x14958 + x15016*x15255 + x15018*x15255 + 5*x15059 - x15062*x2685 - x15067*x15257 - x15067*x15258 + x15068 + 3*x15184 + 3*x15185 + 3*x15186 + 3*x15187 + 5*x15188 + 5*x15189 + 5*x15190 - 7*x15191 - x15192*x286 + 14*x15198 - 5*x15199 - 5*x15200 + 3*x15201 + 3*x15202 - 3*x15203 - 3*x15205 - 3*x15206 + x15213*x286 + 7*x15214 + 3*x15215 + 3*x15216 + 3*x15217 + 3*x15218 + x15226 - x15227 - x15228 - x15229 - x15230 - x15231*x1896 - x15232 - x15233 + x15235 + x15237 + x15238 + x15240 + x15242 + x15243 - 10*x15244 - 7*x15245 + x15246*x154 + x15247*x1896 + 24*x15248 - x15249*x8582 - x15250*x5161 - x15251*x5161 - 10*x15252 - x15254*x154 + x15256*x5247) + x168*(-p8_b*x15268 - p8_b*x15276 + p8_b*x15278 - p8_b*x15279 - p8_b*x15280 - p8_i*x12940 + x10742*x12947 - x10772*x8916 + x10876*x12886 - x10897*x8745 + x11053*x5643 + x11054*x5643 - x11067*x5332 - x11082*x11840 + x11102*x5332 + x11111*x8676 + x11134*x11417 + x11134*x11860 + x11134*x5690 - x11148*x11417 - x11148*x11860 - x11148*x5690 - x11167*x5271 - x11174*x5536 - x11176*x7 - x11177*x5505 - x11178*x5505 - x11179*x7 + x11181*x11374 + x11181*x11375 + x11182*x11374 + x11182*x11375 + x11182*x11474 + x11195*x11377 - x11360*x15274 - x11360*x15275 - x11607*x15193 + x12907 + x12955 + x12956 + x12957 + x12958 + x12959 + x12960 - x12962 - x12963 + x12964 + x12965 - x12966 - x12967 - x12968 - x12969 - x12970 + x12971 + x12972 + x12973 + x12974 + x12982 + x13530*x15193 + x14869*x8892 - x14871*x8892 + x14959 + x14991*x1923 - x15015*x1923 + x15016*x8892 + x15018*x8892 + x15096 - 8*x15155 + 8*x15156 + 8*x15157 + 4*x15190 - x15192*x158 + 8*x15198 - 4*x15200 + x15213*x158 - x15231*x1921 - 8*x15244 + x15246*x158 + x15247*x1921 + 16*x15248 - x15254*x158 - x15259 - x15260 - x15261 - x15262 - 8*x15263 + x15264 + x15265 + x15266 + x15267 + x15269 + x15270 + x15271 + x15272 - x15273 - x15274*x5161 - x15275*x5161 - x15277 + x2677*x5271) + x63*(-p9_i_dot*x15111 - x10658*x11174 + x10742*x15295 + x10747*x12886 - x10772*x13006 - x10778*x11434 + x10779*x15115 - x10779*x15299 + x10861*x5312 - x10873*x8670 - x10933*x5694 - x11016*x8745 + x11053*x7357 + x11054*x7357 - x11067*x5312 - x11082*x11973 + x11102*x11583 + x11111*x11977 + x11134*x11434 + x11134*x11988 + x11134*x5887 - x11148*x11591 - x11148*x11986 - x11148*x7951 - x11360*x15296 - x11360*x15297 - x11537*x8861 - x11583*x8814 - x11588*x8862 + x11591*x8852 + x12679*x633 - x12699*x633 + x12790*x13006 + x12815*x15298 + x12817*x13006 + x12817*x15051 - x12817*x15298 + x12832*x13006 + x12832*x15051 + x12834*x13006 + x12834*x15051 + x12873*x327 + x12874*x327 + x12875*x327 + 16*x12876 + x12889*x327 - x12891*x327 - x12892*x327 - x12893*x327 - 16*x12894 - x129*x14863 - x129*x14865 - x129*x14870 + x129*x14872 + x129*x14874 - x129*x14880 - x129*x14881 - x129*x14882 - x129*x14883 + x129*x15246 - x129*x15254 + x12902*x327 + x12903*x327 - x12939*x15294 - 32*x12961 + x13024*x15257 + x13024*x15258 + x13039 + x14869*x8726 + x14869*x8820 - x14871*x8726 - x14871*x8820 - x14897*x633 + x14904*x633 + 12*x14938 + x14958 + x15016*x8726 + x15016*x8820 + x15018*x8726 + x15018*x8820 + 6*x15059 - x15117*x15257 - x15117*x15258 + x15134 - 18*x15155 + 18*x15156 + 18*x15157 + 6*x15184 + 6*x15185 + 6*x15186 + 6*x15187 + 6*x15190 - 16*x15191 - x15192*x327 + 32*x15198 - 6*x15200 - 6*x15203 - 6*x15204 - 6*x15205 + x15213*x327 + 16*x15214 - 24*x15223 + 12*x15225 - x15231*x1927 - 16*x15245 + x15247*x1927 + 36*x15248 - 18*x15263 - x15281 - x15282 - x15283 - x15284 - x15285 - x15286 + x15287 + x15288 + x15289 + x15290 + x15291 + x15292 + x15293 - x15295*x8582 - x15296*x5161 - x15297*x5161 - x15300 + x15302 + x2677*x5694 - x7367*x8860) + x70*(-p9_b_dot*x15145 - p9_b_dot*x8735 + x11050*x11329 - x11050*x11332 + x11348*x8852 - x12724*x4046 + x12873 + x12874 + x12875 + x12889 - x12891 - x12892 - x12893 + x12900 + x12901 + x12902 + x12903 + x15141 + x15142 + x15144 + x15146*x4046 + x15148 + x2657*x5150 - x2657*x5247 - x5278*x8952 + x6412)) + x69*(L*(-L*x15304 + L*x15307 - L*x15308 - q4_b*x12409 + q4_b*x12414 - x11370*x6606 + x11375*x6609 + x11474*x6609 - x12367*x6674 + x12375*x6674 + x13682 + x15303 + x15305 + x15306 - x5505*x6608 - x5547*x6603) - x106*(-q4_b*x15399 + q4_b*x15404 + q4_b*x15407 - q4_b*x15413 - q4_b*x15422 + q4_b*x15423 + q4_b*x15424 - q4_b*x6539 - q4_b*x6549 + q4_b*x6757 + q4_i*x15425 - q5_b*x12409 + q5_b*x12414 - q5_b_dot*x12432 + q5_i*x12435 - x11351*x6810 - x11360*x15419 - x11360*x6764 - x11360*x6765 + x11474*x6752 + x11474*x6753 + x11474*x6820 - x11614*x6609 - x11624*x4610 - x11755*x4663 + x11773*x4663 - x11785*x15420 - x11800*x6823 - x11801*x15436 - x11803*x6823 - x11804*x15436 + x12352*x3070 - x12407*x3070 + x12414*x720 + x12417*x15421 - x12420*x15421 + x12435*x721 + x12455 - x12467*x4671 + x12483*x4671 - x12498*x5505 - x15364 + x15365 + x15366 - x15368 - x15370 - x15371 - x15372 + x15373 + x15374 + x15376 + x15377 + x15378 + x15379 + x15380 + x15381 + x15382 + x15384 + x15386 + x15388 + x15389 - x15391 - x15392 - x15393 - x15394*x1858 - 3*x15396 - x15397*x3082 - 3*x15398 + x15400 + x15401 + x15402 + x15403 + 6*x15405 + x15408 + x15409 + x15411 + x15412 - x15414 - x15415 - x15417 - x15418 - x15419*x5161 + x15426*x1858 + 3*x15427 + x15428*x3082 + x15429*x6484 + x15431 + x15432 + x15434 + x15435 + x15437*x720 + x15438*x720 + x15440 + x15451 + x15456 - x5161*x6764 - x5161*x6765 + x5278*x6730 - x5278*x6785 - x5278*x6786 + x5332*x6603 - x5505*x6575 - x5505*x6852 - x5505*x6853 - x5547*x6557 - x5547*x6702 - x5547*x6703 - x5679*x6746 + x6727*x720) + x123*(q4_b*x15330 - q4_b*x15341 + q4_b*x15351 + q4_b*x6856 + q5_b*x12339 - q5_b*x12350 + q5_b*x12362 - x11374*x6765 - x11375*x6764 + x11467 - x11474*x6764 - x11474*x6765 + x11624*x4663 + x11702*x6752 + x11702*x6753 - 14*x12348 - x12354*x15343 + 14*x12364 + x12367*x6716 - 14*x12369 + 14*x12373 - x12375*x6716 - x12414*x749 - x12435*x750 + 24*x12456 + x12526 - x12564 + x12565 + x12566 - x12567 - x12568 + x12569 + x12570 - x12571 - x12572 - x12573 + x15321 + x15322 - 24*x15324 - x15328 - x15329 + x15333 + x15334 - 24*x15335 - 24*x15337 - 12*x15338 - 8*x15340 - 6*x15344 - x15346 - x15347 + x15348*x5505 - x15349 - x15350 + 8*x15353 + 24*x15355 + 24*x15356 - x15357*x6716 - 8*x15359 + x15360 + 8*x15362 + x15363*x6716 - x5312*x6702 - x5312*x6703 + x5505*x6756 + x5547*x6730 + x5694*x6852 + x5694*x6853 + x6624*x6752 + x6624*x6753 + x6755*x7) - x123*(-q4_b*x15547 - q4_b*x15548 - q4_b*x15551 - q4_b*x15552 - q5_b*x12548 + q5_b*x15548 + q5_b*x15551 + q5_b*x15552 - x11347*x6730 + x11347*x6871 + x11352*x6810 - x11352*x6897 - x11360*x15557 + x11360*x15559 - x11515*x6557 + x11515*x6846 + x11517*x6583 - x11517*x6823 - x11938*x6823 - x11940*x6823 + x11941*x6810 + x11942*x6810 - x12248*x6752 - x12248*x6753 - x12249*x6752 - x12249*x6753 - x12352*x3100 + x12352*x6953 - x12407*x6953 + x12417*x15553 - x12420*x15553 + x12439*x15558 + x12442*x15558 - x12467*x4688 + x12483*x4688 + x12494*x286 + x12496*x286 + x12503*x286 - x12506*x286 - x12508*x286 + x12516*x286 + x12520*x286 + 7*x12552 + x12553*x2994 - 7*x12558 - x12559*x2994 - x12559*x6831 + x12574 + 24*x15338 + x15343*x2978 + x15343*x3100 + 3*x15384 + 3*x15386 + 3*x15388 + 3*x15389 + 5*x15391 + 5*x15392 + 5*x15393 - x15394*x286 - x15395*x2978 - x15395*x3100 - 7*x15396 - x15397*x3106 - 7*x15398 + x154*x15475 - x154*x15481 - x154*x15490 - x154*x15492 - x154*x15495 - x154*x15499 + x154*x15502 + x154*x15504 + x154*x15508 - x154*x15511 - x154*x15513 - x154*x15515 - x154*x15517 + 14*x15405 - x15406*x15555 + x15410*x15555 + 3*x15411 + 3*x15412 - 3*x15414 - 3*x15415 - 3*x15418 + x15426*x286 + 7*x15427 + x15428*x3106 + x15430*x15555 + 3*x15431 + x15433*x15555 + 3*x15434 + x15456 - x15461*x4597 + x15476*x4597 + x15523 - x15530 - x15531 - x15532 - x15533 - x15535 - x15536 + x15538 + x15540 + x15541 + x15542 + x15544 + x15545 - 14*x15546 - 6*x15549 - 6*x15550 - x15554*x6484 - x15556*x2990 - x15557*x5161 + x15559*x5161 + x15570 + x6702*x6741 + x6703*x6741) + x168*(-q4_b*x15467 - q4_b*x15468 - q4_b*x15479 + q4_b*x15483 + q4_b*x15486 + q4_b*x15487 - q4_b_dot*x15478 + q5_b*x12473 - q5_b*x12474 + q5_b*x12485 - q5_b*x12488 - q5_b*x12490 - q5_b*x12491 - q5_b*x15470 - x11360*x15485 + x11374*x6864 + x11374*x6865 + x11375*x6864 + x11375*x6865 + x11377*x6989 + x11377*x6990 + x11417*x6810 + x11860*x6810 - x12170*x6752 - x12170*x6753 - x12171*x6752 - x12171*x6753 - x12467*x4714 + x12475*x3059 + x12482*x15343 + x12483*x4714 + x12492 + x12493 + x12495 + x12497 + x12499 + x12500 - x12501 - x12502 + x12504 + x12505 - x12507 - x12509 - x12510 - x12512 - x12513 + x12515 + x12517 + x12519 + x12521 + x12525 + x12530 + 16*x15338 + x15343*x3021 + 8*x15344 + 4*x15391 - x15394*x158 - x15397*x3012 - 4*x15409 + x15426*x158 + x15428*x3012 - x15457 - x15458 - x15459 - x15460 - x15461*x4623 + x15462 + x15463 + x15465 + x15466 - x15469*x2943 + x15471 + x15472 + x15473 + x15474 + x15475*x158 + x15476*x4623 - x15477 - x15480*x5247 - x15481*x158 - x15482 + x15484*x6485 - x15485*x5161 + x15524 + x15529 + x5271*x6756 - x5332*x6730 + x5332*x6846 - x5505*x6858 - x5505*x6859 - x5536*x6852 - x5536*x6853 + x5643*x6702 + x5643*x6703 + x5690*x6810 - x6466*x6912 - x6791*x6836 - x6857*x7 - x6860*x7) + x63*(-q4_b*x15585 - q4_b*x15586 - q4_b*x15588 - q4_b*x15590 - q5_b*x12589 + q5_b*x15586 + q5_b*x15588 + q5_b*x15590 - x10658*x6852 - x10658*x6853 - x11360*x15593 + x11360*x15594 + x11433*x6870 + x11434*x6810 - x11434*x6897 - x11583*x6557 + x11583*x6846 + x11591*x6583 - x11591*x6823 - x11986*x6823 + x11988*x6810 - x12286*x6752 - x12286*x6753 - x12287*x6752 - x12287*x6753 + x12339*x749 - x12350*x749 + x12397*x12596 - x12417*x12596 + x12417*x15589 + x12420*x12596 - x12420*x15589 - x12438*x15406 + x12438*x15410 + x12438*x15430 + x12438*x15433 + x12439*x12596 + x12442*x12596 - x12467*x4730 + x12483*x4730 + x12494*x327 + x12496*x327 + x12503*x327 - x12506*x327 - x12508*x327 + x12516*x327 + x12520*x327 + 16*x12552 + x12553*x3042 - 16*x12558 - x12559*x3042 - x12559*x3153 + x12592*x15343 + x12611 - x129*x15490 - x129*x15495 - x129*x15499 + x129*x15502 + x129*x15508 - x129*x15511 - x129*x15513 - x129*x15515 - x129*x15517 - x15330*x749 + 36*x15338 + x15341*x749 + 18*x15344 + x15348*x5694 + 6*x15384 + 6*x15388 + 6*x15389 + 6*x15391 - x15394*x327 - 16*x15396 - x15397*x3151 - 16*x15398 + 32*x15405 - 6*x15408 - 6*x15409 + 6*x15411 + 6*x15412 - 6*x15414 - 6*x15417 - 6*x15418 + x15426*x327 + 16*x15427 + x15428*x3151 + x15430*x6945 + 6*x15432 + x15433*x6945 + 6*x15435 - 24*x15454 - x15461*x4639 + x15476*x4639 + 6*x15506 + x15523 - 32*x15546 - 12*x15549 - 12*x15550 - x15556*x6397 - x15571 - x15572 - x15573 - x15574 - x15576 - x15577 + x15578 + x15579 + x15580 + x15581 + x15582 + x15583 + x15584 - x15587*x5694 - x15592 - x15593*x5161 + x15594*x5161 + x15595 + x15602 + x15610 - x5312*x6730 + x5694*x6756 + x5694*x6858 + x5712*x6597 + x5887*x6810 - x6595*x7367 + x6702*x7357 + x6703*x7357 - x6823*x7951) + x70*(-q4_b_dot*x15312 - q4_b_dot*x6458 + x11348*x6583 + x12494 + x12496 + x12503 - x12506 - x12508 + x12514 + x12516 + x12518 + x12520 + x15309 + x15310 + x15311 + x15313 + x15320 + x3049*x5150 - x3049*x5247 + x3050*x5150 - x3050*x5247 - x5278*x6684)) + x69*(L*(-L*x15910 - q6_b*x15701 + q6_b*x15706 - x11370*x7229 + x11375*x7232 + x11474*x7232 + x14265 - x15640*x3943 + x15660*x3943 - x15662*x3943 + x15668*x3943 + x15909 + x15911 + x15912 - x5505*x7231 - x5547*x7226) - x106*(-q6_b*x16005 + q6_b*x16010 + q6_b*x16013 - q6_b*x16019 - q6_b*x16027 + q6_b*x16028 + q6_b*x16029 - q6_b*x7166 - q6_b*x7174 + q6_b*x7374 + q6_i*x16030 - q7_b*x15701 + q7_b*x15706 - q7_b_dot*x15722 + q7_i*x15725 - x11351*x7434 - x11360*x16024 - x11360*x7382 - x11360*x7383 + x11474*x7369 + x11474*x7370 + x11474*x7447 - x11614*x7232 - x11624*x4789 - x11755*x4839 + x11773*x4839 - x11785*x16025 - x11800*x7450 - x11801*x16041 - x11803*x7450 - x11804*x16041 + 9*x15629 + x15640*x4046 + x15647*x3287 - x15660*x4046 + x15662*x4046 - x15668*x4046 - x15697*x3287 + x15706*x778 + x15708*x16026 - x15711*x16026 + x15725*x779 + x15749 - x15760*x4847 + x15776*x4847 - x15791*x5505 - 9*x15928 - x15939*x4046 + x15959*x4046 - x15961*x4046 + x15969*x4046 - x15970 + x15971 + x15972 - x15974 - x15976 - x15977 - x15978 + x15979 + x15980 + x15982 + x15983 + x15984 + x15985 + x15986 + x15987 + x15988 + x15990 + x15992 + x15994 + x15995 - x15997 - x15998 - x15999 - x16000*x1858 - 3*x16002 - x16003*x3299 - 3*x16004 + x16006 + x16007 + x16008 + x16009 + 6*x16011 + x16014 + x16015 + x16017 + x16018 - x16020 - x16021 - x16022 - x16023 - x16024*x5161 + x16031*x1858 + 3*x16032 + x16033*x3299 + x16034*x7126 + x16036 + x16037 + x16039 + x16040 + x16042*x778 + x16043*x778 + x16045 + x16050 - x5161*x7382 - x5161*x7383 + x5278*x7346 - x5278*x7406 - x5278*x7407 + x5332*x7226 - x5505*x7199 - x5505*x7481 - x5505*x7482 - x5547*x7181 - x5547*x7322 - x5547*x7323 - x5679*x7362 + x7343*x778) + x123*(q6_b*x15934 - q6_b*x15945 + q6_b*x15955 + q6_b*x7485 + q7_b*x15635 - q7_b*x15645 + q7_b*x15657 - x11374*x7383 - x11375*x7382 + x11467 - x11474*x7382 - x11474*x7383 + x11624*x4839 + x11702*x7369 + x11702*x7370 + 36*x15629 + 36*x15641 - 22*x15644 - x15649*x15947 + 22*x15659 - 36*x15661 + x15662*x7333 - 22*x15664 + 22*x15667 - x15668*x7333 - x15706*x807 - x15725*x808 + x15820 - x15858 + x15859 + x15860 - x15861 - x15862 + x15863 + x15864 - x15865 - x15866 - x15867 + x15925 + x15926 - 36*x15928 - x15932 - x15933 + x15937 + x15938 - 36*x15940 - x15943 - 12*x15944 - 6*x15948 - x15950 - x15951 + x15952*x5505 - x15953 - x15954 + x15958 + 36*x15960 - x15961*x7333 - x15964 + x15965 + x15968 + x15969*x7333 - x5312*x7322 - x5312*x7323 + x5505*x7373 + x5547*x7346 + x5694*x7481 + x5694*x7482 + x6624*x7369 + x6624*x7370 + x7*x7372) - x123*(-q6_b*x16140 - q6_b*x16141 - q6_b*x16145 - q6_b*x16146 - q7_b*x15842 + q7_b*x16141 + q7_b*x16145 + q7_b*x16146 - x11347*x7346 + x11347*x7500 + x11352*x7434 - x11352*x7526 - x11360*x16150 + x11360*x16151 - x11515*x7181 + x11515*x7475 + x11517*x7207 - x11517*x7450 - x11938*x7450 - x11940*x7450 + x11941*x7434 + x11942*x7434 - x12248*x7369 - x12248*x7370 - x12249*x7369 - x12249*x7370 + x154*x16069 - x154*x16075 - x154*x16083 - x154*x16085 - x154*x16088 - x154*x16092 + x154*x16095 + x154*x16097 + x154*x16101 - x154*x16104 - x154*x16106 - x154*x16108 - x154*x16110 + x15647*x7577 - x15697*x7577 + x15708*x16147 - x15711*x16147 - x15760*x4864 + x15776*x4864 + x15787*x286 + x15789*x286 + x15796*x286 - x15799*x286 - x15801*x286 - 7*x15803 + x15810*x286 + x15814*x286 + 7*x15846 + x15868 + 24*x15944 + x15947*x3201 + 3*x15990 + 3*x15992 + 3*x15994 + 3*x15995 + 5*x15997 + 5*x15998 + 5*x15999 - x16000*x286 - x16001*x3201 - 7*x16002 - x16003*x3324 - 7*x16004 + 14*x16011 - x16012*x16149 - 5*x16014 - 5*x16015 + x16016*x16149 + 3*x16017 + 3*x16018 - 3*x16020 - 3*x16021 - 3*x16022 - 3*x16023 + x16031*x286 + 7*x16032 + x16033*x3324 + x16035*x16149 + 3*x16036 + 3*x16037 + x16038*x16149 + 3*x16039 + 3*x16040 + x16050 - x16055*x4776 + x16070*x4776 + 5*x16099 + x16116 - x16123 - x16124 - x16125 - x16126 - x16128 - x16129 + x16131 + x16133 + x16134 + x16135 + x16137 + x16138 - 14*x16139 - 6*x16142 - 6*x16143 - 5*x16144 - x16148*x7126 - x16150*x5161 + x16151*x5161 + x16162 + x5150*x7563 - x5247*x7563 + x6741*x7322 + x6741*x7323) + x168*(-q6_b*x16061 - q6_b*x16062 - q6_b*x16073 + q6_b*x16077 + q6_b*x16079 + q6_b*x16080 - q6_b_dot*x16072 + q7_b*x15766 - q7_b*x15767 + q7_b*x15778 - q7_b*x15781 - q7_b*x15783 - q7_b*x15784 - q7_b*x16064 + x11374*x7493 + x11374*x7494 + x11375*x7493 + x11375*x7494 + x11377*x7615 + x11377*x7616 + x11417*x7434 + x11860*x7434 - x11860*x7450 - x12170*x7369 - x12170*x7370 - x12171*x7369 - x12171*x7370 - x15760*x4890 + x15768*x3276 + x15775*x15947 + x15776*x4890 + x15785 + x15786 + x15788 + x15790 + x15792 + x15793 - x15794 - x15795 + x15797 + x15798 - x158*x16000 + x158*x16031 + x158*x16069 - x158*x16075 - x15800 - x15802 - x15804 - x15806 - x15807 + x15809 + x15811 + x15813 + x15815 + x15819 + x15824 + 16*x15944 + 8*x15948 + 4*x15997 - x16003*x3234 - 4*x16015 + 4*x16032 + x16033*x3234 - x16051 - x16052 - x16053 - x16054 - x16055*x4802 + x16056 + x16057 + x16059 + x16060 - x16063*x3165 + x16065 + x16066 + x16067 + x16068 + x16070*x4802 - x16071 - x16074*x5247 - x16076 + x16078*x7127 + x16117 + x16122 + x5271*x7373 - x5332*x7346 + x5332*x7475 - x5505*x7487 - x5505*x7488 - x5536*x7481 - x5536*x7482 + x5643*x7322 + x5643*x7323 + x5690*x7434 - x5690*x7450 - x7*x7486 - x7*x7489 - x7106*x7541 - x7178*x7414) + x63*(-q6_b*x16177 - q6_b*x16178 - q6_b*x16180 - q6_b*x16182 - q7_b*x15883 + q7_b*x16178 + q7_b*x16180 + q7_b*x16182 - x10658*x7481 - x10658*x7482 - x11360*x16185 + x11360*x16186 + x11433*x7499 + x11434*x7434 - x11434*x7526 - x11583*x7181 + x11583*x7475 + x11591*x7207 - x11591*x7450 - x11986*x7450 + x11988*x7434 + x12284*x7199 - x12286*x7369 - x12286*x7370 - x12287*x7369 - x12287*x7370 - x129*x16083 - x129*x16088 - x129*x16092 + x129*x16095 + x129*x16101 - x129*x16104 - x129*x16106 - x129*x16108 - x129*x16110 + x15635*x807 - x15645*x807 + x15688*x15889 - x15708*x15889 + x15708*x16181 + x15711*x15889 - x15711*x16181 - x15729*x16012 + x15729*x16016 + x15729*x16035 + x15729*x16038 + x15730*x15889 + x15732*x15889 - x15760*x4906 + x15776*x4906 + x15787*x327 + x15789*x327 + x15796*x327 - x15799*x327 - x15801*x327 - 16*x15803 - x15805*x3368 + x15810*x327 + x15814*x327 + 16*x15846 + x15851*x16035 + x15851*x16038 - 16*x15853 + x15885*x15947 + x15908 - x15934*x807 + 36*x15944 + x15945*x807 + 18*x15948 + x15952*x5694 + 6*x15990 + 6*x15994 + 6*x15995 + 6*x15997 - x16000*x327 - 16*x16002 - x16003*x3367 - 16*x16004 + 32*x16011 - 6*x16014 - 6*x16015 + 6*x16017 + 6*x16018 - 6*x16020 - 6*x16021 - 6*x16022 - 6*x16023 + x16031*x327 + 16*x16032 + x16033*x3367 + 6*x16037 + 6*x16040 - 24*x16048 - x16055*x4818 + x16070*x4818 + 6*x16099 + x16116 - 32*x16139 - 12*x16142 - 12*x16143 - x16163 - x16164 - x16165 - x16166 - x16168 - x16169 + x16170 + x16171 + x16172 + x16173 + x16174 + x16175 + x16176 - x16179*x5694 - x16184 - x16185*x5161 + x16186*x5161 + x16187 + x16194 + x16202 - x5312*x7346 + x5694*x7373 + x5694*x7487 + x5712*x7220 + x5887*x7434 - x7218*x7367 + x7322*x7357 + x7323*x7357 - x7450*x7951) + x70*(-q6_b_dot*x15916 - q6_b_dot*x7099 + x11348*x7207 + x15787 + x15789 + x15796 - x15799 - x15801 + x15808 + x15810 + x15812 + x15814 + x15913 + x15914 + x15915 + x15917 + x15924 + x3266*x5150 - x3266*x5247 + x3267*x5150 - x3267*x5247 - x5278*x7306)) + x69*(L*(-L*x16788 - q9_b*x16590 + q9_b*x16595 + q9_i*x16614 - x11370*x8182 + x11474*x8185 + x15139 - x16530*x4023 + x16547*x4023 - x16548*x4023 + x16554*x4023 + x16787 + x16789 + x16790 - x5505*x8184 - x5547*x8179) - x106*(-q10_b*x16590 + q10_b*x16595 + q10_i*x16614 - q9_b*x16859 + q9_b*x16864 - q9_b*x16881 + q9_b*x16882 - q9_b*x8118 - q9_b*x8126 + q9_b*x8322 - x11329*x16876 + x11329*x16877 + x11332*x16876 - x11332*x16877 - x11351*x8374 - x11360*x16878 - x11360*x16887 - x11360*x8329 - x11360*x8330 + x11360*x8441 - x11371*x8384 + x11375*x8318 + x11474*x8318 + x11474*x8319 + x11474*x8387 - x11613*x8133 - x11614*x8185 - x11624*x5052 - x11625*x3538 - x11785*x16880 - x11801*x16886 - x11804*x16886 + 15*x16519 + x16530*x8342 + x16536*x3614 - x16547*x8342 + x16548*x8342 - x16554*x8342 - x16586*x3614 - x16588*x875 + x16595*x865 + x16597*x16879 - x16601*x16879 + x16614*x866 + x16627 - x16637*x5106 + x16653*x5106 - x16668*x5505 + x16796*x876 - x16800*x8342 + 8*x16806 - 8*x16809 + 8*x16824 + x16825*x8342 - x16830 + x16831 + x16832 - x16834 - x16836 - x16837 - x16838 + x16839 + x16840 + x16841 - x16842*x5505 + x16843 + x16844 + x16846 + x16847 + x16848 + x16849 + x16850 + x16851 + x16852 + x16853 - x16854 - x16856 - 3*x16857 - x16858*x3619 + x16860 + x16861 + x16862 + x16863 + x16865 + x16867 + x16868 + x16869*x8379 - x16871 - x16872 - x16873 - x16874 - x16875 - x16878*x5161 + x16883*x3619 + x16884*x8068 + x16885*x8336 - x16887*x5161 + x16888*x865 + x16889*x865 + x16895 - x3621*x5150 + x3621*x5247 - x5111*x5149 + x5111*x8675 - x5114*x5150 + x5114*x5247 - x5161*x8329 - x5161*x8330 + x5161*x8441 - x5215*x8359 - x5278*x8355 - x5278*x8356 + x5332*x8179 - x5505*x8420 - x5547*x8278 - x5547*x8279 + x5647*x8336 - x5679*x8313 + x8043*x876 + x8052*x8320 + x8075*x875 + x8296*x865) + x123*(q10_b*x16525 - q10_b*x16534 + q9_b*x16805 - q9_b*x16812 + q9_b*x16823 - q9_i*x16829*x9 - x11329*x16826 + x11329*x16827 + x11332*x16826 - x11332*x16827 + x11348*x16822 + x11360*x16822 + x11360*x16828 - x11374*x8330 - x11375*x8329 + x11467 - x11474*x8330 + 54*x16519 + x16530*x8287 - 34*x16532 - x16536*x3595 + 34*x16546 - x16547*x8287 + x16548*x8287 - 34*x16550 + 34*x16553 - x16554*x8287 + x16586*x3595 - x16595*x876 - x16614*x875 + x16699 - x16736 + x16737 + x16738 - x16739 - x16740 + x16741 + x16742 - x16743 - x16745 - x16746 + x16798 + x16799 - x16800*x8287 - x16801 - x16804 + 18*x16806 + x16807 - x16808*x8287 - 18*x16809 - 12*x16810 - 6*x16811 - x16813 + x16814*x5505 - x16815 + x16816*x5505 - x16817 - x16819 + x16820*x5186 + 4*x16821 + x16822*x5161 + 18*x16824 + x16825*x8287 + x16828*x5161 + x5111*x7 - x5312*x8278 - x5312*x8279 + x5365*x8331 + x5505*x8491 + x5694*x8420) - x123*(-q10_b*x16722 + q10_b*x16949 + q10_b*x16961 + q10_b*x16962 - q10_b*x16963 + q10_b*x16964 + q10_b*x16967 + q10_b*x16969 - q10_b_dot*x11351*x8466 - q9_b*x16949 - q9_b*x16961 - q9_b*x16962 + q9_b*x16963 - q9_b*x16964 - q9_b*x16967 - q9_b*x16969 - x11347*x8351 + x11347*x8408 + x11352*x8374 - x11360*x16968 - x11360*x16974 - x11360*x16975 - x11360*x16976 - x11360*x16977 + x11360*x16978 + x11360*x16979 + x11360*x16980 + x11360*x8463 - x11360*x8468 - x11515*x8134 + x11515*x8409 + x11517*x8160 - x11517*x8445 + x11785*x8441 + x11801*x8441 + x11801*x8442 + x11804*x8441 + x11804*x8442 + x16536*x3669 - x16536*x3672 - x16586*x3669 + x16586*x3672 - x16588*x3670 + x16588*x3673 + x16597*x16970 - x16601*x16970 + x16664*x286 + x16666*x286 + x16670*x286 + x16674*x286 - x16677*x286 - x16679*x286 - x16683*x286 + x16688*x286 + x16692*x286 + x16747 + 24*x16810 + 3*x16850 + 3*x16851 + 3*x16852 + 3*x16853 + 5*x16854 + 5*x16856 - 7*x16857 - x16858*x3671 - x16858*x3673 - 5*x16865 + x16866*x16972 - 5*x16867 + 3*x16868 - x16870*x16972 + 5*x16871 - 3*x16872 - 3*x16873 - 3*x16874 - 3*x16875 + x16883*x3671 + x16883*x3673 + x16895 - 12*x16904 - x16905*x5039 - x16911*x16966 + x16911*x3669 - x16911*x3672 - x16914*x3669 + x16914*x3672 - 5*x16915 - x16917*x8459 + x16924*x5129 + x16926*x5039 - x16927*x5129 + x16930*x8459 + x16943 - x16944 - x16945 + x16946 - x16947 - x16948 - x16951 - x16952 + x16954 + x16955 + x16956 + x16957 + x16959 + x16960 - 6*x16965 - x16968*x5161 - 6*x16971 + x16973*x5247 - x16974*x5161 - x16975*x5161 - x16976*x5161 - x16977*x5161 + x16978*x5161 + x16979*x5161 + x16980*x5161 + x3670*x8075 - x3673*x8075 - x5150*x8465 + x5161*x8463 - x5161*x8468 + x5247*x8465 - x5394*x8356 + x6741*x8278 + x6741*x8279 - x6741*x8402) + x168*(q10_b*x16643 - q10_b*x16644 + 4*q10_b*x16866 + q10_b*x16906 + q10_b*x16912 - q10_b*x16913 - q10_b*x16916 - q9_b*x16906 - q9_b*x16912 + q9_b*x16913 - x11360*x16933 + x11360*x16937 + x11360*x16938 + x11374*x8441 + x11375*x8441 + x11377*x8336 + x11377*x8379 + x11417*x8374 + x11417*x8375 - x11417*x8443 - x11417*x8444 - x11417*x8445 - x12170*x8318 - x12170*x8319 + x12170*x8422 - x12171*x8318 - x12171*x8319 + x12171*x8422 + x158*x16932 + x16536*x3660 - x16576*x3662 - x16586*x3660 + x16588*x3661 + x16597*x8429 - x16601*x8429 - x16617*x8429 - x16620*x8429 + x16645*x871 + x16662 + x16663 + x16665 + x16667 + x16669 + x16671 - x16672 - x16673 + x16675 + x16676 - x16678 - x16680 - x16682 - x16684 - x16685 + x16687 + x16689 + x16691 + x16693 + x16698 + x16704 + 16*x16810 + 8*x16811 - 8*x16821 + x16829*x3660 + 4*x16856 - 4*x16865 - 4*x16867 - x16896 - x16897 + x16898 - x16900 - x16901 - x16902 - x16903 - 8*x16904 - x16905*x5065 + x16907 + x16908 + x16909 + x16910 + x16911*x3660 + x16914*x16931 + 4*x16914*x3494 - x16914*x3660 - 4*x16915 - x16917*x5122 - x16917*x8019 - x16918*x5271 - x16919*x5271 + x16920 + x16921 + x16922 + x16923 + x16924*x5122 + 8*x16925 + x16926*x5065 - x16927*x5122 - x16928 + x16929*x8336 + x16930*x5122 - x16933*x5161 - x16934*x5122 - x16934*x8019 - x16935*x5122 - x16935*x8019 + x16936*x8336 + x16937*x5161 + x16938*x5161 + x16943 - x3661*x8075 - x3663*x5505 - x5109*x5505 - x5150*x8432 + x5186*x8439 + x5247*x8432 + x5247*x8433 - x5332*x8351 - x5505*x8427 - x5536*x8420 - x5547*x8356 + x5643*x8278 + x5643*x8279 - x5643*x8402 - x6679*x8331 + x6679*x8448 - x7*x8426 - x8051*x8447 + x8069*x8436) + x63*(-q10_b*x16762 + q10_b*x16986 + q10_b*x16996 + q10_b*x16997 - q10_b*x16998 + q10_b*x17000 - q9_b*x16986 - q9_b*x16996 - q9_b*x16997 + q9_b*x16998 - q9_b*x17000 - x10658*x8420 - x10774*x8434 - x11360*x17005 - x11360*x17006 - x11360*x17007 + x11360*x17008 + x11360*x17009 + x11360*x17012 + x11434*x8374 + x11434*x8375 - x11434*x8443 - x11434*x8444 - x11583*x8134 + x11583*x8409 + x11591*x8160 - x11591*x8445 + x11702*x8441 - x11986*x8445 - x12286*x8318 - x12286*x8319 + x12286*x8422 - x12287*x8318 - x12287*x8319 + x12287*x8422 + x16525*x876 - x16534*x876 - x16536*x16999 + x16536*x3623 + x16574*x8498 + x16578*x3629 - x16586*x3623 + x16588*x3632 + x16597*x17001 - x16597*x8498 - x16601*x17001 + x16601*x8498 + x16617*x8498 + x16620*x8498 + x16664*x327 + x16666*x327 + x16670*x327 + x16674*x327 - x16677*x327 - x16679*x327 - x16683*x327 + x16688*x327 + x16692*x327 + 16*x16726 + x16786 - x16805*x876 + 36*x16810 + 18*x16811 + x16812*x876 + x16814*x5694 - 12*x16821 + x16829*x3669 + 6*x16850 + 6*x16852 - x16855*x8320 + 6*x16856 - 16*x16857 - x16858*x3642 - 6*x16865 + x16866*x8320 - 6*x16867 + 6*x16868 - 6*x16872 - 6*x16873 - 6*x16874 - 6*x16875 + x16883*x3642 - 24*x16892 - 18*x16904 - x16905*x5081 - x16911*x16999 + x16911*x3623 + x16914*x16999 - x16914*x3623 + 6*x16914*x871 - x16918*x5694 + 12*x16925 + x16926*x5081 + x16932*x327 + x16943 - 12*x16965 - x16981 - x16982 + x16983 - x16984 - x16985 - x16987 - x16988 + x16989 + x16990 + x16991 + x16992 + x16993 + x16994 + x16995 - x17002 - x17003*x5247 + x17004*x8379 - x17005*x5161 - x17006*x5161 - x17007*x5161 + x17008*x5161 + x17009*x5161 + x17010*x8336 + x17011*x8336 + x17012*x5161 + x17021 - x3632*x8075 - x3640*x5150 + x3640*x5247 + x3663*x5694 + x5109*x5694 - x5312*x8351 - x5312*x8356 - x6120*x8331 + x6120*x8448 + x6624*x8441 + x7357*x8278 + x7357*x8279 - x7357*x8402 - x7367*x8171 - x7951*x8445) + x70*(-q9_b_dot*x16796 - q9_b_dot*x8043 - x11329*x8270 + x11332*x8270 + x11348*x8160 + x16531*x4046 - x16545*x4046 + x16664 + x16666 + x16670 + x16674 - x16677 - x16679 - x16683 + x16686 + x16688 + x16690 + x16692 + x16791 + x16792 + x16793 - x16795 + x16797 + x3588*x5150 - x3588*x5247 - x5278*x8261)) + x69*(L*(p10_b*x12621 - p10_b*x12623 + p10_b*x12629 + p10_i*x12628 - x11370*x8528 + x12612 + 20*x12614 + x12616 + x12618 - 20*x12620 + 20*x12622 - x12624*x5505 + x12625*x8518 - 20*x12627 - x5547*x8501 - 200*x5700) - x106*(-p10_b*x12804 + p10_b*x12812 + p10_b*x12828 - p10_b*x8653 - p10_b_dot*x12827 - p10_b_dt*x12805 + p10_i*x12829 + p9_b*x12621 - p9_b*x12623 + p9_b*x12629 + p9_i*x12628 - x11351*x8772 - x11360*x8683 - x11360*x8684 - x11360*x8769 + x11370*x8680 - x11613*x8540 - x11624*x12809 - x11624*x3851 - x11625*x1805 - x11785*x12825 + x11790*x8534 + x11790*x8556 - x11800*x8786 - x11801*x12840 - x11803*x8786 - x11804*x12840 + x11805*x8534 + x11805*x8556 + x11807*x8534 + x11807*x8556 - 23*x12614 + 23*x12620 - 23*x12622 - x12625*x8720 + 23*x12627 + x12640*x12826 - x12680*x421 + 8*x12687 + 23*x12690 - 23*x12692 - x12695*x1850 + x12703*x1857 + x12720*x8742 + 23*x12727 - x12728*x8720 + x12740*x5247 + x12756*x8720 - x12767 + x12768 + x12769 - x12771 - x12773 - x12774*x8742 - x12775 - x12776 - x12777 + x12779 + x12780 + x12781 + x12782 + x12784 + x12785 + x12787 + x12788 + x12789 + x12791 + x12792 + x12794 + x12795 - x12797 - x12798 - x12799 - x12800*x3881 - x12801*x1858 - x12802*x1862 - x12803*x8731 - x12806*x5505 + x12807 + x12808 + x12810 + x12811 + 4*x12813 + 6*x12814 + x12815*x8514 + x12816 - x12817*x8514 + x12818 - x12819*x12826 + x12820 - x12821 - x12822 - x12823 - x12824 + x12830*x3881 + x12831*x1858 + x12833 + x12835 + x12837 + x12839 + x12842 + x12844 + x12850 + x420*x8513 - x5161*x8683 - x5161*x8684 - x5161*x8769 + x5247*x8767 - x5275*x8738 - x5278*x8737 + x5278*x8783 + x5394*x8723 - x5547*x8573 - x5547*x8574 - x5679*x8640 - x7*x8759 - x8557*x8612 + x8557*x8726) + x123*(p10_b*x12679 - p10_b*x12699 + p10_b*x12715 + p10_b*x8898 + p10_i*x1857*x5505 + p9_b*x12684 - p9_b*x12705 + p9_b*x12716 + x11360*x12747 + x11360*x12749 - x11374*x8683 + x11467 - x11474*x8683 + x11613*x8615 - 60*x12614 + 60*x12620 - x12621*x420 - 60*x12622 - x12625*x8589 + 60*x12627 - x12628*x421 - x12629*x420 - x12657 + x12658 + x12659 - x12661 - x12664 - x12666 - x12668 - x12672 - x12673 - x12677 - x12678 + 6*x12681 + x12683 + x12686 + x12688 + 60*x12690 - 60*x12692 - 42*x12693 - 20*x12694 - x12697 - 12*x12698 - 6*x12702 - 6*x12704 - x12706 - x12707 - x12708 - x12709 - x12711 - x12712 - x12713 - x12714 + x12718 + x12719 + x12721 + x12723 + 20*x12725 + 42*x12726 + 60*x12727 - x12728*x8589 - 42*x12730 - 20*x12732 - x12734 - x12735 - x12736 - x12738 + x12739*x7 + x12740*x5505 + x12741 + x12742 + x12743 + x12744 + x12745 + x12747*x5161 + x12749*x5161 + x12751 + 20*x12753 + 42*x12755 + x12756*x8589 - x12757 - x12758 - x12759 - x12760 - x12761*x420 + x12765 + x3868*x7 - x5312*x8573 - x5312*x8574) - x123*(-p10_b*x12868 - p10_i*x12867 - p9_b*x12665 + p9_b*x12868 - p9_i*x12696 - x11347*x8733 + x11347*x8814 + x11352*x8772 - x11352*x8852 - x11360*x12881 - x11360*x12882 - x11515*x8600 + x11515*x8723 + x11517*x8534 + x11517*x8556 - x11517*x8786 + x11537*x8736 - x11938*x8786 - x11940*x8786 + x11941*x8772 + x11942*x8772 + x12633*x286 + x12634*x286 + x12635*x286 + x12636*x286 + x12640*x12884 - x12641*x286 - x12642*x286 - x12645*x286 - x12646*x286 + x12650*x286 + x12651*x286 + x12652*x286 + x12653*x286 + x12657 + x12666 + x12668 - 12*x12681 - x12686 - x12688 + x12697 + 24*x12698 + x12700*x12722 + x12703*x1868 - 14*x12717 + x12720*x1896 - x12721 - x12723 + x12734 + x12735 - x12774*x1896 + 3*x12791 + 3*x12792 + 3*x12794 + 3*x12795 + 5*x12797 + 5*x12799 - x12801*x286 + 14*x12814 - x12815*x12885 - 5*x12816 + x12817*x12885 + 3*x12818 - x12819*x12884 + 3*x12820 - 3*x12821 - 3*x12822 - 3*x12824 + x12831*x286 + x12832*x12885 + 3*x12833 + x12834*x12885 + 3*x12835 + 3*x12837 + 3*x12839 + x12850 - x12851 - x12852 - x12853 - x12854 - x12855 - x12857 - x12858 + x12860 + x12862 + x12863 + x12864 + x12865 + x12866 - 7*x12869 - 7*x12870 - 7*x12871 - x12872*x8587 - x12873*x154 - x12874*x154 - x12875*x154 - 5*x12876 + x12877*x154 + x12879 - x12880*x8514 + x12880*x8582 - x12881*x5161 - x12882*x5161 - x12883*x8514 + x12883*x8582 - x12887*x154 - x12888*x154 - x12889*x154 - x12890*x5247 + x12891*x154 + x12892*x154 + x12893*x154 + 5*x12894 + 7*x12895 + 7*x12896 - x12897*x12898 - x12898*x12899 - x12900*x154 - x12901*x154 - x12902*x154 - x12903*x154 + x12907 + x12923 + x6741*x8573 + x6741*x8574 - x8549*x8820 - x8557*x8820) + x168*(p10_i*x12938 - p10_i*x12940 - p9_b*x12941 + p9_b_dot*x12737 - p9_i*x12938 - x11360*x12949 - x11360*x12950 + x11360*x12954 + x11374*x8913 + x11374*x8914 + x11375*x8913 + x11375*x8914 + x11377*x8775 - x11417*x8786 + x11474*x8914 + x11860*x8772 - x11860*x8786 + x12640*x8892 + x12672 + x12673 - 8*x12681 - 16*x12687 + 16*x12698 + 8*x12702 + 8*x12704 + x12706 + x12707 + x12708 + x12709 - x12718 - x12719 + x12720*x1921 - x12720*x8891 + x12736 + x12738 - x12741 - x12743 - x12744 - x12745 - x12751 + x12757 + x12758 + x12759 + x12760 + x12765 - x12774*x1921 + x12774*x8891 + 4*x12797 + 4*x12799 - x12800*x1923 - x12801*x158 - 8*x12813 + 8*x12814 - x12815*x8612 - 4*x12816 + x12817*x8612 - x12819*x8892 + x12830*x1923 + x12831*x158 + x12832*x8612 + x12834*x8612 - x12836*x8892 - x12838*x8892 + x12877*x158 - x12887*x158 - x12888*x158 - x12912*x8891 + x12916*x8891 - x12924 - x12925 + x12926 - x12927 - x12928 - x12929 - x12930 + x12931 + x12932 + x12934 + x12935 + x12936 - 8*x12937 + x12942 + x12943 + x12944 + x12945 + x12946 - x12948 - x12949*x5161 - x12950*x5161 - x12951 + x12952*x5247 + 8*x12953 + x12954*x5161 + x12975 + x12982 - x5271*x8840 + x5332*x8723 - x5332*x8733 - x5505*x8901 + x5643*x8573 + x5643*x8574 + x5690*x8772 - x5690*x8786 - x7*x8899 - x7*x8900 - x7*x8902 - x8549*x8916 - x8708*x8745) + x63*(-p10_b*x13015 + p10_i*x13004 + p9_b*x13015 - p9_i*x13004 - x11360*x13012 - x11360*x13013 + x11360*x13023 + x11383*x8706 - x11433*x8615 + x11434*x8772 - x11434*x8852 - x11583*x8600 + x11583*x8723 + x11591*x8534 + x11591*x8556 - x11591*x8786 - x11986*x8786 + x11988*x8772 + x12632*x8964 + x12633*x327 + x12634*x327 + x12635*x327 + x12636*x327 + x12640*x13014 - x12640*x8820 - x12640*x8964 - x12641*x327 - x12642*x327 - x12645*x327 - x12646*x327 + x12650*x327 + x12651*x327 + x12652*x327 + x12653*x327 - x12679*x420 - 18*x12681 + x12684*x420 - 18*x12685 - 36*x12687 + 36*x12698 + x12699*x420 + 18*x12702 + 18*x12704 - x12705*x420 - 32*x12717 + x12720*x1927 - x12720*x8951 - 32*x12750 - x12774*x1927 + x12774*x8951 + 6*x12791 + 6*x12792 + 6*x12794 + 6*x12795 + 6*x12797 - x12801*x327 - 18*x12813 + 32*x12814 - x12815*x13018 + x12817*x13018 + 6*x12818 - x12819*x13014 + x12819*x8820 + x12819*x8964 - 6*x12821 - 6*x12822 - 6*x12823 + x12831*x327 + x12832*x13018 + 6*x12833 + x12834*x13018 + 6*x12835 + x12836*x8820 + x12836*x8964 + x12838*x8820 + x12838*x8964 - 24*x12847 - 16*x12869 - 16*x12870 - 16*x12871 - x12873*x129 - x12875*x129 + x12877*x129 - x12887*x129 - x12888*x129 - x12889*x129 + x12891*x129 + x12893*x129 + 6*x12894 + 16*x12895 + 16*x12896 - x12897*x13024 - x12899*x13024 - x129*x12900 - x129*x12901 - x129*x12902 - x129*x12903 + x12907 - x12912*x8951 + x12916*x8951 - 12*x12937 - x12939*x13005 + 32*x12953 - x12983 - x12984 + x12985 - x12986 - x12987 - x12988 - x12990 - x12991 - x12993 + x12995 + x12996 + x12997 + x12998 + x12999 + x13000 + x13001 + x13002 + x13003 - x13006*x8549 - x13007 - x13008 + x13009 + x13010 + x13011 - x13012*x5161 - x13013*x5161 - x13016 - x13017*x8722 - x13019 - x13020 + x13021 + x13022 + x13023*x5161 + x13030 + x13036 + x13039 + x5312*x8814 - x5694*x8837 + x5887*x8772 + x7357*x8573 + x7357*x8574 - x7367*x8704 - x7951*x8786 + x8670*x8746 - x8745*x8964) + x70*(-p10_b_dot*x12648 - p10_b_dot*x8513 + x11329*x8563 - x11332*x8563 + x11348*x8534 + x11348*x8556 + x12630 + x12631 + x12633 + x12634 + x12635 + x12636 + x12639 - x12641 - x12642 - x12645 - x12646 - x12647*x5224 + x12649*x5224 + x12650 + x12651 + x12652 + x12653 + x12656 - x5275*x8538 + x8519)) + x69*(L*(p1_b*x11466 - x11370*x5454 + x11375*x5464 + x11458 + x11460 + x11462 + x11463 - x11465 + x11467 + x11468 + x11471 - x11473 + x11474*x5464 - x5448*x5547 - x5457*x7 - x5505*x5614) - x106*(-p1_b*x11623 + p1_b*x11626 - p1_b*x5586 - p1_b*x9254 - x11360*x11622 + x11466*x450 + x11474*x5686 + x11529 - 4*x11569 + 4*x11570 + 4*x11571 - x11605 - x11606 - x11607*x5457 + x11609 + x11610 + x11611 - x11612 - x11613*x5478 - x11614*x5464 + x11616 + x11617 + x11618 + x11619 + x11620 - x11621 - x11622*x5161 - x11624*x340 - x11625*x281 - x11625*x283 + x11627 + x11628*x450 + x11629*x450 + x11638 + x5214*x5685 + x5332*x5448) + x123*(x11467 - x11530 + x11531 + x11533 - x11534 - x11536 + x11538 + x11540 - x11542 - x11544 - x11545 + x11576 - x11639 - x11640 + x11641 - x11642 + x11643 + x11646 + x11647) - x123*(x11481*x286 + x11482*x286 + x11483*x286 + x11484*x286 + x11488*x286 - x11492*x286 - x11493*x286 - x11494*x286 - x11495*x286 + x11500*x286 + x11501*x286 + x11512 + x11513 - 14*x11514 - x11515*x5511 - 14*x11516 + x11517*x5497 + x11518*x11519 + x11519*x11520 + x11529 + x11546) + x168*(x11547 + x11548 - x11549 - x11550 + x11551 + x11552 + x11553 + x11554 - x11555 - x11556 - x11557 - x11558 - x11559 + x11560 + x11561 + x11562 + x11563 + x11564 + x11565 + x11577) + x63*(x11481*x327 + x11482*x327 + x11483*x327 + x11484*x327 + x11487*x11587 + x11488*x327 - x11491*x11587 - x11492*x327 - x11493*x327 - x11494*x327 - x11495*x327 + x11500*x327 + x11501*x327 - 32*x11514 - 32*x11516 + x11518*x11592 + x11520*x11592 - 24*x11523 + 12*x11525 + x11527*x11587 + x11528*x11587 - x11579 + x11580 + x11581 + x11582 - x11583*x5511 - x11584 + x11585 + x11586*x291 - x11588*x5605 - x11589 + x11590 + x11591*x5497 + x11601 + x11604 - x5535*x7367) + x70*(-p1_b_dot*x11496 - p1_b_dot*x5458 + x11348*x5497 + x11475 + x11476 + x11477 + x11479 + x11481 + x11482 + x11483 + x11484 + x11486 + x11488 - x11490 - x11492 - x11493 - x11494 - x11495 + x11497 + x11498 + x11499 + x11500 + x11501 - x11502 + x11508 - x5278*x5477)) + x69*(L*(p5_b*x13977 - x10034*x5505 - x11370*x9867 + x11375*x9874 + x11474*x9874 + x13970 + 10*x13972 + x13974 + x13975 - x13976*x5224 + x13978 + x13979*x5224 + x13980*x5224 - x13981*x5224 - x5547*x9858 - x7*x9869) - x106*(p4_b*x13977 - p5_b*x10118 + p5_b*x13680 - p5_b*x14134 + p5_b*x14135 + p5_b*x9953 - p5_b*x9988 + x10018*x5394 - x10028*x7 - x10029*x7 - x10030*x5278 - x10031*x5278 - x10034*x5271 - x10037*x5150 + x10037*x5247 + x10049*x5247 - x10052*x11351 + x10062*x11474 - x10068*x11800 - x10068*x11803 - x10105*x5505 - x10106*x5505 - x10114*x13524 - x11360*x14131 - x11360*x9962 - x11360*x9967 + x11375*x9950 + x11375*x9951 + x11474*x9950 + x11474*x9951 - x11607*x9869 - x11613*x9880 - x11614*x9874 - x11624*x4189 - x11625*x2252 - x11625*x2254 - x11785*x14133 - x11801*x14144 - x11804*x14144 + x13530*x9869 - x13678*x8032 + 13*x13683 + x13684*x8032 - x13685*x8032 - x13692*x9860 + x13694*x9860 + 13*x13720 - x13843*x9919 + x13862 + x13951*x9896 - 13*x13972 + x13976*x8032 + x13977*x569 - x13979*x8032 - x13980*x8032 + x13981*x8032 - x13989*x14132 + x13991*x14132 + x13996*x539 - x14020*x2291 + x14035*x2291 + x14056*x570 - x14089 + x14090 + x14091 - x14093 - x14095 - x14096 - x14097 + x14098 + x14099 + x14100 + x14101 + x14102 + x14103 + x14105 + x14106 + x14107 + x14108 + x14109 + x14111 + x14112 - x14113 - 3*x14115 - x14116*x2301 - x14117*x1858 + x14119 + x14120 + x14121 + x14122 + 4*x14123 + 6*x14124 + x14125 + x14126 - x14127 - x14128*x9634 - x14129 - x14130 - x14131*x5161 + x14136*x1858 + 3*x14137 + x14139 + x14141 + x14142 + x14143 + x14145*x569 + x14146*x569 + x14148 + x14154 - x4199*x5149 + x4199*x8675 - x5161*x9962 - x5161*x9967 + x5332*x9858 + x539*x9870 - x5547*x9910 - x5547*x9911 - x5679*x9944) + x123*(p4_b*x14025 - p4_b*x14033 + p4_b*x14042 + p5_b*x13729 - p5_b*x13737 + p5_b*x13746 + p5_b*x9698 + x10037*x5505 + x10105*x5694 + x10106*x5694 + x11360*x14053 + x11360*x14054 - x11374*x9967 - x11375*x9962 + x11467 - x11474*x9962 - x11474*x9967 + x11613*x9929 + 30*x13683 + x13684*x7034 - x13685*x7034 + 30*x13720 - 10*x13734 + 10*x13749 - 30*x13751 - 10*x13752 + 10*x13760 - 30*x13972 - x13977*x539 - x13980*x7034 + x13981*x7034 - x14014 + x14015 + x14016 - x14018 - x14019 - x14021 - x14022 - x14023 - x14024 + x14027 + x14028 - 30*x14029 - 22*x14030 - 12*x14031 - x14032 - 6*x14036 - 6*x14037 - x14038 - x14039 - x14040 - x14041 + x14043 + x14044 + 22*x14045 + 30*x14046 - 22*x14047 - x14049 - x14050 + x14051*x5505 + x14052 + x14053*x5161 + x14054*x5161 + 22*x14055 - x14056*x540 + x14088 + x4199*x7 - x5312*x9910 - x5312*x9911 + x7*x9954) - x123*(x10018*x11515 - x10024*x11347 - x10028*x11383 + x10028*x11537 - x10029*x11383 + x10029*x11537 + x10052*x11352 + x10052*x11941 + x10052*x11942 - x10068*x11517 - x10068*x11938 - x10068*x11940 + x10091*x13587 - x10099*x9607 + x11347*x9685 - x11352*x9606 - x11360*x14177 - x11360*x14178 - x11515*x9975 + x11517*x9895 - x11951*x9950 - x11951*x9951 - x13689*x154 - x13690*x154 - x13691*x154 + x13692*x14184 - x13693*x154 - x13694*x14184 + x13695*x154 + x13696*x154 + x13697*x154 - x13699*x154 - x13700*x154 - x13701*x154 - x13702*x154 - x13724*x2268 + x13739*x2268 + 10*x13771 + 10*x13781 + x13791 + x13848*x14184 + x13850*x14184 - x13887*x9889 - 5*x13889 + 5*x13895 - x13898*x2301 - x13902*x14186 - x13902*x14187 + x13903 + x13985*x286 + x13986*x286 + x13987*x286 + x13988*x286 - x13989*x14180 + x13990*x286 + x13991*x14180 - x13992*x286 - x13993*x286 - x13994*x286 - x13995*x286 + x13999*x286 + x14000*x286 - x14020*x2161 + 24*x14031 - x14035*x14182 + x14035*x2161 - 14*x14066 + 3*x14108 + 3*x14109 + 3*x14111 + 3*x14112 + 5*x14113 - 7*x14115 - x14117*x286 + 14*x14124 + 3*x14125 + 3*x14126 - 3*x14127 - 3*x14129 - 3*x14130 + x14136*x286 + 7*x14137 + 3*x14139 + 3*x14141 + 3*x14142 + 3*x14143 + x14154 - x14155 - x14156 - x14157 - x14158 - x14159 - x14160 + x14162 + x14164 + x14165 + x14167 + x14168 + x14169 - 10*x14170 - 7*x14171 - 7*x14172 - 6*x14173 + x14174*x154 + x14175*x154 + x14176*x9573 - x14176*x9860 - x14177*x5161 - x14178*x5161 - 10*x14179 - x14181*x154 - x14183*x154 + 7*x14185 + x14186*x14188 + x14187*x14188 + x14189 + x6741*x9910 + x6741*x9911) + x168*(-p4_b*x14198 - p4_b*x14207 + p4_b*x14209 - p4_b*x14211 - p4_b*x14212 + p5_b*x13920 - p5_b*x13922 + p5_b*x13925 + p5_b*x13926 - p5_b_dt*x13923 + x10018*x5332 - x10024*x5332 - x10028*x11831 + x10028*x8676 - x10029*x11831 + x10029*x8676 + x10052*x11417 + x10052*x11860 + x10052*x5690 - x10068*x11417 - x10068*x11860 - x10068*x5690 - x10093*x5271 - x10105*x5536 - x10106*x5536 - x10110*x7 - x10111*x5505 - x10112*x5505 - x10113*x7 - x10114*x11607 + x10114*x13530 + x10116*x11374 + x10116*x11375 + x10117*x11374 + x10117*x11375 + x10117*x11474 + x10148*x11377 - x11360*x14205 - x11360*x14206 - x11840*x9950 - x11840*x9951 + x13792 + x13931 + x14020*x2240 + 16*x14031 - x14035*x2240 + 8*x14036 + 8*x14037 + x14060 + x14061 + x14062 + x14063 + x14064 + x14065 - x14067 - x14068 + x14069 + x14070 - x14071 - x14072 - x14073 - x14074 - x14076 + x14077 + x14078 + x14079 + x14080 + x14087 + 4*x14113 - x14117*x158 + 8*x14124 + x14128*x9828 + x14136*x158 - 8*x14170 - 4*x14173 + x14174*x158 - x14181*x158 - x14190 - x14191 - x14192 - x14193 + x14194 + x14195 + x14196 + x14197 + x14199 + x14200 + x14201 + x14202 + x14203*x9612 - x14204 - x14205*x5161 - x14206*x5161 - x14208 + 8*x14210 + x14216 + x5643*x9910 + x5643*x9911 - x9720*x9889) + x63*(-x10005*x7367 + x10018*x11583 - x10028*x11962 + x10028*x11977 - x10029*x11962 + x10029*x11977 + x10052*x11434 + x10052*x11988 + x10052*x5887 - x10068*x11591 - x10068*x11986 - x10068*x7951 + x10091*x9310 - x10105*x10658 - x10106*x10658 - x10224*x14128 + x10247*x13989 - x10247*x13991 + x10247*x14138 + x10247*x14140 - x11360*x14231 - x11360*x14232 - x11433*x9929 - x11434*x9606 - x11583*x9975 + x11591*x9895 - x11973*x9950 - x11973*x9951 - x129*x13689 - x129*x13691 - x129*x13693 + x129*x13695 + x129*x13697 - x129*x13699 - x129*x13700 - x129*x13701 - x129*x13702 + x129*x14175 - x129*x14183 + x13692*x14237 - x13694*x14237 - x13729*x539 + x13737*x539 + 12*x13771 + x13791 + x13848*x14237 + x13850*x14237 + x13887*x13989 - x13887*x13991 + x13887*x14138 + x13887*x14140 + 6*x13895 + x13949*x9607 - x13952*x14186 - x13952*x14187 + x13969 + x13985*x327 + x13986*x327 + x13987*x327 + x13988*x327 - x13989*x14233 + x13990*x327 + x13991*x14233 - x13992*x327 - x13993*x327 - x13994*x327 - x13995*x327 + x13999*x327 + x14000*x327 + x14025*x539 + 36*x14031 - x14033*x539 - x14035*x14236 + 18*x14036 + 18*x14037 - 32*x14066 - 32*x14075 - 24*x14083 + 6*x14108 + 6*x14109 + x14110*x14230 + 6*x14111 + 6*x14112 + 6*x14113 - 16*x14115 - x14117*x327 + 32*x14124 + 6*x14126 - x14128*x9779 - 6*x14129 - 6*x14130 + x14136*x327 + 16*x14137 + 6*x14142 + 6*x14143 + 12*x14151 - 12*x14170 - 16*x14171 - 16*x14172 - 12*x14173 + 16*x14185 + x14186*x14238 + x14187*x14238 + 32*x14210 - x14217 - x14218 - x14219 - x14220 - x14221 - x14222 + x14223 + x14224 + x14225 + x14226 + x14227 + x14228 + x14229 - x14231*x5161 - x14232*x5161 - x14234*x9607 - x14235 + x14252 + x14255 + x5312*x9685 - x5694*x9700 + x7357*x9910 + x7357*x9911 - x9835*x9889) + x70*(-p5_b_dot*x13996 - p5_b_dot*x9870 + x11348*x9895 + x13982 + x13983 + x13985 + x13986 + x13987 + x13988 + x13990 - x13992 - x13993 - x13994 - x13995 + x13997 + x13998 + x13999 + x14000 + x14001 + x14013 - x5278*x9879 + x7001)) + x69*(L*(p7_b*x14561 - x10441*x5547 - x10450*x11370 - x10452*x7 + x10457*x11375 + x10457*x11474 - x10618*x5505 + x14553 + 14*x14555 + x14557 + x14558 - 14*x14560 + x14562 + 14*x14564 + x14565*x7622 - x14566*x7622) - x106*(p6_b*x14561 + p7_b*x10536 - p7_b*x10571 - p7_b*x10701 + p7_b*x14263 - p7_b*x14718 + p7_b*x14719 + x10441*x5332 - x10443*x14275 + x10443*x14277 - x10452*x11607 + x10452*x13530 + x10453*x599 - x10457*x11614 - x10465*x11613 + x10480*x14534 - x10494*x5547 - x10495*x5547 - x10503*x14426 - x10529*x5679 + x10533*x11375 + x10533*x11474 + x10534*x11375 + x10534*x11474 - x10548*x11360 - x10548*x5161 - x10553*x11360 - x10553*x5161 + x10600*x14267 - x10600*x14268 - x10600*x14565 + x10600*x14566 + x10602*x5394 - x10612*x7 - x10613*x7 - x10614*x5278 - x10615*x5278 - x10618*x5271 - x10621*x5150 + x10621*x5247 + x10633*x5247 - x10636*x11351 + x10646*x11474 - x10652*x11800 - x10652*x11803 - x10687*x5505 - x10688*x5505 - x10696*x13524 - x11360*x14715 - x11624*x4355 - x11625*x2456 - x11625*x2458 - x11785*x14717 - x11801*x14728 - x11804*x14728 + 17*x14266 + 17*x14303 - 17*x14333 + x14445 - 17*x14555 + 17*x14560 + x14561*x629 - 17*x14564 - x14574*x14716 + x14576*x14716 + x14581*x599 - x14604*x2495 + x14617*x2495 + x14639*x630 - x14672 + x14673 + x14674 - x14676 - x14678 - x14679 - x14680 + x14681 + x14682 + x14683 + x14684 + x14685 + x14686 + x14688 + x14689 + x14690 + x14691 + x14692 + x14694 + x14695 - x14696 - 3*x14698 - x14699*x2505 - x14700*x1858 + x14702 + x14703 + x14704 + x14705 + 4*x14706 + 6*x14707 + x14708 + x14709 - x14710 - x14712 - x14713 - x14714 - x14715*x5161 + x14720*x1858 + 3*x14721 + x14723 + x14725 + x14726 + x14727 + x14729*x629 + x14730*x629 + x14732 + x14738 - x4364*x5149 + x4364*x8675) + x123*(p6_b*x14608 - p6_b*x14615 + p6_b*x14624 + p7_b*x10284 + p7_b*x14312 - p7_b*x14320 + p7_b*x14329 - x10494*x5312 - x10495*x5312 + x10513*x11613 + x10537*x7 - x10548*x11375 - x10548*x11474 - x10553*x11374 - x10553*x11474 + x10621*x5505 + x10687*x5694 + x10688*x5694 + x11360*x14635 + x11360*x14636 + x11467 + 42*x14266 + x14267*x7656 - x14268*x7656 + 42*x14303 - 42*x14333 - 14*x14441 + 14*x14442 - 14*x14443 + 14*x14444 - 42*x14555 + 42*x14560 - x14561*x599 - 42*x14564 - x14565*x7656 + x14566*x7656 - x14597 + x14598 + x14599 - x14601 - x14602 - x14603 - x14605 - x14606 - x14607 + x14610 + x14611 - 30*x14612 - 12*x14613 - x14614 - 6*x14618 - 6*x14619 - x14620 - x14621 - x14622 - x14623 + x14625 + x14626 + 30*x14627 - 30*x14629 - x14631 - x14632 + x14633*x5505 + x14634 + x14635*x5161 + x14636*x5161 + 30*x14638 - x14639*x600 + x14671 + x4364*x7) - x123*(x10158*x14760 - x10193*x11352 + x10271*x11347 - x10443*x14760 - x10474*x14470 + x10479*x11517 + x10494*x6741 + x10495*x6741 - x10533*x11951 - x10534*x11951 - x10558*x11515 + x10602*x11515 - x10608*x11347 - x10612*x11383 + x10612*x11537 - x10613*x11383 + x10613*x11537 + x10636*x11352 + x10636*x11941 + x10636*x11942 - x10652*x11517 + x10677*x13587 - x11360*x14761 - x11360*x14762 - x11360*x14771 - x11360*x14773 + x11360*x14774 - x14272*x154 - x14273*x154 - x14274*x154 + x14275*x14769 - x14276*x154 - x14277*x14769 + x14278*x154 + x14279*x154 + x14280*x154 - x14282*x154 - x14283*x154 - x14284*x154 - x14285*x154 - x14308*x2472 - x14308*x2549 + x14322*x2472 + x14322*x2549 + 10*x14353 + 10*x14363 + x14373 + x14431*x14769 + x14433*x14769 - 5*x14471 + 5*x14477 - x14479*x2505 + x14484 + x14570*x286 + x14571*x286 + x14572*x286 + x14573*x286 - x14574*x14764 + x14575*x286 + x14576*x14764 - x14577*x286 - x14578*x286 - x14579*x286 - x14580*x286 + x14584*x286 + x14585*x286 - x14604*x2367 + 24*x14613 + x14617*x2367 - 14*x14649 + 3*x14691 + 3*x14692 + 3*x14694 + 3*x14695 + 5*x14696 - 7*x14698 + 14*x14707 + 3*x14708 + 3*x14709 - 3*x14710 - 3*x14713 - 3*x14714 + 7*x14721 + 3*x14723 + 3*x14725 + 3*x14726 + 3*x14727 + x14738 - x14739 - x14740 - x14741 - x14742 - x14743 - x14744 + x14746 + x14748 + x14749 + x14751 + x14752 + x14753 - 10*x14754 - 7*x14755 - 7*x14756 - 6*x14757 + x14758*x154 + x14759*x154 - x14761*x5161 - x14762*x5161 - 10*x14763 - 6*x14765 - x14766*x154 - x14767*x154 - x14768*x154 + 7*x14770 - x14771*x5161 - x14773*x5161 + x14774*x5161 + x14775) + x168*(-p6_b*x14784 - p6_b*x14793 + p6_b*x14795 + p7_b*x14502 - p7_b*x14505 + p7_b*x14508 + p7_b*x14509 - p7_b_dt*x14506 - x10306*x10474 + x10399*x14789 + x10413*x14711 + x10494*x5643 + x10495*x5643 - x10533*x11840 - x10534*x11840 + x10602*x5332 - x10608*x5332 - x10612*x11831 + x10612*x8676 - x10613*x11831 + x10613*x8676 + x10636*x11417 + x10636*x11860 + x10636*x5690 - x10652*x11417 - x10652*x11860 - x10652*x5690 - x10679*x5271 - x10687*x5536 - x10688*x5536 - x10692*x7 - x10693*x5505 - x10694*x5505 - x10695*x7 - x10696*x11607 + x10696*x13530 + x10699*x11374 + x10699*x11375 + x10700*x11374 + x10700*x11375 + x10700*x11474 + x10731*x11377 - x11360*x14791 - x11360*x14792 + x14374 - x14510*x14722 - x14510*x14724 + x14514 + 16*x14613 + 8*x14618 + 8*x14619 + x14643 + x14644 + x14645 + x14646 + x14647 + x14648 - x14650 - x14651 + x14652 + x14653 - x14654 - x14655 - x14656 - x14657 - x14659 + x14660 + x14661 + x14662 + x14663 + x14670 + 4*x14696 - x14700*x158 + 8*x14707 + x14720*x158 - 8*x14754 - 4*x14757 + x14758*x158 + x14759*x158 - x14766*x158 - x14767*x158 - x14776 - x14777 - x14778 - x14779 + x14780 + x14781 + x14782 + x14783 + x14785 + x14786 + x14787 + x14788 - x14790 - x14791*x5161 - x14792*x5161 - x14794 + 8*x14796 + x14800) + x63*(x10191*x14604 - x10191*x14617 - x10193*x11434 + x10194*x14532 - x10194*x14818 + x10271*x5312 - x10286*x5694 - x10420*x10474 + x10479*x11591 + x10494*x7357 + x10495*x7357 - 12*x10506*x14711 - x10513*x11433 - x10533*x11973 - x10534*x11973 - x10558*x11583 - x10588*x7367 + x10602*x11583 - x10612*x11962 + x10612*x11977 - x10613*x11962 + x10613*x11977 + x10636*x11434 + x10636*x11988 + x10636*x5887 - x10652*x11591 - x10652*x11986 - x10652*x7951 - x10658*x10687 - x10658*x10688 + x10677*x9310 - x11360*x14815 - x11360*x14816 - x129*x14272 - x129*x14274 - x129*x14276 + x129*x14278 + x129*x14280 - x129*x14282 - x129*x14283 - x129*x14284 - x129*x14285 - x129*x14768 + x14275*x14821 - x14277*x14821 - x14312*x599 + x14320*x599 + 12*x14353 + x14373 + x14431*x14821 + x14433*x14821 + x14470*x14574 - x14470*x14576 + x14470*x14722 + x14470*x14724 + 6*x14477 - x14535*x14822 - x14535*x14823 + x14552 + x14570*x327 + x14571*x327 + x14572*x327 + x14573*x327 - x14574*x14817 + x14574*x14820 + x14575*x327 + x14576*x14817 - x14576*x14820 - x14577*x327 - x14578*x327 - x14579*x327 - x14580*x327 + x14584*x327 + x14585*x327 + x14608*x599 + 36*x14613 - x14615*x599 + 18*x14618 + 18*x14619 - 32*x14649 - 32*x14658 - 24*x14666 + 6*x14691 + 6*x14692 + x14693*x14814 + 6*x14694 + 6*x14695 + 6*x14696 - 16*x14698 - x14700*x327 + 32*x14707 + 6*x14709 - 6*x14712 - 6*x14713 - 6*x14714 + x14720*x327 + 16*x14721 + x14722*x14820 + x14724*x14820 + 6*x14726 + 6*x14727 + 12*x14735 - 12*x14754 - 16*x14755 - 16*x14756 - 12*x14757 + 16*x14770 + 32*x14796 - x14801 - x14802 - x14803 - x14804 - x14805 - x14806 + x14807 + x14808 + x14809 + x14810 + x14811 + x14812 + x14813 - x14815*x5161 - x14816*x5161 - x14819 + x14822*x14824 + x14823*x14824 + x14838 + x14841) + x70*(-p7_b_dot*x10453 - p7_b_dot*x14581 - x10464*x5278 + x10479*x11348 + x14567 + x14568 + x14570 + x14571 + x14572 + x14573 + x14575 - x14577 - x14578 - x14579 - x14580 + x14582 + x14583 + x14584 + x14585 + x14586 + x14596 + x7627)) + x69*(L*(-q5_b*x15399 + q5_b*x15404 - x11370*x6920 + x11375*x6923 + x11474*x6923 + x13978 - 10*x15324 - x15336*x5224 + x15354*x5224 - x15357*x5224 + x15363*x5224 + x15611 + x15612 + x15613 - x5505*x6922 - x5547*x6917) - x106*(-q5_b*x15701 + q5_b*x15706 + q5_b*x15709 - q5_b*x15714 - q5_b*x15721 + q5_b*x15723 + q5_b*x15724 - q5_b*x6856 - q5_b*x6863 + q5_b*x7070 - q5_b_dot*x15722 + q5_i*x15725 - q6_b*x15399 + q6_b*x15404 + q6_i*x15425 - x11348*x7123 - x11351*x7125 - x11360*x7077 - x11360*x7078 - x11360*x7123 + x11474*x7066 + x11474*x7067 + x11474*x7138 - x11613*x6870 - x11624*x4701 - x11625*x3102 - x11755*x4751 + x11773*x4751 - x11785*x15719 - x11800*x7141 - x11801*x15734 - x11803*x7141 - x11804*x15734 - x15397*x3131 - x15397*x779 + x15404*x749 + x15406*x15720 - x15410*x15720 + x15425*x750 + x15440 - x15461*x4759 + x15476*x4759 + 4*x15528 - x15587*x5505 + x15652*x5247 - x15669 + x15670 + x15671 - x15673 - x15675 - x15676 - x15677 + x15678 + x15679 + x15681 + x15682 + x15683 + x15684 + x15685 + x15686 + x15687 + x15689 + x15690 + x15691 + x15692 - x15694 - x15695 - x15696*x1858 - 3*x15698 - 3*x15699 - 3*x15700 + x15702 + x15703 + x15704 + x15705 + 6*x15707 + x15710 + x15712 + x15713 - x15715 - x15716 - x15717 - x15718 + x15726*x1858 + 3*x15727 + 3*x15728 + x15729*x6811 + x15730*x4707 + x15731 + x15732*x4707 + x15733 + x15735*x749 + x15736*x749 + x15747 + x15749 + x15755 - x5161*x7077 - x5161*x7078 - x5161*x7123 - x5278*x7100 - x5278*x7101 + x5332*x6917 + x5394*x7088 - x5505*x7162 - x5505*x7163 - x5547*x7023 - x5547*x7024 - x5679*x7060 + x6784*x778) + x123*(q5_b*x15635 - q5_b*x15645 + q5_b*x15657 + q5_b*x7166 + q6_b*x15330 - q6_b*x15341 + q6_b*x15351 - x11374*x7078 - x11375*x7077 + x11467 - x11474*x7077 - x11474*x7078 + x11613*x7046 + x11624*x4751 + x11702*x7066 + x11702*x7067 + 30*x15324 + 30*x15337 - 18*x15340 - x15343*x15649 + 18*x15353 - 30*x15355 + x15357*x7034 - 18*x15359 + 18*x15362 - x15363*x7034 - x15404*x778 - x15425*x779 + x15524 - x15560 + x15561 + x15562 - x15563 - x15564 + x15565 + x15566 - x15567 - x15568 - x15569 + x15626 + x15627 - 30*x15629 - x15633 - x15634 + x15638 + x15639 - 30*x15641 - 12*x15642 - 10*x15644 - 6*x15648 - x15651 + x15652*x5505 - x15653 + x15654*x5505 - x15655 - x15656 + 10*x15659 + 30*x15661 - x15662*x7034 - 10*x15664 + x15665 + 10*x15667 + x15668*x7034 - x5312*x7023 - x5312*x7024 + x5694*x7162 + x5694*x7163 + x6624*x7066 + x6624*x7067 + x7*x7069) - x123*(-q5_b*x15842 - q5_b*x15843 - q5_b*x15848 - q5_b*x15849 - q6_b*x15547 + q6_b*x15843 + q6_b*x15848 + q6_b*x15849 - x11347*x7095 + x11347*x7181 + x11352*x7125 - x11352*x7207 - x11515*x6871 + x11515*x7088 + x11517*x6897 - x11517*x7141 - x11929*x7199 - x11938*x7141 - x11940*x7141 + x11941*x7125 + x11942*x7125 - x12248*x7066 - x12248*x7067 - x12249*x7066 - x12249*x7067 + x15343*x3201 - x15385*x3216 - x15395*x3201 + x15397*x3205 + x154*x15774 - x154*x15779 - x154*x15787 - x154*x15789 - x154*x15796 + x154*x15799 + x154*x15801 - x154*x15808 - x154*x15810 - x154*x15812 - x154*x15814 + x15406*x15850 - x15410*x15850 - x15428*x3205 - x15461*x4776 + x15476*x4776 + x15490*x286 + x15492*x286 + x15495*x286 + x15499*x286 - x15502*x286 - x15504*x286 - 7*x15506 - x15508*x286 + x15513*x286 + x15517*x286 + x15556*x3216 + x15558*x15730 + x15558*x15732 + x15570 + 24*x15642 + x15647*x6953 + 3*x15689 + 3*x15690 + 3*x15691 + 3*x15692 + 5*x15694 + 5*x15695 - x15696*x286 - x15697*x6953 - 7*x15698 - 7*x15700 + 14*x15707 - x15708*x15852 - 5*x15710 + x15711*x15852 + 3*x15712 + 3*x15713 - 3*x15715 - 3*x15717 - 3*x15718 + x15726*x286 + 7*x15727 + x15730*x15852 + 3*x15731 + x15732*x15852 + 3*x15733 + x15755 - x15760*x4688 + x15776*x4688 + 5*x15803 - x15805*x6831 + x15819 - x15825 - x15826 - x15827 - x15828 - x15830 - x15831 + x15833 + x15835 + x15836 + x15837 + x15839 + x15840 - 14*x15841 - 6*x15844 - 6*x15845 - 5*x15846 + 7*x15847 - x15851*x6811 + 5*x15853 - x15854*x15855 + x15854*x15857 - x15855*x15856 + x15856*x15857 + x15868 + x6741*x7023 + x6741*x7024) + x168*(-q5_b*x15766 - q5_b*x15767 - q5_b*x15778 + q5_b*x15781 + q5_b*x15783 + q5_b*x15784 + q6_b*x15467 - q6_b*x15468 + q6_b*x15479 - q6_b*x15483 - q6_b*x15486 - q6_b*x15487 - q6_b*x15769 + q6_b_dot*x15478 + x11374*x7175 + x11374*x7176 + x11375*x7175 + x11375*x7176 + x11377*x7295 + x11377*x7296 - x11417*x7141 + x11860*x7125 - x11860*x7141 - x12170*x7066 - x12170*x7067 - x12171*x7066 - x12171*x7067 + x15343*x15775 + x15397*x3234 - x15428*x3234 - x15461*x4802 + x15469*x3165 + x15476*x4802 + x15488 + x15489 + x15491 + x15493 + x15494 + x15496 - x15497 - x15498 + x15500 + x15501 - x15503 - x15505 - x15507 - x15509 - x15510 + x15512 + x15514 + x15516 + x15518 + x15523 + x15529 + x15556*x3241 + 16*x15642 + 8*x15648 + 4*x15694 - x15696*x158 - 4*x15710 + x15726*x158 + 4*x15727 - x15756 - x15757 - x15758 - x15759 - x15760*x4714 + x15761 + x15762 + x15764 + x15765 - x15768*x3059 + x15770 + x15771 + x15772 + x15773 + x15774*x158 + x15776*x4714 - x15777 - x15779*x158 - x15780 + x15782*x6812 + x15820 + x15824 - x5271*x7120 + x5332*x7088 - x5332*x7095 - x5505*x7168 - x5505*x7169 - x5536*x7162 - x5536*x7163 + x5643*x7023 + x5643*x7024 + x5690*x7125 - x5690*x7141 - x6791*x7178 - x6912*x7106 - x7*x7167 - x7*x7170) + x63*(-q5_b*x15883 - q5_b*x15884 - q5_b*x15886 - q5_b*x15888 - q6_b*x15585 + q6_b*x15884 + q6_b*x15886 + q6_b*x15888 - x10658*x7162 - x10658*x7163 - x11433*x7046 + x11434*x7125 - x11434*x7207 - x11583*x6871 + x11583*x7088 + x11591*x6897 - x11591*x7141 - x11986*x7141 + x11988*x7125 - x12286*x7066 - x12286*x7067 - x12287*x7066 - x12287*x7067 - x129*x15787 - x129*x15796 + x129*x15799 - x129*x15808 - x129*x15810 - x129*x15812 - x129*x15814 + x15330*x778 - x15341*x778 + x15343*x15885 - x15343*x3260 + x15383*x15591 + x15387*x3262 + x15397*x3261 - x15406*x15591 + x15406*x15887 + x15410*x15591 - x15410*x15887 - x15416*x3262 - x15428*x3261 - x15429*x15708 + x15429*x15711 + x15429*x15730 + x15429*x15732 + x15430*x15591 + x15433*x15591 - x15461*x4818 + x15476*x4818 + x15490*x327 + x15492*x327 + x15495*x327 + x15499*x327 - x15502*x327 - x15504*x327 - 16*x15506 - x15508*x327 + x15513*x327 + x15517*x327 + x15554*x15730 + x15554*x15732 + x15610 - x15635*x778 + 36*x15642 + x15645*x778 + x15647*x3260 + 18*x15648 + x15654*x5694 + 6*x15689 + 6*x15690 + 6*x15692 + 6*x15694 - x15696*x327 - 16*x15698 - 16*x15699 - 16*x15700 + 32*x15707 + 6*x15712 + 6*x15713 - 6*x15715 - 6*x15716 - 6*x15717 - 6*x15718 + x15726*x327 + 16*x15727 + 16*x15728 + 6*x15731 + 6*x15733 - 24*x15752 - x15760*x4730 + x15776*x4730 - x15791*x5694 + x15819 - 32*x15841 - 12*x15844 - 12*x15845 + 16*x15847 + 6*x15853 - x15854*x15891 + x15854*x15892 - x15856*x15891 + x15856*x15892 - x15869 - x15870 - x15871 - x15872 - x15874 - x15875 + x15876 + x15877 + x15878 + x15879 + x15880 + x15881 + x15882 - x15890 + x15893 + x15900 + x15908 + x5312*x7181 + x5694*x7169 - x5694*x7199 + x5887*x7125 - x6908*x7367 + x7023*x7357 + x7024*x7357 - x7141*x7951) + x70*(-q5_b_dot*x15617 - q5_b_dot*x6784 + x11348*x6897 + x15490 + x15492 + x15495 + x15499 - x15502 - x15504 - x15508 + x15511 + x15513 + x15515 + x15517 + x15614 + x15615 + x15616 + x15618 + x15625 + x3157*x5150 - x3157*x5247 - x5278*x7007)) + x69*(L*(-q7_b*x16005 + q7_b*x16010 - x11370*x7549 + x11375*x7552 + x11474*x7552 + x14562 - 14*x15928 - 14*x15940 + 14*x15960 - x15961*x7622 + x15969*x7622 + x16203 + x16204 + x16205 - x5505*x7551 - x5547*x7546) - x106*(-q7_b*x16292 + q7_b*x16297 + q7_b*x16300 - q7_b*x16305 - q7_b*x16313 + q7_b*x16315 + q7_b*x16316 - q7_b*x7485 - q7_b*x7492 + q7_b*x7693 - q7_b_dot*x16314 + q7_i*x16317 - q8_b*x16005 + q8_b*x16010 + q8_i*x16030 - x11348*x7747 - x11351*x7749 - x11360*x7701 - x11360*x7702 - x11360*x7747 + x11474*x7689 + x11474*x7690 + x11474*x7762 - x11613*x7499 - x11624*x4877 - x11625*x3320 - x11755*x4926 + x11773*x4926 - x11785*x16311 - x11800*x7765 - x11801*x16328 - x11803*x7765 - x11804*x16328 + 11*x15928 + 11*x15940 - 11*x15960 + x15961*x7713 - x15969*x7713 - x15991*x3402 - x16003*x3347 - x16003*x837 + x16010*x807 + x16012*x16312 - x16016*x16312 + x16030*x808 + x16045 - x16055*x4934 + x16070*x4934 + 4*x16121 - x16179*x5505 - 11*x16221 - 11*x16233 + x16244*x5247 + 11*x16253 - x16254*x7713 + x16260*x7713 - x16261 + x16262 + x16263 - x16265 - x16267 - x16268 - x16269 + x16270 + x16271 + x16273 + x16274 + x16275 + x16276 + x16277 + x16278 + x16279 + x16281 + x16282 + x16283 + x16284 - x16286 - x16287 - x16288*x1858 - 3*x16290 - 3*x16291 + x16293 + x16294 + x16295 + x16296 + 6*x16298 + x16301 + x16303 + x16304 - x16306 - x16308 - x16309 - x16310 + x16318*x1858 + 3*x16319 + x16320*x3402 + x16321*x7435 + x16323 + x16324 + x16326 + x16327 + x16329*x807 + x16330*x807 + x16336 + x16342 - x5161*x7701 - x5161*x7702 - x5161*x7747 - x5278*x7727 - x5278*x7728 + x5332*x7546 + x5394*x7715 - x5505*x7788 - x5505*x7789 - x5547*x7646 - x5547*x7647 - x5679*x7685 + x7405*x836) + x123*(q7_b*x16227 - q7_b*x16237 + q7_b*x16249 + q7_b*x7792 + q8_b*x15934 - q8_b*x15945 + q8_b*x15955 - x11374*x7702 - x11375*x7701 + x11467 - x11474*x7701 - x11474*x7702 + x11613*x7668 + x11624*x4926 + x11702*x7689 + x11702*x7690 - x14316*x15941 + x14316*x15956 - x14316*x15962 + x14316*x15966 + 42*x15928 + 42*x15940 - x15947*x16241 - 42*x15960 + x15961*x7656 - x15969*x7656 - x16010*x836 - x16030*x837 + x16117 - x16152 + x16153 + x16154 - x16155 - x16156 + x16157 + x16158 - x16159 - x16160 - x16161 + x16218 + x16219 - 42*x16221 - x16225 - x16226 + x16230 + x16231 - 42*x16233 - 14*x16235 - 12*x16236 - 6*x16240 - x16243 + x16244*x5505 - x16245 + x16246*x5505 - x16247 - x16248 + 14*x16251 + 42*x16253 - x16254*x7656 - 14*x16256 + x16257 + 14*x16259 + x16260*x7656 - x5312*x7646 - x5312*x7647 + x5694*x7788 + x5694*x7789 + x6624*x7689 + x6624*x7690 + x7*x7692) - x123*(-q7_b*x16429 - q7_b*x16430 - q7_b*x16434 - q7_b*x16435 - q8_b*x16140 + q8_b*x16430 + q8_b*x16434 + q8_b*x16435 - x11347*x7722 + x11347*x7810 + x11352*x7749 - x11352*x7836 - x11360*x16440 - x11360*x16441 + x11360*x16442 - x11515*x7500 + x11515*x7715 + x11517*x7526 - x11517*x7765 - x11929*x7828 + x11941*x7749 + x11942*x7749 - x12248*x7689 - x12248*x7690 - x12249*x7689 - x12249*x7690 + x154*x16361 - x154*x16366 - x154*x16374 - x154*x16376 - x154*x16383 + x154*x16386 + x154*x16388 - x154*x16395 - x154*x16397 - x154*x16399 - x154*x16401 + x15947*x3416 - x15947*x3418 - x15991*x3432 - x16001*x3416 + x16001*x3418 + x16003*x3421 + x16012*x16436 - x16016*x16436 - x16033*x3421 - x16055*x4951 + x16070*x4951 + x16083*x286 + x16085*x286 + x16088*x286 + x16092*x286 - x16095*x286 - x16097*x286 - x16101*x286 + x16106*x286 + x16110*x286 + x16162 + 24*x16236 + x16239*x3418 + x16239*x7577 + 3*x16281 + 3*x16282 + 3*x16283 + 3*x16284 + 5*x16286 + 5*x16287 - x16288*x286 - x16289*x3418 - x16289*x7577 - 7*x16291 + 14*x16298 - x16299*x16437 - 5*x16301 + x16302*x16437 + 3*x16303 + 3*x16304 - 3*x16306 - 3*x16308 - 3*x16309 - 3*x16310 + x16318*x286 + x16320*x3432 + x16322*x16437 + 3*x16323 + 3*x16324 + x16325*x16437 + 3*x16326 + 3*x16327 + x16342 - x16347*x4864 + x16363*x4864 + 5*x16390 + x16406 - x16412 - x16413 - x16414 - x16415 - x16417 - x16418 + x16420 + x16422 + x16423 + x16424 + x16426 + x16427 - 14*x16428 - 6*x16431 - 6*x16432 - 5*x16433 + 5*x16438 - x16440*x5161 - x16441*x5161 + x16442*x5161 + x16453 + x6741*x7646 + x6741*x7647 - x7435*x8203) + x168*(-q7_b*x16353 - q7_b*x16354 - q7_b*x16365 + q7_b*x16368 + q7_b*x16370 + q7_b*x16371 + q8_b*x16061 - q8_b*x16062 + q8_b*x16073 - q8_b*x16077 - q8_b*x16079 - q8_b*x16080 - q8_b*x16356 + q8_b_dot*x16072 + x11374*x7803 + x11374*x7804 + x11375*x7803 + x11375*x7804 + x11377*x7925 + x11377*x7926 - x11417*x7765 + x11860*x7749 - x11860*x7765 - x12170*x7689 - x12170*x7690 - x12171*x7689 - x12171*x7690 - x158*x16288 + x158*x16318 + x158*x16361 - x158*x16366 + x15947*x16362 + x16003*x3450 - x16033*x3450 - x16055*x4977 + x16063*x3380 + x16070*x4977 + x16081 + x16082 + x16084 + x16086 + x16087 + x16089 - x16090 - x16091 + x16093 + x16094 - x16096 - x16098 - x16100 - x16102 - x16103 + x16105 + x16107 + x16109 + x16111 + x16116 + x16122 + 16*x16236 + 8*x16240 + 4*x16286 - 4*x16301 + 4*x16319 + x16320*x3457 - x16343 - x16344 - x16345 - x16346 - x16347*x4890 + x16348 + x16349 + x16351 + x16352 - x16355*x3276 + x16357 + x16358 + x16359 + x16360 + x16363*x4890 - x16364 - x16367 + x16369*x7436 + x16407 + x16411 - x5271*x7797 + x5332*x7715 - x5332*x7722 - x5505*x7794 - x5505*x7795 - x5536*x7788 - x5536*x7789 + x5643*x7646 + x5643*x7647 + x5690*x7749 - x5690*x7765 - x7*x7793 - x7*x7796 - x7414*x7805 - x7541*x7733) + x63*(-q7_b*x16468 - q7_b*x16469 - q7_b*x16471 - q7_b*x16473 - q8_b*x16177 + q8_b*x16469 + q8_b*x16471 + q8_b*x16473 - x10658*x7788 - x10658*x7789 + x11360*x16480 - x11433*x7668 + x11434*x7749 - x11434*x7836 - x11583*x7500 + x11583*x7715 + x11591*x7526 - x11591*x7765 - x11986*x7765 - x12286*x7689 - x12286*x7690 - x12287*x7689 - x12287*x7690 - x129*x16374 - x129*x16383 + x129*x16386 - x129*x16395 - x129*x16397 - x129*x16399 - x129*x16401 + x15934*x836 - x15945*x836 + x15947*x16470 + x15989*x16183 - x15991*x3478 + x15993*x3480 + x16003*x3479 - x16012*x16183 + x16012*x16472 + x16016*x16183 - x16016*x16472 - x16033*x3479 - x16034*x16299 + x16034*x16302 + x16034*x16322 + x16034*x16325 + x16035*x16183 + x16035*x8203 + x16038*x16183 + x16038*x8203 - x16055*x4993 + x16070*x4993 + x16083*x327 + x16085*x327 + x16088*x327 + x16092*x327 - x16095*x327 - x16097*x327 - 16*x16099 - x16101*x327 + x16106*x327 + x16110*x327 + 16*x16144 + x16148*x16322 + x16148*x16325 + x16202 - x16227*x836 + 36*x16236 + x16237*x836 + 18*x16240 + x16246*x5694 + 6*x16281 + 6*x16282 + 6*x16284 + 6*x16286 - x16288*x327 - 16*x16290 - 16*x16291 + 32*x16298 - 6*x16301 + 6*x16303 + 6*x16304 - 6*x16306 - 6*x16308 - 6*x16310 + x16318*x327 + 16*x16319 + x16320*x3478 - x16320*x7773 - 24*x16339 - x16347*x4906 + x16363*x4906 - x16378*x5694 + 6*x16390 + x16406 - 32*x16428 - 12*x16431 - 12*x16432 + 6*x16438 - x16454 - x16455 - x16456 - x16457 - x16459 - x16460 + x16461 + x16462 + x16463 + x16464 + x16465 + x16466 + x16467 - x16475 - x16476*x5247 - x16477*x16478 + x16477*x16481 - x16478*x16479 + x16479*x16481 + x16480*x5161 + x16482 + x16489 + x16497 + x5312*x7810 + x5694*x7795 - x5694*x7828 + x7357*x7646 + x7357*x7647 - x7367*x7537 - x7765*x7951) + x70*(-q7_b_dot*x16209 - q7_b_dot*x7405 + x11348*x7526 + x16083 + x16085 + x16088 + x16092 - x16095 - x16097 - x16101 + x16104 + x16106 + x16108 + x16110 + x16206 + x16207 + x16208 + x16210 + x16217 + x3372*x5150 - x3372*x5247 - x5278*x7630));
T_others[2] = x26*(x10*x25 + x11328*x12 - x11331*x12 - x11359*x17023 + x17022*x20 - x17023*x5159 + x5200*(-x14 + x5275) + x6*(-x16 - x18 - x21)) + x69*(x106*(-x17135 - x17137 - x17139 - x17141 + x17143 - x17145 - x17147 + x17148 + x17151 + x17154 + x17155 + x17171) - x123*(q1_b_dot*x17179 + q1_b_dot*x17192 + x11199*x19 - x120*x17193 - x17037*x81 - x17149*x17166 + x17156*x321 + x17159*x321 - x17160*x321 - x17166*x17194 - x17172 - x17174 - x17176 - x17177 + x17178 - x17182 + x17184 + x17186 + x17187 + x17189 - x17190 + x17195*x49) + x17134*x70) + x69*(x17027*(x17025 - x17026) - x63*(x17042 - x17053 - x17054 + x17056 + x17059 - x17061 + x17062) + x68*(x17042 + x17052)) + x69*(L*(-x17259 + x17260 + x17261 + x17860) + x106*(x17171 + x17860 - x17861 - x17862 - x17863 - x17864 + x17865 - x17867 - x17868 + x17869 + x17870 + x17871 + x17872 + x17879) - x123*(q2_b_dot*x17179 + q2_b_dot*x17192 + x11264*x19 + x11266*x19 + x158*x17156 + x158*x17159 - x158*x17160 - x158*x17858 - x17149*x17878 + 4*x17158 + x17161*x428 + 4*x17164 - 4*x17167 - 4*x17168 - 4*x17170 + x17172 + x17174 + x17176 + x17177 - x17178 + x17182 - x17184 - x17186 - x17187 - x17189 + x17190 - x17193*x662 - x17194*x17878 + x17195*x663 + x17264*x2727 - x17562*x663 + x17875*x321 - x17876*x321 - x17880 - x17881 - x17882 - x17883 + x17884 - x17885 + x17886 + x17888 + x17889 + x17890 - x17891) + x70*(q1_b_dot*x17180 + q1_b_dot*x17251 + q1_b_dot_dt*x17152 + q1_i_dot*x17163 - q1_i_dot*x17169 - x11359*x17859 + x17134 + x17156 + x17159 - x17160 - x17858 - x17859*x5159)) + x69*(L*(x17259 - x17260 - x17261 + x17275) + x106*(x17275 + x17281) - x123*(x11206*x19 + x158*x17250 + x158*x17252 - x158*x17253 + x158*x17254 - x158*x17255 - x158*x17257 + 4*x17276 + x17277*x428 - 4*x17279 - 4*x17280 + x17282 + x17283 + x17284 + x17285 - x17286 + x17287 - x17289 - x17291 - x17292 - x17294 + x17296) + x70*(p1_b_dot*x17180 + p1_b_dot*x17251 + p1_b_dot_dt*x17152 - x11359*x17256 + x17134 + x17250 + x17252 - x17253 + x17254 - x17255 - x17256*x5159 - x17257)) + x69*(L*(-x17570 + x17571 + x17572 + x17896) + x106*(x17879 + x17896 - x17897 - x17898 - x17899 - x17900 + x17901 - x17903 - x17904 + x17905 + x17906 + x17907 + x17908 + x17915) - x123*(q3_b_dot*x17179 + q3_b_dot*x17192 + x11270*x19 + x11272*x19 - x11359*x17928 + x158*x17875 - x158*x17876 + x158*x17892 - x158*x17893 - x158*x17895 - x17149*x17914 - x17193*x691 - x17194*x17914 + x17195*x692 + x17264*x2839 - x17562*x692 + 4*x17873 + 4*x17874 + x17877*x428 + x17880 + x17881 + x17882 + x17883 - x17884 + x17885 - x17886 - x17888 - x17889 - x17890 + x17891 + x17911*x321 - x17912*x321 - x17916 - x17917 - x17918 - x17919 + x17920 - x17921 + x17922 + x17924 + x17925 + x17926 - x17927 - x17928*x5159) + x70*(q2_b_dot*x17180 + q2_b_dot*x17251 + q2_b_dot_dt*x17136 + q2_b_dot_dt*x17152 - x11359*x17894 + x17134 + x17875 - x17876 + x17892 - x17893 - x17894*x5159 - x17895)) + x69*(L*(x17570 - x17571 - x17572 + x17585) + x106*(-x17262 + x17263 - x17265 - x17266 - x17267 + x17269 + x17270 + x17271 + x17272 - x17273 - x17274 + x17281 + x17585 + x17591) - x123*(p1_b_dot*x17179 + p1_b_dot*x17192 + x11220*x19 + x11222*x19 + x158*x17563 + x158*x17564 - x158*x17565 + x158*x17566 - x158*x17567 - x158*x17569 - x17149*x17278 - x17193*x450 - x17194*x17278 + x17195*x249 + x17250*x321 + x17252*x321 - x17253*x321 - x17282 - x17283 - x17284 - x17285 + x17286 - x17287 + x17289 + x17291 + x17292 + x17294 - x17296 - x17562*x249 + 4*x17586 + x17587*x428 - 4*x17589 - 4*x17590 + x17592 + x17593 + x17594 + x17595 - x17596 + x17597 - x17598 - x17600 - x17601 - x17602 + x17603) + x70*(p2_b_dot*x17180 + p2_b_dot*x17251 + p2_b_dot_dt*x17152 - x11359*x17568 + x17134 + x17563 + x17564 - x17565 + x17566 - x17567 - x17568*x5159 - x17569)) + x69*(L*(-x17611 + x17612 + x17613 + x17933) + x106*(x17915 + x17933 - x17934 - x17935 - x17936 - x17937 + x17938 - x17940 - x17941 + x17942 + x17943 + x17944 + x17945 + x17952) - x123*(q4_b_dot*x17179 + q4_b_dot*x17192 + x11276*x19 + x11278*x19 - x11359*x17965 + x158*x17911 - x158*x17912 + x158*x17929 - x158*x17930 - x158*x17932 - x17149*x17951 - x17193*x720 - x17194*x17951 + x17195*x721 + x17264*x2943 - x17562*x721 + 4*x17909 + 4*x17910 + x17913*x428 + x17916 + x17917 + x17918 + x17919 - x17920 + x17921 - x17922 - x17924 - x17925 - x17926 + x17927 + x17948*x321 - x17949*x321 - x17953 - x17954 - x17955 - x17956 + x17957 - x17958 + x17959 + x17961 + x17962 + x17963 - x17964 - x17965*x5159) + x70*(q3_b_dot*x17180 + q3_b_dot*x17251 + q3_b_dot_dt*x17136 + q3_b_dot_dt*x17152 - x11359*x17931 + x17134 + x17911 - x17912 + x17929 - x17930 - x17931*x5159 - x17932)) + x69*(L*(x17611 - x17612 - x17613 + x17626) + x106*(-x17573 + x17574 - x17575 - x17576 - x17577 + x17579 + x17580 + x17581 + x17582 - x17583 - x17584 + x17591 + x17626 + x17632) - x123*(p2_b_dot*x17179 + p2_b_dot*x17192 + x11226*x19 + x11228*x19 + x158*x17604 + x158*x17605 - x158*x17606 + x158*x17607 - x158*x17608 - x158*x17610 - x17149*x17588 - x17193*x479 - x17194*x17588 + x17195*x480 - x17562*x480 + x17563*x321 + x17564*x321 - x17565*x321 - x17592 - x17593 - x17594 - x17595 + x17596 - x17597 + x17598 + x17600 + x17601 + x17602 - x17603 + 4*x17627 + x17628*x428 - 4*x17630 - 4*x17631 + x17633 + x17634 + x17635 + x17636 - x17637 + x17638 - x17639 - x17641 - x17642 - x17643 + x17644) + x70*(p3_b_dot*x17180 + p3_b_dot*x17251 + p3_b_dot_dt*x17152 - x11359*x17609 + x17134 + x17604 + x17605 - x17606 + x17607 - x17608 - x17609*x5159 - x17610)) + x69*(L*(-x17652 + x17653 + x17654 + x17970) + x106*(x17952 + x17970 - x17971 - x17972 - x17973 - x17974 + x17975 - x17977 - x17978 + x17979 + x17980 + x17981 + x17982 + x17989) - x123*(q5_b_dot*x17179 + q5_b_dot*x17192 + x11282*x19 + x11284*x19 - x11359*x18002 + x158*x17948 - x158*x17949 + x158*x17966 - x158*x17967 - x158*x17969 - x17149*x17988 - x17193*x749 - x17194*x17988 + x17195*x750 + x17264*x3059 - x17562*x750 + 4*x17946 + 4*x17947 + x17950*x428 + x17953 + x17954 + x17955 + x17956 - x17957 + x17958 - x17959 - x17961 - x17962 - x17963 + x17964 + x17985*x321 - x17986*x321 - x17990 - x17991 - x17992 - x17993 + x17994 - x17995 + x17996 + x17998 + x17999 + x18000 - x18001 - x18002*x5159) + x70*(q4_b_dot*x17180 + q4_b_dot*x17251 + q4_b_dot_dt*x17136 + q4_b_dot_dt*x17152 - x11359*x17968 + x17134 + x17948 - x17949 + x17966 - x17967 - x17968*x5159 - x17969)) + x69*(L*(x17652 - x17653 - x17654 + x17667) + x106*(-x17614 + x17615 - x17616 - x17617 - x17618 + x17620 + x17621 + x17622 + x17623 - x17624 - x17625 + x17632 + x17667 + x17673) - x123*(p3_b_dot*x17179 + p3_b_dot*x17192 + x11232*x19 + x11234*x19 + x158*x17645 + x158*x17646 - x158*x17647 + x158*x17648 - x158*x17649 - x158*x17651 - x17149*x17629 - x17193*x509 - x17194*x17629 + x17195*x510 - x17562*x510 + x17604*x321 + x17605*x321 - x17606*x321 - x17633 - x17634 - x17635 - x17636 + x17637 - x17638 + x17639 + x17641 + x17642 + x17643 - x17644 + 4*x17668 + x17669*x428 - 4*x17671 - 4*x17672 + x17674 + x17675 + x17676 + x17677 - x17678 + x17679 - x17680 - x17682 - x17683 - x17684 + x17685) + x70*(p4_b_dot*x17180 + p4_b_dot*x17251 + p4_b_dot_dt*x17152 - x11359*x17650 + x17134 + x17645 + x17646 - x17647 + x17648 - x17649 - x17650*x5159 - x17651)) + x69*(L*(-x17693 + x17694 + x17695 + x18007) + x106*(x17989 + x18007 - x18008 - x18009 - x18010 - x18011 + x18012 - x18014 - x18015 + x18016 + x18017 + x18018 + x18019 + x18028) - x123*(q6_b_dot*x17179 + q6_b_dot*x17192 + x11288*x19 + x11290*x19 - x11359*x18041 + x158*x17985 - x158*x17986 + x158*x18003 - x158*x18004 - x158*x18006 - x17149*x18025 - x17193*x778 - x17194*x18025 + x17195*x779 + x17264*x3165 - x17562*x779 + 4*x17983 + 4*x17984 + x17987*x428 + x17990 + x17991 + x17992 + x17993 - x17994 + x17995 - x17996 - x17998 - x17999 - x18000 + x18001 + x18022*x321 - x18023*x321 - x18029 - x18030 - x18031 - x18032 + x18033 - x18034 + x18035 + x18037 + x18038 + x18039 - x18040 - x18041*x5159) + x70*(q5_b_dot*x17180 + q5_b_dot*x17251 + q5_b_dot_dt*x17136 + q5_b_dot_dt*x17152 - x11359*x18005 + x17134 + x17985 - x17986 + x18003 - x18004 - x18005*x5159 - x18006)) + x69*(L*(x17693 - x17694 - x17695 + x17708) + x106*(-x17655 + x17656 - x17657 - x17658 - x17659 + x17661 + x17662 + x17663 + x17664 - x17665 - x17666 + x17673 + x17708 + x17714) - x123*(p4_b_dot*x17179 + p4_b_dot*x17192 + x11238*x19 + x11240*x19 + x158*x17686 + x158*x17687 - x158*x17688 + x158*x17689 - x158*x17690 - x158*x17692 - x17149*x17670 - x17193*x539 - x17194*x17670 + x17195*x540 - x17562*x540 + x17645*x321 + x17646*x321 - x17647*x321 - x17674 - x17675 - x17676 - x17677 + x17678 - x17679 + x17680 + x17682 + x17683 + x17684 - x17685 + 4*x17709 + x17710*x428 - 4*x17712 - 4*x17713 + x17715 + x17716 + x17717 + x17718 - x17719 + x17720 - x17721 - x17723 - x17724 - x17725 + x17726) + x70*(p5_b_dot*x17180 + p5_b_dot*x17251 + p5_b_dot_dt*x17152 - x11359*x17691 + x17134 + x17686 + x17687 - x17688 + x17689 - x17690 - x17691*x5159 - x17692)) + x69*(L*(-x17734 + x17735 + x17736 + x18046) + x106*(x18028 + x18046 - x18047 - x18048 - x18049 - x18050 + x18051 - x18053 - x18054 + x18055 + x18056 + x18057 + x18058 + x18065) - x123*(q7_b_dot*x17179 + q7_b_dot*x17192 + x11294*x19 + x11296*x19 + x158*x18022 - x158*x18023 + x158*x18042 - x158*x18043 - x158*x18045 - x17149*x18064 - x17193*x807 - x17194*x18064 + x17195*x808 + x17264*x3276 - x17562*x808 + 4*x18020 + 4*x18021 + x18024*x428 - 4*x18026 - 4*x18027 + x18029 + x18030 + x18031 + x18032 - x18033 + x18034 - x18035 - x18037 - x18038 - x18039 + x18040 + x18061*x321 - x18062*x321 - x18066 - x18067 - x18068 - x18069 + x18070 - x18071 + x18072 + x18074 + x18075 + x18076 - x18077) + x70*(q6_b_dot*x17180 + q6_b_dot*x17251 + q6_b_dot_dt*x17136 + q6_b_dot_dt*x17152 - x11359*x18044 + x17134 + x18022 - x18023 + x18042 - x18043 - x18044*x5159 - x18045)) + x69*(L*(x17734 - x17735 - x17736 + x17749) + x106*(-x17696 + x17697 - x17698 - x17699 - x17700 + x17702 + x17703 + x17704 + x17705 - x17706 - x17707 + x17714 + x17749 + x17755) - x123*(p5_b_dot*x17179 + p5_b_dot*x17192 + x11244*x19 + x11246*x19 + x158*x17727 + x158*x17728 - x158*x17729 + x158*x17730 - x158*x17731 - x158*x17733 - x17149*x17711 - x17193*x569 - x17194*x17711 + x17195*x570 - x17562*x570 + x17686*x321 + x17687*x321 - x17688*x321 - x17715 - x17716 - x17717 - x17718 + x17719 - x17720 + x17721 + x17723 + x17724 + x17725 - x17726 + 4*x17750 + x17751*x428 - 4*x17753 - 4*x17754 + x17756 + x17757 + x17758 + x17759 - x17760 + x17761 - x17762 - x17764 - x17765 - x17766 + x17767) + x70*(p6_b_dot*x17180 + p6_b_dot*x17251 + p6_b_dot_dt*x17152 - x11359*x17732 + x17134 + x17727 + x17728 - x17729 + x17730 - x17731 - x17732*x5159 - x17733)) + x69*(L*(-x17775 + x17776 + x17777 + x18082) + x106*(x18065 + x18082 - x18083 - x18084 - x18085 - x18086 + x18087 - x18089 - x18090 + x18091 + x18092 + x18093 + x18094 + x18101) - x123*(q8_b_dot*x17179 + q8_b_dot*x17192 + x11300*x19 + x11302*x19 - x11359*x18114 + x158*x18061 - x158*x18062 + x158*x18078 - x158*x18079 - x158*x18081 - x17149*x18100 - x17193*x836 - x17194*x18100 + x17195*x837 + x17264*x3380 - x17562*x837 + 4*x18059 + 4*x18060 + x18063*x428 + x18066 + x18067 + x18068 + x18069 - x18070 + x18071 - x18072 - x18074 - x18075 - x18076 + x18077 + x18097*x321 - x18098*x321 - x18102 - x18103 - x18104 - x18105 + x18106 - x18107 + x18108 + x18110 + x18111 + x18112 - x18113 - x18114*x5159) + x70*(q7_b_dot*x17180 + q7_b_dot*x17251 + q7_b_dot_dt*x17136 + q7_b_dot_dt*x17152 - x11359*x18080 + x17134 + x18061 - x18062 + x18078 - x18079 - x18080*x5159 - x18081)) + x69*(L*(x17775 - x17776 - x17777 + x17790) + x106*(-x17737 + x17738 - x17739 - x17740 - x17741 + x17743 + x17744 + x17745 + x17746 - x17747 - x17748 + x17755 + x17790 + x17796) - x123*(p6_b_dot*x17179 + p6_b_dot*x17192 + x11250*x19 + x11252*x19 + x158*x17768 + x158*x17769 - x158*x17770 + x158*x17771 - x158*x17772 - x158*x17774 - x17149*x17752 - x17193*x599 - x17194*x17752 + x17195*x600 - x17562*x600 + x17727*x321 + x17728*x321 - x17729*x321 - x17756 - x17757 - x17758 - x17759 + x17760 - x17761 + x17762 + x17764 + x17765 + x17766 - x17767 + 4*x17791 + x17792*x428 - 4*x17794 - 4*x17795 + x17797 + x17798 + x17799 + x17800 - x17801 + x17802 - x17803 - x17805 - x17806 - x17807 + x17808) + x70*(p7_b_dot*x17180 + p7_b_dot*x17251 + p7_b_dot_dt*x17152 - x11359*x17773 + x17134 + x17768 + x17769 - x17770 + x17771 - x17772 - x17773*x5159 - x17774)) + x69*(L*(-x17816 + x17817 + x17818 + x18119) + x106*(x18101 + x18119 - x18120 - x18121 - x18122 - x18123 + x18124 - x18126 - x18127 + x18128 + x18129 + x18130 + x18131 + x18138) - x123*(q9_b_dot*x17179 + q9_b_dot*x17192 + x11306*x19 + x11308*x19 - x11359*x18151 + x158*x18097 - x158*x18098 + x158*x18115 - x158*x18116 - x158*x18118 - x17149*x18137 - x17193*x865 - x17194*x18137 + x17195*x866 + x17264*x3494 - x17562*x866 + 4*x18095 + 4*x18096 + x18099*x428 + x18102 + x18103 + x18104 + x18105 - x18106 + x18107 - x18108 - x18110 - x18111 - x18112 + x18113 + x18134*x321 - x18135*x321 - x18139 - x18140 - x18141 - x18142 + x18143 - x18144 + x18145 + x18147 + x18148 + x18149 - x18150 - x18151*x5159) + x70*(q8_b_dot*x17180 + q8_b_dot*x17251 + q8_b_dot_dt*x17136 + q8_b_dot_dt*x17152 - x11359*x18117 + x17134 + x18097 - x18098 + x18115 - x18116 - x18117*x5159 - x18118)) + x69*(L*(x17816 - x17817 - x17818 + x17831) + x106*(-x17778 + x17779 - x17780 - x17781 - x17782 + x17784 + x17785 + x17786 + x17787 - x17788 - x17789 + x17796 + x17831 + x17837) - x123*(p7_b_dot*x17179 + p7_b_dot*x17192 + x11256*x19 + x11258*x19 + x158*x17809 + x158*x17810 - x158*x17811 + x158*x17812 - x158*x17813 - x158*x17815 - x17149*x17793 - x17193*x629 - x17194*x17793 + x17195*x630 - x17562*x630 + x17768*x321 + x17769*x321 - x17770*x321 - x17797 - x17798 - x17799 - x17800 + x17801 - x17802 + x17803 + x17805 + x17806 + x17807 - x17808 + 4*x17832 + x17833*x428 - 4*x17835 - 4*x17836 + x17838 + x17839 + x17840 + x17841 - x17842 + x17843 - x17844 - x17846 - x17847 - x17848 + x17849) + x70*(p8_b_dot*x17180 + p8_b_dot*x17251 + p8_b_dot_dt*x17152 - x11359*x17814 + x17134 + x17809 + x17810 - x17811 + x17812 - x17813 - x17814*x5159 - x17815)) + x69*(L*(-x17854 + x17855 + x17856 + x18156) + x106*(-q10_b*x17138 + q10_b_dot*x17157 - q10_b_dt*x17264 + q10_i*x17150 + q10_i*x17153 - q10_i*x17195 + x102*x18159 - x11207*x18157 + x11312*x19 - x11315*x19 - x11359*x18164 + x17055*x18161 + x17136*x871 - x17144*x18161 + x17163*x875 - x17165*x876 - x17169*x875 + x18138 + x18156 + x18158*x869 - x18160 + x18162*x81 + x18163*x384 - x18164*x5159) - x123*(-q10_b*x17173 + q10_b_dot*x17179 + q10_b_dot*x17192 + q10_i*x17293 - q10_i*x17295 + x11202*x18159 - x11311*x19 + x11313*x19 + x11314*x19 + x11359*x18165 - x11359*x18166 - x114*x18157 + x158*x18134 - x158*x18135 + x158*x18152 - x158*x18153 - x158*x18155 - x17136*x3595 - x17149*x18164 + x17165*x8320 - x17180*x8320 - x17193*x876 - x17194*x18164 + x17195*x875 + x17264*x871 - x17562*x875 + 4*x18132 + 4*x18133 + x18136*x428 + x18139 + x18140 + x18141 + x18142 - x18143 + x18144 - x18145 - x18147 - x18148 - x18149 + x18150 + x18158*x877 - 2*x18160 + x18165*x5159 - x18166*x5159) + x70*(q9_b_dot*x17180 + q9_b_dot*x17251 + q9_b_dot_dt*x17136 + q9_b_dot_dt*x17152 - x11359*x18154 + x17134 + x18134 - x18135 + x18152 - x18153 - x18154*x5159 - x18155)) + x69*(L*(x17854 - x17855 - x17856 + x17857) + x106*(x17548 - x17819 + x17820 - x17821 - x17822 - x17823 + x17825 + x17826 + x17827 + x17828 - x17829 - x17830 + x17837 + x17857) - x123*(p8_b_dot*x17179 + p8_b_dot*x17192 + x11261*x19 + x11262*x19 + x158*x17540 + x158*x17542 - x158*x17543 + x158*x17850 - x158*x17851 - x158*x17853 - x17149*x17834 - x17193*x633 - x17194*x17834 + x17195*x634 + 4*x17541 + x17544*x428 - 4*x17546 - 4*x17547 + x17549 + x17550 + x17551 + x17552 - x17553 + x17554 - x17555 - x17558 - x17559 - x17560 + x17561 - x17562*x634 + x17809*x321 + x17810*x321 - x17811*x321 - x17838 - x17839 - x17840 - x17841 + x17842 - x17843 + x17844 + x17846 + x17847 + x17848 - x17849) + x70*(p9_b_dot*x17180 + p9_b_dot*x17251 + p9_b_dot_dt*x17152 - x11359*x17852 + x17134 + x17540 + x17542 - x17543 + x17850 - x17851 - x17852*x5159 - x17853)) + x69*(L*(-x17131*x8518 - x17133*x8518 + 20*x17520 + x17522) + x106*(L*x17512 + L*x17513 - L*x17514 + x11212*x19 + x17163*x898 - x17165*x8551 - x17169*x898 + x17522 - x17523 - x17524 - x17525 - x17526 + x17527 + x17528 - x17530 - x17531 + x17532 + x17533 + x17534 + x17535 + x17536*x384 - x17538 - x17539 + x17548) - x123*(p10_b*x17173 + p10_b*x17181 - p10_b*x17288 + p10_b_dt*x17175 - p10_i*x17293 + p9_b_dot*x17179 + p9_b_dot*x17192 + x11210*x19 + x11213*x19 + x11215*x19 - x11359*x17556 + 6*x12626*x17146 + x158*x17512 + x158*x17513 - x158*x17514 + x158*x17516 - x158*x17517 - x158*x17519 + x17140*x413 - x17142*x413 - x17149*x17545 - x17193*x420 - x17194*x17545 + x17195*x421 + 4*x17528 + x17536*x428 - 4*x17538 - 4*x17539 + x17540*x321 + x17542*x321 - x17543*x321 - x17549 - x17550 - x17551 - x17552 + x17553 - x17554 + x17555 - x17556*x5159 + x17558 + x17559 + x17560 - x17561 - x17562*x421) + x70*(p10_b_dot*x17180 + p10_b_dot*x17251 + p10_b_dot_dt*x17152 - x11359*x17518 + x17134 + x17512 + x17513 - x17514 + x17516 - x17517 - x17518*x5159 - x17519)) + x69*(x123*(x17113 + x17212 - x17224 - x17225 + x17230 + x17232) - x168*(x17085 + x17205 + x17207 + x17212 + x17223) - x173*(x17197 - x17198 + x17202) + x63*(x17125 + x17233 - x17234 - x17235 + x17240 + x17243 + x17244 + x17249)) + x69*(-x123*(x17076 - x17103 - x17104 + x17107 + x17112 + x17113 + x17114) + x168*(x17070 + x17076 + x17085 + x17097 + x17102) + x173*(-x17065 + x17067) - x63*(x17117 + x17118 + x17119 - x17120 - x17121 + x17123 + x17125 + x17129)) + x69*(L*(-p3_t_dt*x18265 + 3*x18332 + x18341) - x106*(-x13434*x965 + x18254*x18340 - x18261 + x18266 - x18284*x459 + x18341 + x18342 + x18343 + x18345 - x18346 - x18349 + x18362) + x123*(-x1050*x18326 + x1050*x18327 - x11328*x18379 + x11331*x18379 - x18260 + x18289 + x18332 - x18363 + x18364*x444 - x18365 - 3*x18366 + x18367 + x18368 - x18369 + x18370 - x18371 - x18373 + x18374 - x18375 + x18377 + x18380 - x18381 + x18383 + x18385 - x18386 + x18387 + x18388 - x18389 - x18391 + x18392 - x18393 - x18394 + x18395 - x18396) - x63*(x1002*x18398 - x1004*x18397 + x1055*x18317 - x1057*x18316 + x1057*x18326 - x1057*x18327 + x17049*x18399 - x17051*x18399 - x17055*x18344 - x17055*x18378 + x18279 + x18321 + 2*x18342 - x18351 - x18353 + x18354 + x18357 + x18359 - x18361 + 2*x18366 - x18368 + x18369 - x18370 + x18375 - x18383 - x18385 + x18386 - x18387 - x18388 + x18389 + x18393 + x18394 + x18401) + x68*(p3_i_dot*x18328 + p3_i_dot_dt*x18323 - x1004*x18355 - x1055*x18329 + x1057*x18272 - x1060*x18316 + x1060*x18326 - x1060*x18327 + x1060*x18397 - x1060*x18403 + x1060*x18404 + x11328*x18402 - x11331*x18402 - x17049*x18405 + x17049*x18406 + x17051*x18405 - x17051*x18406 + x17055*x18382 - x17055*x18384 + x18279 - x18281 - x18284*x473 + x18285 + x18288 - x18292 + x18302 - x18308 - x18324*x18333 - 5*x18334 + 5*x18336 - 5*x18337 + 3*x18342 + 3*x18345 - 3*x18346 + 5*x18366 + x18371 - x18377 + x18391 - x18392 - x18395 + x18396 + x18403*x986 - x18404*x986)) + x69*(L*(x1002*x17342 - x1011*x17063 + x18257) - x106*(-x13105*x242 + x17299*x18256 - x17301*x430 + x17344 + x18257 + x18258 + x18261 + x18263 - x18264 - x18266 + x18279) + x123*(-x11328*x18287 + x11331*x18287 - x17049*x18300 + x17051*x18300 + x17345 + x18260 - 3*x18280 + x18281 + x18282 - x18283 + x18284*x226 - x18285 - x18288 - x18289 + x18291 + x18292 + x18294 + x18296 - x18297 - x18298 - x18299 - x18302 - x18304 - x18305 + x18306 + x18307 + x18308 - x18310 - x18311 - x18312 + x18313 + x18314 + x18315) - x63*(x1002*x17315 - x1004*x17312 - x1005*x18316 + x17049*x18318 + x17049*x18319 - x17051*x18318 - x17051*x18319 - x17055*x18262 - x17055*x18286 - x17311 + x17313 + x17314 - x17316 + x17318 - x17319 + x17331 + 2*x18258 - x18268 - x18270 + x18271 + x18274 + x18276 - x18278 + 2*x18280 - x18282 + x18283 - x18294 - x18296 + x18297 + x18298 + x18305 - x18306 + x18311 + x18312 - x18313 - x18314 + x18317*x257 + x18321) + x68*(-p1_i_dot*x18328 - p1_i_dot_dt*x18323 + x1004*x17325 - x1005*x18272 - x1008*x17312 + x1008*x18316 - x1008*x18326 + x1008*x18327 + x11328*x18322 - x11331*x18322 + x17049*x18325 - x17049*x18330 + x17049*x18331 - x17051*x18325 + x17051*x18330 - x17051*x18331 + x17055*x18293 - x17055*x18295 - x17301*x444 + x17303*x18324 + x17331 + x17347 - 5*x18250 + 5*x18252 - 5*x18253 + 3*x18258 + 3*x18263 - 3*x18264 + 5*x18280 - x18291 + x18299 + x18304 - x18307 + x18310 - x18315 + x18326*x270 - x18327*x270 + x18329*x257)) + x69*(L*(-x1161*x17343 + 5*x18483 + x18492) - x106*(-x1067*x14034 + x18408*x18491 - x18414*x519 - x18418 + x18422 + x18492 + x18493 + x18494 + x18496 - x18497 - x18499 + x18512) + x123*(-x11328*x18529 + x11331*x18529 - x1151*x18477 + x1151*x18478 - x18407 + x18436 + x18483 - x18513 + x18514*x503 - x18515 - 3*x18516 + x18517 + x18518 - x18519 + x18520 - x18521 - x18523 + x18524 - x18525 + x18527 + x18530 - x18531 + x18533 + x18535 - x18536 + x18537 + x18538 - x18539 - x18541 + x18542 - x18543 - x18544 + x18545 - x18546) - x63*(x1104*x18548 - x1106*x18547 + x1156*x18470 - x1158*x18469 + x1158*x18477 - x1158*x18478 + x17049*x18549 - x17051*x18549 - x17055*x18495 - x17055*x18528 + x18435 + x18473 + 2*x18493 - x18501 - x18503 + x18504 + x18507 + x18509 - x18511 + 2*x18516 - x18518 + x18519 - x18520 + x18525 - x18533 - x18535 + x18536 - x18537 - x18538 + x18539 + x18543 + x18544 + x18551) + x68*(p5_i_dot*x18479 + p5_i_dot_dt*x18475 + x1088*x18553 - x1088*x18554 - x1106*x18505 + x11328*x18552 - x11331*x18552 - x1156*x18480 + x1158*x18428 - x1161*x18469 + x1161*x18477 - x1161*x18478 + x1161*x18547 - x1161*x18553 + x1161*x18554 - x17049*x18555 + x17049*x18556 + x17051*x18555 - x17051*x18556 + x17055*x18532 - x17055*x18534 - x18414*x533 + x18435 + x18437 - x18439 + x18445 - x18446 - x18452 + x18453 - x18476*x18484 - 5*x18485 + 5*x18487 - 5*x18488 + 3*x18493 + 3*x18496 - 3*x18497 + 5*x18516 + x18521 - x18527 + x18541 - x18542 - x18545 + x18546)) + x69*(L*(-x1365*x17342 + x1386*x17063 + x18857) - x106*(-x11683*x1395 + x18180 - x18855*x18865 + x18856*x18865 + x18857 + x18859 + x18860 + x18862 - x18863 - x18864 + x18866) - x123*(x17049*x18884 - x17051*x18884 - x18177*x18872 + x18180 - x18233 + x18234 + x18237 - x18242 + x18244 - x18245 + x18867 + 3*x18868 + x18870 - x18871 - x18874 - x18875*x18876 + x18876*x18878 - x18877 + x18880 + x18881 - x18882 - x18883 - x18885 - x18886 + x18889 + x18890 + x18891 - x18893 - x18894 - x18895 + x18897 + x18899 + x18900) + x63*(q3_i*x18902 - x11683*x18901 - x12040*x1366 + x1369*x18903 - x1369*x18904 + x1369*x18905 + x1422*x18216 - x1422*x18219 + x1422*x18221 + x17055*x18861 + x18232 - 2*x18859 + x18866 - 2*x18868 - x18870 + x18871 - x18880 - x18881 + x18882 + x18883 + x18886 - x18889 + x18894 + x18895 - x18897 - x18899 + x18913 + x18916) - x68*(-q2_i_dot*x18925 + q3_i_dot_dt*x18239 + x1365*x18926 - x1369*x18887 + x1422*x18201 - x1435*x18216 + x1435*x18219 - x1435*x18221 + x1435*x18903 - x1435*x18904 + x1435*x18905 - x1436*x18219 + x1436*x18221 + x17049*x18928 - x17049*x18929 - x17051*x18928 + x17051*x18929 + x17055*x18879 + x18186*x18865 + 5*x18230 - 5*x18236 - x18240*x18858 + 5*x18241 - 3*x18859 - 3*x18862 + 3*x18863 - 5*x18868 + x18874 + x18875*x18919 - x18878*x18919 + x18885 - x18890 - x18891 + x18893 - x18900 - x18902*x692 + x18913 + x18917 - x18918 - x18921 + x18923 - x18924 + x18927)) + x69*(L*(x1453*x17063 - 3*x18867 + x18932) - x106*(-x12040*x1446 - x18860 + x18864 - x18930*x18941 + x18931*x18941 + x18932 + x18934 + x18936 + x18938 - x18939 - x18940 + x18942) - x123*(x17049*x18953 - x17051*x18953 - x18865*x18944 - x18867 + x18877 - x18917 + x18918 + x18921 - x18923 + x18924 - x18927 + x18935 - x18943 + 3*x18945 + x18947 + x18948 - x18949 + x18952 - x18955 - x18956 + x18957*x18958 - x18957*x18959 + x18961 + x18962 + x18964 - x18965 + x18967 - x18968 + x18970 - x18971 - x18972 - x18973 + x18974 - x18975) + x63*(q4_i*x18977 - x12040*x18976 - x12351*x18901 + x1422*x18978 - x1422*x18979 + x1422*x18980 + x1475*x18903 - x1475*x18904 + x1475*x18905 + x17055*x18937 + x18916 - 2*x18934 + x18942 - 2*x18945 - x18947 + x18949 - x18952 + x18956 - x18961 - x18962 + x18965 - x18967 - x18970 + x18971 + x18973 + x18975 + x18988 + x18991) - x68*(-q3_i_dot_dt*x18997 + q4_i_dot*x18925 - x1422*x18950 - x1472*x18926 + x1475*x18887 - x1488*x18903 + x1488*x18904 - x1488*x18905 + x1488*x18978 - x1488*x18979 + x1488*x18980 - x1489*x18904 + x1489*x18905 + x17049*x19003 - x17049*x19004 - x17051*x19003 + x17051*x19004 + x17055*x18960 + x18858*x18998 + x18872*x18941 + 5*x18914 - 5*x18920 + 5*x18922 - 3*x18934 - 3*x18938 + 3*x18939 - 5*x18945 - x18948 + x18955 - x18958*x18994 + x18959*x18994 - x18964 + x18968 + x18972 - x18974 - x18977*x721 + x18988 + x18992 - x18993 - x18996 + x19000 - x19001 + x19002)) + x69*(L*(x1592*x17343 - 5*x19010 + x19082) - x106*(-x15342*x1551 - x19011 + x19016 - x19080*x19091 + x19081*x19091 + x19082 + x19084 + x19086 + x19088 - x19089 - x19090 + x19092) - x123*(x17049*x19103 - x17051*x19103 - x19010 - x19015*x19094 + x19018 - x19067 + x19068 + x19071 - x19073 + x19074 - x19077 + x19085 - x19093 + 3*x19095 + x19097 + x19098 - x19099 + x19102 - x19105 - x19106 + x19107*x19108 - x19107*x19109 + x19111 + x19112 + x19114 - x19115 + x19117 - x19118 + x19120 - x19121 - x19122 - x19123 + x19124 - x19125) + x63*(q6_i*x19127 + x1527*x19128 - x1527*x19129 + x1527*x19130 - x15342*x19126 - x15646*x19051 + x1579*x19053 - x1579*x19054 + x1579*x19055 + x17055*x19087 + x19066 - 2*x19084 + x19092 - 2*x19095 - x19097 + x19099 - x19102 + x19106 - x19111 - x19112 + x19115 - x19117 - x19120 + x19121 + x19123 + x19125 + x19138 + x19141) - x68*(-q5_i_dot_dt*x19147 + q6_i_dot*x19075 - x1527*x19100 - x1576*x19076 + x1579*x19025 - x1592*x19053 + x1592*x19054 - x1592*x19055 + x1592*x19128 - x1592*x19129 + x1592*x19130 - x1593*x19054 + x1593*x19055 + x17049*x19153 - x17049*x19154 - x17051*x19153 + x17051*x19154 + x17055*x19110 + x19008*x19148 + x19019*x19091 + 5*x19064 - 5*x19070 + 5*x19072 - 3*x19084 - 3*x19088 + 3*x19089 - 5*x19095 - x19098 + x19105 - x19108*x19144 + x19109*x19144 - x19114 + x19118 + x19122 - x19124 - x19127*x779 + x19138 + x19142 - x19143 - x19146 + x19150 - x19151 + x19152)) + x69*(L*(-x18348*x18408 + 4*x18407 + x18416) - x106*(-x1019*x13738 + x18338*x18415 - x18343 + x18349 - x18364*x489 + x18416 + x18417 + x18418 + x18420 - x18421 - x18422 + x18435) + x123*(-x1088*x18403 + x1088*x18404 - x11328*x18451 + x11331*x18451 - x18332 + x18363 + x18407 + x18414*x473 - x18436 - x18437 - 3*x18438 + x18439 + x18440 - x18441 + x18442 - x18443 - x18445 + x18446 - x18447 + x18449 + x18452 - x18453 + x18455 + x18457 - x18458 + x18459 + x18460 - x18461 - x18463 + x18464 - x18465 - x18466 + x18467 - x18468) - x63*(x1055*x18470 - x1057*x18469 + x1104*x18398 - x1106*x18397 + x1106*x18403 - x1106*x18404 + x17049*x18471 - x17051*x18471 - x17055*x18419 - x17055*x18450 + x18362 + x18401 + 2*x18417 - x18424 - x18426 + x18427 + x18430 + x18432 - x18434 + 2*x18438 - x18440 + x18441 - x18442 + x18447 - x18455 - x18457 + x18458 - x18459 - x18460 + x18461 + x18465 + x18466 + x18473) + x68*(-p3_i_dot*x18479 - p3_i_dot_dt*x18475 + x1050*x18477 - x1050*x18478 + x1055*x18480 - x1057*x18428 + x1106*x18355 - x1109*x18397 + x1109*x18403 - x1109*x18404 + x1109*x18469 - x1109*x18477 + x1109*x18478 + x11328*x18474 - x11331*x18474 - x17049*x18481 + x17049*x18482 + x17051*x18481 - x17051*x18482 + x17055*x18454 - x17055*x18456 + x18333*x18476 + x18362 - x18364*x503 + x18365 - x18367 + x18373 - x18374 - x18380 + x18381 - 5*x18410 + 5*x18412 - 5*x18413 + 3*x18417 + 3*x18420 - 3*x18421 + 5*x18438 + x18443 - x18449 + x18463 - x18464 - x18467 + x18468)) + x69*(L*(x18348*x18941 - 4*x18935 + x19007) - x106*(-x12351*x1500 - x18936 + x18940 - x19005*x19015 + x19006*x19015 + x19007 + x19009 + x19011 + x19013 - x19014 - x19016 + x19017) - x123*(x17049*x19028 - x17051*x19028 - x18935 - x18941*x19019 + x18943 - x18992 + x18993 + x18996 - x19000 + x19001 - x19002 + x19010 - x19018 + 3*x19020 + x19022 + x19023 - x19024 + x19027 - x19030 - x19031 + x19032*x19033 - x19032*x19034 + x19036 + x19037 + x19039 - x19040 + x19042 - x19043 + x19045 - x19046 - x19047 - x19048 + x19049 - x19050) + x63*(q5_i*x19052 - x12351*x19051 + x1475*x19053 - x1475*x19054 + x1475*x19055 + x1527*x18978 - x1527*x18979 + x1527*x18980 - x15342*x18976 + x17055*x19012 + x18991 - 2*x19009 + x19017 - 2*x19020 - x19022 + x19024 - x19027 + x19031 - x19036 - x19037 + x19040 - x19042 - x19045 + x19046 + x19048 + x19050 + x19063 + x19066) - x68*(-q4_i_dot*x19075 + q5_i_dot_dt*x18997 + x1472*x19076 - x1475*x19025 + x1527*x18950 - x1540*x18978 + x1540*x18979 - x1540*x18980 + x1540*x19053 - x1540*x19054 + x1540*x19055 - x1541*x18979 + x1541*x18980 + x17049*x19078 - x17049*x19079 - x17051*x19078 + x17051*x19079 + x17055*x19035 + x18944*x19015 + 5*x18989 - 5*x18995 - x18998*x19008 + 5*x18999 - 3*x19009 - 3*x19013 + 3*x19014 - 5*x19020 - x19023 + x19030 - x19033*x19069 + x19034*x19069 - x19039 + x19043 + x19047 - x19049 - x19052*x750 + x19063 + x19067 - x19068 - x19071 + x19073 - x19074 + x19077)) + x69*(L*(-x18498*x18558 + 6*x18557 + x18566) - x106*(-x1120*x14321 + x18489*x18565 - x18494 + x18499 - x18514*x549 + x18566 + x18567 + x18568 + x18570 - x18571 - x18574 + x18587) + x123*(-x11328*x18603 + x11331*x18603 - x1189*x18553 + x1189*x18554 - x18483 + x18513 + x18557 + x18564*x533 - x18588 - x18589 - 3*x18590 + x18591 + x18592 - x18593 + x18594 - x18595 - x18597 + x18598 - x18599 + x18601 + x18604 - x18605 + x18607 + x18609 - x18610 + x18611 + x18612 - x18613 - x18615 + x18616 - x18617 - x18618 + x18619 - x18620) - x63*(x1156*x18622 - x1158*x18621 + x1205*x18548 - x1207*x18547 + x1207*x18553 - x1207*x18554 + x17049*x18623 - x17051*x18623 - x17055*x18569 - x17055*x18602 + x18512 + x18551 + 2*x18567 - x18576 - x18578 + x18579 + x18582 + x18584 - x18586 + 2*x18590 - x18592 + x18593 - x18594 + x18599 - x18607 - x18609 + x18610 - x18611 - x18612 + x18613 + x18617 + x18618 + x18625) + x68*(-p5_i_dot*x18631 - p5_i_dot_dt*x18627 + x11328*x18626 - x11331*x18626 + x1151*x18629 - x1151*x18630 + x1156*x18632 - x1158*x18580 + x1207*x18505 - x1210*x18547 + x1210*x18553 - x1210*x18554 + x1210*x18621 - x1210*x18629 + x1210*x18630 - x17049*x18633 + x17049*x18634 + x17051*x18633 - x17051*x18634 + x17055*x18606 - x17055*x18608 + x18484*x18628 + x18512 - x18514*x563 + x18515 - x18517 + x18523 - x18524 - x18530 + x18531 - 5*x18560 + 5*x18562 - 5*x18563 + 3*x18567 + 3*x18570 - 3*x18571 + 5*x18590 + x18595 - x18601 + x18615 - x18616 - x18619 + x18620)) + x69*(L*(x18498*x19091 - 6*x19085 + x19157) - x106*(-x15646*x1604 - x19086 + x19090 - x19155*x19165 + x19156*x19165 + x19157 + x19159 + x19161 + x19163 - x19164 - x19166 + x19167) - x123*(x17049*x19178 - x17051*x19178 - x19085 - x19091*x19169 + x19093 - x19142 + x19143 + x19146 - x19150 + x19151 - x19152 + x19160 - x19168 + 3*x19170 + x19172 + x19173 - x19174 + x19177 - x19180 - x19181 + x19182*x19183 - x19182*x19184 + x19186 + x19187 + x19189 - x19190 + x19192 - x19193 + x19195 - x19196 - x19197 - x19198 + x19199 - x19200) + x63*(q7_i*x19202 - x15646*x19201 + x1579*x19203 - x1579*x19204 + x1579*x19205 - x15946*x19126 + x1631*x19128 - x1631*x19129 + x1631*x19130 + x17055*x19162 + x19141 - 2*x19159 + x19167 - 2*x19170 - x19172 + x19174 - x19177 + x19181 - x19186 - x19187 + x19190 - x19192 - x19195 + x19196 + x19198 + x19200 + x19213 + x19216) - x68*(-q6_i_dot*x19225 + q7_i_dot_dt*x19147 + x1576*x19226 - x1579*x19175 + x1631*x19100 - x1644*x19128 + x1644*x19129 - x1644*x19130 + x1644*x19203 - x1644*x19204 + x1644*x19205 - x1645*x19129 + x1645*x19130 + x17049*x19228 - x17049*x19229 - x17051*x19228 + x17051*x19229 + x17055*x19185 + x19094*x19165 + 5*x19139 - 5*x19145 - x19148*x19158 + 5*x19149 - 3*x19159 - 3*x19163 + 3*x19164 - 5*x19170 - x19173 + x19180 - x19183*x19219 + x19184*x19219 - x19189 + x19193 + x19197 - x19199 - x19202*x808 + x19213 + x19217 - x19218 - x19221 + x19223 - x19224 + x19227)) + x69*(L*(-x18573*x18636 + 7*x18635 + x18644) - x106*(-x1168*x14616 + x18558*x18643 - x18564*x579 - x18568 + x18574 + x18644 + x18645 + x18646 + x18648 - x18649 - x18651 + x18664) + x123*(-x11328*x18680 + x11331*x18680 - x1251*x18629 + x1251*x18630 - x18557 + x18588 + x18635 + x18642*x563 - x18665 - x18666 - 3*x18667 + x18668 + x18669 - x18670 + x18671 - x18672 - x18674 + x18675 - x18676 + x18678 + x18681 - x18682 + x18684 + x18686 - x18687 + x18688 + x18689 - x18690 - x18692 + x18693 - x18694 - x18695 + x18696 - x18697) - x63*(x1205*x18699 - x1207*x18698 + x1257*x18622 - x1259*x18621 + x1259*x18629 - x1259*x18630 + x17049*x18700 - x17051*x18700 - x17055*x18647 - x17055*x18679 + x18587 + x18625 + 2*x18645 - x18653 - x18655 + x18656 + x18659 + x18661 - x18663 + 2*x18667 - x18669 + x18670 - x18671 + x18676 - x18684 - x18686 + x18687 - x18688 - x18689 + x18690 + x18694 + x18695 + x18702) + x68*(p7_i_dot*x18631 + p7_i_dot_dt*x18627 + x11328*x18703 - x11331*x18703 + x1189*x18704 - x1189*x18705 - x1207*x18657 - x1257*x18632 + x1259*x18580 - x1262*x18621 + x1262*x18629 - x1262*x18630 + x1262*x18698 - x1262*x18704 + x1262*x18705 - x17049*x18706 + x17049*x18707 + x17051*x18706 - x17051*x18707 + x17055*x18683 - x17055*x18685 - x18564*x593 + x18587 + x18589 - x18591 + x18597 - x18598 - x18604 + x18605 - x18628*x18637 - 5*x18638 + 5*x18640 - 5*x18641 + 3*x18645 + 3*x18648 - 3*x18649 + 5*x18667 + x18672 - x18678 + x18692 - x18693 - x18696 + x18697)) + x69*(L*(x18573*x19165 - 7*x19160 + x19232) - x106*(-x15946*x1655 - x19161 + x19166 - x19230*x19240 + x19231*x19240 + x19232 + x19234 + x19236 + x19238 - x19239 - x19241 + x19242) - x123*(x17049*x19253 - x17051*x19253 - x19160 - x19165*x19244 + x19168 - x19217 + x19218 + x19221 - x19223 + x19224 - x19227 + x19235 - x19243 + 3*x19245 + x19247 + x19248 - x19249 + x19252 - x19255 - x19256 + x19257*x19258 - x19257*x19259 + x19261 + x19262 + x19264 - x19265 + x19267 - x19268 + x19270 - x19271 - x19272 - x19273 + x19274 - x19275) + x63*(q8_i*x19277 - x15946*x19276 - x16238*x19201 + x1631*x19278 - x1631*x19279 + x1631*x19280 + x1683*x19203 - x1683*x19204 + x1683*x19205 + x17055*x19237 + x19216 - 2*x19234 + x19242 - 2*x19245 - x19247 + x19249 - x19252 + x19256 - x19261 - x19262 + x19265 - x19267 - x19270 + x19271 + x19273 + x19275 + x19288 + x19291) - x68*(-q7_i_dot_dt*x19297 + q8_i_dot*x19225 - x1631*x19250 - x1680*x19226 + x1683*x19175 - x1696*x19203 + x1696*x19204 - x1696*x19205 + x1696*x19278 - x1696*x19279 + x1696*x19280 - x1697*x19204 + x1697*x19205 + x17049*x19303 - x17049*x19304 - x17051*x19303 + x17051*x19304 + x17055*x19260 + x19158*x19298 + x19169*x19240 + 5*x19214 - 5*x19220 + 5*x19222 - 3*x19234 - 3*x19238 + 3*x19239 - 5*x19245 - x19248 + x19255 - x19258*x19294 + x19259*x19294 - x19264 + x19268 + x19272 - x19274 - x19277*x837 + x19288 + x19292 - x19293 - x19296 + x19300 - x19301 + x19302)) + x69*(L*(-x18650*x18709 + 8*x18708 + x18717) - x106*(-x1221*x14905 + x18636*x18716 - x18642*x609 - x18646 + x18651 + x18717 + x18718 + x18719 + x18721 - x18722 - x18724 + x18737) + x123*(-x11328*x18753 + x11331*x18753 - x1289*x18704 + x1289*x18705 - x18635 + x18665 + x18708 + x18715*x593 - x18738 - x18739 - 3*x18740 + x18741 + x18742 - x18743 + x18744 - x18745 - x18747 + x18748 - x18749 + x18751 + x18754 - x18755 + x18756 + x18757 - x18758 + x18759 + x18760 - x18761 - x18763 + x18764 - x18765 - x18766 + x18767 - x18768) - x63*(x1257*x18770 - x1259*x18769 + x1304*x18699 - x1306*x18698 + x1306*x18704 - x1306*x18705 + x17049*x18771 - x17051*x18771 - x17055*x18720 - x17055*x18752 + x18664 + x18702 + 2*x18718 - x18726 - x18728 + x18729 + x18732 + x18734 - x18736 + 2*x18740 - x18742 + x18743 - x18744 + x18749 - x18756 - x18757 + x18758 - x18759 - x18760 + x18761 + x18765 + x18766 + x18773) + x68*(-p7_i_dot*x1304*x17191 - p7_i_dot_dt*x18710*x321 + p8_i_dot*x1257*x17191 + p8_i_dot_dt*x18637*x321 + x11328*x18774 - x11331*x18774 + x1251*x18775 - x1251*x18776 - x1259*x18730 + x1306*x18657 - x1309*x18698 + x1309*x18704 - x1309*x18705 + x1309*x18769 - x1309*x18775 + x1309*x18776 - x1311*x17055 + x1312*x17055 - x17049*x18777 + x17049*x18778 + x17051*x18777 - x17051*x18778 - x18642*x623 + x18664 + x18666 - x18668 + x18674 - x18675 - x18681 + x18682 - 5*x18711 + 5*x18713 - 5*x18714 + 3*x18718 + 3*x18721 - 3*x18722 + 5*x18740 + x18745 - x18751 + x18763 - x18764 - x18767 + x18768)) + x69*(L*(x18650*x19240 - 8*x19235 + x19307) - x106*(-x16238*x1708 - x19236 + x19241 - x19305*x19313 + x19306*x19313 + x19307 + x19309 + x19311 - x19312 + x19315 + x19316) - x123*(x17049*x19332 - x17051*x19332 - x19235 - x19240*x19321 + x19243 - x19292 + x19293 + x19296 - x19300 + x19301 - x19302 + 3*x19317 + x19319 - x19320 - x19323 - x19324*x19325 + x19325*x19326 + x19328 + x19329 - x19330 - x19331 - x19333 - x19334 + x19337 + x19338 + x19339 - x19341 - x19342 - x19343 + x19345 + x19347 + x19348 + x19349) + x63*(q9_i*x19358 - x16238*x19354 - x16535*x19276 + x1683*x19352 + x1683*x19359 - x1683*x19361 + x17055*x19310 + x1740*x19278 - x1740*x19279 + x1740*x19280 + x19291 - 2*x19309 + x19316 - 2*x19317 - x19319 + x19320 - x19328 - x19329 + x19330 + x19331 + x19334 - x19337 + x19342 + x19343 - x19345 - x19347 + x19351 - x19353 - x19356 + x19357 - x19360 + x19362 + x19364) - x68*(-q8_i_dot*x19366 + q9_i_dot_dt*x19297 + x1680*x19367 - x1683*x19335 + x17049*x19368 - x17049*x19369 - x17051*x19368 + x17051*x19369 + x17055*x19327 + x1740*x19250 - x1745*x19278 + x1745*x19279 - x1745*x19280 + x1745*x19352 + x1745*x19359 - x1745*x19361 - x1746*x19279 + x1746*x19280 + x19244*x19313 + 5*x19289 - 5*x19295 - x19298*x19308 + 5*x19299 - 3*x19309 - 3*x19311 + 3*x19312 - 5*x19317 + x19323 + x19324*x19365 - x19326*x19365 + x19333 - x19338 - x19339 + x19341 - x19348 - x19358*x866 + x19364 + x19372)) + x69*(L*(-x18723*x18780 + 9*x18779 + x18789) - x106*(-x1269*x12700 + x18709*x19*x8761 - x18715*x391 - x18719 + x18724 + x18789 + x18790 + x18792 + x18794 - x18795 + x18796 - x18798 - x18801 - x18803 + x18805 + x18807) + x123*(-x18708 + x18738 - x18775*x952 + x18776*x952 - x18785*x18812 + x18787*x623 + x18797*x18812 - 3*x18808 + x18810 - x18811 + x18814 + x18815 + x18817 - x18818 - x18819 - x18820 - x18821 - x18822 + x18823 + x18824 - x18826 - x18827 - x18828 + x18829 + x18830 + x18831 + x18832 + x18835) - x63*(-p8_i*x18837 - x1304*x18838 + x1304*x18841 - x1306*x18833 + x1306*x18834 + x14905*x18839 - x18715*x933 + x18737 - x18769*x942 + x18773 + x18775*x942 - x18776*x942 + 2*x18790 + 2*x18808 - x18810 + x18811 - x18815 - x18817 + x18818 + x18819 + x18822 - x18823 + x18827 + x18828 - x18829 - x18830 - x18836 - x18840 + x18842 + x18843 - x18844 + x18845 + x18846) + x68*(-p8_i_dot*x18851 - p8_i_dot_dt*x18848 - x1289*x18833 + x1289*x18834 + x1304*x18852 - x1306*x18800 - x1331*x18769 + x1331*x18775 - x1331*x18776 + x1331*x18833 - x1331*x18834 + x1331*x18850 - x17049*x18853 + x17049*x18854 + x17051*x18853 - x17051*x18854 - x17055*x18816 + x18710*x18849 - x18715*x414 + x18730*x942 + x18737 + x18739 - x18741 + x18747 - x18748 - x18754 + x18755 - 5*x18782 + 5*x18784 + x18785*x18847 - 5*x18786 + 3*x18790 + 3*x18794 - 3*x18795 - x18797*x18847 + 5*x18808 - x18814 + x18820 + x18821 - x18824 + x18826 - x18831 + x18837*x634)) + x69*(L*(-x17044 - x17046 + x17047 + x18168 - x18170 + x18171 + x18172) + x106*(x11390*x1338 - x17030 - x17032 + x17033 + x17036 + x17038 - x17041 + x17044 + x17046 - x17047 + x18167*x18177 - x18168 - x18169*x18177 + x18170 - x18171 - x18173 + x18175 - x18176 + x18180) - x123*(x17049*x18198 - x17051*x18198 + x17052 + x18172 + x18178 - x18179 + 3*x18182 + x18183 - x18185 - x18186*x58 - x18189 - x18190*x18191 + x18191*x18192 + x18194 + x18195 - x18196 - x18197 - x18199 - x18200 + x18203 + x18204 + x18205 - x18207 - x18208 - x18209 + x18211 + x18213 + x18214) + x63*(q2_i*x18215 - x11390*x1366 - x11683*x34 + x1369*x17057 - x1369*x18218 + x1369*x18220 - x1389*x18219 + x1389*x18221 + x17042 + x17053 + x17054 + x17055*x18174 - x17056 - x17059 + x17061 - x17062 - 2*x18173 - 2*x18182 - x18183 + x18185 - x18194 - x18195 + x18196 + x18197 + x18200 - x18203 + x18208 + x18209 - x18211 - x18213 + x18217*x36 + x18229 + x18232) - x68*(-q1_i_dot_dt*x18239 - x1366*x17037 + x1369*x17034 - x1384*x18218 + x1384*x18220 - x1389*x18201 + 5*x17044 + 5*x17046 - 5*x17047 + x17048*x18177 + x17049*x18246 - x17049*x18247 - x17051*x18246 + x17051*x18247 + x17055*x18193 - x17058*x267 - 3*x18173 + 3*x18175 - 3*x18176 - 5*x18182 + x18187*x18240 + x18189 + x18190*x18235 - x18192*x18235 + x18199 - x18204 - x18205 + x18207 + x18210*x34 - x18214 - x18215*x663 + x18217*x267 + x18218*x18243 - x18219*x18243 - x18220*x18243 + x18221*x18243 + x18229 + x18233 - x18234 - x18237 + x18242 - x18244 + x18245)) + x69*(L*(x17298 - x17300 + x17302 - x17304 + x17306 + x17307 - x17309 - x17310) + x106*(-x17302 + x17304 - x17306 - x17307 + x17309 + x17310 - x17321 - x17323 + x17324 + x17327 + x17329 - x17330 + x17344) - x123*(x17333 - x17336 + x17338 - x17339 - x17340 + x17341 + x17345 + x17347) + x63*(x17311 - x17313 - x17314 + x17316 - x17318 + x17319 + x17331) - x68*(x17049*x17334 - x17051*x17334 + 5*x17304 - 5*x17306 + 5*x17310 - x17312*x17332 - x17333 + x17336 - x17338 + x17339 + x17340 - x17341)) + x69*(L*(x18723*x19313 - 9*x19314 - x19350 + x19370 - x19371 + x19374 + x19375 - x19377) + x106*(x16535*x1758 + x18723*x19384 + x19315 + x19350 + x19364 - x19370 + x19371 + x19373*x19384 - x19374 - x19375 - x19376*x19384 + x19377 - x19379 - 9*x19380 + x19382 - x19383) + x123*(q9_t_dt*x19392 - x11328*x19388 + x11331*x19388 + x17258*x19384 - x1746*x19400 + x1746*x19407 - x19308*x3611 + x19349 + x19372 - x19380 + x19385 - x19387 + x19390 + x19394 + x19395 - x19396 - x19398 - x19399 - x19402 - x19404 + x19405 + x19406 - x19409 - x19411 - x19413 + x19414 + x19415 + x19416) - x63*(x14*x16535*x1783 - x17055*x19381 + x1736*x19418 - x1736*x19419 + x1740*x19400 - x1740*x19407 - x1740*x19417 - x1783*x19418 + x1783*x19419 - x1785*x19352 - x1785*x19359 + x1785*x19361 - x1785*x19400 + x1785*x19407 + x1785*x19417 + x19308*x869 - x19351 + x19353 + x19356 - x19357 + x19360 - x19362 + x19364 - x19378*x869 + 2*x19379 - x19385 + x19387 - x19394 - x19395 + x19396 + x19398 + x19404 - x19405 + x19411 + x19413 - x19414 - x19415 + x19420) + x68*(-q10_i_dot*x19366 + q10_t_dt*x19392 + q9_i_dot_dt*x19378*x321 + x11328*x19421 - x11328*x19422 - x11331*x19421 + x11331*x19422 - x17049*x1794 + x17049*x19424 + x17051*x1794 - x17051*x19424 + x17055*x1736*x875 - x17055*x1793 + x1740*x19423 + x1783*x19367 - x1785*x19335 + x1788*x18248 + x1791*x19352 + x1791*x19359 - x1791*x19361 + x1791*x19400 - x1791*x19407 - x1791*x19417 - x1792*x19359 + x1792*x19361 - x1792*x19400 + x1792*x19407 - x19321*x19384 - 5*x19350 + 5*x19370 - 5*x19371 - x19378*x3611 + 3*x19379 - 3*x19382 + 3*x19383 - 2*x19385 - x19390 + x19399 + x19402 - x19406 + x19409 - x19416 + x19420)) + x69*(L*(-x18806*x19425 + 10*x19426 + x19428 - x19429 + x19431 + x19432 - x19433 - x19435) + x106*(x12643*x924 + 22*x17343*x19425 + x18787*x386 - x18788*x8523 + x18807 - 11*x19426 - x19428 + x19429 - x19431 - x19432 + x19433 + x19435 - x19436 + x19437 - x19440 - x19441 + x19443 - x19444 + x19447 - x19449 + x19451) - x123*(x17258*x19425 - x18783*x19458 + x18793*x19458 + x18832 - x18833*x908 + x18834*x908 - x19426 + x19427*x66 - 3*x19429 + 3*x19431 - 3*x19435 + 3*x19452 + x19453 - x19454 - x19455*x414 - x19457 + x19459 + x19461 - x19462 - x19463 - x19464*x908 - x19465 - x19466 + x19467 + x19468 + x19469 + x19470*x66 - x19472 - x19473 - x19474 + x19475 + x19476 + x19477) + x63*(p10_i*x18837 - x12643*x18839 - x17055*x19478 + x17144*x19478 + x18833*x956 - x18834*x956 + x18836 + x18838*x935 + x18840 - x18841*x935 - x18842 - x18843 + x18844 - x18845 + x18846 - x19427*x36 + 2*x19429 - 2*x19436 + x19440 - x19443 + x19444 - x19447 + x19449 - x19451 - 2*x19452 - x19453 + x19454 + x19455*x933 - x19459 - x19461 + x19462 + x19463 - x19464*x942 + x19464*x956 + x19466 - x19467 - x19470*x36 + x19473 + x19474 - x19475 - x19476 + x19479*x942 + x19480*x942) - x68*(-p10_i_dot*x18851 - p10_i_dot_dt*x18848 - x17049*x19483 + x17049*x19484 + x17051*x19483 - x17051*x19484 - x17055*x19460 + x18783*x19481 + x18787*x413 - x18793*x19481 - x18800*x956 + x18833*x19482 - x18834*x19482 + x18835 + x18837*x898 + x18846 + x18849*x19439 + x18850*x19482 + x18852*x935 - x19427*x267 + 5*x19429 - 5*x19431 + 5*x19435 - 3*x19436 + 3*x19437 - 3*x19441 + x19446*x942 - 5*x19452 + x19457 + x19464*x19482 - x19464*x952 + x19465 - x19468 - x19469 - x19470*x267 + x19472 - x19477 + x19480*x952)) + x69*(-x123*(x11339*x19 + x11340*x19 - x131*x24523 - x154*x24509 + x154*x24511 + x17103 + x17104 + x17114 + x17224 + x17225 + x17232 - x183*x24519 + x19606 + x22250 - x24495*x24506 - x24495*x5225 - x24498*x24506 - x24498*x5225 - x24503*x5220 - x24503*x5222 - x24505*x5220 - x24505*x5222 - x24507*x24508 + x24508*x24510 + x24512*x5261 + x24515*x5152 - x24515 - x24516*x5261 - x24517*x24518 - x24517*x24520 + x24518*x24528 - x24519*x5235 + x24520*x24528 + x24520*x24533 - 10*x24521 - x24524*x24525 - x24524*x24526 + x24527*x5261 + x24529*x5243 - x24531*x5261 + x24532*x5868 + x24534*x24537 + x24535*x24536 + x24578 + x24607) + x168*(x17097 + x19506 + x19576 + x22161 + x22220 + x24606 + x24620 + x24681) + x173*(x17048*x20 + x17065*x5152 - x17065*x5157 + x17197 + x17198 + x17200 - x17201 - x19493*x24480 - 3*x24459 + 3*x24461 + x24462 + x24463 - x24464 - x24465 - x24466*x24468 + x24466*x24469 - x24470 + x24471*x5394 + x24472*x24473 + x24473*x24494 - 3*x24475 + 3*x24477 + x24478 + x24483 - x24485 - x24487 - x24489 - x24490 + x24491*x5152 - x24491*x5157 + x24493 - x24497 + x24499 - x24502) + x5148*(x24449*x5152 - x24449*x5157 - x24449 - x24451*x5157 + x24451 + x24454*x5162 - 4.0/3.0*x24458) + x63*(x11430*x19 + x11431*x19 - x11433*x24656 - x129*x24509 + x129*x24511 - x17067*x24717 + x17120 + x17121 + x17129 + x17234 + x17235 + x17236 + x17239 + x17249 - x183*x24715 + x19632 + x22280 - x24495*x24692 - x24495*x5377 - x24498*x24692 - x24498*x5377 - x24513*x24708 + x24513*x24726 - x24517*x24713 - x24517*x24716 - 12*x24521 - x24526*x24718 + x24528*x24713 + x24528*x24716 + x24533*x24716 + x24536*x24728 + x24537*x24727 + x24607 - x24682*x5220 - x24683*x5221 - x24684 - x24685 - x24686 + x24687 + x24688 + x24689 - x24690*x5220 - x24691*x5221 - x24694 - x24697 - x24698 - x24699*x5868 + x24700*x5868 + x24701 + x24704 + x24706 + x24707*x5261 - x24711 - x24712*x5261 - x24715*x5235 - x24719 + x24720*x5261 + x24721*x5261 - x24722*x5261 - x24724 + x24725*x5868 + x24758)) + x69*(L*(x17349 - x17436 + x17437 + x17438) + x106*(x17424 + x17476 - x17494 - x17495 - x17496 + x17497 + x17498 + x17504) - x123*(x17474 - x17505 - x17506 + x17508 + x17511) - x123*(x17398 + x17467 + x17468 + x17469 + x17474 + x17478) + x168*(x17379 + x17449 + x17452 + x17457 + x17465) - x63*(x17411 - x17479 + x17480 + x17481 + x17482 + x17483 + x17488 + x17493) + x70*(x17354 + x17355 + x17439 + x17440 + x17441 - x17442 + x17446)) + x69*(L*(x19485 + x22134 + x22135 + x22136) + x106*(x19532 + x22163 - x22164 - x22165 - x22166 + x22167 + x22168 + x22169 + x22170 - x22171 - x22173 - x22175 - x22177 + x22178 + x22179 + x22180 + x22191) + x123*(x17230 + x19504 - x22139 + x22140 + x22143 + x22145 - x22147 - x22148 + x22149 + x22150 + x22158 + x22162) - x123*(x17227 + x19605 + x22187 - x22230 - x22231 - x22232 - x22233 - x22234 - x22236 + x22237 + x22238 + x22240 + x22241 + x22242 + x22243 + x22244 + x22249 + x22255) + x168*(x17204 + x17223 + x19573 + x22149 - x22193 - x22194 - x22195 - x22197 + x22198 + x22200 + x22202 + x22203 + x22215 + x22219 + x22227) - x63*(x17240 + x17246 + x19631 + x22158 + x22223 - x22257 - x22259 - x22261 - x22262 - x22263 - x22265 + x22266 + x22267 + x22268 + x22269 + x22270 + x22271 + x22272 + x22276 + x22278 + x22283) + x70*(x17079 + x17082 + x17196 + x17202 + x17219 + x22137 + x22138)) + x69*(L*(x19635 - x19636 + x19637 + x19638) + x106*(-x19491 + x19649 + x19662 - x19664 + x19665 + x19666 + x19667 + x19668 - x19669 - x19670 - x19672 - x19674 + x19675 + x19676 + x19681 + x19687 + x19691) - x123*(x19560 - x19644 - x19645 - x19647 + x19650 + x19651 + x19652 - x19653 - x19654 + x19656 + x19660 + x19661) + x123*(x19604 + x19681 - x19733 - x19735 - x19737 - x19739 - x19740 - x19741 + x19742 + x19743 + x19744 + x19745 + x19747 + x19748 + x19749 + x19755 + x19756 + x19757) - x168*(x19564 + x19598 - x19692 - x19693 - x19695 - x19697 + x19698 + x19700 + x19702 + x19703 + x19713 + x19718 + x19719 + x19724 + x19731) + x63*(x19500 + x19630 + x19635 + x19725 + x19758 - x19759 - x19760 - x19762 - x19764 - x19765 - x19766 + x19767 + x19768 + x19770 + x19771 + x19772 + x19774 + x19775 + x19779 + x19780 + x19784) + x70*(-x17024*x2727 - x19490 - x19639 - x19640 + x19641 + x19642 + x19643)) + x69*(L*(x19636 + x22279 + x22284 + x22285) - x106*(x19687 - x22182 + x22306 - x22307 + x22309 + x22310 + x22311 + x22312 - x22313 - x22314 - x22315 - x22316 + x22317 + x22318 + x22321 + x22324 + x22329) + x123*(x19660 + x22215 - x22289 - x22291 - x22293 + x22295 + x22296 + x22298 - x22300 - x22301 + x22303 + x22305) - x123*(x19756 + x22249 + x22324 - x22363 - x22364 - x22366 - x22367 - x22368 - x22370 + x22371 + x22372 + x22374 + x22375 + x22376 + x22377 + x22378 + x22382 + x22384) + x168*(x19724 + x22219 + x22225 + x22244 - x22330 - x22332 - x22333 - x22334 + x22335 + x22337 + x22339 + x22340 + x22352 + x22353 + x22356 + x22361) - x63*(x19780 + x22157 + x22278 + x22357 + x22385 - x22386 - x22387 - x22388 - x22389 - x22390 - x22392 + x22393 + x22394 + x22395 + x22396 + x22397 + x22398 + x22399 + x22400 + x22405 + x22408 + x22411) + x70*(x19639 + x19640 + x22181 + x22206 + x22286 + x22287 + x22288)) + x69*(L*(20*x19786 - x19788 + x19789 + x19790) - x106*(-23*x19786 + 23*x19805 - x19843 - x19844 - x19845 + x19846 + x19847 + x19848 + x19850 - x19851 - x19852 - x19854 - x19856 + x19857 + x19858 + x19859 + x19868 + x19873) + x123*(-60*x19786 - x19801 - x19803 + 60*x19805 + x19808 + x19809 - x19810 - x19811 + x19812 + x19818 + x19827 + x19833 + x19840 + x19842) + x123*(x19818 + x19871 + x19893 - x19918 - x19919 - x19921 - x19923 - x19924 - x19925 + x19926 + x19927 + x19929 + x19930 + x19931 + x19932 + x19935 + x19939 + x19943) - x168*(x19820 + x19822 + x19825 + x19833 - x19875 - x19876 + x19877 + x19879 - x19881 - x19882 + x19884 + x19885 + x19887 + x19889 + x19906 + x19909 + x19916) + x63*(-x19944 - x19945 - x19946 + x19947 - x19949 - x19950 + x19951 + x19953 - x19955 - x19956 - x19957 - x19958 + x19960 + x19961 + x19962 + x19963 + x19964 + x19965 + x19966 + x19968 + x19970 + x19975) + x70*(-x19785 - x19791 - x19792 + x19794 + x19795 + x19796 + x19799)) + x69*(L*(x19788 - x22413 + x22415 + x22417) + x106*(x19868 - x22460 - x22461 - x22462 - x22463 + x22464 + x22465 + x22466 + x22467 + x22468 - x22469 - x22470 - x22472 - x22474 + x22475 + x22476 + x22477 + x22487) - x123*(x19840 - x22425 - x22426 - x22427 + x22429 + x22431 + x22433 - x22434 - x22435 + x22436 + x22442 + x22449 + x22452 + x22459) - x123*(x19939 + x22442 + x22483 + x22501 - x22520 - x22521 - x22522 - x22523 - x22524 - x22526 + x22527 + x22528 + x22530 + x22532 + x22533 + x22535 + x22537 + x22543) + x168*(x19909 + x22444 + x22446 + x22447 + x22452 - x22488 - x22489 + x22490 + x22492 - x22493 - x22494 + x22495 + x22496 + x22498 + x22499 + x22512 + x22519) - x63*(x19970 - x22544 - x22545 - x22546 - x22547 - x22548 + x22549 + x22550 - x22551 - x22552 - x22553 - x22555 + x22556 + x22557 + x22558 + x22559 + x22560 + x22561 + x22562 + x22563 + x22566 + x22571) + x70*(x19791 + x19792 + x22418 + x22419 + x22420 - x22421 + x22424)) + x69*(L*(x19977 - x19979 + x19980 + x19981) + x106*(-x17352*x286 + x17418 + x19976*x286 + x20028 - x20030 + x20031 + x20032 + x20033 + x20034 - x20035 - x20036 - x20038 - x20040 + x20041 + x20042 + x20044 + x20052 + x20059) - x123*(-x19988 + x19990 + x19992 + x19993 + x19994 + x19995 - x19996 - x19997 + x20003 + x20006 + x20011 + x20024 + x20026 + x20027) - x123*(x17366 + x17393 + x20057 - x20061 - x20063 - x20065 - x20067 - x20068 - x20069 + x20070 + x20071 + x20072 + x20073 + x20074 + x20076 + x20077 + x20080 + x20083) + x168*(x17380 + x17435 + x20024 - x20084 - x20085 - x20087 - x20089 + x20090 + x20091 + x20092 + x20093 + x20099 + x20101 + x20103) - x63*(x17371 + x17403 + x17404 + x17413 + x19977 - x20104 - x20105 - x20106 - x20108 - x20109 - x20110 + x20111 + x20112 + x20113 + x20115 + x20117 + x20118 + x20119 + x20123 + x20124 + x20126) + x70*(x17024*x2084 - x19976 - x19982 - x19983 + x19984 + x19985 + x19987)) + x69*(L*(x19979 + x22574 + x22575 + x22579) - x106*(x17500 + x20052 - x22621 - x22622 + x22623 + x22624 + x22625 + x22626 + x22627 - x22628 - x22629 - x22631 - x22633 + x22634 + x22635 + x22636 + x22639 + x22646) + x123*(x20026 - x22588 + x22589 + x22592 + x22595 + x22597 + x22598 - x22599 - x22600 + x22606 + x22608 + x22611 + x22618 + x22620) + x123*(x17471 + x17510 + x20080 + x22644 - x22647 - x22648 - x22649 - x22650 - x22651 - x22652 + x22653 + x22654 + x22655 + x22657 + x22658 + x22659 + x22660 + x22665) - x168*(x17448 + x17511 + x20101 + x22618 - x22666 - x22667 - x22668 - x22669 + x22670 + x22671 + x22672 + x22673 + x22678 + x22680) + x63*(x17457 + x17488 + x17489 + x17491 + x20124 + x22573 - x22681 - x22682 - x22683 - x22684 - x22685 - x22686 + x22687 + x22689 + x22690 + x22691 + x22692 + x22693 + x22694 + x22698 + x22701) + x70*(x19982 + x19983 + x22580 + x22581 + x22582 - x22584 + x22587)) + x69*(L*(x20128 - x20130 + x20131 + x20132) + x106*(-x19976*x4046 + x20028 + x20127*x4046 + x20176 - x20178 + x20179 + x20180 + x20181 + x20182 - x20183 - x20184 - x20186 - x20187 + x20188 + x20189 + x20191 + x20198 + x20202) - x123*(-x19976*x4023 + x20127*x4023 + x20141 + x20142 + x20143 + x20144 - x20145 - x20146 + x20152 + x20155 + x20161 + x20171 + x20173 + x20174) - x123*(x20001 + x20077 + x20200 - x20204 - x20206 - x20208 - x20210 - x20211 - x20212 + x20214 + x20215 + x20217 + x20219 + x20220 + x20221 + x20222 + x20225 + x20227) + x168*(x20099 + x20171 - x20228 - x20229 - x20231 - x20233 + x20234 + x20235 + x20237 + x20238 + x20239 + x20245 + x20247 + x20249) - x63*(-x19977 + x20011 + x20123 + x20250 - x20251 - x20252 - x20254 - x20256 - x20257 - x20258 + x20260 + x20262 + x20264 + x20265 + x20266 + x20267 + x20268 + x20272 + x20274 + x20275) + x70*(-x20127 - x20133 - x20134 + x20135 + x20136 + x20137 + x20140)) + x69*(L*(x20130 - x22702 + x22703 + x22705) - x106*(x20198 + x22639 - x22745 - x22746 + x22747 + x22748 + x22749 + x22750 + x22751 - x22752 - x22753 - x22754 - x22756 + x22757 + x22758 + x22760 + x22763 + x22769) + x123*(x20173 - x22713 + x22715 + x22716 + x22718 + x22720 + x22721 - x22722 - x22724 + x22730 + x22732 + x22735 + x22742 + x22744) + x123*(x20225 + x22660 + x22677 + x22766 - x22770 - x22771 - x22773 - x22774 - x22775 - x22776 + x22777 + x22778 + x22779 + x22781 + x22782 + x22783 + x22784 + x22788) - x168*(x20247 + x22678 + x22742 - x22789 - x22790 - x22791 - x22792 + x22793 + x22794 + x22795 + x22796 + x22797 + x22802 + x22806) + x63*(x20274 + x22574 + x22611 + x22698 - x22807 - x22808 - x22809 - x22810 - x22811 - x22812 + x22813 + x22814 + x22815 + x22817 + x22818 + x22819 + x22820 + x22824 + x22827 + x22831) + x70*(x20133 + x20134 + x22706 + x22707 + x22708 - x22709 + x22712)) + x69*(L*(8*x20277 - x20279 + x20280 + x20281) + x106*(x20176 + 11*x20277 - 11*x20289 + x20328 - x20330 + x20331 + x20332 + x20333 + x20334 - x20335 - x20336 - x20338 - x20340 + x20341 + x20342 + x20344 + x20353 + x20358) - x123*(24*x20277 - 24*x20289 + x20290 + x20292 + x20293 + x20294 - x20295 - x20296 + x20302 + x20305 + x20310 + x20323 + x20326 + x20327) - x123*(x20150 + x20222 + x20356 - x20360 - x20362 - x20363 - x20365 - x20366 - x20367 + x20368 + x20370 + x20372 + x20373 + x20374 + x20375 + x20376 + x20379 + x20381) + x168*(x20245 + x20323 - x20382 - x20383 - x20385 - x20386 + x20387 + x20388 + x20389 + x20390 + x20391 + x20397 + x20399 + x20401) - x63*(x20161 - x20250 + x20272 + x20402 - x20403 - x20404 - x20405 - x20407 - x20408 - x20409 + x20411 + x20412 + x20413 + x20415 + x20417 + x20418 + x20419 + x20423 + x20425 + x20426) + x70*(-x20276 - x20282 - x20283 + x20284 + x20285 + x20286 + x20288)) + x69*(L*(x20279 - x22833 + x22834 + x22836) - x106*(x20353 + x22763 - x22877 - x22878 + x22879 + x22880 + x22881 + x22882 + x22883 - x22884 - x22885 - x22886 - x22887 + x22888 + x22889 + x22890 + x22893 + x22899) + x123*(x20326 - x22845 + x22847 + x22849 + x22850 + x22852 + x22853 - x22854 - x22856 + x22862 + x22864 + x22867 + x22874 + x22876) + x123*(x20379 + x22784 + x22801 + x22897 - x22900 - x22901 - x22903 - x22904 - x22905 - x22906 + x22907 + x22908 + x22909 + x22911 + x22912 + x22913 + x22914 + x22919) - x168*(x20399 + x22802 + x22874 - x22920 - x22921 - x22922 - x22923 + x22924 + x22925 + x22926 + x22927 + x22928 + x22933 + x22935) + x63*(x20425 + x22735 + x22827 - x22936 - x22937 - x22938 - x22939 - x22940 - x22941 + x22942 + x22943 + x22944 + x22945 + x22946 + x22947 + x22948 + x22952 + x22953 + x22956 + x22959) + x70*(x20282 + x20283 + x22837 + x22838 + x22839 - x22841 + x22844)) + x69*(L*(x20429 - x22961 + x22962 + x22964) - x106*(x20500 + x22893 - x23004 - x23005 + x23006 + x23007 + x23008 + x23009 + x23010 - x23011 - x23012 - x23013 - x23014 + x23015 + x23016 + x23017 + x23020 + x23026) + x123*(x20475 - x22972 + x22974 + x22976 + x22977 + x22979 + x22980 - x22981 - x22983 + x22989 + x22991 + x22994 + x23001 + x23003) + x123*(x20524 + x22914 + x22932 + x23023 - x23027 - x23028 - x23030 - x23031 - x23032 - x23033 + x23034 + x23035 + x23036 + x23038 + x23039 + x23040 + x23041 + x23046) - x168*(x20546 + x22933 + x23001 - x23047 - x23048 - x23049 - x23050 + x23051 + x23052 + x23053 + x23054 + x23055 + x23060 + x23063) + x63*(x20571 + x22867 + x22956 - x23064 - x23065 - x23066 - x23067 - x23068 - x23069 + x23070 + x23071 + x23072 + x23073 + x23075 + x23076 + x23077 + x23081 + x23082 + x23085 + x23088) + x70*(x20432 + x20433 + x22960 + x22965 + x22966 - x22968 + x22971)) + x69*(L*(x20574 - x20576 + x20577 + x20578) + x106*(-x20427*x8342 + x20478 + x20573*x8342 + x20627 - x20629 + x20630 + x20631 + x20632 + x20633 - x20634 - x20635 - x20637 - x20639 + x20640 + x20641 + x20643 + x20650 + x20655) - x123*(-36*x20444 + x20587 + x20588 + 36*x20589 + x20590 + x20591 - x20592 - x20593 + x20599 + x20602 + x20608 + x20622 + x20625 + x20626) - x123*(x20452 + x20522 + x20653 - x20657 - x20659 - x20660 - x20662 - x20663 - x20664 + x20665 + x20667 + x20668 + x20669 + x20670 + x20671 + x20672 + x20676 + x20678) + x168*(x20544 + x20622 - x20679 - x20680 - x20682 - x20684 + x20685 + x20686 + x20687 + x20688 + x20689 + x20695 + x20697 + x20699) - x63*(x20463 - x20550 + x20569 + x20700 - x20701 - x20702 - x20703 - x20705 - x20706 - x20707 + x20709 + x20710 + x20711 + x20712 + x20714 + x20715 + x20716 + x20720 + x20722 + x20723) + x70*(-x20573 - x20579 - x20580 + x20582 + x20583 + x20584 + x20586)) + x69*(L*(x20576 - x23090 + x23091 + x23093) - x106*(x20650 + x23020 - x23134 - x23135 + x23136 + x23137 + x23138 + x23139 + x23140 - x23141 - x23142 - x23143 - x23144 + x23145 + x23146 + x23147 + x23150 + x23156) + x123*(x20625 - x23102 + x23104 + x23106 + x23107 + x23109 + x23110 - x23111 - x23113 + x23119 + x23121 + x23124 + x23131 + x23133) + x123*(x20676 + x23041 + x23059 + x23154 - x23157 - x23158 - x23160 - x23161 - x23162 - x23163 + x23164 + x23165 + x23166 + x23168 + x23169 + x23170 + x23171 + x23176) - x168*(x20697 + x23060 + x23131 - x23177 - x23178 - x23179 - x23180 + x23181 + x23182 + x23183 + x23184 + x23185 + x23190 + x23193) + x63*(x20722 + x22994 + x23085 - x23194 - x23195 - x23196 - x23197 - x23198 - x23199 + x23200 + x23201 + x23202 + x23203 + x23204 + x23205 + x23206 + x23210 + x23211 + x23214 + x23217) + x70*(x20579 + x20580 + x23094 + x23095 + x23096 - x23098 + x23101)) + x69*(L*(14*x20725 - x20727 + x20728 + x20729) + x106*(-17*x20589 + x20627 + 17*x20725 + x20776 - x20778 + x20779 + x20780 + x20781 + x20782 - x20783 - x20784 - x20785 - x20787 + x20788 + x20789 + x20791 + x20798 + x20802) - x123*(-42*x20589 + 42*x20725 + x20739 + x20741 + x20742 + x20743 - x20744 - x20745 + x20751 + x20754 + x20760 + x20770 + x20773 + x20774) - x123*(x20597 + x20672 + x20800 - x20804 - x20806 - x20807 - x20808 - x20809 - x20810 + x20812 + x20813 + x20815 + x20817 + x20818 + x20819 + x20820 + x20823 + x20825) + x168*(x20695 + x20770 - x20826 - x20827 - x20829 - x20831 + x20832 + x20833 + x20834 + x20836 + x20837 + x20843 + x20845 + x20847) - x63*(x20608 - x20700 + x20720 + x20848 - x20849 - x20850 - x20851 - x20853 - x20854 - x20855 + x20856 + x20858 + x20859 + x20860 + x20862 + x20863 + x20864 + x20868 + x20870 + x20871) + x70*(-x20724 - x20730 - x20731 + x20733 + x20734 + x20735 + x20738)) + x69*(L*(x20727 - x23219 + x23220 + x23222) - x106*(x20798 + x23150 - x23262 - x23263 + x23264 + x23265 + x23266 + x23267 + x23268 - x23269 - x23270 - x23272 - x23273 + x23274 + x23275 + x23276 + x23279 + x23286) + x123*(x20773 - x23230 + x23232 + x23234 + x23235 + x23237 + x23238 - x23239 - x23241 + x23247 + x23249 + x23252 + x23259 + x23261) + x123*(x20823 + x23171 + x23189 + x23282 - x23287 - x23288 - x23289 - x23290 - x23291 - x23292 + x23293 + x23294 + x23295 + x23297 + x23298 + x23299 + x23300 + x23304) - x168*(x20845 + x23190 + x23259 - x23305 - x23306 - x23307 - x23308 + x23309 + x23310 + x23311 + x23312 + x23313 + x23318 + x23321) + x63*(x20870 + x23124 + x23214 - x23322 - x23323 - x23324 - x23325 - x23326 - x23327 + x23328 + x23329 + x23330 + x23331 + x23333 + x23334 + x23335 + x23339 + x23340 + x23343 + x23346) + x70*(x20730 + x20731 + x23218 + x23223 + x23224 - x23226 + x23229)) + x69*(L*(x20874 - x23348 + x23349 + x23351) - x106*(x20948 + x23279 - x23392 - x23393 + x23394 + x23395 + x23396 + x23397 + x23398 - x23399 - x23400 - x23402 - x23403 + x23404 + x23405 + x23406 + x23409 + x23417) + x123*(x20921 - x23360 + x23362 + x23364 + x23365 + x23367 + x23368 - x23369 - x23371 + x23377 + x23379 + x23382 + x23389 + x23391) + x123*(x20974 + x23300 + x23317 + x23413 - x23418 - x23419 - x23420 - x23421 - x23422 - x23423 + x23424 + x23425 + x23426 + x23428 + x23429 + x23430 + x23431 + x23435) - x168*(x20995 + x23318 + x23389 - x23436 - x23437 - x23438 - x23439 + x23440 + x23441 + x23442 + x23443 + x23444 + x23449 + x23452) + x63*(x21021 + x23252 + x23343 - x23453 - x23454 - x23455 - x23456 - x23457 - x23458 + x23459 + x23460 + x23461 + x23462 + x23463 + x23464 + x23465 + x23469 + x23470 + x23473 + x23476) + x70*(x20877 + x20878 + x23352 + x23353 + x23354 - x23356 + x23359)) + x69*(L*(x21023 - x23477 + x23479 + x23480) - x106*(x21065 + x22478 + x23409 - x23498 - x23499 + x23500 + x23501 + x23502 + x23503 + x23504 - x23505 - x23506 - x23509 - x23511 + x23512 + x23513 + x23514 + x23521) + x123*(x21043 + x22512 - x23484 + x23486 + x23488 + x23489 + x23490 + x23491 - x23492 - x23493 + x23495 + x23496 + x23497) + x123*(x21087 + x23431 + x23448 + x23496 + x23518 - x23522 - x23523 - x23525 - x23526 - x23527 - x23528 + x23529 + x23530 + x23531 + x23532 + x23533 + x23534 + x23539) - x168*(x21101 + x22511 + x22517 + x22563 + x23449 - x23540 - x23541 - x23542 - x23543 + x23544 + x23545 + x23546 + x23547 + x23548 + x23551) + x63*(x21123 + x22566 + x22568 + x22569 + x23382 + x23473 - x23552 - x23553 - x23555 - x23556 - x23557 - x23558 + x23559 + x23560 + x23561 + x23562 + x23563 + x23564 + x23565 + x23566 + x23569) + x70*(x21026 + x21027 + x22507 + x22525 + x23481 - x23482 + x23483)) + x69*(L*(-x21126 - x21127 + x21128 + x21129) + x106*(x1858*x21137 + x19662 + x21149 - x21150 - x21152 + x21153 + x21154 + x21155 + x21156 - x21157 - x21158 - x21159 - x21161 + x21162 + x21163 + x21168 + x21173 + x21177) - x123*(x19713 - x21134 - x21135 - x21136 + x21137*x4023 + x21138 + x21139 - x21141 - x21142 + x21144 + x21147 + x21148) + x123*(x19755 + x21168 - x21216 - x21218 - x21219 - x21221 - x21222 - x21224 + x21225 + x21226 + x21228 + x21229 + x21230 + x21231 + x21232 + x21238 + x21240 + x21242) - x168*(x19718 + x19749 - x21178 - x21179 - x21180 - x21182 + x21183 + x21185 + x21187 + x21189 + x21198 + x21202 + x21203 + x21208 + x21214) + x63*(-x19758 + x19779 + x21209 + x21243 - x21244 - x21245 - x21246 - x21247 - x21248 - x21249 + x21251 + x21252 + x21253 + x21254 + x21255 + x21256 + x21257 + x21261 + x21262 + x21264) + x70*(-x19648 - x19721 + x19728 - x21130 - x21131 + x21132 + x21133)) + x69*(L*(x21127 + x23570 + x23571 + x23572) - x106*(x21173 + x22321 - x23593 - x23594 + x23596 + x23597 + x23598 + x23599 + x23600 - x23601 - x23602 - x23603 - x23604 + x23605 + x23606 + x23611 + x23615 + x23619) + x123*(x21147 + x22352 - x23576 - x23577 - x23578 + x23580 + x23582 + x23584 - x23586 - x23587 + x23589 + x23592) - x123*(x21240 + x22382 + x23615 - x23652 - x23653 - x23655 - x23656 - x23657 - x23658 + x23659 + x23660 + x23662 + x23663 + x23664 + x23665 + x23666 + x23670 + x23672) + x168*(x21208 + x22356 + x22359 + x22378 - x23620 - x23621 - x23622 - x23623 + x23624 + x23626 + x23628 + x23629 + x23641 + x23642 + x23645 + x23650) - x63*(x21262 + x22408 + x23646 - x23673 - x23674 - x23675 - x23676 - x23677 - x23679 + x23680 + x23681 + x23682 + x23683 + x23684 + x23685 + x23686 + x23690 + x23691 + x23693 + x23697) + x70*(x19721 + x21130 + x22297 + x22343 + x23573 + x23574 + x23575)) + x69*(L*(-8*x21265 - x21266 + x21267 + x21268) + x106*(-x154*x21137 + x154*x21277 + x21149 + x21292 - x21294 + x21295 + x21296 + x21297 + x21298 - x21299 - x21300 - x21302 - x21304 + x21305 + x21306 + x21312 + x21318 + x21321) - x123*(x21198 - 24*x21265 - x21275 - x21276 + 24*x21278 + x21279 + x21280 - x21282 - x21283 + x21285 + x21289 + x21290) + x123*(x21238 + x21312 - x21365 - x21367 - x21369 - x21371 - x21372 - x21373 + x21374 + x21375 + x21377 + x21378 + x21380 + x21381 + x21382 + x21388 + x21389 + x21390) - x168*(x21202 + x21232 - x21322 - x21323 - x21325 - x21327 + x21328 + x21331 + x21332 + x21333 + x21344 + x21349 + x21350 + x21356 + x21363) + x63*(-x21243 + x21261 + x21357 + x21391 - x21392 - x21393 - x21395 - x21397 - x21398 - x21399 + x21400 + x21401 + x21403 + x21404 + x21405 + x21406 + x21407 + x21411 + x21412 + x21414) + x70*(-x21137 - x21269 - x21270 - x21271 + x21272 + x21273 + x21274)) + x69*(L*(x21266 + x23698 + x23699 + x23700) - x106*(x21318 + x23611 - x23721 - x23722 + x23724 + x23725 + x23726 + x23727 + x23728 - x23729 - x23730 - x23732 - x23733 + x23734 + x23735 + x23739 + x23742 + x23746) + x123*(x21289 + x23641 - x23703 - x23705 - x23706 + x23708 + x23710 + x23712 - x23714 - x23715 + x23717 + x23720) - x123*(x21389 + x23670 + x23742 - x23779 - x23780 - x23781 - x23782 - x23783 - x23784 + x23785 + x23786 + x23788 + x23789 + x23790 + x23791 + x23792 + x23796 + x23798) + x168*(x21356 + x23645 + x23648 + x23666 - x23747 - x23748 - x23749 - x23750 + x23751 + x23753 + x23755 + x23756 + x23768 + x23769 + x23772 + x23777) - x63*(x21412 + x23693 + x23773 - x23799 - x23800 - x23801 - x23802 - x23803 - x23805 + x23806 + x23807 + x23808 + x23809 + x23810 + x23811 + x23812 + x23813 + x23818 + x23821 + x23825) + x70*(x21269 + x21270 + x23583 + x23632 + x23696 + x23701 + x23702)) + x69*(L*(-10*x21278 - x21415 + x21416 + x21417) + x106*(-x21277*x286 + x21292 + x21425*x286 + x21439 - x21441 + x21442 + x21443 + x21444 + x21445 - x21446 - x21447 - x21449 - x21451 + x21452 + x21453 + x21458 + x21465 + x21468) - x123*(-30*x21278 + x21344 - x21422 - x21424 + 30*x21426 + x21427 + x21428 - x21430 - x21431 + x21433 + x21436 + x21437) + x123*(x21388 + x21458 - x21510 - x21512 - x21514 - x21516 - x21517 - x21518 + x21520 + x21521 + x21523 + x21524 + x21526 + x21527 + x21528 + x21534 + x21536 + x21537) - x168*(x21349 + x21382 - x21469 - x21470 - x21472 - x21474 + x21476 + x21478 + x21480 + x21482 + x21491 + x21495 + x21496 + x21502 + x21508) + x63*(-x21391 + x21411 + x21503 + x21538 - x21539 - x21540 - x21542 - x21543 - x21544 - x21545 + x21547 + x21548 + x21549 + x21550 + x21552 + x21553 + x21554 + x21558 + x21559 + x21561) + x70*(-x21277 - x21353 + x21360 - x21418 - x21419 + x21420 + x21421)) + x69*(L*(x21415 + x23826 + x23827 + x23828) - x106*(x21465 + x23739 - x23848 - x23849 + x23851 + x23852 + x23853 + x23854 + x23855 - x23856 - x23857 - x23859 - x23860 + x23861 + x23862 + x23866 + x23870 + x23874) + x123*(x21436 + x23768 - x23831 - x23832 - x23833 + x23835 + x23837 + x23839 - x23841 - x23842 + x23844 + x23847) - x123*(x21536 + x23796 + x23870 - x23907 - x23908 - x23909 - x23910 - x23911 - x23913 + x23914 + x23915 + x23917 + x23918 + x23919 + x23920 + x23921 + x23925 + x23927) + x168*(x21502 + x23772 + x23775 + x23792 - x23875 - x23876 - x23877 - x23878 + x23879 + x23881 + x23883 + x23884 + x23896 + x23897 + x23900 + x23905) - x63*(x21559 + x23821 + x23901 - x23928 - x23929 - x23930 - x23931 - x23932 - x23934 + x23935 + x23936 + x23937 + x23938 + x23939 + x23940 + x23941 + x23946 + x23947 + x23950 + x23953) + x70*(x21353 + x21418 + x23711 + x23759 + x23824 + x23829 + x23830)) + x69*(L*(-x21562 - x21563 + x21564 + x21565) + x106*(-x21425*x4046 + x21439 + x21575*x4046 + x21590 - x21592 + x21593 + x21594 + x21595 + x21596 - x21597 - x21598 - x21600 - x21602 + x21603 + x21604 + x21609 + x21615 + x21620) - x123*(-36*x21426 + x21491 - x21572 - x21574 + 36*x21576 + x21577 + x21578 - x21580 - x21581 + x21583 + x21587 + x21588) + x123*(x21534 + x21609 - x21663 - x21665 - x21667 - x21669 - x21670 - x21671 + x21672 + x21673 + x21674 + x21675 + x21677 + x21678 + x21679 + x21685 + x21686 + x21687) - x168*(x21495 + x21528 - x21621 - x21622 - x21624 - x21626 + x21627 + x21629 + x21630 + x21631 + x21642 + x21647 + x21648 + x21654 + x21661) + x63*(-x21538 + x21558 + x21655 + x21688 - x21689 - x21690 - x21692 - x21694 - x21695 - x21696 + x21697 + x21698 + x21699 + x21700 + x21702 + x21703 + x21704 + x21708 + x21709 + x21711) + x70*(-x21425 - x21566 - x21567 - x21568 + x21569 + x21570 + x21571)) + x69*(L*(x21563 + x23954 + x23955 + x23956) - x106*(x21615 + x23866 - x23977 - x23978 + x23980 + x23981 + x23982 + x23983 + x23984 - x23985 - x23986 - x23988 - x23989 + x23990 + x23991 + x23994 + x23997 + x24001) + x123*(x21587 + x23896 - x23959 - x23960 - x23962 + x23964 + x23966 + x23968 - x23970 - x23971 + x23973 + x23976) - x123*(x21686 + x23925 + x23997 - x24034 - x24035 - x24036 - x24037 - x24038 - x24040 + x24041 + x24042 + x24044 + x24046 + x24047 + x24048 + x24049 + x24053 + x24055) + x168*(x21654 + x23900 + x23903 + x23921 - x24002 - x24003 - x24004 - x24005 + x24006 + x24008 + x24010 + x24011 + x24023 + x24024 + x24027 + x24032) - x63*(x21709 + x23950 + x24028 - x24056 - x24057 - x24058 - x24059 - x24060 - x24062 + x24063 + x24064 + x24065 + x24066 + x24067 + x24068 + x24069 + x24074 + x24075 + x24078 + x24081) + x70*(x21566 + x21567 + x23838 + x23887 + x23912 + x23957 + x23958)) + x69*(L*(-14*x21576 - x21712 + x21713 + x21714) + x106*(-11*x21576 + x21590 + 11*x21723 + x21736 - x21738 + x21739 + x21740 + x21741 + x21742 - x21743 - x21744 - x21746 - x21748 + x21749 + x21750 + x21755 + x21761 + x21765) - x123*(-42*x21576 + x21642 - x21719 - x21721 + 42*x21723 + x21724 + x21725 - x21727 - x21728 + x21730 + x21733 + x21734) + x123*(x21685 + x21755 - x21806 - x21808 - x21809 - x21810 - x21811 - x21812 + x21813 + x21814 + x21816 + x21817 + x21818 + x21819 + x21820 + x21826 + x21828 + x21829) - x168*(x21647 + x21679 - x21766 - x21767 - x21769 - x21770 + x21772 + x21774 + x21776 + x21778 + x21787 + x21791 + x21792 + x21798 + x21804) + x63*(-x21688 + x21708 + x21799 + x21830 - x21831 - x21832 - x21834 - x21835 - x21836 - x21837 + x21839 + x21840 + x21841 + x21842 + x21843 + x21845 + x21846 + x21850 + x21851 + x21853) + x70*(-x21575 - x21651 + x21658 - x21715 - x21716 + x21717 + x21718)) + x69*(L*(x21712 + x24082 + x24083 + x24084) - x106*(x21761 + x23994 - x24104 - x24105 + x24107 + x24108 + x24109 + x24110 + x24111 - x24112 - x24113 - x24115 - x24116 + x24117 + x24118 + x24121 + x24125 + x24129) + x123*(x21733 + x24023 - x24087 - x24088 - x24089 + x24091 + x24093 + x24095 - x24097 - x24098 + x24100 + x24103) - x123*(x21828 + x24053 + x24125 - x24162 - x24163 - x24164 - x24165 - x24166 - x24168 + x24169 + x24170 + x24172 + x24174 + x24175 + x24176 + x24177 + x24181 + x24183) + x168*(x21798 + x24027 + x24030 + x24049 - x24130 - x24131 - x24132 - x24133 + x24134 + x24136 + x24138 + x24139 + x24151 + x24152 + x24155 + x24160) - x63*(x21851 + x24078 + x24156 - x24184 - x24185 - x24186 - x24187 - x24188 - x24190 + x24191 + x24192 + x24193 + x24194 + x24195 + x24196 + x24197 + x24202 + x24203 + x24206 + x24209) + x70*(x21651 + x21715 + x23967 + x24014 + x24039 + x24085 + x24086)) + x69*(L*(x21854 + x24210 + x24211 + x24212) - x106*(x21905 + x24121 - x24234 - x24235 - x24236 + x24238 + x24239 + x24240 + x24241 + x24242 - x24243 - x24244 - x24246 - x24247 + x24248 + x24249 + x24252 + x24258) + x123*(x21877 + x24151 - x24215 - x24217 - x24219 + x24221 + x24223 + x24225 - x24227 - x24228 + x24230 + x24233) - x123*(x21978 + x24181 + x24252 + x24273 + x24292 - x24294 - x24295 - x24296 - x24297 - x24298 - x24300 + x24301 + x24302 + x24304 + x24306 + x24307 + x24308 + x24310 + x24311) + x168*(x21950 + x24155 + x24158 + x24177 - x24259 - x24260 + x24262 - x24263 - x24264 + x24265 + x24266 + x24267 + x24268 + x24273 + x24274 + x24282 + x24288 + x24290) - x63*(x22005 + x24206 - x24312 - x24313 - x24314 + x24315 - x24316 - x24317 - x24318 - x24319 + x24320 + x24321 + x24322 + x24323 + x24324 + x24325 + x24326 + x24329 + x24332 + x24333 + x24338) + x70*(x21857 + x21858 + x24094 + x24142 + x24167 + x24213 + x24214)) + x69*(L*(x22010 + x24339 + x24340 + x24341) + x106*(x22062 + x24253 - x24362 - x24363 + x24364 + x24365 + x24367 + x24368 + x24369 + x24370 - x24371 - x24372 - x24374 - x24376 + x24377 + x24378 + x24382 + x24387) - x123*(x22033 + x24310 + x24328 - x24345 + x24347 + x24349 + x24351 + x24352 + x24353 - x24354 - x24355 + x24356 + x24357 + x24360) + x123*(x22092 + x24291 + x24382 - x24388 - x24390 + x24391 - x24392 - x24394 - x24395 - x24396 + x24397 + x24398 + x24400 + x24401 + x24402 + x24403 + x24407 + x24411) - x168*(x22112 + x24275 + x24279 + x24281 + x24288 + x24329 + x24407 - x24412 - x24414 + x24415 - x24416 - x24417 - x24418 - x24419 + x24420 + x24421 + x24422 + x24423 + x24426) + x63*(x22130 + x24332 + x24335 + x24336 + x24404 - x24427 - x24429 - x24430 + x24431 + x24432 - x24433 - x24434 - x24436 - x24437 + x24438 + x24439 + x24440 + x24441 + x24442 + x24443 + x24444 + x24448) + x70*(x21931 + x22013 + x24224 + x24277 + x24299 + x24342 + x24343)) + x69*(L*(p1_b_dt*x17258 - x17349 + x17350 + x17351) - x106*(-x154*x17352 + x17399 - x17418 - x17420 + x17421 + x17422 + x17424 + x17427) + x123*(x17396 - x17428 - x17430 + x17435) + x123*(x17388 + x17389 + x17390 + x17396 + x17398 + x17401) - x168*(x17362 + x17371 + x17374 + x17379 + x17386) + x63*(x17403 - x17404 + x17405 + x17407 + x17408 + x17409 + x17411 + x17416) + x70*(-x17352 + x17353 - x17354 - x17355 + x17356 + x17357 + x17360)) + x69*(L*(-q1_b_dt*x17258 - x19485 + x19486 + x19487) - x106*(-x17115 + x19491 - x19508 - x19510 + x19511 + x19512 + x19513 + x19514 - x19515 - x19516 - x19518 - x19520 + x19521 + x19522 + x19524 + x19532 + x19539) - x123*(x17106 + x17112 + x17123 - x19489 + x19492 + x19495 + x19497 - x19498 - x19499 + x19501 + x19502 + x19504 + x19507) + x123*(x17110 + x19537 - x19582 - x19583 - x19585 - x19587 - x19589 - x19590 + x19591 + x19592 + x19594 + x19595 + x19596 + x19597 + x19598 + x19604 + x19605 + x19609) - x168*(x17090 + x17096 + x17123 - x19541 - x19542 - x19543 - x19544 + x19545 + x19547 + x19549 + x19550 + x19560 + x19564 + x19573 + x19580) + x63*(x17117 + x17127 + x19501 + x19574 + x19610 - x19611 - x19612 - x19614 - x19616 - x19617 - x19618 + x19620 + x19621 + x19622 + x19623 + x19624 + x19625 + x19626 + x19630 + x19631 + x19634) + x70*(-x17064 - x17067 - x17079 - x17082 + x17098 + x17100 + x19488)) + x69*(L*(x19804*x4023 - x21023 + x21024 + x21025) + x106*(21*x19805 + x19844 + x20923 - 21*x20924 - x21046 + x21047 + x21048 + x21049 + x21050 - x21051 - x21052 - x21053 - x21055 + x21056 + x21057 + x21058 + x21065 + x21070) - x123*(x19804*x8287 + x19906 - x20872*x8287 + x21031 + x21032 + x21033 + x21034 - x21035 - x21036 + x21038 + x21040 + x21043 + x21044) - x123*(x20893 + x20971 + x21040 + x21068 - x21071 - x21073 - x21074 - x21076 - x21077 - x21078 + x21080 + x21081 + x21083 + x21084 + x21085 + x21086 + x21087 + x21089) + x168*(x19905 + x19914 + x19968 + x20993 - x21090 - x21091 - x21093 - x21094 + x21095 + x21096 + x21097 + x21098 + x21099 + x21101 + x21106) - x63*(x19946 + x19947 + x19972 + x20904 - x20998 + x21019 - x21107 - x21108 - x21110 - x21112 - x21113 - x21114 + x21116 + x21117 + x21118 + x21119 + x21120 + x21121 + x21122 + x21123 + x21125) + x70*(-x19804 + x19896 - x21026 - x21027 + x21028 + x21029 + x21030)) + x69*(L*(x20427*x5224 - x20429 + x20430 + x20431) + x106*(-x20276*x8032 + x20328 + x20427*x8032 + x20478 - x20480 + x20481 + x20482 + x20483 + x20484 - x20485 - x20486 - x20487 - x20489 + x20490 + x20491 + x20493 + x20500 + x20504) - x123*(-30*x20277 + x20441 + x20443 + 30*x20444 + x20445 + x20446 - x20447 - x20448 + x20454 + x20457 + x20463 + x20473 + x20475 + x20476) - x123*(x20300 + x20376 + x20502 - x20506 - x20508 - x20509 - x20511 - x20512 - x20513 + x20515 + x20516 + x20517 + x20519 + x20520 + x20521 + x20522 + x20524 + x20526) + x168*(x20397 + x20473 - x20527 - x20528 - x20530 - x20532 + x20533 + x20534 + x20535 + x20537 + x20538 + x20544 + x20546 + x20549) - x63*(x20310 - x20402 + x20423 + x20550 - x20551 - x20552 - x20553 - x20555 - x20556 - x20557 + x20558 + x20560 + x20561 + x20562 + x20563 + x20564 + x20565 + x20569 + x20571 + x20572) + x70*(-x20427 - x20432 - x20433 + x20435 + x20436 + x20437 + x20440)) + x69*(L*(x20872*x327 - x20874 + x20875 + x20876) + x106*(-19*x20725 + x20776 + x20923 + 19*x20924 - x20926 + x20927 + x20928 + x20929 + x20930 - x20931 - x20932 - x20934 - x20936 + x20937 + x20938 + x20940 + x20948 + x20953) - x123*(-x20724*x6709 + x20872*x6709 + x20884 + x20885 + x20886 + x20887 - x20888 - x20889 + x20895 + x20898 + x20904 + x20918 + x20921 + x20922) - x123*(x20749 + x20820 + x20951 - x20955 - x20957 - x20958 - x20960 - x20961 - x20962 + x20963 + x20965 + x20967 + x20968 + x20969 + x20970 + x20971 + x20974 + x20976) + x168*(x20843 + x20918 - x20977 - x20978 - x20980 - x20982 + x20983 + x20984 + x20985 + x20986 + x20987 + x20993 + x20995 + x20997) - x63*(x20760 - x20848 + x20868 + x20998 - x20999 - x21000 - x21001 - x21003 - x21004 - x21005 + x21007 + x21008 + x21009 + x21010 + x21012 + x21013 + x21015 + x21019 + x21021 + x21022) + x70*(-x20872 - x20877 - x20878 + x20879 + x20880 + x20881 + x20883)) + x69*(L*(-x21722*x327 - x21854 + x21855 + x21856) + x106*(-x21722*x8032 + x21736 + x21866*x8032 - x21879 - x21881 + x21882 + x21883 + x21884 + x21885 - x21886 - x21887 - x21889 - x21891 + x21892 + x21893 + x21899 + x21905 + x21911) - x123*(-x21722*x6709 + x21787 - x21863 - x21865 + x21866*x6709 + x21867 + x21868 - x21870 - x21871 + x21873 + x21877 + x21878) + x123*(x21826 + x21899 + x21946 + x21956 - x21958 - x21960 - x21962 - x21963 - x21965 - x21966 + x21967 + x21968 + x21969 + x21970 + x21972 + x21974 + x21977 + x21978 + x21979) - x168*(x21791 + x21820 - x21912 - x21913 + x21914 - x21916 - x21917 + x21918 + x21920 + x21921 + x21922 + x21934 + x21941 + x21946 + x21947 + x21950 + x21953) + x63*(-x21830 + x21850 + x21980 - x21981 - x21982 - x21983 + x21984 - x21986 - x21987 - x21988 - x21989 + x21990 + x21991 + x21993 + x21994 + x21996 + x21998 + x21999 + x22003 + x22005 + x22009) + x70*(-x21722 - x21857 - x21858 - x21859 + x21860 + x21861 + x21862)) + x69*(L*(-x21866*x4023 - x22010 + x22011 + x22012) - x106*(x21866*x8342 + x21879 - x22037 + x22038 - x22040 + x22041 + x22042 + x22043 + x22044 - x22045 - x22046 - x22048 - x22049 + x22050 + x22051 + x22056 + x22062 + x22066) + x123*(x21866*x8287 + x21977 + x22002 - x22018 + x22020 + x22021 + x22023 + x22025 - x22026 - x22027 + x22028 + x22029 + x22033 + x22036) - x123*(x21955 + x22056 - x22068 - x22070 + x22071 - x22073 - x22074 - x22075 - x22076 + x22077 + x22078 + x22079 + x22080 + x22081 + x22082 + x22088 + x22092 + x22097) + x168*(x21934 + x21951 + x22003 + x22088 - x22098 - x22099 + x22101 - x22102 - x22103 - x22104 - x22105 + x22106 + x22107 + x22108 + x22109 + x22111 + x22112 + x22113) - x63*(x17024*x3605 + x21980 + x21981 + x22006 + x22085 - x22114 - x22115 - x22116 + x22117 - x22118 - x22119 - x22120 - x22121 + x22122 + x22123 + x22124 + x22125 + x22126 + x22128 + x22129 + x22130 + x22133) + x70*(-x21866 - x21931 + x21938 - x22013 - x22014 + x22015 + x22016)) + x69*(L*(x11683*x25211 - x12003*x19 - x12123*x24528 + x19637 - x19638 - x22284 + x22285 + x24495*x6068 + x24498*x6068 + x24581*x5979 + x24586*x5979 + x24603*x25379 - x24764*x5984 + x24768*x5984 - x24776*x25376 + x24781*x5984 + x24784*x5982 - x24787*x5984 + x25223*x3776 - 4*x25378 - x25521*x5152 + x25521*x5157 - x25521 - 2*x25522 - x25523*x5152 + x25523 + x25526 + x25527) - x106*(-L*x25537 - L*x25538 + L*x25540 + L*x25541 + q3_b*x25233 + q3_b*x25244 - q3_b_dot*x25206 - x11683*x5910 + x11683*x5915 - x11683*x6132 + x11907*x24528 + x12040*x5467 + x12068*x19 - x12069*x19 - x12070*x19 + x12072*x19 + x12074*x19 + x12076*x19 + x12077*x19 - x12078*x19 - x12079*x19 - x12085*x19 - x12086*x19 - x12123*x24507 + x12123*x24510 + x12124*x25246 + x12137*x25246 - x129*x25557*x646 - x18210*x6101 + x18903*x5723 + x19610*x25177 + x19649*x5152 - x19649*x5157 + x19664 - x19665 - x19666 - x19667 - x19668 + x19669 + x19670 + x19672 + x19674 - x19675 - x19676 + x19691 - x21126*x25177 + x22182 - x22306 + x22307 - x22309 - x22310 - x22311 - x22312 + x22313 + x22314 + x22315 + x22316 - x22317 - x22318 + x22329 - x24481*x25596 + x24484*x25596 - x24495*x25590 + x24495*x25595 + x24495*x25597 + x24495*x25598 - x24495*x6145 + x24495*x6146 + x24495*x6147 - x24495*x6153 - x24498*x25590 - x24498*x25595 + x24498*x25597 + x24498*x25598 - x24498*x6145 + x24498*x6146 + x24498*x6147 - x24498*x6153 - x24507*x25593 - x24507*x25594 - x24507*x6142 - x24507*x6143 + x24510*x25593 + x24510*x25594 + x24510*x6142 + x24510*x6143 + x24517*x25591 - x24517*x25604 - x24528*x25591 + x24528*x25604 - x24533*x25591 + x24581*x5932 + x24581*x5934 + x24581*x6089 + x24581*x6090 - x24585*x6196 + x24586*x5932 + x24586*x5934 + x24586*x6089 + x24586*x6090 - x24594*x25609 - x24595*x25609 + x24598*x6196 + x24603*x25558 + x24603*x25559 - x24621*x5979 - x24626*x5979 - x24659*x25379 + x24672*x5984 - x24764*x6123 - x24764*x6124 - x24764*x6199 + x24768*x6123 + x24768*x6124 + x24768*x6199 + x24781*x6124 - x24787*x6124 - x24788*x25342 + x24790*x6196 - x24791*x6196 + x24795*x6144 - x24797*x6103 - x24797*x6104 + x24797*x6164 + x24797*x6165 + x24802*x25580 + x24803*x6144 + x24804*x6144 - x24809*x6144 - x24810*x25546 - x24811*x6103 - x24811*x6104 + x24811*x6164 + x24811*x6165 + x24817*x6142 + x24817*x6143 - x24817*x6238 - x24818*x6103 - x24818*x6104 + x24818*x6164 + x24818*x6165 - x24819*x6142 - x24819*x6143 + x24819*x6238 - x24820*x6130 + x24820*x6229 + x24820*x6232 - x24821*x6131 + x24821*x6230 + x24821*x6231 - x24822*x6144 + x24823*x25579 + x24832*x5780*x692 - x24863*x5984 - x24989*x5966 + x24993*x25376 - x24994*x5966 - x24995*x5966 - x24996*x5958 - x24996*x5960 + x24997*x5966 + x25000*x5958 + x25000*x5960 + x25003*x3720 - x25007*x25340 - x25008*x5958 - x25008*x5960 + x25009*x5966 + x25176*x5932 - x25185*x6152 - x25186*x6151 - x25193*x6152 - x25194*x6151 - x25197*x6124 - x25202*x6158 - x25202*x6159 + x25202*x6166 + x25202*x6168 - x25203*x6158 - x25203*x6159 + x25203*x6166 + x25203*x6168 + x25212*x6206 - x25215*x25567 - x25217*x6206 - x25218*x6202 - x25223*x3733 + x25223*x4581 + x25223*x5913 - x25227*x3770 - x25228*x6352 + x25232*x6352 + x25235*x6206 + x25236*x6202 + x25238*x6206 - x25240*x6206 - x25242*x6127 + x25243*x6187 + x25247*x25612 + x25248*x25611 + x25253 + x25313*x321 - x25317*x321 + 8*x25378 - x25448*x5336 + 4*x25522 + x25555*x2850 + x25556*x5547 + x25557*x3776 + x25573*x5952 + x25576*x5336 + x25583*x5152 - x25583*x5157 + x25583 + x25584*x5152 - x25584 - x25585*x5152 + x25585*x5157 - x25585 + x25586 + x25587 - x25588 - x25589 - 4*x25592 - x25599*x5152 + x25599 + x25600*x5152 - x25600 - 8*x25601 - x25602*x685 - 6*x25603 - x25605*x6152 + x25606*x5152 - x25606 - x25607*x5152 + x25607 - x25608*x5152 + x25608 - x25610*x6125 + x25619 + x25626) + x123*(-q2_b*x25564 - q2_b*x25577 - q2_b_dot*x25018*x5572 - q2_i*x25566 + q3_b*x25564 + q3_i*x25566 - q3_i_dot*x25549 - x11683*x6228 + x11989*x24732 - x11989*x24738 - x12018*x19 - x12019*x19 + x12026*x19 + x12027*x19 - x18216*x25544 + x19603 - x19610*x25575 - x19644*x5152 + x19644*x5157 - x19645*x5152 + x19645*x5157 - x19647*x5152 + x19647*x5157 + x19650*x5152 - x19650*x5157 - x19651 - x19652 + x19653 + x19654 + x19661 + x22248 + x22289 + x22291 + x22293 - x22295 - x22296 - x22298 + x22300 + x22301 + x22305 + x24468*x25543 - x24468*x25547 + x24468*x25548 - x24469*x25543 + x24469*x25547 - x24469*x25548 + x24474*x6012 + x24474*x6520 - x24476*x6012 - x24476*x6520 - x24495*x25551 - x24495*x25552 + x24495*x6091 + x24495*x6092 - x24495*x6098 - x24498*x25551 - x24498*x25552 + x24498*x6091 + x24498*x6092 + x24498*x6096 + x24498*x6098 - x24504*x6140 - x24507*x25553 + x24510*x25553 - x24517*x25572 + x24528*x25572 + x24533*x25572 - x24550*x25568 - x24562*x25562 - x24562*x25568 - x24581*x6103 - x24581*x6104 - x24586*x6104 + x24682*x6089 + x24682*x6090 + x24690*x6089 + x24690*x6090 + x24699*x6123 + x24699*x6124 - x24700*x6123 - x24700*x6124 + x24718*x25558 + x24718*x25559 - x24725*x6123 - x24725*x6124 + x24732*x6521 - x24738*x6521 + x24764*x6143 - x24768*x6143 + x24788*x25580 + x24792 - x24956*x6117 + x24989*x6144 + x24994*x6144 + x24995*x6144 + x24996*x6187 - x24997*x6144 - x25000*x6187 - x25003*x3770 + x25007*x25579 + x25008*x6187 - x25009*x6144 + x25107*x5997 - x25107*x6093 - x25111*x3726 - x25114*x2797 - x25117*x5851 + x25139*x3943 + x25140*x3943 - x25147*x3943 - x25148*x3943 + x25151*x2738 - x25153*x6117 - 12*x25159 + x25223*x3792 - x25223*x6545 + x25372 + x25431 + x25432 - x25433 + x25434 + x25435 + x25436 - x25437 - x25438 - x25439 - x25441 - x25442 - x25443 + x25444 + x25445 + x25446 + x25447 - x25449 - x25450 - x25451 - x25452 - x25453 + x25454 + x25485*x2856 - x25502*x6123 - x25502*x6124 + x25504*x6123 + x25504*x6124 + x25517 - x25537*x3943 - x25538*x3943 + x25539*x5157 - x25539 + x25540*x3943 + x25541*x3943 - x25542*x5997 + x25542*x6093 - x25545*x25546 - 8*x25550 + 8*x25554 + x25555*x2788 + x25556*x5312 + x25557*x3706 + x25560*x2743 + 24*x25561 + 24*x25562 - x25569*x5928 + x25570*x5152 - x25570 - x25571*x6167 - x25573*x6131 - x25574*x6140 + x25576*x5572 - x25578*x6188 + x25581*x25582) - x123*(q3_b_dot*x25417 - x11515*x25639 + x11683*x12243 + x11989*x6*x6171 - x12040*x12243 - x12040*x25386 + x12124*x24918 - x12124*x24921 + x12124*x24932 + x12137*x24918 - x12137*x24921 + x12137*x24932 + x12224*x19 + x12225*x19 + x12226*x19 + x12227*x19 + x12230*x19 + x12231*x19 - x12233*x19 - x12235*x19 - x12236*x19 - x12237*x19 - x12239*x19 - x12240*x19 - x12254*x24507 + x12254*x24510 + x12255*x24507 - x12255*x24510 - x154*x25666 - x154*x25668 + x154*x25670 + x154*x25672 + x19491*x25760 + x19645*x25575 - x19649*x25760 + x19655 + x19733 + x19735 + x19737 + x19739 + x19740 + x19741 - x19742 - x19743 - x19744 - x19745 - x19747 - x19748 + x19757 + x21144 + x22299*x24519 + x22302 + x22363 + x22364 + x22366 + x22367 + x22368 + x22370 - x22371 - x22372 - x22374 - x22375 - x22376 - x22377 + x22384 + x23589 - x24495*x25742 - x24495*x25743 - x24495*x25744 - x24495*x25745 + x24495*x25748 + x24495*x25749 + x24495*x25750 + x24495*x25751 + x24495*x25752 + x24495*x25753 - x24498*x25742 - x24498*x25743 - x24498*x25744 - x24498*x25745 + x24498*x25748 + x24498*x25749 + x24498*x25750 + x24498*x25751 + x24498*x25752 + x24498*x25753 + x24503*x6103 + x24503*x6104 - x24503*x6241 - x24503*x6244 + x24505*x6103 + x24505*x6104 - x24505*x6241 - x24505*x6244 - x24507*x25746 + x24510*x25746 - x24512*x6144 + x24512*x6276 + x24516*x6144 - x24516*x6276 + x24519*x3770 - x24519*x3805 - x24519*x6256 - x24523*x2883 - x24524*x25762 - x24527*x6144 + x24527*x6276 - x24529*x6139 + x24529*x6264 + x24531*x6144 - x24531*x6276 - x24532*x6142 - x24532*x6143 + x24532*x6495 + x24532*x6496 - x24535*x25579 + x24535*x25695 - x24550*x25736 - x24550*x25737 - x24562*x25736 - x24562*x25737 - x24573*x25558 - x24573*x25559 + x24909*x5932 + x24909*x5934 - x24909*x6152 - x24909*x6218 - x24910*x5966 + x24910*x6206 + x24913*x5932 + x24913*x5934 - x24913*x6152 - x24913*x6218 - x24916*x5966 + x24916*x6206 - x24917*x5954 + x24917*x6235 - x24918*x6199 + x24919*x5966 - x24919*x6206 + x24921*x6198 + x24921*x6199 + x24923*x3720 - x24923*x3785 + x24923*x5946 - x24930*x25342 + x24930*x25612 - x24931*x25340 + x24931*x25611 - x24932*x6198 - x24932*x6199 + x24933*x5966 - x24933*x6206 - x24951*x6089 - x24951*x6090 + x24953*x6123 + x24953*x6124 - x24958*x6123 - x24958*x6124 - x24961*x6089 - x24961*x6090 + x24967*x6123 + x24967*x6124 - x24973*x6123 - x24973*x6124 + x24979*x6123 + x24979*x6124 + x25109*x25654 + x25177*x25763 + x25185*x6164 + x25185*x6165 + x25193*x6164 + x25193*x6165 + x25221*x6237 + x25221*x6238 - x25237*x6237 - x25237*x6238 - x25246*x6237 - x25246*x6238 + x25313*x286 - x25317*x286 - x25385*x6341 - x25395*x6186 - x25395*x6187 + x25396*x6186 + x25396*x6187 - x25409*x25759 + x25411*x5952 - x25413*x6142 - x25413*x6143 + x25413*x6495 + x25413*x6496 + x25414*x6142 + x25414*x6143 - x25414*x6495 - x25414*x6496 + x25415*x6131 + x25416*x6103 - x25416*x6241 + x25419*x25643 + x25419*x25646 + x25421*x6167 - 14*x25422 + x25426*x25567 - x25427*x25579 + x25427*x25695 + x25455 - x25556*x6741 + 3*x25586 + 3*x25587 - 3*x25588 - 3*x25589 + 48*x25601 - 14*x25603 + x25626 - 48*x25637 - x25642*x6012 + x25725 + x25739*x5152 - x25739*x5157 + x25739 + x25740*x5152 - x25740 - x25741*x5780 - x25747*x5152 + x25747*x5157 - x25747 + x25754*x5572 + x25756*x5152 - x25756 + x25758*x5152 - x25758 + x25761*x5932 - x25761*x6152 - x25764*x5152 + x25764 + 14*x25765 - x25766*x5152 + x25766 - x25767*x5152 + x25767 - x25768*x5152 - x25768*x5157 + x25793) + x168*(-q3_b*x24649*x646 + x11683*x12161 - x11838*x12040 - x12040*x25267 + x12124*x24672 + x12124*x24856 - x12124*x24863 + x12137*x24672 - x12137*x24863 + x12152*x19 + x12153*x19 + x12154*x19 + x12155*x19 - x12156*x19 - x12157*x19 - x12159*x19 - x12160*x19 + x12178*x25284 + x19491*x25648 + x19559 + x19575 + x19647*x25177 + x19692 + x19693 + x19695 + x19697 - x19698 - x19700 - x19702 - x19703 + x19731 + x22209 + x22226 + x22299*x24649 + x22330 + x22332 + x22333 + x22334 - x22335 - x22337 - x22339 - x22340 + x22361 + x24495*x25635 - x24495*x6215 - x24495*x6217 - x24495*x6219 + x24495*x6223 + x24498*x25635 - x24498*x6215 - x24498*x6217 - x24498*x6219 + x24498*x6223 + x24507*x25572 - x24507*x25631 + x24507*x25633 - x24510*x25572 + x24510*x25631 - x24510*x25633 + x24517*x25641 - x24528*x25641 - x24533*x25641 + x24581*x6164 + x24581*x6165 + x24586*x6164 + x24586*x6165 + x24599*x25643 + x24599*x25645 + x24599*x25646 + x24621*x6103 + x24621*x6104 - x24621*x6152 - x24621*x6218 + x24626*x6103 + x24626*x6104 - x24626*x6152 - x24626*x6218 - x24641*x6144 + x24641*x6206 + x24645*x6144 - x24645*x6206 - x24659*x25640 - x24662*x6144 + x24662*x6206 - x24667*x6139 + x24667*x6235 + x24670*x6144 - x24670*x6206 - x24672*x6142 - x24672*x6143 - x24677*x25580 + x24677*x25612 - x24678*x25579 + x24678*x25611 + x24781*x6238 - x24787*x6238 - x24856*x6142 - x24856*x6143 + x24863*x6142 + x24863*x6143 - x24882*x6352 + x24883*x6352 - x24896*x6089 - x24896*x6090 + x24897*x6123 + x24897*x6124 - x24898*x6123 - x24898*x6124 - x24899*x6089 - x24899*x6090 + x24902*x6123 + x24902*x6124 - x24904*x25558 - x24904*x25559 - x24905*x6123 - x24905*x6124 + x24907*x6123 + x24907*x6124 + x24946*x25654 + x25176*x6165 - x25197*x6238 - x25268*x666 + x25271*x6187 - x25271*x6202 - x25272*x6187 + x25272*x6202 + x25285*x6131 + x25292*x6103 - x25292*x6152 + x25300 + x25301 - x25302 - x25303 + x25304 + x25305 + x25307 + x25308 + x25309 + x25310 + x25312 + x25314 - x25316 - x25318 - x25319 + x25321 + x25322 + x25323 + x25324 + x25325 + x25326 + x25327 + x25328 + x25329 + x25331 - x25332 - x25333 - x25334 - x25335 + x25336 - x25337 - x25338 - x25339 - x25341 - x25343 + x25371 + x25380 - x25556*x5643 + 16*x25592 + 32*x25601 - x25602*x3818 + x25627*x5152 - x25627*x5157 + x25627 + x25628*x5152 - x25628 - x25629*x637 - x25630*x5152 - x25630*x5157 - x25632*x5152 + x25632*x5157 - x25632 + x25634*x5152 + x25634*x5157 + x25636*x5152 + x25636*x5157 - 32*x25637 + x25638*x5152 - x25638 - x25639*x5332 - x25642*x5929 + x25644*x5829 + x25647*x3733 - x25650*x5152 + x25650 - x25651*x5152 + x25651 + 32*x25652 - x25653*x5152 - x25653*x5157 + x25726 + x25735) + x63*(q2_b*x25828 - q2_b*x25838 + q2_b_dot*x25835 - q3_b*x25828 + q3_b*x25838 - x11433*x25682 - x11583*x25639 + x11683*x12282 - x12040*x12282 - x12040*x25465 + x12124*x25053 - x12124*x25064 + x12124*x25075 + x12137*x25053 - x12137*x25064 + x12137*x25075 + x12267*x19 + x12268*x19 + x12269*x19 + x12270*x19 + x12272*x19 + x12273*x19 - x12274*x19 - x12275*x19 - x12276*x19 - x12277*x19 - x12278*x19 - x12279*x19 - x12280*x19 - x12295*x24507 + x12295*x24510 + x12296*x24507 - x12296*x24510 - x129*x25666 - x129*x25668 + x129*x25670 + x129*x25672 + x19644*x25575 - x19650*x25575 + x19759 + x19760 + x19762 + x19764 + x19765 + x19766 - x19767 - x19768 - x19770 - x19771 - x19772 - x19774 - x19775 + x19784 + x22276 + x22386 + x22387 + x22388 + x22389 + x22390 + x22392 - x22393 - x22394 - x22395 - x22396 - x22397 - x22398 - x22399 + x22411 + x23691 - x24495*x25805 - x24495*x25806 - x24495*x25808 + x24495*x25818 + x24495*x25819 + x24495*x25820 + x24495*x25823 + x24495*x25824 - x24495*x6324 - x24495*x6325 - x24495*x6328 + x24495*x6336 - x24498*x25805 - x24498*x25806 - x24498*x25808 + x24498*x25818 + x24498*x25819 + x24498*x25820 + x24498*x25823 + x24498*x25824 - x24498*x6324 - x24498*x6325 - x24498*x6328 + x24498*x6336 - x24507*x25807 + x24510*x25807 + x24517*x25830 - x24517*x25831 + x24517*x25832 - x24528*x25830 + x24528*x25831 - x24528*x25832 + x24550*x25821 + x24562*x25821 + x24569*x25365 + x24569*x25367 + x24682*x6103 + x24682*x6104 + x24682*x6164 + x24682*x6165 - x24682*x6241 - x24683*x6243 + x24690*x6103 + x24690*x6104 + x24690*x6164 + x24690*x6165 - x24690*x6241 - x24691*x6243 + x24699*x6237 + x24699*x6238 - x24700*x6237 - x24700*x6238 - x24707*x6144 + x24707*x6276 + x24708*x25649 + x24712*x6144 - x24712*x6276 + x24714*x25643 + x24714*x25645 + x24714*x25646 + x24714*x5892*x675 - x24715*x3805 - x24715*x6256 - x24720*x6144 + x24720*x6276 - x24721*x6144 + x24721*x6276 + x24722*x6144 - x24722*x6276 - x24725*x6143 - x24725*x6237 - x24725*x6238 + x24725*x6496 - x24726*x25649 - x24727*x25580 + x24727*x25697 - x24728*x25579 + x24728*x25695 + x24951*x5969 - x24953*x5974 - x24956*x6200 + x24958*x5974 + x24961*x5969 - x24967*x5974 + x24973*x5974 - x24979*x5974 + x25029*x5932 + x25029*x5934 - x25029*x6152 - x25029*x6218 - x25034*x5971 + x25048*x5971 + x25049*x5932 + x25049*x5934 - x25049*x6152 - x25049*x6218 - x25052*x5954 + x25052*x6235 - x25053*x6199 - x25054*x25360 - x25054*x25609 - x25054*x5971 - x25055*x25360 - x25055*x25609 + x25062*x25625 + x25062*x25654 + x25064*x6198 + x25064*x6199 + x25066*x3720 - x25066*x3785 + x25066*x5946 + x25067*x25330 - x25067*x25640 - x25072*x25340 + x25072*x25611 - x25074*x25340 + x25074*x25611 - x25075*x6198 - x25075*x6199 + x25077*x5966 - x25077*x6206 - x25079*x6089 - x25079*x6090 + x25080*x6123 + x25080*x6124 - x25087*x6123 - x25087*x6124 - x25088*x6089 - x25088*x6090 + x25091*x6123 + x25091*x6124 - x25099*x25558 - x25099*x25559 - x25100*x6123 - x25100*x6124 + x25102*x6123 + x25102*x6124 - x25153*x6200 + x25313*x327 - x25317*x327 - 32*x25422 - x25466*x666 - x25482*x6186 - x25482*x6187 + x25483*x6186 + x25483*x6187 - x25497*x25759 + x25498*x5952 - x25502*x6143 - x25502*x6238 + x25502*x6496 + x25504*x6143 + x25504*x6238 - x25504*x6496 + x25506*x6131 + x25507*x6103 + x25507*x6165 - x25507*x6241 - x25516*x6187 + x25516*x6270 + x25520 + x25527 - x25556*x7357 + 72*x25601 - 32*x25603 - x25620*x5307 - 72*x25637 + x25647*x3706 + 72*x25652 + x25699 + x25700 + x25701 + x25702 + x25703 + x25704 + x25705 + x25706 + x25707 + x25709 + x25710 + x25711 + x25713 + x25714 + x25716 + x25717 + x25718 + x25719 + x25721 + x25722 + x25723 + x25724 + x25754*x5440 + 32*x25765 + x25794*x5157 - x25794 - x25795 - x25796 - x25797 + x25798 + x25799 + x25800 + x25801*x5152 - x25801*x5157 + x25801 + x25802*x5152 - x25802 - x25803*x637 - x25804*x5152 + x25804*x5157 - x25804 + x25809*x5157 - x25809 - x25811 - x25813 - x25814 + x25815 + x25816 + x25817 + x25822*x5152 - x25822*x5157 + x25822 + x25826*x5152 - x25826 + x25827*x5932 - x25827*x6152 - x25829 - x25833 + x25834*x5829 + x25836*x5969 - x25837*x5152 + x25837 - x25839 + x25840 + x25844) + x70*(q2_b*x24826 + q2_b*x24836 + q2_b_dot*x24786 - q2_b_dt*x24492 + x11683*x24486 - x12008*x19 - x12009*x19 + x18216*x5275 + x19490*x5152 - x19490*x5157 + x19526*x24775 - x19641 - x19642 + x19643 - x22181 - x22206 - x22286 - x22287 + x22288 - x24468*x25533 + x24469*x25533 - x24474*x25229 + x24476*x25229 - x24481*x25530 + x24484*x25530 + x24495*x6081 - x24498*x6081 - x24732*x25528 + x24736*x2727 + x24738*x25528 - x24743*x2727 + x24750*x2794 + x24784*x5966 + x24788 + x24797*x6073 + x24797*x6074 + x24811*x6073 + x24811*x6074 - x24816*x5966 - x24817*x5958 - x24817*x5960 + x24818*x6073 + x24818*x6074 + x24819*x5958 + x24819*x5960 + x24820*x3720 + x24820*x5946 + x24821*x2830 + x24821*x2831 - x24830*x25535 - x24835*x5960 - x24989 + x24994 + x24995 - x24997 - x25007 - x25009 - x25083*x2727 - x25093*x662 + x25096*x662 - x25139 - x25140 + x25147 + x25148 - x25242*x5780 - x25296*x25535 + x25311 + x25313 - x25315 - x25317 - x25529*x5152 + x25529*x5157 - x25529 + x25531*x5152 + x25531*x5157 + x25532*x5152 + x25532*x5157 - x25534*x5152 + x25534 + x25536*x5852)) + x69*(L*(-x13040*x19 - x13226*x24528 + x19980 - x19981 - x22575 + x22579 + x24581*x8993 + x24586*x8993 + x24599*x28597 + x24603*x28596 - x24764*x9000 + x24768*x9000 - x24776*x28594 + x24781*x9000 + x24784*x8995 - x24787*x9000 + x25526 - x28590*x5152 + x28590*x5157 - x28590 - 2*x28591 + x28592*x5152 + x28592*x5157 - x28593*x5152 + x28593 - 4*x28595 + x28598*x5547 + x28622) - x106*(-p1_b*x26606 - p1_b*x28772 - p1_i*x26614 + p2_b*x26606 + p2_b*x28772 + p2_i*x24832*x5494 + p2_i*x26614 + x13087*x28750 - x13087*x28751 - x13105*x9097 + x13105*x9131 + x13171*x19 - x13172*x19 - x13173*x19 + x13175*x19 + x13177*x19 + x13179*x19 + x13180*x19 - x13182*x19 - x13183*x19 - x13188*x19 - x13189*x19 + x13221*x24821 - x13226*x24507 + x13226*x24510 + x13228*x25246 + x13239*x25246 + x13326*x24528 - x17312*x24922 - x17428*x28766 - x17429*x28764 + x17501 - x18275*x9068 - x1983*x24821 + x19977*x28766 + x2000*x28761 + x20030 - x20031 - x20032 - x20033 - x20034 + x20035 + x20036 + x20038 + x20040 - x20041 - x20042 + x20059 + x20082 - x226*x28768 + x22621 + x22622 - x22623 - x22624 - x22625 - x22626 - x22627 + x22628 + x22629 + x22631 + x22633 - x22634 - x22635 + x22646 + x22663 - x24495*x28749 - x24495*x28752 + x24495*x28756 + x24495*x9157 - x24495*x9162 + x24498*x28749 - x24498*x28752 + x24498*x28756 - x24498*x9157 - x24498*x9162 - x24507*x28754 - x24507*x28755 - x24507*x9108 - x24507*x9113 + x24507*x9255 + x24507*x9256 + x24510*x28754 + x24510*x28755 + x24510*x9108 + x24510*x9113 - x24510*x9255 - x24510*x9256 - x24579*x9200 + x24581*x9051 + x24581*x9052 + x24581*x9118 - x24585*x9200 + x24586*x9051 + x24586*x9052 + x24586*x9118 - x24594*x28773 - x24595*x28773 + x24598*x9200 + x24599*x28669 + x24599*x28672 + x24603*x28668 + x24603*x28670 - x24621*x8993 - x24626*x8993 - x24659*x28596 + x24672*x9000 - x24761*x286 - x24763*x286 - x24764*x9093 - x24764*x9095 - x24764*x9202 + x24766*x286 + x24767*x286 + x24768*x9093 + x24768*x9095 + x24768*x9202 - x24773*x28750 + x24773*x28751 + x24781*x9093 + x24781*x9095 - x24787*x9093 - x24787*x9095 - x24788*x28739 + x24790*x9200 - x24791*x9200 - x24793*x286 + x24794*x286 + x24795*x9114 - x24797*x9071 - x24797*x9072 + x24797*x9169 + x24797*x9170 + x24802*x28690 + x24803*x9114 + x24804*x9114 - x24809*x9114 - x24811*x9071 - x24811*x9072 + x24811*x9169 + x24811*x9170 + x24817*x9108 + x24817*x9113 - x24817*x9255 - x24817*x9256 - x24818*x9071 - x24818*x9072 + x24818*x9169 + x24818*x9170 - x24819*x9108 - x24819*x9113 + x24819*x9255 + x24819*x9256 - x24820*x3951 - x24820*x9098 + x24820*x9178 + x24820*x9182 + x24821*x9252 - x24822*x9114 + x24823*x28689 + x24832*x249*x9015 - x24833*x9091 - x24863*x9000 + x24888*x28719 + x24985*x9028 - x24988*x28597 - x24989*x9040 + x24990*x9028 + x24993*x28594 - x24994*x9040 - x24995*x9040 - x24996*x9036 - x24996*x9037 + x24997*x9040 + x25000*x9036 + x25000*x9037 + x25003*x3941 - x25007*x28636 - x25008*x9036 - x25008*x9037 + x25009*x9040 + x25021 + 14*x25038 - x25186*x9159 - x25186*x9160 - x25194*x9159 - x25194*x9160 - x25197*x9093 - x25197*x9095 - x25202*x9073 - x25202*x9166 + x25202*x9171 + x25202*x9172 - x25203*x9073 - x25203*x9166 + x25203*x9171 + x25203*x9172 + x25212*x9210 - x25215*x28679 - x25217*x9210 - x25218*x9206 - x25218*x9208 + x25235*x9210 + x25236*x9206 + x25236*x9208 + x25238*x9210 - x25240*x9210 + x25247*x28775 + x25248*x28774 + x25573*x9133 + 4*x28591 + 8*x28595 - x28598*x5332 + x28599*x286 + x286*x28601 + x286*x28603 - x286*x28605 - x286*x28607 - x286*x28609 - 14*x28616 + x28624*x321 - x28626*x321 + x28634*x28684 - x28637*x5696 - x28661*x5336 + x28686*x5336 + x28743*x5152 - x28743*x5157 + x28743 - x28744*x5152 - x28744*x5157 + x28745*x5152 - x28745 - x28746*x5152 + x28746*x5157 - x28746 + x28747*x5152 + x28747*x5157 + x28748*x5152 + x28748*x5157 - 4*x28753 + x28757*x5152 + x28757*x5157 + x28758*x5547 + x28759*x5547 - x28760*x5152 + x28760 + x28762*x5152 - x28762 - 8*x28763 - x28765*x423*x5481 - 6*x28767 + x28769*x5152 - x28769 - x28770*x5152 + x28770 - x28771*x5152 + x28771 + x28776 + x28785) + x123*(-p1_b*x25564 - p1_b*x25577 - p1_i*x25566 + p1_i_dot*x25549 + p2_b*x25564 + p2_b*x25577 + p2_i*x25566 + p2_i_dot*x25875 + x11469*x28671 - x13083*x19 - x13084*x19 + x13092*x19 + x13093*x19 + x13105*x299*x5186 - x13105*x5586 + x13284*x24517 - x13284*x24528 + x13285*x24517 - x13285*x24528 - x17312*x25544 - x1957*x24484*x6389 - x1983*x25573 - x19977*x25002 + x19990*x5152 - x19990*x5157 + x19992*x5152 - x19992*x5157 - x19994 - x19995 + x19996 + x19997 + x19999 + x20005 + x20027 + x20248 + x22588 - x22589 - x22592 - x22595 - x22597 - x22598 + x22599 + x22600 + x22602 + x22607 + x22620 + x22805 + x24468*x28655 - x24468*x28656 - x24469*x28655 + x24469*x28656 - x24474*x28651 - x24474*x9258 + x24476*x28651 + x24476*x9258 - x24495*x28666 + x24495*x9054 + x24495*x9056 + x24495*x9059 + x24495*x9061 + x24495*x9066 - x24498*x28666 + x24498*x9054 + x24498*x9056 - x24498*x9059 - x24498*x9061 - x24498*x9066 - x24507*x28667 + x24510*x28667 - x24550*x28680 - x24562*x28674 - x24562*x28680 - x24581*x9071 - x24581*x9072 - x24586*x9071 - x24586*x9072 + x24682*x9051 + x24682*x9052 + x24690*x9051 + x24690*x9052 + x24699*x9093 + x24699*x9095 - x24700*x9093 - x24700*x9095 + x24714*x28669 + x24714*x28672 + x24718*x28668 + x24718*x28670 - x24725*x9093 - x24725*x9095 - x24732*x5541 + x24738*x5541 - x24761*x3943 - x24763*x3943 + x24764*x9113 + x24766*x3943 + x24767*x3943 - x24768*x9113 + x24788*x28690 + x24792 - x24793*x3943 + x24794*x3943 + 20*x24834*x3957 - x24890*x3951 - x24944*x25014 - x24946*x293 - x24956*x9086 + x24989*x9114 + x24994*x9114 + x24995*x9114 + x24996*x9191 + x24996*x9193 - x24997*x9114 - x24998*x28683 - x25000*x9191 - x25000*x9193 - x25001*x28684 + x25007*x28689 + x25008*x9191 + x25008*x9193 - x25009*x9114 - x25011*x9092 + x25012*x9092 + x25017*x25571 + x25019*x5928 + 24*x25038 + x25107*x9057 - x25542*x9057 + x25578*x5498 + x25891*x28688 + x25897*x28685 + x25906*x28691 + x28546*x345 + x28599*x3943 + x28601*x3943 + x28603*x3943 - x28605*x3943 - x28607*x3943 - x28609*x3943 - 24*x28616 - x28638 + x28640 + x28641 - x28642 - x28644 - x28645 - x28646 + x28648*x5157 - x28648 - x28649 - x28650 + x28652 + x28653 + x28654 - x28657 - x28658 - x28659 - x28660 - x28662 - 20*x28663 - x28664*x5307 - x28665*x5152 - x28665*x5157 + 24*x28673 + 24*x28674 + x28675 + x28676 + x28677 + x28678 + x28681*x5152 - x28681 + x28686*x5572 + x28687 + x28699 + x28742) - x123*(-x11469*x28834 + x13105*x28834 + x13228*x24918 - x13228*x24921 + x13228*x24932 + x13239*x24911 - x13239*x24912 + x13239*x24918 - x13239*x24921 + x13239*x24932 + x13262*x19 + x13263*x19 + x13264*x19 + x13265*x19 + x13267*x19 + x13268*x19 - x13270*x19 - x13272*x19 - x13273*x19 - x13275*x19 - x13276*x19 - x13277*x19 - x154*x24798 - x154*x24799 + x154*x24800 + x154*x24801 - x17352*x28833 + x17429*x293*x9242 + x18572*x2003*x28682 - x18572*x28764 + x1983*x25415 + x19976*x28833 + x20000 + x20058 + x20061 + x20063 + x20065 + x20067 + x20068 + x20069 - x20070 - x20071 - x20072 - x20073 - x20074 - x20076 + x20083 + x22603 + x22645 + x22647 + x22648 + x22649 + x22650 + x22651 + x22652 - x22653 - x22654 - x22655 - x22657 - x22658 - x22659 + x22665 - x24495*x28815 - x24495*x28816 - x24495*x28817 + x24495*x28823 + x24495*x28824 + x24495*x28825 + x24495*x28826 + x24495*x28827 + x24495*x28828 - x24495*x9227 - x24498*x28815 - x24498*x28816 - x24498*x28817 + x24498*x28823 + x24498*x28824 + x24498*x28825 + x24498*x28826 + x24498*x28827 + x24498*x28828 - x24498*x9227 - x24503*x5510 - x24503*x5511 + x24503*x9071 + x24503*x9072 - x24505*x5510 - x24505*x5511 + x24505*x9071 + x24505*x9072 - x24507*x28818 + x24507*x28821 + x24507*x28822 + x24510*x28818 - x24510*x28821 - x24510*x28822 + x24512*x5500 - x24512*x9114 - x24516*x5500 + x24516*x9114 + x24517*x28836 + x24517*x28837 - x24519*x340 - x24519*x5483 + x24519*x9177 - x24523*x283 + x24527*x5500 - x24527*x9114 - x24528*x28836 - x24528*x28837 + x24529*x5529 - x24529*x9107 - x24531*x5500 + x24531*x9114 + x24532*x5686 + x24532*x5687 - x24532*x9108 - x24532*x9113 + x24535*x24829 - x24535*x28689 - x24550*x28811 - x24550*x28812 - x24562*x28811 - x24562*x28812 - x24569*x28669 - x24569*x28672 - x24573*x28668 - x24573*x28670 + x24827*x28838 + x24829*x25427 + x24892 + x24909*x9116 + x24909*x9118 - x24909*x9223 - x24909*x9224 - x24910*x9040 + x24910*x9210 - x24911*x9202 + x24912*x9202 + x24913*x9116 + x24913*x9118 - x24913*x9223 - x24913*x9224 - x24916*x9040 + x24916*x9210 - x24917*x9135 + x24917*x9199 - x24918*x9202 - x24918*x9203 + x24919*x9040 - x24919*x9210 - x24920*x28832 + x24921*x9202 + x24921*x9203 + x24923*x3941 + x24923*x9032 - x24923*x9187 - x24923*x9190 - x24924*x28799 - x24930*x28739 + x24930*x28775 - x24931*x28636 + x24931*x28774 - x24932*x9202 - x24932*x9203 + x24933*x9040 - x24933*x9210 + x24945*x28835 - x24951*x9051 - x24951*x9052 + x24953*x9093 + x24953*x9095 - x24958*x9093 - x24958*x9095 - x24961*x9051 - x24961*x9052 + x24967*x9093 + x24967*x9095 - x24973*x9093 - x24973*x9095 + x24979*x9093 + x24979*x9095 + x24981 + x25013*x28839 + x25109*x28806 + x25185*x9169 + x25185*x9170 + x25193*x9169 + x25193*x9170 - x25246*x9255 - x25246*x9256 - x25395*x9191 - x25395*x9193 + x25396*x9191 + x25396*x9193 + x25411*x9133 - x25411*x9235 + x25413*x5686 + x25413*x5687 - x25413*x9108 - x25413*x9113 - x25414*x5686 - x25414*x5687 + x25414*x9108 + x25414*x9113 + x25426*x28679 - x25427*x28689 + x28025*x3951 + x28484*x9178 + x28484*x9182 + x286*x28624 - x286*x28626 + x28682*x28832 - x28758*x6741 - x28759*x6741 + 48*x28763 - 14*x28767 + x28785 - 48*x28796 - x28800*x9241 + x28813*x5152 - x28813*x5157 + x28813 + x28814*x5152 - x28814 - x28820*x5152 + x28820*x5157 - x28820 + x28829*x5572 + x28830*x5152 - x28830 + x28831*x5152 - x28831 - x28840*x5152 + x28840 + x28842*x5527 + 14*x28843 - x28844*x5152 + x28844 - x28845*x5152 + x28845 - x28846*x5152 - x28846*x5157 + x28847) + x168*(-p1_i_dot*x13260*x24528 + p2_b*x24861 - x11469*x28727 + x13105*x24870 + x13228*x24672 + x13228*x24856 - x13228*x24863 + x13239*x24672 + x13239*x24856 - x13239*x24863 + x13299*x19 + x13300*x19 + x13301*x19 + x13302*x19 - x13303*x19 - x13304*x19 - x13305*x19 - x13306*x19 + x17381 + x1957*x24889 + x1983*x25285 + x20023 + x20084 + x20085 + x20087 + x20089 - x20090 - x20091 - x20092 - x20093 + x20103 + x20239 + x22617 + x22666 + x22667 + x22668 + x22669 - x22670 - x22671 - x22672 - x22673 + x22680 + x22797 + x24495*x28792 - x24495*x9245 - x24495*x9246 + x24498*x28792 - x24498*x9245 - x24498*x9246 - x24507*x28790 + x24510*x28790 + x24581*x9169 + x24581*x9170 + x24586*x9169 + x24586*x9170 + x24621*x9071 + x24621*x9072 - x24621*x9223 - x24621*x9224 + x24626*x9071 + x24626*x9072 - x24626*x9223 - x24626*x9224 - x24641*x9114 + x24641*x9210 + x24645*x9114 - x24645*x9210 + x24649*x9177 - x24649*x9187 - x24649*x9190 - x24659*x28799 - x24662*x9114 + x24662*x9210 - x24667*x9107 + x24667*x9199 + x24670*x9114 - x24670*x9210 - x24672*x9108 - x24672*x9113 - x24677*x28690 + x24677*x28775 - x24678*x28689 + x24678*x28774 + x24781*x9255 + x24781*x9256 - x24787*x9255 - x24787*x9256 - x24856*x9108 - x24856*x9113 - x24860*x28798 + x24863*x9108 + x24863*x9113 - x24882*x9194 - x24882*x9271 + x24883*x9194 + x24883*x9271 + x24890*x9182 + x24891*x9035 - x24896*x9051 - x24896*x9052 + x24897*x9093 + x24897*x9095 - x24898*x9093 - x24898*x9095 - x24899*x9051 - x24899*x9052 + x24902*x9093 + x24902*x9095 - x24904*x28668 - x24904*x28670 - x24905*x9093 - x24905*x9095 - x24906*x28669 - x24906*x28672 + x24907*x9093 + x24907*x9095 + x24908 + x24943*x3951 + x24946*x28806 + x25118 - x25197*x9255 + x25271*x9191 + x25271*x9193 - x25271*x9208 - x25272*x9191 - x25272*x9193 + x25272*x9208 - x25285*x9235 + x28695*x293 + x28696*x5696 + x28697*x5487 + x28700 + x28701 - x28702 - x28703 + x28704 + x28705 + x28707 + x28708 + x28710 + x28711 + x28712 + x28713 - x28714 - x28715 - x28716 + x28717 + x28718 + x28720 + x28721 + x28722 + x28723*x450 + x28724 + x28725 + x28726 + x28728 + x28729 - x28730 - x28731 - x28732 - x28733 + x28734 - x28735 - x28736 - x28737 - x28738 - x28740 + x28741 + 16*x28753 - x28758*x5643 - x28759*x5643 + 32*x28763 + x28786*x5152 - x28786*x5157 + x28786 + x28787*x5152 - x28787 - x28788*x5152 - x28788*x5157 - x28789*x5152 - x28789*x5157 - x28791*x5152 + x28791*x5157 - x28791 + x28793*x5152 + x28793*x5157 + x28794*x5152 + x28794*x5157 + x28795*x5152 + x28795*x5157 - 32*x28796 + x28797*x5152 - x28797 - x28800*x9258 - x28802*x5152 + x28802 - x28803*x5152 + x28803 + 32*x28804 - x28805*x5152 - x28805*x5157 + x28810) + x63*(p1_b_dot*x1957*x28872 + p1_b_dot*x27885*x3999 + 12*p1_i_dot*x28839 - x11433*x24872 - x11469*x28870 - x11516*x24708 + x11516*x24726 - x129*x24798 - x129*x24799 + x129*x24800 + x129*x24801 + x13105*x28870 + x13228*x25053 - x13228*x25064 + x13228*x25075 + x13239*x25032 - x13239*x25045 + x13239*x25053 - x13239*x25064 + x13239*x25075 + x13286*x24708 - x13286*x24726 + x13328*x19 + x13329*x19 + x13330*x19 + x13331*x19 + x13332*x19 + x13333*x19 - x13334*x19 - x13335*x19 - x13336*x19 - x13337*x19 - x13338*x19 - x13339*x19 - x13340*x19 + x13341*x24945 + x17414 + x17484 + x17487 + x17492 - x18498*x24999 + x18498*x28683 + x1983*x25506 - x19988*x25002 + x19993*x25002 + x20104 + x20105 + x20106 + x20108 + x20109 + x20110 - x20111 - x20112 - x20113 - x20115 - x20117 - x20118 - x20119 + x20126 + x22574 + x22681 + x22682 + x22683 + x22684 + x22685 + x22686 - x22687 - x22689 - x22690 - x22691 - x22692 - x22693 - x22694 + x22701 - x24495*x28851 - x24495*x28852 - x24495*x28855 - x24495*x28856 + x24495*x28859 + x24495*x28860 + x24495*x28861 + x24495*x28862 + x24495*x28865 + x24495*x28866 - x24495*x9261 - x24495*x9262 - x24498*x28851 - x24498*x28852 - x24498*x28855 - x24498*x28856 + x24498*x28859 + x24498*x28860 + x24498*x28861 + x24498*x28862 + x24498*x28865 + x24498*x28866 - x24498*x9261 - x24498*x9262 - x24507*x28854 + x24507*x28858 + x24510*x28854 - x24510*x28858 - x24517*x28868 + x24517*x28869 + x24517*x28871 + x24528*x28868 - x24528*x28869 - x24528*x28871 + x24550*x28863 + x24562*x28863 - x24682*x5510 + x24682*x9071 + x24682*x9072 + x24682*x9169 + x24682*x9170 - x24683*x5478 - x24690*x5510 + x24690*x9071 + x24690*x9072 + x24690*x9169 + x24690*x9170 - x24691*x5478 + x24699*x9255 + x24699*x9256 - x24700*x9255 - x24700*x9256 + x24707*x5500 - x24707*x9114 + x24708*x28801 - x24712*x5500 + x24712*x9114 - x24715*x340 - x24715*x5483 + x24715*x9177 + x24720*x5500 - x24720*x9114 + x24721*x5500 - x24721*x9114 - x24722*x5500 + x24722*x9114 + x24725*x5686 - x24725*x9113 - x24725*x9255 - x24725*x9256 - x24726*x28801 + x24727*x24877 - x24727*x28690 + x24728*x24829 - x24728*x28689 + x24893 + x24951*x9147 - x24956*x9204 + x24961*x9147 - x24967*x9152 + x24973*x9152 - x24979*x9152 + x25023 + x25024 + x25025 - x25026 - x25027 - x25028 + x25029*x9116 + x25029*x9118 - x25029*x9223 - x25029*x9224 - x25032*x9202 - x25034*x9149 + x25036 + x25039 + x25041 - x25042 - x25043 - x25044 + x25045*x9202 + x25048*x9149 + x25049*x9116 + x25049*x9118 - x25049*x9223 - x25049*x9224 - x25052*x9135 + x25052*x9199 - x25053*x9202 - x25053*x9203 - x25054*x28694 - x25054*x28773 - x25054*x9149 - x25055*x28694 - x25055*x28773 - x25057 - x25058 + x25059*x28782 + x25060*x9150 + x25061*x28783 + x25062*x28784 + x25062*x28806 + x25063*x28719 - x25063*x28798 + x25064*x9202 + x25064*x9203 + x25066*x3941 + x25066*x9032 - x25066*x9187 - x25066*x9190 - x25067*x28799 - x25072*x28636 + x25072*x28774 - x25074*x28636 + x25074*x28774 - x25075*x9202 - x25075*x9203 - x25076 + x25077*x9040 - x25077*x9210 - x25079*x9051 - x25079*x9052 + x25080*x9093 + x25080*x9095 - x25087*x9093 - x25087*x9095 - x25088*x9051 - x25088*x9052 + x25091*x9093 + x25091*x9095 - x25099*x28668 - x25099*x28670 - x25100*x9093 - x25100*x9095 - x25101*x28669 - x25101*x28672 + x25102*x9093 + x25102*x9095 + x25106 - x25153*x9204 - x25482*x9191 - x25482*x9193 + x25483*x9191 + x25483*x9193 + x25498*x9133 - x25498*x9235 + x25502*x5686 - x25502*x9113 - x25502*x9256 - x25504*x5686 + x25504*x9113 + x25504*x9256 + x25516*x5497 - x25516*x9191 + x28574*x3951 + x28574*x9182 + x28600 + x28602 + x28604 - x28606 - x28608 - x28610 + x28611 + x28613 + x28614 - x28615 - x28617 - x28618 + x28619 + x28620 + x28621 + x28624*x327 - x28626*x327 - x28758*x7357 - x28759*x7357 + 72*x28763 - 32*x28767 - x28777*x5307 - 72*x28796 + 72*x28804 + x28829*x5440 + x28842*x5652 + 32*x28843 + x28848*x5157 - x28848 + x28849*x5152 - x28849*x5157 + x28849 + x28850*x5152 - x28850 - x28853*x5152 + x28853*x5157 - x28853 + x28857*x5157 - x28857 + x28864*x5152 - x28864*x5157 + x28864 + x28867*x5152 - x28867 + x28873*x293 - x28874*x5152 + x28874 + x28878) + x70*(p2_b*x24826 + p2_b*x24836 - p2_b_dot*x24786 - x13057*x19 - x13058*x19 + x13105*x24486 + x18316*x5275 - x1933*x24807 + x1940*x24821 + x1942*x24821 - x19984 - x19985 + x19987 + x2003*x25094 - x2034*x24750 - x2084*x24736 + x2084*x25083 - x22580 - x22581 - x22582 + x22584 + x22587 + x24468*x28633 - x24469*x28633 + x24474*x28627 - x24476*x28627 - x24481*x28630 + x24484*x28630 + x24495*x9111 - x24498*x9111 + x24732*x28628 - x24738*x28628 + x24784*x9040 - x24788 + x24797*x9028 + x24797*x9029 + x24811*x9028 + x24811*x9029 - x24816*x9040 - x24817*x9036 - x24817*x9037 + x24818*x9028 + x24818*x9029 + x24819*x9036 + x24819*x9037 + x24820*x3941 + x24820*x9032 - x24828*x28636 - x24831*x28636 - x24834*x28634 - x24835*x9037 + x24989 - x24994 - x24995 + x24997 + x25007 + x25009 + x25093*x479 - x25096*x479 - x25536*x9471 + x28599 + x28601 + x28603 - x28605 - x28607 - x28609 + x28623 + x28624 - x28625 - x28626 - x28629*x5152 + x28629*x5157 - x28629 + x28631*x5152 + x28631*x5157 + x28632*x5152 + x28632*x5157 - x28635*x5152 + x28635 - x28637*x9015)) + x69*(L*(-p1_b*x24786 - p1_b*x24789 - p1_i*x11328*x11613 - x11458*x19 - x11622*x24528 + x158*x24779 - x17312*x24775 + x17350 - x17351 + x17436 - x17437 + x17438 + x24468*x24774 - x24469*x24774 - x24495*x24772 + x24498*x24772 + x24581*x5448 + x24586*x5448 + x24599*x24782 + x24603*x24780 - x24760*x5152 + x24760*x5157 - x24760 - x24761*x321 + x24762*x5171 - x24762*x5174 - x24763*x321 - x24764*x5464 - 2*x24765 + x24766*x321 + x24767*x321 + x24768*x5464 + x24770*x5152 + x24770*x5157 - x24771*x5152 + x24771 - x24776*x24777 - 4*x24778 + x24781*x5464 + x24783*x5547 + x24784*x5454 - x24787*x5464 + x24792) - x106*(p1_b*x25006 + p1_b*x25010 + p1_i*x24750*x5224 + x11469*x5586 + x11572*x24528 + x11605*x19 - x11609*x19 - x11610*x19 - x11622*x24507 + x11622*x24510 + x154*x24761 + x154*x24763 - x154*x24766 - x154*x24767 + x154*x24793 - x154*x24794 + x17312*x6998 + x17400 + x17402*x25002 + x17420 - x17421 - x17422 + x17427 + x17477 + x17494 + x17495 + x17496 - x17497 - x17498 + x17504 - x24468*x24987 + x24469*x24987 - x24484*x274*x5675 + x24495*x24986 + x24495*x24991 + x24495*x24992 - x24498*x24986 + x24498*x24991 + x24498*x24992 + x24581*x5510 + x24586*x5510 - x24621*x5448 - x24626*x5448 - x24659*x24780 + x24672*x5464 - x24764*x5686 + 4*x24765 + x24768*x5686 + x24777*x24993 + 8*x24778 - x24782*x24988 - x24783*x5332 - x24788*x24877 + x24799*x321 - x24801*x321 - x24829*x25007 - x24863*x5464 + x24948 - x24977*x5336 + x24982*x5152 - x24982*x5157 + x24982 - x24983*x5152 - x24983*x5157 + x24984*x5152 - x24984 + x24985*x5478 - x24989*x5500 + x24990*x5478 - x24994*x5500 - x24995*x5500 - x24996*x5495 - x24996*x5497 + x24997*x5500 + x24998*x24999 + x25000*x5495 + x25000*x5497 + x25001*x5481*x6 + x25003*x340 + x25004*x283 - x25005*x5152 + x25005 - x25008*x5495 - x25008*x5497 + x25009*x5500 + x25021) - x123*(-x11512*x19 - x11513*x19 - x17389 - x17390 + x17401 + x17425 - x17468 - x17469 + x17478 + x17503 + x18572*x1974*x24920 + x20081 + x22661 + x24495*x24914 + x24495*x24915 + x24498*x24914 + x24498*x24915 + x24799*x286 - x24801*x286 - x24829*x24931 + x24866*x24924 - x24877*x24930 + x24909*x5510 + x24909*x5511 - x24910*x5500 - x24911*x5686 + x24912*x5686 + x24913*x5510 + x24913*x5511 - x24916*x5500 - x24917*x5529 - x24918*x5686 - x24918*x5687 + x24919*x5500 + x24921*x5686 + x24921*x5687 + x24923*x340 + x24923*x5483 + 14*x24925 + x24926*x283 - x24928*x5152 + x24928 - x24932*x5686 - x24932*x5687 + x24933*x5500 + x24948 + x24981) + x123*(p1_b*x25115 + p1_b*x25116 + p1_i*x25113 + x129*x24761 + x129*x24763 - x129*x24766 - x129*x24767 + x129*x24793 - x129*x24794 + x17312*x25112 + x17393 + x17395 + x17430*x5152 - x17430*x5157 + x17471 + x17473 + x17505 + x17506 + x17508 - x24468*x25108 - x24468*x25110 + x24469*x25108 + x24469*x25110 - x24474*x9241 + x24476*x9241 - x24498*x5707 - x24779*x3943 + x24792 + 12*x24834*x345 + x24949 + x24950 - x24952 + x24954 + x24955 + x24957 - x24959 - x24960 - x24962 - x24964 - x24965 - x24966 + x24968 + x24969 + x24970 + x24971 - x24972 - x24974 - x24975 - x24976 - x24978 + x24980 - x25011*x25013 + x25012*x25013 + x25017*x25114 + x25019*x5572 - x25107*x5706 - x25109*x293 + x25111*x5462 + x25111*x5531 + x25117*x5498 + x25118) + x168*(-x17372 - x17373 + x17386 + x17459 + x17461 - x17462 - x17463 + x20102 + x22679 - x24837 - x24838 + x24839 + x24840 - x24841 - x24842 - x24843 + x24844 + x24845 + x24846 + x24847 + x24849 + x24850 + x24852 + x24853 - x24854 - x24855 - x24857 - x24858 + x24859 + x24862 + x24864 + x24865 + x24867 + x24868 + x24869 + x24871 + x24873 + x24874 - x24875 - x24876 - x24878 - x24879 - x24880 + x24881 + x24893 + x24908) + x63*(p1_b*x1974*x25063 + p1_i_dot*x25061*x5487 - x11580*x19 - x11581*x19 - x11582*x19 - x17407 - x17408 - x17409 + x17416 - x17481 - x17482 - x17483 + x17485 + x17486 + x17493 + x20125 + x22700 + x24495*x25050 + x24495*x25051 + x24498*x25050 + x24498*x25051 + x24550*x25046 + x24562*x25046 + x24799*x327 - x24801*x327 - x24829*x25072 - x24829*x25074 + x24866*x25067 + x24872*x25068 - x24887*x25054 - x24887*x25055 + 32*x24925 - x24935*x5307 + x24942*x25059 + x24947*x25062 + x24951*x5533 - x24953*x5606 + x24958*x5606 + x24961*x5533 - x24967*x5606 + x24973*x5606 - x24979*x5606 + x25022*x5157 - x25022 - x25023 - x25024 - x25025 + x25026 + x25027 + x25028 + x25029*x5510 + x25029*x5511 - x25031*x5152 + x25031*x5157 - x25031 - x25032*x5686 - x25034*x5535 - x25036 - x25039 - x25041 + x25042 + x25043 + x25044 + x25045*x5686 + x25048*x5535 + x25049*x5510 + x25049*x5511 - x25052*x5529 - x25053*x5686 - x25053*x5687 - x25054*x5535 + x25057 + x25058 + x25060*x5539 + x25064*x5686 + x25064*x5687 + x25066*x340 + x25066*x5483 - x25070*x5152 + x25070 - x25075*x5686 - x25075*x5687 + x25076 + x25077*x5500 + x25106) + x70*(p1_b*x24826 + p1_b*x24836 + x11469*x24486 - x11476*x19 - x11477*x19 + x17312*x5275 - x17325*x5275 - x17353*x5152 + x17353*x5157 - x17356 - x17357 + x17360 - x17439 - x17440 - x17441 + x17442 + x17446 - x19546*x20*x249 + x1974*x24807 + x24474*x450 - x24476*x450 - x24481*x24808 + x24481*x24815 + x24484*x24808 - x24484*x24815 - x24488*x24827 - x24495*x24814 + x24495*x5684 + x24498*x24814 - x24498*x5684 - x24501*x9254 + x24732*x249 - x24738*x249 + x24761 + x24763 - x24766 - x24767 + x24784*x5500 + x24793 - x24794 + x24795 + x24797*x5477 + x24797*x5478 + x24798 + x24799 - x24800 - x24801 - x24802 - x24803 - x24804 - x24805*x5152 + x24805*x5157 - x24805 - x24807*x274 + x24809 + x24811*x5477 + x24811*x5478 + x24812*x5152 + x24812*x5157 + x24813*x5152 + x24813*x5157 - x24816*x5500 - x24817*x5495 - x24817*x5497 + x24818*x5477 + x24818*x5478 + x24819*x5495 + x24819*x5497 + x24820*x340 + x24820*x5483 + x24821*x281 + x24821*x283 + x24822 + x24823 - x24825*x5152 + x24825 - x24828*x24829 - x24829*x24831 - x24833*x5481 - x24835*x5497)) + x69*(L*(-p3_b*x25115 - p3_b*x25116 - p3_i*x25113 - x129*x28880 - x129*x28881 - x129*x28882 + x129*x28886 + x129*x28887 + x129*x28888 - x13365*x19 - x13538*x24528 - x18397*x25112 + x20131 - x20132 + x22702 - x22703 + x22705 + x24468*x28889 - x24469*x28889 + x24498*x9280 + x24581*x9277 + x24586*x9277 + x24599*x28893 + x24603*x28892 - x24764*x9293 + x24768*x9293 - x24776*x28890 + x24781*x9293 + x24784*x9284 - x24787*x9293 - x25111*x9279 + x25853 - x28879*x5152 + x28879*x5157 - x28879 - 2*x28883 + x28884*x5152 + x28884*x5157 - x28885*x5152 + x28885 - 4*x28891 + x28894*x5547 + x28895*x3943) - x106*(-p2_b*x26926 - p2_b*x26938 - p2_b_dot*x29034 - p2_i*x26927 + p3_b*x24584*x28627 + p3_b*x26926 + p3_b*x26938 - p3_b_dot*x25065*x444 + p3_i*x26927 - p3_i_dot*x13350*x24517 - x129*x19976*x29042 - x13350*x2042*x24785 + x13350*x29050 - x13434*x9370 + x13434*x9404 - x13441*x479*x6 + x13495*x19 - x13496*x19 - x13497*x19 + x13500*x19 + x13502*x19 + x13503*x19 + x13504*x19 - x13506*x19 - x13507*x19 - x13512*x19 - x13513*x19 - x13538*x24507 + x13538*x24510 + x13540*x25246 + x13551*x25246 - x13553*x24507 + x13553*x24510 + x13630*x24528 - x18275*x9287 + x18397*x26913 + x1933*x24596*x4023 + x20178 - x20179 - x20180 - x20181 - x20182 + x20183 + x20184 + x20186 + x20187 - x20188 - x20189 + x20202 + x20226 + x20250*x29042 + x2047*x25004 + x22745 + x22746 - x22747 - x22748 - x22749 - x22750 - x22751 + x22752 + x22753 + x22754 + x22756 - x22757 - x22758 + x22769 + x22786 + x24468*x29029 - x24468*x29030 - x24469*x29029 + x24469*x29030 - x24495*x29031 + x24495*x29035 + x24495*x29036 - x24495*x9437 - x24498*x29031 + x24498*x29035 + x24498*x29036 - x24498*x9437 - x24507*x29033 - x24507*x9380 - x24507*x9385 + x24507*x9530 + x24510*x29033 + x24510*x9380 + x24510*x9385 - x24510*x9530 - x24517*x29043 + x24528*x29043 + x24581*x9327 + x24581*x9328 - x24585*x9478 + x24586*x9327 + x24586*x9328 - x24594*x29052 - x24595*x29052 + x24598*x9478 + x24599*x28943 + x24599*x28946 + x24603*x28942 + x24603*x28944 - x24621*x9277 - x24626*x9277 - x24659*x28892 + x24672*x9293 - x24764*x9367 - x24764*x9368 - x24764*x9480 + x24768*x9367 + x24768*x9368 + x24768*x9480 + x24781*x9367 + x24781*x9368 - x24787*x9367 - x24787*x9368 - x24788*x29017 + x24790*x9478 - x24791*x9478 + x24795*x9386 - x24797*x9441 - x24797*x9442 + x24797*x9447 + x24797*x9448 + x24802*x28967 + x24803*x9386 - x24809*x9386 - x24811*x9441 - x24811*x9442 + x24811*x9447 + x24811*x9448 + x24817*x9380 + x24817*x9385 - x24817*x9530 - x24817*x9531 - x24818*x9442 + x24818*x9447 + x24818*x9448 - x24819*x9380 - x24819*x9385 + x24819*x9530 + x24819*x9531 - x24820*x4032 - x24820*x9371 + x24820*x9523 + x24820*x9526 + x24821*x9524 + x24821*x9525 - x24822*x9386 + x24823*x28966 + x24832*x480*x9290 - x24835*x9531 - x24863*x9293 + x24985*x9299 + x24985*x9300 - x24988*x28893 - x24989*x9315 + x24990*x9299 + x24990*x9300 + x24993*x28890 - x24994*x9315 - x24995*x9315 - x24996*x9311 - x24996*x9312 + x24997*x9315 + x24998*x29047 + x25000*x9311 + x25000*x9312 + x25003*x4021 - x25007*x28907 - x25008*x9311 - x25008*x9312 + x25009*x9315 - x25185*x9435 - x25186*x9434 - x25193*x9435 - x25194*x9434 - x25197*x9367 - x25197*x9368 - x25202*x9443 - x25202*x9444 + x25202*x9449 + x25202*x9450 - x25203*x9443 - x25203*x9444 + x25203*x9449 + x25203*x9450 + x25212*x9488 - x25215*x28954 - x25217*x9488 - x25222*x9527 + x25235*x9488 + x25238*x9488 - x25240*x9488 + x25243*x9470 + x25247*x29054 + x25248*x29053 - x26222*x9430 + x26222*x9432 + x26239*x9430 - x26239*x9432 - x28599*x4046 - x28601*x4046 - x28603*x4046 + x28605*x4046 + x28607*x4046 + x28609*x4046 - 18*x28673 - x28684*x28905 + x28776 + x28880*x4046 + x28881*x4046 + x28882*x4046 + 4*x28883 - x28886*x4046 - x28887*x4046 - x28888*x4046 + 8*x28891 - x28894*x5332 - x28895*x4023 + x28897*x321 - x28899*x321 - x28908*x9091 - x28936*x5336 + x28959*x29048 + x28960*x5336 + x29021*x5152 - x29021*x5157 + x29021 - x29022*x5152 - x29022*x5157 + x29023*x5152 - x29023 - x29024*x5152 + x29024*x5157 - x29024 + x29025*x5152 + x29025*x5157 + x29026*x5152 + x29026*x5157 + x29027 - x29028 - 4*x29032 + x29037*x5547 + x29038*x5547 - x29039*x5152 + x29039 + x29040*x5152 - x29040 - 8*x29041 - 6*x29044 + x29045*x5152 - x29045 - x29049*x5152 + x29049 - x29051*x5152 + x29051 + x29057 + x29068) + x123*(-p2_b*x25890 - p2_b*x28965 - p2_i*x25893 + p3_b*x28965 + p3_i*x25893 + x13105*x28945 - x13288*x24474 + x13288*x24476 - x13413*x19 - x13414*x19 + x13422*x19 + x13423*x19 + x13434*x28671 - x13434*x9131 + x13589*x24517 - x13589*x24528 + x13590*x24517 - x13590*x24528 - x13622*x24522 - x1957*x25109 + x20141*x5152 - x20141*x5157 + x20142*x5152 - x20142*x5157 - x20143 - x20144 + x20145 + x20146 + x20148 + x20154 + x20174 - x20250*x28766 + x20400 - x2064*x28930 + x22713 - x22715 - x22716 - x22718 - x22720 - x22721 + x22722 + x22724 + x22726 + x22731 + x22744 + x22934 + x24468*x28927 - x24468*x28929 - x24468*x28938 - x24469*x28927 + x24469*x28929 + x24469*x28938 - x24474*x28919 + x24476*x28919 - x24495*x28939 - x24495*x28940 + x24495*x9330 + x24495*x9332 - x24495*x9334 + x24495*x9335 - x24498*x28939 - x24498*x28940 + x24498*x9330 + x24498*x9332 + x24498*x9334 - x24498*x9335 - x24498*x9341 - x24507*x28941 + x24510*x28941 - x24517*x28958 + x24528*x28958 + x24533*x28958 - x24550*x28955 - x24562*x28947 - x24562*x28955 + x24682*x9327 + x24682*x9328 + x24690*x9327 + x24690*x9328 + x24699*x9367 + x24699*x9368 - x24700*x9367 - x24700*x9368 + x24714*x28943 + x24714*x28946 + x24718*x28942 + x24718*x28944 - x24725*x9367 - x24725*x9368 + x24764*x9385 - x24768*x9385 + x24788*x28967 + x24792 + x24834*x3999 - x24888*x28957 - x24956*x9361 - x24985*x9346 - x24985*x9347 + x24989*x9386 - x24990*x9346 - x24990*x9347 + x24994*x9386 + x24995*x9386 + x24996*x9470 - x24997*x9386 - x25000*x9470 - x25003*x9453 + x25007*x28966 + x25008*x9470 - x25009*x9386 - x25011*x28835 - x25011*x9366 + x25012*x28835 + x25012*x9366 - x25014*x28931 + x25015*x28931 + x25111*x9060 + x25114*x28685 + x25117*x9038 + x26222*x9337 - x26239*x9337 + x26242*x28963 - x28599*x4023 - x28601*x4023 - x28603*x4023 + x28605*x4023 + x28607*x4023 + x28609*x4023 + 36*x28616 - x28634*x28959 - 36*x28673 + x28688*x5572 + x28880*x4023 + x28881*x4023 + x28882*x4023 - x28886*x4023 - x28887*x4023 - x28888*x4023 - x28910 + x28912 + x28913 - x28914 - x28916 - x28917 - x28918 - x28920*x5307 + x28921*x5157 - x28921 - x28922 - x28923 + x28924 + x28925 + x28926 - 36*x28928 + x28931*x28962 - x28932 - x28933 - x28934 - x28935 - x28937 + 24*x28947 + x28948 + x28949 + x28950 + x28951 + 28*x28952 + 36*x28953 + x28956*x5152 - x28956 + x28960*x5572 + x28961 + 72*x28964 + 56*x28968 + x28976 + x29020) - x123*(x1059*x28768 - x13105*x29113 + x13434*x29113 + x13540*x24918 - x13540*x24921 + x13540*x24932 + x13551*x24911 - x13551*x24912 + x13551*x24918 - x13551*x24921 + x13551*x24932 + x13565*x19 + x13566*x19 + x13567*x19 + x13568*x19 + x13569*x19 + x13570*x19 - x13572*x19 - x13574*x19 - x13575*x19 - x13577*x19 - x13578*x19 - x13579*x19 - x154*x28623 - x154*x28624 + x154*x28625 + x154*x28626 - x19976*x29112 + x20003 + x20127*x29112 + x20149 + x20201 + x20204 + x20206 + x20208 + x20210 + x20211 + x20212 - x20214 - x20215 - x20217 - x20219 - x20220 - x20221 + x20227 + x2047*x24926 + x22606 + x22727 + x22767 + x22770 + x22771 + x22773 + x22774 + x22775 + x22776 - x22777 - x22778 - x22779 - x22781 - x22782 - x22783 + x22788 - x24495*x29095 - x24495*x29096 - x24495*x29097 - x24495*x29098 + x24495*x29102 + x24495*x29103 + x24495*x29104 + x24495*x29105 + x24495*x9505 + x24495*x9507 - x24498*x29095 - x24498*x29096 - x24498*x29097 - x24498*x29098 + x24498*x29102 + x24498*x29103 + x24498*x29104 + x24498*x29105 + x24498*x9505 + x24498*x9507 - x24503*x9116 - x24503*x9118 + x24503*x9441 + x24503*x9442 - x24505*x9116 - x24505*x9118 + x24505*x9441 + x24505*x9442 - x24507*x29099 + x24507*x29101 + x24510*x29099 - x24510*x29101 + x24512*x9040 - x24512*x9386 - x24516*x9040 + x24516*x9386 - x24519*x3941 - x24519*x9032 + x24527*x9040 - x24527*x9386 + x24529*x9135 - x24529*x9379 - x24531*x9040 + x24531*x9386 + x24532*x9202 + x24532*x9203 - x24532*x9380 - x24532*x9385 + x24535*x28636 - x24535*x28966 - x24550*x29091 - x24550*x29092 - x24562*x29091 - x24562*x29092 - x24569*x28943 - x24569*x28946 - x24573*x28942 - x24573*x28944 + x24909*x9389 + x24909*x9391 - x24909*x9435 - x24909*x9502 - x24910*x9315 + x24910*x9488 - x24911*x9480 + x24912*x9480 + x24913*x9389 + x24913*x9391 - x24913*x9435 - x24913*x9502 - x24916*x9315 + x24916*x9488 - x24917*x9407 + x24917*x9513 - x24918*x9480 - x24918*x9481 + x24919*x9315 - x24919*x9488 + x24921*x9480 + x24921*x9481 - x24923*x29080 + x24923*x4021 + x24923*x9303 - x24930*x29017 + x24930*x29054 - x24931*x28907 + x24931*x29053 - x24932*x9480 - x24932*x9481 + x24933*x9315 - x24933*x9488 - x24951*x9327 - x24951*x9328 + x24953*x9367 + x24953*x9368 - x24958*x9367 - x24958*x9368 - x24961*x9327 - x24961*x9328 + x24967*x9367 + x24967*x9368 - x24973*x9367 - x24973*x9368 + x24979*x9367 + x24979*x9368 + x25109*x29086 + x25185*x9447 + x25185*x9448 + x25193*x9447 + x25193*x9448 + x25221*x9530 + x25221*x9531 - x25237*x9530 - x25237*x9531 - x25246*x9530 - x25246*x9531 - x25395*x9470 - x25395*x9472 + x25396*x9470 + x25396*x9472 - x25411*x9527 + x25413*x9202 + x25413*x9203 - x25413*x9380 - x25413*x9385 - x25414*x9202 - x25414*x9203 + x25414*x9380 + x25414*x9385 - x25415*x9133 + x25415*x9455 + x25426*x28954 + x25427*x28636 - x25427*x28966 + x28484*x9523 + x28484*x9526 + x286*x28897 - x286*x28899 - x28682*x29109 - x28682*x29111 + x28698 + x28835*x29066 + x28838*x29116 + x28839*x29117 - x28841*x29110 + x28847 + 3*x29027 - 3*x29028 - x29037*x6741 - x29038*x6741 + 48*x29041 - 14*x29044 + x29046*x29109 + x29046*x29111 + x29068 - 48*x29078 + x29081*x6998 + x29093*x5152 - x29093*x5157 + x29093 + x29094*x5152 - x29094 - x29100*x5152 + x29100*x5157 - x29100 + x29106*x5572 + x29107*x5152 - x29107 + x29108*x5152 - x29108 + x29110*x29119 - x29114*x9482 + x29115*x9242 - x29118*x5152 + x29118 + 14*x29120 - x29121*x5152 + x29121 - x29122*x5152 + x29122 - x29123*x5152 - x29123*x5157 + x29124 - x6*x6723*x9528) + x168*(-p2_b*x28996 + x10776*x29081 - x13105*x29004 - x13260*x29050 + x13434*x28727 + x13540*x24672 + x13540*x24856 - x13540*x24863 + x13551*x24672 + x13551*x24856 - x13551*x24863 - x13562*x28800 + x13604*x19 + x13605*x19 + x13606*x19 + x13607*x19 - x13608*x19 - x13609*x19 - x13610*x19 - x13611*x19 + x1957*x28973 + x20170 + x20228 + x20229 + x20231 + x20233 - x20234 - x20235 - x20237 - x20238 + x20249 + x20391 + x2064*x28695 + x22741 + x22789 + x22790 + x22791 + x22792 - x22793 - x22794 - x22795 - x22796 + x22806 + x22928 + x24495*x29075 - x24495*x9516 - x24495*x9517 + x24498*x29075 - x24498*x9516 - x24498*x9517 + x24507*x28958 - x24510*x28958 + x24581*x9447 + x24581*x9448 + x24586*x9447 + x24586*x9448 - x24621*x9435 + x24621*x9441 + x24621*x9442 - x24621*x9502 - x24626*x9435 + x24626*x9441 + x24626*x9442 - x24626*x9502 - x24641*x9386 + x24641*x9488 + x24645*x9386 - x24645*x9488 - x24649*x29080 + x24649*x9453 - x24662*x9386 + x24662*x9488 - x24667*x9379 + x24667*x9513 + x24670*x9386 - x24670*x9488 - x24672*x9380 - x24672*x9385 - x24677*x28967 + x24677*x29054 - x24678*x28966 + x24678*x29053 + x24781*x9530 + x24781*x9531 - x24787*x9530 - x24787*x9531 - x24856*x9380 - x24856*x9385 + x24860*x28957 + x24863*x9380 + x24863*x9385 - x24882*x9562 - x24882*x9563 + x24883*x9562 + x24883*x9563 + x24890*x9523 - x24896*x9327 - x24896*x9328 + x24897*x9367 + x24897*x9368 - x24898*x9367 - x24898*x9368 - x24899*x9327 - x24899*x9328 + x24902*x9367 + x24902*x9368 - x24904*x28942 - x24904*x28944 - x24905*x9367 - x24905*x9368 - x24906*x28943 - x24906*x28946 + x24907*x9367 + x24907*x9368 - x24943*x9528 + x24946*x29086 - x25197*x9531 + x25271*x9470 - x25271*x9484 - x25271*x9486 - x25272*x9470 + x25272*x9484 + x25272*x9486 + x25285*x9455 - x25285*x9527 + x28696*x9377 + x28697*x9306 - x28723*x509 + x28742 + x28810 + x28974*x9035 + x28977 + x28978 - x28979 - x28980 + x28981 + x28982 + x28984 + x28985 + x28987 + x28988 + x28989 + x28990 - x28991 - x28992 - x28993 + x28994 + x28995 + x28997 + x28998 + x28999 + x29000*x479 + x29001 + x29002 + x29003 + x29005 + x29007 - x29008 - x29009 - x29010 - x29011 + x29012 - x29013 - x29014 - x29015 - x29016 - x29018 + x29019 + 16*x29032 - x29037*x5643 - x29038*x5643 + 32*x29041 + x29069*x5152 - x29069*x5157 + x29069 + x29070*x5152 - x29070 - x29071*x5152 - x29071*x5157 - x29072*x5152 - x29072*x5157 - x29073*x5152 + x29073*x5157 - x29073 + x29074*x5152 + x29074*x5157 + x29076*x5152 + x29076*x5157 + x29077*x5152 + x29077*x5157 - 32*x29078 + x29079*x5152 - x29079 - x29082*x5152 + x29082 - x29083*x5152 + x29083 + 32*x29084 - x29085*x5152 - x29085*x5157 + x29090) + x63*(-p2_b*x29157 + p2_b_dot*x29167 + p3_b*x29157 + p3_i_dot*x25061*x9306 - x129*x28623 - x129*x28624 + x129*x28625 + x129*x28626 - x13105*x29162 - x13157*x24708 + x13157*x24726 + x13341*x29066 + x13434*x29162 + x13540*x25053 - x13540*x25064 + x13540*x25075 + x13551*x25032 - x13551*x25045 + x13551*x25053 - x13551*x25064 + x13551*x25075 + x13591*x24708 - x13591*x24726 + x13593*x24708 - x13593*x24726 + x13632*x19 + x13633*x19 + x13634*x19 + x13635*x19 + x13636*x19 + x13637*x19 - x13638*x19 - x13639*x19 - x13640*x19 - x13641*x19 - x13642*x19 - x13643*x19 - x13644*x19 + x13645*x28839 + x18275*x28945 + x1957*x29168 - x19993*x28766 + x20251 + x20252 + x20254 + x20256 + x20257 + x20258 - x20260 - x20262 - x20264 - x20265 - x20266 - x20267 - x20268 + x20275 + x2064*x28873 + x22807 + x22808 + x22809 + x22810 + x22811 + x22812 - x22813 - x22814 - x22815 - x22817 - x22818 - x22819 - x22820 + x22831 + x22953 - x24495*x29134 - x24495*x29137 - x24495*x29138 + x24495*x29148 + x24495*x29149 + x24495*x29150 + x24495*x29151 + x24495*x29154 + x24495*x29155 - x24495*x9536 - x24495*x9537 - x24495*x9539 - x24498*x29134 - x24498*x29137 - x24498*x29138 + x24498*x29148 + x24498*x29149 + x24498*x29150 + x24498*x29151 + x24498*x29154 + x24498*x29155 - x24498*x9536 - x24498*x9537 - x24498*x9539 - x24507*x29136 + x24507*x29140 + x24510*x29136 - x24510*x29140 - x24517*x29160 + x24517*x29161 + x24517*x29163 + x24517*x29164 + x24528*x29160 - x24528*x29161 - x24528*x29163 - x24528*x29164 + x24550*x29152 + x24562*x29152 - x24682*x9118 + x24682*x9447 + x24682*x9448 - x24683*x9028 + x24683*x9346 + x24683*x9347 - x24690*x9118 + x24690*x9447 + x24690*x9448 - x24691*x9028 + x24691*x9346 + x24691*x9347 + x24699*x9530 + x24699*x9531 - x24700*x9530 - x24700*x9531 + x24707*x9040 - x24707*x9386 - x24712*x9040 + x24712*x9386 + x24714*x423*x9655 - x24715*x3941 - x24715*x9032 + x24715*x9453 + x24720*x9040 - x24720*x9386 + x24721*x9040 - x24721*x9386 - x24722*x9040 + x24722*x9386 + x24725*x9202 - x24725*x9385 - x24725*x9530 - x24725*x9531 + x24727*x28739 - x24727*x28967 + x24728*x28636 - x24728*x28966 + x24951*x9419 - x24956*x9482 + x24961*x9419 - x24967*x9424 + x24973*x9424 - x24979*x9424 + x25029*x9389 + x25029*x9391 - x25029*x9435 - x25029*x9502 - x25032*x9480 - x25034*x9421 + x25045*x9480 + x25048*x9421 + x25049*x9389 + x25049*x9391 - x25049*x9435 - x25049*x9502 - x25052*x9407 + x25052*x9513 - x25053*x9480 - x25053*x9481 - x25054*x28972 - x25054*x29052 - x25054*x9421 - x25055*x28972 - x25055*x29052 + x25059*x29064 + x25060*x9422 + x25062*x29067 + x25062*x29086 + x25064*x9480 + x25064*x9481 - x25066*x29080 + x25066*x4021 + x25066*x9303 + x25068*x29006 - x25072*x28907 + x25072*x29053 - x25074*x28907 + x25074*x29053 - x25075*x9480 - x25075*x9481 + x25077*x9315 - x25077*x9488 - x25079*x9327 - x25079*x9328 + x25080*x9367 + x25080*x9368 - x25087*x9367 - x25087*x9368 - x25088*x9327 - x25088*x9328 + x25091*x9367 + x25091*x9368 - x25099*x28942 - x25099*x28944 - x25100*x9367 - x25100*x9368 - x25101*x28943 - x25101*x28946 + x25102*x9367 + x25102*x9368 - x25153*x9482 - x25482*x9470 - x25482*x9472 + x25483*x9470 + x25483*x9472 - x25498*x9527 + x25502*x9202 - x25502*x9385 - x25504*x9202 + x25504*x9385 - x25506*x9133 + x25516*x9037 - x25516*x9470 + x28622 + x28699 - x28719*x28872 + x28766*x29166 - x28841*x29158 + x28872*x28957 + x28878 + x28897*x327 - x28899*x327 - x29037*x7357 - x29038*x7357 + 72*x29041 - 32*x29044 - x29058*x5307 - 72*x29078 + 72*x29084 + x29106*x5440 + x29119*x29158 + 32*x29120 + x29125*x5157 - x29125 - x29126 - x29127 - x29128 + x29129 + x29130 + x29131 + x29132*x5152 - x29132*x5157 + x29132 + x29133*x5152 - x29133 - x29135*x5152 + x29135*x5157 - x29135 + x29139*x5157 - x29139 - x29141 - x29142 - x29144 + x29145 + x29146 + x29147 + x29153*x5152 - x29153*x5157 + x29153 + x29156*x5152 - x29156 + x29159*x3999 - x29159*x9540 + x29165 + x29169 - x29170*x5152 + x29170 + x29171 + x29175) + x70*(p3_b*x24826 + p3_b*x24836 - p3_b_dot*x25861 + x129*x2042*x24596 - x13382*x19 - x13383*x19 + x13434*x24486 + x13552*x24474 - x13552*x24476 + x18397*x5275 - x20135*x5152 + x20135*x5157 - x20136 - x20137 + x20140 - x2038*x24807 + x2045*x24821 + x2047*x24821 - x22706 - x22707 - x22708 + x22709 + x22712 + x24468*x28904 - x24469*x28904 - x24481*x28901 + x24484*x28901 - x24495*x9309 + x24495*x9383 + x24498*x9309 - x24498*x9383 - x24500*x28909*x3943 + x24732*x9319 - x24738*x9319 + x24784*x9315 + x24797*x9299 + x24797*x9300 + x24811*x9299 + x24811*x9300 - x24816*x9315 - x24817*x9311 - x24817*x9312 + x24818*x9299 + x24818*x9300 + x24819*x9311 + x24819*x9312 + x24820*x4021 + x24820*x9303 - x24828*x28907 - x24831*x28907 - x24834*x28905 - x24835*x9312 - x25016*x510 + x25212 + x25217 - x25235 - x25238 + x25240 - x25247 + x25248 + x28880 + x28881 + x28882 - x28886 - x28887 - x28888 + x28896 + x28897 - x28898 - x28899 - x28900*x5152 + x28900*x5157 - x28900 + x28902*x5152 + x28902*x5157 + x28903*x5152 + x28903*x5157 - x28906*x5152 + x28906 - x28908*x9290)) + x69*(L*(-p4_b*x26197 - p4_b*x28088*x5652 - x13672*x19 - x13839*x24528 + x20280 - x20281 + x2140*x29193 + x22833 - x22834 + x22836 + x24468*x29186 - x24469*x29186 - x24495*x9574 + x24498*x9574 + x24581*x9571 + x24586*x9571 + x24599*x29191 + x24603*x29190 - x24764*x9587 + x24768*x9587 - x24776*x29188 + x24781*x9587 + x24784*x9580 - x24787*x9587 + x26200 - x29176*x5152 + x29176*x5157 - x29176 - x29177*x6674 - x29178*x6674 - x29179*x6674 - 2*x29180 + x29181*x5152 + x29181*x5157 - x29182*x5152 + x29182 + x29183*x6674 + x29184*x6674 + x29185*x6674 - 16*x29187 - 4*x29189 + x29192*x5547 - x29194*x327) - x106*(-p3_i*x27253 - p4_b*x24584*x9611 - p4_b_dot*x29034 + p4_i*x27253 - x13738*x9664 + x13738*x9698 + x13793*x19 - x13794*x19 - x13795*x19 + x13797*x19 + x13799*x19 + x13800*x19 + x13801*x19 - x13803*x19 - x13804*x19 - x13809*x19 - x13810*x19 - x13839*x24507 + x13839*x24510 + x13841*x25246 - x13854*x25200 + x13854*x25208 + x13854*x25246 + x13930*x24528 - x17429*x29345 - x18431*x9344 - x20128*x29347 + x20330 - x20331 - x20332 - x20333 - x20334 + x20335 + x20336 + x20338 + x20340 - x20341 - x20342 + x20358 + x20380 + x20402*x29347 - x2190*x24821 + x22877 + x22878 - x22879 - x22880 - x22881 - x22882 - x22883 + x22884 + x22885 + x22886 + x22887 - x22888 - x22889 + x22899 + x22916 - x24495*x29330 + x24495*x29332 - x24495*x29335 + x24495*x29338 - x24495*x9732 + x24498*x29330 - x24498*x29332 - x24498*x29335 + x24498*x29338 - x24498*x9732 - x24507*x29337 - x24507*x9674 - x24507*x9679 + x24507*x9817 + x24510*x29337 + x24510*x9674 + x24510*x9679 - x24510*x9817 - x24517*x29346 - x24517*x29348 + x24528*x29346 + x24528*x29348 + x24581*x9622 + x24581*x9623 + x24581*x9685 - x24585*x9766 + x24586*x9622 + x24586*x9623 + x24586*x9685 - x24594*x29355 - x24595*x29355 + x24598*x9766 + x24599*x29241 + x24599*x29244 + x24603*x29240 + x24603*x29242 - x24621*x9571 - x24626*x9571 - x24659*x29190 + x24672*x9587 - x24695*x29331 + x24695*x29334 + x24705*x29331 - x24705*x29334 - x24764*x9661 - x24764*x9662 - x24764*x9768 + x24768*x9661 + x24768*x9662 + x24768*x9768 + x24781*x9661 + x24781*x9662 - x24787*x9661 - x24787*x9662 - x24788*x29318 + x24790*x9766 - x24791*x9766 + x24795*x9680 - x24797*x9641 - x24797*x9736 + x24797*x9740 + x24797*x9741 + x24802*x29265 + x24803*x9680 + x24804*x9680 - x24809*x9680 - x24811*x9641 - x24811*x9736 + x24811*x9740 + x24811*x9741 + x24817*x9674 + x24817*x9679 - x24817*x9816 - x24818*x9641 - x24818*x9736 + x24818*x9740 + x24818*x9741 - x24819*x9674 - x24819*x9679 + x24819*x9816 - x24820*x4115 - x24820*x9665 + x24820*x9810 + x24820*x9813 + x24821*x9811 + x24821*x9812 - x24822*x9680 + x24823*x29264 - x24835*x9816 - x24863*x9587 + x24888*x29298 + x24985*x9592 - x24988*x29191 - x24989*x9609 + x24990*x9592 + x24993*x29188 - x24994*x9609 - x24996*x9605 - x24996*x9606 + x24997*x9609 + x25000*x9605 + x25000*x9606 + x25003*x4105 - x25007*x29206 - x25008*x9605 - x25008*x9606 + x25009*x9609 - x25186*x9729 - x25186*x9730 - x25194*x9729 - x25194*x9730 - x25197*x9661 - x25197*x9662 - x25202*x9643 - x25202*x9737 + x25202*x9742 + x25202*x9743 - x25203*x9643 - x25203*x9737 + x25203*x9742 + x25203*x9743 + x25212*x9776 - x25215*x29251 - x25217*x9776 - x25228*x9850 + x25232*x9850 + x25235*x9776 + x25238*x9776 - x25240*x9776 + x25243*x9758 + x25247*x29357 + x25248*x29356 + x25573*x9700 - x28765*x482*x9290 - x28880*x7713 - x28881*x7713 - x28882*x7713 + x28886*x7713 + x28887*x7713 + x28888*x7713 - x28908*x9659 + 22*x28928 - 22*x28953 - 44*x28964 + x29057 + x29177*x7713 + x29178*x7713 + x29179*x7713 + 4*x29180 - x29183*x7713 - x29184*x7713 - x29185*x7713 + 22*x29187 + 8*x29189 - x29192*x5332 + x29196*x321 - x29198*x321 + x29207*x510 - x29235*x5336 + x29255*x29352 + x29257*x5336 + 44*x29262 - 44*x29263 + 44*x29268 + x29322*x5152 - x29322*x5157 + x29322 - x29323*x5152 - x29323*x5157 + x29324*x5152 - x29324 - x29325*x5152 + x29325*x5157 - x29325 + x29326*x5152 + x29326*x5157 + x29327*x5152 + x29327*x5157 + x29328 - x29329 - 22*x29333 - 4*x29336 + x29339*x5152 + x29339*x5157 + x29340*x5547 + x29341*x5547 - x29342*x5152 + x29342 + x29343*x5152 - x29343 - 8*x29344 - 6*x29349 - x29350*x473 + x29351*x5152 - x29351 - x29353*x5152 + x29353 - x29354*x5152 + x29354 + x29360 + x29369) + x123*(-p3_i*x26243 + p3_i_dot*x29256 + x13434*x29243 - x13718*x19 - x13719*x19 + x13727*x19 + x13728*x19 + x13738*x28945 - x13738*x9404 + x13891*x24517 - x13891*x24528 + x13892*x24517 - x13892*x24528 + x20290*x5152 - x20290*x5157 + x20292*x5152 - x20292*x5157 - x20293 - x20294 + x20295 + x20296 + x20298 + x20304 + x20327 + x2038*x29227 - x20402*x29042 + x20548 - 16*x2064*x24596 - x2140*x29227 - x2190*x25573 + x22845 - x22847 - x22849 - x22850 - x22852 - x22853 + x22854 + x22856 + x22858 + x22863 + x22876 + x23062 + x24468*x29226 - x24468*x29228 - x24469*x29226 + x24469*x29228 - x24474*x29062 - x24474*x29217 + x24476*x29062 + x24476*x29217 - x24495*x29238 + x24495*x9625 + x24495*x9627 + x24495*x9632 + x24495*x9636 - x24498*x29238 + x24498*x9625 + x24498*x9627 - x24498*x9632 - x24498*x9636 - x24507*x29239 + x24510*x29239 - x24550*x29252 - x24562*x29245 - x24562*x29252 - x24581*x9641 - x24586*x9641 + x24682*x9622 + x24682*x9623 + x24690*x9622 + x24690*x9623 + x24699*x9661 + x24699*x9662 - x24700*x9661 - x24700*x9662 + x24714*x29241 + x24714*x29244 + x24718*x29240 + x24718*x29242 - x24725*x9661 - x24725*x9662 + x24764*x9679 - x24768*x9679 + x24788*x29265 + x24792 - x24890*x4115 - x24956*x9656 - x24985*x9642 + x24989*x9680 - x24990*x9642 + x24994*x9680 + x24995*x9680 + x24996*x9758 + x24996*x9760 - x24997*x9680 - x24998*x29254 - x25000*x9758 - x25000*x9760 + x25007*x29264 + x25008*x9758 + x25008*x9760 - x25009*x9680 - x25011*x29065 - x25011*x29218 + x25012*x29065 + x25012*x29218 - x25014*x29230 - x25014*x9557 + x25015*x29230 + x25015*x9557 + x25892*x29259 - x26222*x9629 + x26222*x9630 + x26239*x9629 - x26239*x9630 - x28880*x6716 - x28881*x6716 - x28882*x6716 + x28886*x6716 + x28887*x6716 + x28888*x6716 + 16*x28952 - 48*x28953 + x28963*x5652 - 96*x28964 + 32*x28968 - x29048*x29255 + x29177*x6716 + x29178*x6716 + x29179*x6716 - x29183*x6716 - x29184*x6716 - x29185*x6716 + 48*x29187 + x29194*x6709 - x29208 + x29210 + x29211 - x29212 - x29214 - x29215 - x29216 - x29219*x5307 + x29220*x5157 - x29220 - x29221 - x29222 + x29223 + x29224 + x29225 - x29229*x5440 - x29231 - x29232 - x29233 - x29234 - x29236 - x29237*x5152 - x29237*x5157 + 24*x29245 + x29246 + x29247 + x29248 + x29249 + 36*x29250 + x29253*x5152 - x29253 + x29257*x5572 + x29258 + 72*x29261 + 96*x29262 - 96*x29263 + 72*x29267 + 96*x29268 + x29278 + x29321) - x123*(x10098*x29115 - x13434*x29416 + x13738*x29416 + x13841*x24918 - x13841*x24921 + x13841*x24932 + x13854*x24911 - x13854*x24912 + x13854*x24918 - x13854*x24921 + x13854*x24932 + x13869*x19 + x13870*x19 + x13871*x19 + x13872*x19 + x13873*x19 + x13874*x19 - x13876*x19 - x13878*x19 - x13879*x19 - x13881*x19 - x13882*x19 - x13883*x19 - x154*x28896 - x154*x28897 + x154*x28898 + x154*x28899 + x18572*x2209*x9777 - x18572*x29345 - x20127*x29415 + x20152 + x20276*x29415 + x20299 + x20357 + x20360 + x20362 + x20363 + x20365 + x20366 + x20367 - x20368 - x20370 - x20372 - x20373 - x20374 - x20375 + x20381 - x2047*x24523 + x2190*x25415 + x22730 + x22855*x24519 + x22859 + x22898 + x22900 + x22901 + x22903 + x22904 + x22905 + x22906 - x22907 - x22908 - x22909 - x22911 - x22912 - x22913 + x22919 - x24495*x29399 - x24495*x29400 - x24495*x29401 + x24495*x29405 + x24495*x29406 + x24495*x29407 + x24495*x29408 - x24495*x9792 + x24495*x9793 + x24495*x9794 - x24498*x29399 - x24498*x29400 - x24498*x29401 + x24498*x29405 + x24498*x29406 + x24498*x29407 + x24498*x29408 - x24498*x9792 + x24498*x9793 + x24498*x9794 - x24503*x9389 - x24503*x9391 + x24503*x9641 + x24503*x9736 - x24505*x9389 - x24505*x9391 + x24505*x9641 + x24505*x9736 - x24507*x29402 + x24507*x29404 + x24510*x29402 - x24510*x29404 + x24512*x9315 - x24512*x9680 - x24516*x9315 + x24516*x9680 + x24517*x29417 + x24517*x29418 - x24519*x4021 - x24519*x9303 + x24527*x9315 - x24527*x9680 - x24528*x29417 - x24528*x29418 + x24529*x9407 - x24529*x9673 - x24531*x9315 + x24531*x9680 + x24532*x9480 + x24532*x9481 - x24532*x9674 - x24532*x9679 + x24535*x28907 - x24535*x29264 - x24550*x29395 - x24550*x29396 - x24562*x29395 - x24562*x29396 - x24569*x29241 - x24569*x29244 - x24573*x29240 - x24573*x29242 + x24909*x9683 + x24909*x9685 - x24909*x9788 - x24909*x9789 - x24910*x9609 + x24910*x9776 - x24911*x9768 + x24912*x9768 + x24913*x9683 + x24913*x9685 - x24913*x9788 - x24913*x9789 - x24916*x9609 + x24916*x9776 - x24917*x9702 + x24917*x9765 - x24918*x9768 - x24918*x9769 + x24919*x9609 - x24919*x9776 + x24921*x9768 + x24921*x9769 + x24923*x4105 + x24923*x9598 - x24923*x9757 - x24930*x29318 + x24930*x29357 - x24931*x29206 + x24931*x29356 - x24932*x9768 - x24932*x9769 + x24933*x9609 - x24933*x9776 - x24951*x9622 - x24951*x9623 + x24953*x9661 + x24953*x9662 - x24958*x9661 - x24958*x9662 - x24961*x9622 - x24961*x9623 + x24967*x9661 + x24967*x9662 - x24973*x9661 - x24973*x9662 + x24979*x9661 + x24979*x9662 + x25109*x29390 + x25185*x9740 + x25185*x9741 + x25193*x9740 + x25193*x9741 - x25246*x9816 - x25246*x9817 - x25395*x9758 - x25395*x9760 + x25396*x9758 + x25396*x9760 - x25409*x29412 + x25411*x9700 - x25411*x9755 + x25413*x9480 + x25413*x9481 - x25413*x9674 - x25413*x9679 - x25414*x9480 - x25414*x9481 + x25414*x9674 + x25414*x9679 + x25426*x29251 + x25427*x28907 - x25427*x29264 + x28025*x4115 + x28484*x9810 + x28484*x9813 + x286*x29196 - x286*x29198 + x28975 - x29046*x29414 + x29066*x29358 - x29114*x9770 + x29116*x29419 + x29117*x29420 - x29119*x29413 + x29124 + 3*x29328 - 3*x29329 - x29340*x6741 - x29341*x6741 + 48*x29344 - 14*x29349 + x29369 - 48*x29380 + x29397*x5152 - x29397*x5157 + x29397 + x29398*x5152 - x29398 - x29403*x5152 + x29403*x5157 - x29403 + x29409*x5572 + x29410*x5152 - x29410 + x29411*x5152 - x29411 + x29413*x29422 + x29414*x9777 - x29421*x5152 + x29421 + 14*x29423 - x29424*x5152 + x29424 - x29425*x5152 + x29425 - x29426*x5152 - x29426*x5157 + x29427) + x168*(p3_b_dot_dt*x29269 + p3_b_dot_dt*x29270 + p4_b*x28996 - x13434*x29306 - x13562*x29383 + x13738*x29004 + x13841*x24672 + x13841*x24856 - x13841*x24863 + x13854*x24672 + x13854*x24856 - x13854*x24863 + x13904*x19 + x13905*x19 + x13906*x19 + x13907*x19 - x13908*x19 - x13909*x19 - x13910*x19 - x13911*x19 - x13927*x24507 + x13927*x24510 + x20322 + x20382 + x20383 + x20385 + x20386 - x20387 - x20388 - x20389 - x20390 + x20401 + x20538 + x2064*x29274 + x2164*x28973 + x2190*x25285 - x22723*x29204 + x22855*x24649 + x22873 + x22920 + x22921 + x22922 + x22923 - x22924 - x22925 - x22926 - x22927 + x22935 + x23055 + x24495*x29376 - x24495*x9803 - x24495*x9804 + x24498*x29376 - x24498*x9803 - x24498*x9804 - x24507*x29374 + x24510*x29374 + x24517*x29384 - x24528*x29384 - x24533*x29384 + x24581*x9740 + x24586*x9740 + x24621*x9641 + x24621*x9736 - x24621*x9788 - x24621*x9789 + x24626*x9641 + x24626*x9736 - x24626*x9788 - x24626*x9789 - x24641*x9680 + x24641*x9776 + x24645*x9680 - x24645*x9776 - x24649*x9757 - x24662*x9680 + x24662*x9776 - x24667*x9673 + x24667*x9765 + x24670*x9680 - x24670*x9776 - x24672*x9674 - x24672*x9679 - x24677*x29265 + x24677*x29357 - x24678*x29264 + x24678*x29356 + x24781*x9816 - x24787*x9816 - x24856*x9674 - x24856*x9679 - x24860*x29382 + x24863*x9674 + x24863*x9679 - x24882*x9849 - x24882*x9850 + x24883*x9849 + x24883*x9850 + x24890*x9813 - x24896*x9622 - x24896*x9623 + x24897*x9661 + x24897*x9662 - x24898*x9661 - x24898*x9662 - x24899*x9622 - x24899*x9623 + x24902*x9661 + x24902*x9662 - x24904*x29240 - x24904*x29242 - x24905*x9661 - x24905*x9662 - x24906*x29241 - x24906*x29244 + x24907*x9661 + x24907*x9662 + x24943*x4115 + x24946*x29390 - x25197*x9816 + x25271*x9758 + x25271*x9760 - x25272*x9758 - x25272*x9760 - x25285*x9755 + x28974*x9602 - x29000*x539 + x29020 + x29090 + x29275*x9377 + x29276*x9306 + x29279 + x29280 - x29281 - x29282 + x29283 + x29284 + x29286 + x29287 + x29289 + x29290 + x29291 + x29292 - x29293 - x29294 - x29295 + x29296 + x29297 + x29299 + x29300 + x29301 + x29302*x509 + x29303 + x29304 + x29305 + x29307 + x29308 - x29309 - x29310 - x29311 - x29312 + x29313 - x29314 - x29315 - x29316 - x29317 - x29319 + x29320 + 16*x29336 - x29340*x5643 - x29341*x5643 + 32*x29344 + x29370*x5152 - x29370*x5157 + x29370 + x29371*x5152 - x29371 - x29372*x5152 - x29372*x5157 - x29373*x5152 - x29373*x5157 - x29375*x5152 + x29375*x5157 - x29375 + x29377*x5152 + x29377*x5157 + x29378*x5152 + x29378*x5157 + x29379*x5152 + x29379*x5157 - 32*x29380 + x29381*x5152 - x29381 - x29386*x5152 + x29386 - x29387*x5152 + x29387 + 32*x29388 - x29389*x5152 - x29389*x5157 + x29394) + x63*(p3_b_dot*x29465 + p4_b_dot*x29167 - x11433*x29006 - x129*x28896 - x129*x28897 + x129*x28898 + x129*x28899 - x13434*x29460 - x13481*x24708 + x13481*x24726 + x13645*x29420 + x13738*x29460 + x13841*x25053 - x13841*x25064 + x13841*x25075 + x13854*x25032 - x13854*x25045 + x13854*x25053 - x13854*x25064 + x13854*x25075 + x13893*x24708 - x13893*x24726 + x13932*x19 + x13933*x19 + x13934*x19 + x13935*x19 + x13936*x19 + x13937*x19 - x13938*x19 - x13939*x19 - x13940*x19 - x13941*x19 - x13942*x19 - x13943*x19 - x13944*x19 + x13945*x29066 - x18498*x29047 + x18498*x29254 + x20403 + x20404 + x20405 + x20407 + x20408 + x20409 - x20411 - x20412 - x20413 - x20415 - x20417 - x20418 - x20419 + x20426 + x2064*x29466 + x2164*x29168 + x2190*x25506 + x22824 + x22936 + x22937 + x22938 + x22939 + x22940 + x22941 - x22942 - x22943 - x22944 - x22945 - x22946 - x22947 - x22948 + x22959 + x23082 - x24495*x29439 - x24495*x29440 + x24495*x29450 + x24495*x29451 + x24495*x29452 + x24495*x29453 - x24495*x9821 - x24495*x9822 - x24495*x9824 - x24495*x9825 + x24495*x9836 + x24495*x9837 - x24498*x29439 - x24498*x29440 + x24498*x29450 + x24498*x29451 + x24498*x29452 + x24498*x29453 - x24498*x9821 - x24498*x9822 - x24498*x9824 - x24498*x9825 + x24498*x9836 + x24498*x9837 + x24507*x29418 - x24507*x29438 + x24507*x29442 - x24510*x29418 + x24510*x29438 - x24510*x29442 - x24517*x29458 + x24517*x29459 + x24517*x29461 + x24517*x29462 + x24528*x29458 - x24528*x29459 - x24528*x29461 - x24528*x29462 + x24550*x29454 + x24562*x29454 + x24682*x9641 + x24682*x9740 + x24682*x9741 - x24683*x9299 - x24683*x9300 + x24683*x9642 + x24690*x9641 + x24690*x9740 + x24690*x9741 - x24691*x9299 - x24691*x9300 + x24691*x9642 + x24699*x9816 - x24700*x9816 + x24707*x9315 - x24707*x9680 + x24708*x29385 - x24712*x9315 + x24712*x9680 + x24714*x452*x9585 - x24715*x4021 - x24715*x9303 + x24720*x9315 - x24720*x9680 + x24721*x9315 - x24721*x9680 - x24722*x9315 + x24722*x9680 + x24725*x9480 - x24725*x9679 - x24725*x9816 - x24725*x9817 - x24726*x29385 + x24727*x29017 - x24727*x29265 + x24728*x28907 - x24728*x29264 + x24951*x9714 - x24956*x9770 + x24961*x9714 - x24967*x9719 + x24973*x9719 - x24979*x9719 + x25029*x9683 + x25029*x9685 - x25029*x9788 - x25029*x9789 - x25032*x9768 - x25034*x9716 + x25045*x9768 + x25048*x9716 + x25049*x9683 + x25049*x9685 - x25049*x9788 - x25049*x9789 - x25052*x9702 + x25052*x9765 - x25053*x9768 - x25053*x9769 - x25054*x29273 - x25054*x29355 - x25054*x9716 - x25055*x29273 - x25055*x29355 + x25059*x29366 + x25060*x9717 + x25061*x29367 + x25062*x29368 + x25062*x29390 + x25063*x29298 - x25063*x29382 + x25064*x9768 + x25064*x9769 + x25066*x4105 + x25066*x9598 - x25066*x9757 - x25072*x29206 + x25072*x29356 - x25074*x29206 + x25074*x29356 - x25075*x9768 - x25075*x9769 + x25077*x9609 - x25077*x9776 - x25079*x9622 - x25079*x9623 + x25080*x9661 + x25080*x9662 - x25087*x9661 - x25087*x9662 - x25088*x9622 - x25088*x9623 + x25091*x9661 + x25091*x9662 - x25099*x29240 - x25099*x29242 - x25100*x9661 - x25100*x9662 - x25101*x29241 - x25101*x29244 + x25102*x9661 + x25102*x9662 - x25153*x9770 - x25482*x9758 - x25482*x9760 + x25483*x9758 + x25483*x9760 - x25497*x29412 + x25498*x9700 - x25498*x9755 + x25502*x9480 - x25502*x9679 - x25504*x9480 + x25504*x9679 + x25516*x9312 - x25516*x9758 + x28574*x4115 + x28976 - x29042*x29166 + x29042*x29464 - x29119*x29457 + x29126 + x29127 + x29128 - x29129 - x29130 - x29131 + x29141 + x29142 + x29144 - x29145 - x29146 - x29147 - x29165 - x29169 - x29171 + x29175 + x29196*x327 - x29198*x327 - x29340*x7357 - x29341*x7357 + 72*x29344 - 32*x29349 - x29361*x5307 - 72*x29380 + 72*x29388 + x29409*x5440 + x29422*x29457 + 32*x29423 + x29428*x5157 - x29428 - x29429 - x29430 - x29431 + x29432 + x29433 + x29434 + x29435*x5152 - x29435*x5157 + x29435 + x29436*x5152 - x29436 - x29437*x5152 + x29437*x5157 - x29437 + x29441*x5157 - x29441 - x29443 - x29444 - x29446 + x29447 + x29448 + x29449 + x29455*x5152 - x29455*x5157 + x29455 + x29456*x5152 - x29456 + x29463 + x29467 - x29468*x5152 + x29468 + x29469 + x29473) + x70*(p4_b*x24826 + p4_b*x24836 - p4_b_dot*x24710 - p4_i_dot*x29207 - x10*x29204 - x13686*x19 - x13687*x19 + x13738*x24486 + x18469*x5275 - x20284*x5152 + x20284*x5157 - x20285 - x20286 + x20288 - x2140*x24807 + x2147*x24821 + x2149*x24821 + x2209*x24946 - x22837 - x22838 - x22839 + x22841 + x22844 + x24468*x29203 - x24469*x29203 + x24474*x9611 - x24476*x9611 - x24481*x29200 + x24484*x29200 - x24495*x9604 + x24495*x9677 + x24498*x9604 - x24498*x9677 + x24641 + x24645 - x24662 + x24670 - x24677 + x24678 + x24732*x9612 - x24738*x9612 + x24784*x9609 + x24797*x9592 + x24797*x9593 + x24811*x9592 + x24811*x9593 - x24816*x9609 - x24817*x9605 - x24817*x9606 + x24818*x9592 + x24818*x9593 + x24819*x9605 + x24819*x9606 + x24820*x4105 + x24820*x9598 - x24828*x29206 - x24831*x29206 - x24835*x9606 - x25571*x540 - x26206 - x26210*x9607 + x29177 + x29178 + x29179 - x29183 - x29184 - x29185 + x29195 + x29196 - x29197 - x29198 - x29199*x5152 + x29199*x5157 - x29199 + x29201*x5152 + x29201*x5157 + x29202*x5152 + x29202*x5157 - x29205*x5152 + x29205)) + x69*(L*(-p5_b*x26527 - x13970*x19 - x14131*x24528 + x20430 - x20431 + x2245*x28111 + x22961 - x22962 + x22964 + x24468*x29484 - x24469*x29484 - x24495*x9861 + x24498*x9861 + x24581*x9858 + x24586*x9858 + x24599*x29489 + x24603*x29488 - x24764*x9874 + x24768*x9874 - x24776*x29486 + x24781*x9874 + x24784*x9867 - x24787*x9874 + x26531 - x29474*x5152 + x29474*x5157 - x29474 - x29475*x5224 - x29476*x5224 - x29477*x5224 - 2*x29478 + x29479*x5152 + x29479*x5157 - x29480*x5152 + x29480 + x29481*x5224 + x29482*x5224 + x29483*x5224 - 20*x29485 - 4*x29487 + x29490*x5547 - x29491*x8518 - 40*x29492) - x106*(-p4_b_dot*x29632 - p4_i*x29638 - p5_b_dot*x25065*x503 + p5_i*x29638 - x10017*x25186 - x10017*x25194 - x10018*x25185 - x10018*x25193 - x10020*x24495 - x10020*x24498 - x10024*x24797 - x10024*x24811 - x10024*x24818 - x10025*x24797 - x10025*x24811 - x10025*x24818 - x10026*x25202 - x10026*x25203 - x10027*x25202 - x10027*x25203 + x10030*x24797 + x10030*x24811 + x10030*x24818 + x10031*x24797 + x10031*x24811 + x10031*x24818 + x10032*x25202 + x10032*x25203 + x10033*x25202 + x10033*x25203 + x10052*x25243 - x10060*x24585 + x10060*x24598 + x10060*x24790 - x10060*x24791 - x10062*x24764 + x10062*x24768 + x10070*x25212 - x10070*x25217 + x10070*x25235 + x10070*x25238 - x10070*x25240 - x10093*x25222 + x10110*x24820 + x10111*x24821 + x10112*x24821 + x10113*x24820 + x10116*x24507 - x10116*x24510 - x10117*x24817 + x10117*x24819 - x10117*x24835 - x10148*x25228 + x10148*x25232 - x129*x20276*x29644 - x13951*x29642 - x14034*x9953 + x14034*x9988 + x14089*x19 - x14090*x19 - x14091*x19 + x14093*x19 + x14095*x19 + x14096*x19 + x14097*x19 - x14099*x19 - x14100*x19 - x14105*x19 - x14106*x19 - x14131*x24507 + x14131*x24510 + x14133*x25246 - x14144*x25200 + x14144*x25208 + x14144*x25246 + x14215*x24528 + x158*x29641*x9971 - x18431*x9870 + x20480 - x20481 - x20482 - x20483 - x20484 + x20485 + x20486 + x20487 + x20489 - x20490 - x20491 + x20504 + x20525 + x20550*x29644 + x2254*x25004 + x23004 + x23005 - x23006 - x23007 - x23008 - x23009 - x23010 + x23011 + x23012 + x23013 + x23014 - x23015 - x23016 + x23026 + x23043 - x24495*x29625 + x24495*x29627 - x24495*x29629 + x24495*x29633 + x24495*x29634 + x24498*x29625 - x24498*x29627 - x24498*x29629 + x24498*x29633 + x24498*x29634 - x24507*x29631 - x24507*x9962 - x24507*x9967 + x24510*x29631 + x24510*x9962 + x24510*x9967 - x24517*x29643 - x24517*x29645 + x24528*x29643 + x24528*x29645 + x24581*x9910 + x24581*x9911 + x24586*x9910 + x24586*x9911 - x24594*x29651 - x24595*x29651 + x24599*x29539 + x24599*x29542 + x24603*x29538 + x24603*x29540 - x24621*x9858 - x24626*x9858 - x24659*x29488 + x24672*x9874 - x24695*x29626 + x24695*x29628 + x24705*x29626 - x24705*x29628 - x24764*x9950 - x24764*x9951 + x24768*x9950 + x24768*x9951 + x24781*x9950 + x24781*x9951 - x24787*x9950 - x24787*x9951 - x24788*x29613 + x24795*x9968 + x24802*x29562 + x24803*x9968 + x24804*x9968 - x24809*x9968 + x24817*x9962 + x24817*x9967 - x24819*x9962 - x24819*x9967 - x24820*x4199 - x24820*x9954 - x24822*x9968 + x24823*x29561 + x24832*x540*x9883 - x24863*x9874 + x24985*x9879 + x24985*x9880 - x24988*x29489 - x24989*x9900 + x24990*x9879 + x24990*x9880 + x24993*x29486 - x24994*x9900 - x24995*x9900 - x24996*x9894 - x24996*x9895 + x24997*x9900 + x25000*x9894 + x25000*x9895 + x25003*x4189 - x25007*x29504 - x25008*x9894 - x25008*x9895 + x25009*x9900 - x25197*x9950 - x25197*x9951 - x25215*x29549 + x25247*x29653 + x25248*x29652 - x28765*x512*x9596 - x29177*x8032 - x29178*x8032 - x29179*x8032 + x29183*x8032 + x29184*x8032 + x29185*x8032 - 26*x29187 - 52*x29262 - 52*x29268 + 26*x29333 + x29360 + x29475*x8032 + x29476*x8032 + x29477*x8032 + 4*x29478 - x29481*x8032 - x29482*x8032 - x29483*x8032 + 26*x29485 + 8*x29487 - x29490*x5332 + 52*x29492 + x29494*x321 - x29496*x321 - x29505*x9659 - 26*x29524 - x29532*x5336 + x29554*x29648 + x29556*x5336 + 52*x29560 + x29617*x5152 - x29617*x5157 + x29617 - x29618*x5152 - x29618*x5157 + x29619*x5152 - x29619 - x29620*x5152 + x29620*x5157 - x29620 + x29621*x5152 + x29621*x5157 + x29622*x5152 + x29622*x5157 + x29623 - x29624 - 4*x29630 + x29635*x5547 + x29636*x5547 - x29637*x5152 + x29637 + x29639*x5152 - x29639 - 8*x29640 - 6*x29646 + x29647*x5152 - x29647 - x29649*x5152 + x29649 - x29650*x5152 + x29650 + x29657 + x29666) + x123*(-p4_i*x26572 + p5_i_dot*x26871 - x10035*x25003 + x10052*x24996 - x10052*x25000 + x10052*x25008 + x10054*x25008 - x10091*x25004 + x13738*x29541 - x14015*x19 - x14016*x19 + x14023*x19 + x14024*x19 + x14034*x29243 - x14034*x9698 + x14177*x24517 - x14177*x24528 + x14178*x24517 - x14178*x24528 + x20441*x5152 - x20441*x5157 + x20443*x5152 - x20443*x5157 - x20445 - x20446 + x20447 + x20448 + x20450 + x20456 + x20476 - x20550*x29347 + x20698 + x22972 - x22974 - x22976 - x22977 - x22979 - x22980 + x22981 + x22983 + x22985 + x22990 + x23003 + x23192 + x24468*x29523 - x24468*x29525 - x24469*x29523 + x24469*x29525 - x24474*x29519 - x24474*x9947 + x24476*x29519 + x24476*x9947 - x24481*x9930 - x24495*x29535 - x24495*x29536 + x24495*x9913 + x24495*x9915 + x24495*x9924 - x24498*x29535 - x24498*x29536 + x24498*x9913 + x24498*x9915 - x24498*x9924 - x24504*x9930 - x24507*x29537 + x24510*x29537 - x24517*x29553 + x24528*x29553 - x24550*x29550 - x24562*x29543 - x24562*x29550 + x24682*x9910 + x24682*x9911 + x24690*x9910 + x24690*x9911 + x24699*x9950 + x24699*x9951 - x24700*x9950 - x24700*x9951 + x24714*x29539 + x24714*x29542 + x24718*x29538 + x24718*x29540 - x24725*x9950 - x24725*x9951 + x24764*x9967 - x24768*x9967 + x24788*x29562 + x24792 - x24888*x29552 - x24956*x9944 - x24985*x9929 + x24989*x9968 - x24990*x9929 + x24994*x9968 - x24997*x9968 + x25007*x29561 - x25009*x9968 - x25011*x9948 - x25011*x9949 + x25012*x9948 + x25012*x9949 - x25014*x29527 - x25014*x29534 + x25015*x29534 - x26222*x9917 + x26222*x9918 + x26222*x9920 + x26239*x9917 - x26239*x9918 - x26239*x9920 + x28962*x29527 + x28962*x29534 - x29177*x7034 - x29178*x7034 - x29179*x7034 + x29183*x7034 + x29184*x7034 + x29185*x7034 - 60*x29187 - x29229*x6389 + 20*x29250 + 40*x29261 - 120*x29262 + 40*x29267 - 120*x29268 + 60*x29333 - x29352*x29554 + x29475*x7034 + x29476*x7034 + x29477*x7034 - x29481*x7034 - x29482*x7034 - x29483*x7034 + 60*x29485 + x29491*x8589 + 120*x29492 - x29506 + x29508 + x29509 - x29510 - x29512 - x29513 - x29514 - x29515*x5307 + x29516*x5157 - x29516 - x29517 - x29518 + x29520 + x29521 + x29522 - 60*x29524 - 44*x29526 - x29528 - x29529 - x29530 - x29531 - x29533 + 24*x29543 + x29544 + x29545 + x29546 + x29547 + 44*x29548 + x29551*x5152 - x29551 + x29555*x9611 + x29556*x5572 + x29557 + 88*x29559 + 120*x29560 + 88*x29564 + x29572 + x29616) - x123*(-x10018*x24909 - x10018*x24913 + x10024*x24503 + x10024*x24505 + x10025*x24503 + x10025*x24505 + x10030*x25185 + x10030*x25193 + x10031*x25185 + x10031*x25193 + x10037*x25415 - x10052*x25395 + x10052*x25396 - x10054*x25395 + x10054*x25396 + x10059*x24917 - x10062*x24911 + x10062*x24912 - x10062*x24918 + x10062*x24921 - x10062*x24932 - x10063*x24918 + x10063*x24921 - x10063*x24932 + x10070*x24910 + x10070*x24916 - x10070*x24919 - x10070*x24933 - x10083*x24909 - x10083*x24913 + x10086*x24495 + x10086*x24498 + x10087*x24495 + x10087*x24498 + x10088*x24495 + x10088*x24498 - x10093*x25411 + x10098*x29716 - x10099*x29383 + x10110*x28484 + x10113*x28484 - x10116*x25246 - x10117*x25246 + x1160*x29350 - x13738*x29713 + x14034*x29713 + x14133*x24918 - x14133*x24921 + x14133*x24932 + x14144*x24911 - x14144*x24912 + x14144*x24918 - x14144*x24921 + x14144*x24932 + x14155*x19 + x14156*x19 + x14157*x19 + x14158*x19 + x14159*x19 + x14160*x19 - x14162*x19 - x14164*x19 - x14165*x19 - x14167*x19 - x14168*x19 - x14169*x19 - x154*x29195 - x154*x29196 + x154*x29197 + x154*x29198 - x20276*x29712 + x20302 + x20427*x29712 + x20451 + x20503 + x20506 + x20508 + x20509 + x20511 + x20512 + x20513 - x20515 - x20516 - x20517 - x20519 - x20520 - x20521 + x20526 + x2254*x24926 + x22862 + x22982*x24519 + x22986 + x23024 + x23027 + x23028 + x23030 + x23031 + x23032 + x23033 - x23034 - x23035 - x23036 - x23038 - x23039 - x23040 + x23046 - x24495*x29694 - x24495*x29695 - x24495*x29696 - x24495*x29697 + x24495*x29701 + x24495*x29702 + x24495*x29703 - x24498*x29694 - x24498*x29695 - x24498*x29696 - x24498*x29697 + x24498*x29701 + x24498*x29702 + x24498*x29703 - x24503*x9683 - x24503*x9685 - x24505*x9683 - x24505*x9685 - x24507*x29698 + x24507*x29700 + x24510*x29698 - x24510*x29700 + x24512*x9609 - x24512*x9968 - x24516*x9609 + x24516*x9968 + x24517*x29714 + x24517*x29715 - x24519*x4105 - x24519*x9598 + x24527*x9609 - x24527*x9968 - x24528*x29714 - x24528*x29715 + x24529*x9702 - x24529*x9961 - x24531*x9609 + x24531*x9968 + x24532*x9768 + x24532*x9769 - x24532*x9962 - x24532*x9967 + x24535*x29206 - x24535*x29561 - x24550*x29690 - x24550*x29691 - x24562*x29690 - x24562*x29691 - x24569*x29539 - x24569*x29542 - x24573*x29538 - x24573*x29540 + x24909*x9973 + x24909*x9975 - x24910*x9900 + x24913*x9973 + x24913*x9975 - x24916*x9900 - x24917*x9991 + x24919*x9900 + x24923*x4189 + x24923*x9885 - x24930*x29613 + x24930*x29653 - x24931*x29504 + x24931*x29652 + x24933*x9900 - x24951*x9910 - x24951*x9911 + x24953*x9950 + x24953*x9951 - x24958*x9950 - x24958*x9951 - x24961*x9910 - x24961*x9911 + x24967*x9950 + x24967*x9951 - x24973*x9950 - x24973*x9951 + x24979*x9950 + x24979*x9951 + x25109*x29685 - x25409*x29708 + x25413*x9768 + x25413*x9769 - x25413*x9962 - x25413*x9967 - x25414*x9768 - x25414*x9769 + x25414*x9962 + x25414*x9967 - x25415*x9700 + x25426*x29549 + x25427*x29206 - x25427*x29561 + x286*x29494 - x286*x29496 + x29277 + x29358*x29719 + x29419*x29717 + x29420*x29718 - x29422*x29709 + x29427 + 3*x29623 - 3*x29624 - x29635*x6741 - x29636*x6741 + 48*x29640 - 14*x29646 + x29666 - 48*x29676 + x29692*x5152 - x29692*x5157 + x29692 + x29693*x5152 - x29693 - x29699*x5152 + x29699*x5157 - x29699 + x29704*x5572 + x29705*x5152 - x29705 + x29706*x5152 - x29706 - x29707*x9777 + x29707*x9971 + x29709*x29721 - x29710*x6723 - x29711*x9777 + x29711*x9971 - x29720*x5152 + x29720 + 14*x29722 - x29723*x5152 + x29723 - x29724*x5152 + x29724 - x29725*x5152 - x29725*x5157 + x29726) + x168*(-p4_b*x24649*x512 + p5_b_dot_dt*x29269 + p5_b_dot_dt*x29270 - x10018*x24621 - x10018*x24626 + x10024*x24621 + x10024*x24626 + x10025*x24621 + x10025*x24626 + x10031*x24581 + x10031*x24586 + x10035*x24649 + x10037*x25285 + x10052*x25271 - x10052*x25272 + x10059*x24667 - x10066*x25271 + x10066*x25272 - x10068*x25271 + x10068*x25272 + x10070*x24641 - x10070*x24645 + x10070*x24662 - x10070*x24670 - x10083*x24621 - x10083*x24626 - x10093*x25285 - x10102*x24495 - x10102*x24498 - x10103*x24495 - x10103*x24498 + x10110*x24890 - x10114*x24943 + x10117*x24781 - x10117*x24787 - x10117*x25197 - x10148*x24882 + x10148*x24883 - x10149*x24882 + x10149*x24883 + x10253*x29275 - x13738*x29600 + x14034*x29306 + x14133*x24672 + x14133*x24856 - x14133*x24863 + x14144*x24672 + x14144*x24856 - x14144*x24863 - x14153*x29383 + x14190*x19 + x14191*x19 + x14192*x19 + x14193*x19 - x14194*x19 - x14195*x19 - x14196*x19 - x14197*x19 + x18347*x2209*x9971 + x20472 + x20527 + x20528 + x20530 + x20532 - x20533 - x20534 - x20535 - x20537 + x20549 + x20689 + x2164*x29569 + x2271*x29274 + x22982*x24649 + x23000 + x23047 + x23048 + x23049 + x23050 - x23051 - x23052 - x23053 - x23054 + x23063 + x23185 + x24495*x29673 + x24498*x29673 + x24507*x29553 - x24510*x29553 + x24517*x29679 - x24528*x29679 - x24533*x29679 - x24641*x9968 + x24645*x9968 - x24662*x9968 - x24667*x9961 + x24670*x9968 - x24672*x9962 - x24672*x9967 - x24677*x29562 + x24677*x29653 - x24678*x29561 + x24678*x29652 - x24856*x9962 - x24856*x9967 - x24860*x29678 + x24863*x9962 + x24863*x9967 - x24896*x9910 - x24896*x9911 + x24897*x9950 + x24897*x9951 - x24898*x9950 - x24898*x9951 - x24899*x9910 - x24899*x9911 + x24902*x9950 + x24902*x9951 - x24904*x29538 - x24904*x29540 - x24905*x9950 - x24905*x9951 - x24906*x29539 - x24906*x29542 + x24907*x9950 + x24907*x9951 + x24946*x29685 + x29276*x9889 - x29302*x569 + x29321 + x29394 + x29570*x9602 + x29573 + x29574 - x29575 - x29576 + x29577 + x29578 + x29580 + x29581 + x29583 + x29584 + x29585 + x29586 - x29587 - x29588 - x29589 + x29590 + x29591 + x29593 + x29594 + x29595 + x29596*x539 + x29597 + x29598 + x29599 + x29601 + x29603 - x29604 - x29605 - x29606 - x29607 + x29608 - x29609 - x29610 - x29611 - x29612 - x29614 + x29615 + 16*x29630 - x29635*x5643 - x29636*x5643 + 32*x29640 + x29667*x5152 - x29667*x5157 + x29667 + x29668*x5152 - x29668 - x29669*x5152 - x29669*x5157 - x29670*x5152 - x29670*x5157 - x29671*x5152 + x29671*x5157 - x29671 + x29672*x5152 + x29672*x5157 + x29674*x5152 + x29674*x5157 + x29675*x5152 + x29675*x5157 - 32*x29676 + x29677*x5152 - x29677 - x29681*x5152 + x29681 - x29682*x5152 + x29682 + 32*x29683 - x29684*x5152 - x29684*x5157 + x29689) + x63*(p4_b_dot*x29764 + p4_b_dot*x29765 + p5_b_dot*x29465 + x10003*x24951 + x10003*x24961 - x10005*x25034 + x10005*x25048 - x10005*x25054 + x10006*x25060 - x10008*x24967 + x10008*x24973 - x10008*x24979 - x10018*x25029 - x10018*x25049 + x10030*x24682 + x10030*x24690 + x10031*x24682 + x10031*x24690 + x10035*x24715 - x10052*x25482 + x10052*x25483 - x10052*x25516 - x10054*x25482 + x10054*x25483 + x10059*x25052 - x10062*x25032 + x10062*x25045 - x10062*x25053 + x10062*x25064 - x10062*x25075 - x10063*x25053 + x10063*x25064 - x10063*x25075 - x10064*x24956 - x10064*x25153 - x10070*x25077 - x10083*x25029 - x10083*x25049 - x10093*x25498 - x10116*x24725 + x10117*x24699 - x10117*x24700 - x10117*x24725 - x10121*x24495 - x10121*x24498 - x10122*x24495 - x10122*x24498 - x10124*x24495 - x10124*x24498 - x10125*x24495 - x10125*x24498 + x10134*x24683 + x10134*x24691 + x10136*x24495 + x10136*x24498 + x10137*x24495 + x10137*x24498 + x10241*x24714*x482 - x129*x29195 - x129*x29196 + x129*x29197 + x129*x29198 - x13738*x29759 - x13781*x24708 + x13781*x24726 + x13945*x29719 + x14034*x29759 + x14133*x25053 - x14133*x25064 + x14133*x25075 + x14144*x25032 - x14144*x25045 + x14144*x25053 - x14144*x25064 + x14144*x25075 + x14179*x24708 - x14179*x24726 + x14217*x19 + x14218*x19 + x14219*x19 + x14220*x19 + x14221*x19 + x14222*x19 - x14223*x19 - x14224*x19 - x14225*x19 - x14226*x19 - x14227*x19 - x14228*x19 - x14229*x19 + x14230*x29420 + x18431*x29541 + x20551 + x20552 + x20553 + x20555 + x20556 + x20557 - x20558 - x20560 - x20561 - x20562 - x20563 - x20564 - x20565 + x20572 + x2164*x29766 + x2271*x29466 + x22952 + x23064 + x23065 + x23066 + x23067 + x23068 + x23069 - x23070 - x23071 - x23072 - x23073 - x23075 - x23076 - x23077 + x23088 + x23211 + x2387*x29768 - x24495*x29738 - x24495*x29739 + x24495*x29749 + x24495*x29750 + x24495*x29751 + x24495*x29752 - x24498*x29738 - x24498*x29739 + x24498*x29749 + x24498*x29750 + x24498*x29751 + x24498*x29752 + x24507*x29714 - x24507*x29737 + x24507*x29741 - x24510*x29714 + x24510*x29737 - x24510*x29741 - x24517*x29757 + x24517*x29758 + x24517*x29760 + x24517*x29761 + x24528*x29757 - x24528*x29758 - x24528*x29760 - x24528*x29761 + x24550*x29753 + x24562*x29753 - x24682*x9685 - x24683*x9592 + x24683*x9929 - x24690*x9685 - x24691*x9592 + x24691*x9929 + x24707*x9609 - x24707*x9968 + x24708*x29680 - x24712*x9609 + x24712*x9968 - x24715*x4105 - x24715*x9598 + x24720*x9609 - x24720*x9968 + x24721*x9609 - x24721*x9968 - x24722*x9609 + x24722*x9968 + x24725*x9768 - x24725*x9967 - x24726*x29680 + x24727*x29318 - x24727*x29562 + x24728*x29206 - x24728*x29561 + x25029*x9973 + x25029*x9975 + x25049*x9973 + x25049*x9975 - x25052*x9991 - x25054*x29568 - x25054*x29651 - x25055*x29568 - x25055*x29651 + x25059*x29663 + x25061*x29664 + x25062*x29665 + x25062*x29685 - x25063*x29678 + x25066*x4189 + x25066*x9885 + x25068*x29602 - x25072*x29504 + x25072*x29652 - x25074*x29504 + x25074*x29652 + x25077*x9900 - x25079*x9910 - x25079*x9911 + x25080*x9950 + x25080*x9951 - x25087*x9950 - x25087*x9951 - x25088*x9910 - x25088*x9911 + x25091*x9950 + x25091*x9951 - x25099*x29538 - x25099*x29540 - x25100*x9950 - x25100*x9951 - x25101*x29539 - x25101*x29542 + x25102*x9950 + x25102*x9951 - x25497*x29708 + x25502*x9768 - x25502*x9967 - x25504*x9768 + x25504*x9967 - x25506*x9700 + x25516*x9606 - x28563*x29710 - x28872*x29298 + x28872*x29552 + x29278 - x29347*x29464 - x29422*x29756 + x29429 + x29430 + x29431 - x29432 - x29433 - x29434 + x29443 + x29444 + x29446 - x29447 - x29448 - x29449 - x29463 - x29467 - x29469 + x29473 + x29494*x327 - x29496*x327 - x29635*x7357 - x29636*x7357 + 72*x29640 - 32*x29646 - x29658*x5307 - 72*x29676 + 72*x29683 + x29704*x5440 + x29721*x29756 + 32*x29722 + x29727*x5157 - x29727 - x29728 - x29729 - x29730 + x29731 + x29732 + x29733 + x29734*x5152 - x29734*x5157 + x29734 + x29735*x5152 - x29735 - x29736*x5152 + x29736*x5157 - x29736 + x29740*x5157 - x29740 - x29742 - x29743 - x29745 + x29746 + x29747 + x29748 + x29754*x5152 - x29754*x5157 + x29754 + x29755*x5152 - x29755 + x29762 + x29767 - x29769*x5152 + x29769 + x29770 + x29774) + x70*(p5_b*x24826 + p5_b*x24836 - p5_b_dot*x25006 - x10*x512*x6998 - x10344*x26543 - x13982*x19 - x13983*x19 + x14034*x24486 + x18547*x5275 - x20435*x5152 + x20435*x5157 - x20436 - x20437 + x20440 - x2245*x24807 + x2252*x24821 + x2254*x24821 - x22960 - x22965 - x22966 + x22968 + x22971 + x2387*x29055 + x24468*x29502 - x24469*x29502 + x24474*x29497 - x24476*x29497 - x24481*x29499 + x24484*x29499 - x24495*x9892 + x24495*x9965 + x24498*x9892 - x24498*x9965 + x24512 + x24516 - x24527 + x24531 - x24534 + x24535 + x24732*x9902 - x24738*x9902 + x24784*x9900 + x24797*x9879 + x24797*x9880 + x24811*x9879 + x24811*x9880 - x24816*x9900 - x24817*x9894 - x24817*x9895 + x24818*x9879 + x24818*x9880 + x24819*x9894 + x24819*x9895 + x24820*x4189 + x24820*x9885 - x24828*x29504 - x24831*x29504 - x24835*x9895 - x26537 - x26541*x570 + x29475 + x29476 + x29477 - x29481 - x29482 - x29483 + x29493 + x29494 - x29495 - x29496 - x29498*x5152 + x29498*x5157 - x29498 + x29500*x5152 + x29500*x5157 + x29501*x5152 + x29501*x5157 - x29503*x5152 + x29503 - x29505*x9883)) + x69*(L*(-p6_i*x25566 + x10156*x24581 + x10156*x24586 - x10159*x24495 + x10159*x24498 + x10165*x24784 - x10172*x24764 + x10172*x24768 + x10172*x24781 - x10172*x24787 - x14256*x19 - x14422*x24528 + x20577 - x20578 + x23090 - x23091 + x23093 + x24468*x29785 - x24469*x29785 + x24599*x29790 + x24603*x29789 - x24776*x29787 + x26849 - x29775*x5152 + x29775*x5157 - x29775 - x29776*x3943 - x29777*x3943 - x29778*x3943 - 2*x29779 + x29780*x5152 + x29780*x5157 - x29781*x5152 + x29781 + x29782*x3943 + x29783*x3943 + x29784*x3943 - 24*x29786 - 4*x29788 + x29791*x5547 + 24*x29792 - 48*x29793 - x29794*x7995) - x106*(-p5_b*x24501*x8634 - p5_i*x27918 - p6_b_dot*x29632 + p6_i*x27918 - x10156*x24621 - x10156*x24626 + x10172*x24672 - x10172*x24863 + x10179*x24985 + x10179*x24990 - x10192*x24996 + x10192*x25000 - x10192*x25008 - x10193*x24996 + x10193*x25000 - x10193*x25008 - x10197*x24989 - x10197*x24994 - x10197*x24995 + x10197*x24997 + x10197*x25009 + x10199*x29555 - x10199*x29763 + x10208*x24581 + x10208*x24586 + x10209*x24581 + x10209*x24586 - x10228*x24797 - x10228*x24811 - x10228*x24818 - x10230*x25202 - x10230*x25203 - x10242*x29505 - x10248*x24764 + x10248*x24768 + x10248*x24781 - x10248*x24787 - x10248*x25197 - x10249*x24764 + x10249*x24768 + x10249*x24781 - x10249*x24787 - x10249*x25197 - x10251*x14321 - x10252*x24820 - x10261*x24507 + x10261*x24510 + x10261*x24817 - x10261*x24819 - x10266*x24507 + x10266*x24510 + x10266*x24817 - x10266*x24819 + x10267*x24795 + x10267*x24803 + x10267*x24804 - x10267*x24809 - x10267*x24822 + x10271*x24581 + x10271*x24586 + x10284*x14321 + x10286*x25573 - x10315*x25186 - x10315*x25194 - x10317*x24495 - x10317*x24498 - x10321*x24797 - x10321*x24811 - x10321*x24818 - x10322*x25202 - x10322*x25203 + x10325*x24797 + x10325*x24811 + x10325*x24818 + x10326*x24797 + x10326*x24811 + x10326*x24818 + x10327*x25202 + x10327*x25203 + x10328*x25202 + x10328*x25203 + x10343*x25243 - x10351*x24481 - x10351*x24504 - x10352*x24585 + x10352*x24598 + x10352*x24790 - x10352*x24791 - x10354*x24764 + x10354*x24768 + x10362*x25212 - x10362*x25217 + x10362*x25235 - x10362*x25240 + x10395*x24820 + x10396*x24821 + x10397*x24821 + x10398*x24820 - x10401*x24817 + x10401*x24819 - x10401*x24835 + x10402*x24507 - x10402*x24510 - x10433*x25228 + x10433*x25232 + x14375*x19 - x14376*x19 - x14377*x19 + x14379*x19 + x14381*x19 + x14382*x19 + x14383*x19 - x14385*x19 - x14386*x19 - x14391*x19 - x14392*x19 - x14422*x24507 + x14422*x24510 + x14424*x25246 - x14437*x25200 + x14437*x25208 + x14437*x25246 + x14513*x24528 - x17429*x29942 - x18583*x9927 + x20629 - x20630 - x20631 - x20632 - x20633 + x20634 + x20635 + x20637 + x20639 - x20640 - x20641 + x20655 + x20677 + x20700*x29950 + x23134 + x23135 - x23136 - x23137 - x23138 - x23139 - x23140 + x23141 + x23142 + x23143 + x23144 - x23145 - x23146 + x23156 + x23173 - x2396*x24821 + x24468*x29929 - x24468*x29931 - x24469*x29929 + x24469*x29931 - x24495*x29928 + x24495*x29930 - x24495*x29932 + x24495*x29935 + x24498*x29928 - x24498*x29930 - x24498*x29932 + x24498*x29935 - x24507*x29934 + x24510*x29934 - x24517*x29943 - x24517*x29944 + x24528*x29943 + x24528*x29944 - x24594*x29953 - x24595*x29953 + x24599*x29842 + x24599*x29845 + x24603*x29841 + x24603*x29843 - x24659*x29789 - x24788*x29916 + x24802*x29862 - x24820*x4282 + x24823*x29861 + x24888*x29948 - x24988*x29790 + x24993*x29787 + x25003*x4272 - x25007*x29806 - x25215*x29852 + x25247*x29955 + x25248*x29954 - x28765*x542*x9883 - x29475*x8342 - x29476*x8342 - x29477*x8342 + x29481*x8342 + x29482*x8342 + x29483*x8342 - 30*x29485 + 30*x29524 - 60*x29560 + x29657 + x29776*x8342 + x29777*x8342 + x29778*x8342 + 4*x29779 - x29782*x8342 - x29783*x8342 - x29784*x8342 + 30*x29786 + 8*x29788 - x29791*x5332 - 30*x29792 + 60*x29793 + x29794*x8634 + x29796*x321 - x29798*x321 + x29807*x570 - x29836*x5336 + x29855*x29949 + x29856*x5336 + x29920*x5152 - x29920*x5157 + x29920 - x29921*x5152 - x29921*x5157 + x29922*x5152 - x29922 - x29923*x5152 + x29923*x5157 - x29923 + x29924*x5152 + x29924*x5157 + x29925*x5152 + x29925*x5157 + x29926 - x29927 - 4*x29933 + x29936*x5152 + x29936*x5157 + x29937*x5547 + x29938*x5547 - x29939*x5152 + x29939 + x29940*x5152 - x29940 - 8*x29941 - 6*x29945 - x29946*x533 + x29947*x5152 - x29947 - x29951*x5152 + x29951 - x29952*x5152 + x29952 + x29959 + x29967) + x123*(-p5_i*x26885 + x10208*x24682 + x10208*x24690 + x10209*x24682 + x10209*x24690 + x10211*x24495 + x10211*x24498 + x10213*x24495 + x10213*x24498 - x10216*x26222 + x10216*x26239 + x10217*x26222 - x10217*x26239 + x10219*x26222 - x10219*x26239 + x10223*x24495 - x10223*x24498 - x10228*x24581 - x10228*x24586 - x10229*x24985 - x10229*x24990 - x10244*x24956 - x10247*x24474 + x10247*x24476 + x10248*x24699 - x10248*x24700 - x10248*x24725 + x10249*x24699 - x10249*x24700 - x10249*x24725 + x10266*x24764 - x10266*x24768 + x10267*x24989 + x10267*x24994 + x10267*x24995 - x10267*x24997 - x10267*x25009 + x10343*x24996 - x10343*x25000 + x10343*x25008 + x10345*x24996 - x10345*x25000 + x10345*x25008 + x14034*x29844 - x14230*x25011 + x14230*x25012 - x14301*x19 - x14302*x19 + x14310*x19 + x14311*x19 + x14321*x29541 - x14321*x9988 + x14473*x24517 - x14473*x24528 + x14474*x24517 - x14474*x24528 - x14510*x29642 + x20587*x5152 - x20587*x5157 + x20588*x5152 - x20588*x5157 - x20590 - x20591 + x20592 + x20593 + x20595 + x20601 + x20626 - x20700*x29644 + x20846 - x2271*x25062 + x23102 - x23104 - x23106 - x23107 - x23109 - x23110 + x23111 + x23113 + x23115 + x23120 + x23133 + x23320 - x2396*x25573 - x24474*x29812 + x24476*x29812 - x24495*x29839 - x24498*x29839 - x24507*x29840 + x24510*x29840 - x24550*x29853 - x24557*x29830 - x24562*x29846 - x24562*x29853 - x24695*x29826 + x24695*x29827 + x24705*x29826 - x24705*x29827 + x24714*x29842 + x24714*x29845 + x24718*x29841 + x24718*x29843 - x24732*x29813 + x24738*x29813 + x24788*x29862 + x24792 - x24890*x4282 + x25007*x29861 - x25014*x29829 + x25015*x29829 + x25545*x29830 + x25565*x29656 + x28962*x29829 - x29475*x7333 - x29476*x7333 - x29477*x7333 + x29481*x7333 + x29482*x7333 + x29483*x7333 - 72*x29485 - 144*x29492 + 72*x29524 + 24*x29548 + 48*x29559 - 144*x29560 + 48*x29564 - x29648*x29855 + x29776*x7333 + x29777*x7333 + x29778*x7333 - x29782*x7333 - x29783*x7333 - x29784*x7333 + 72*x29786 - 72*x29792 + 144*x29793 - x29808 + x29810 + x29811 - x29814 - x29816 - x29817 - x29818 - x29819*x5307 + x29820*x5157 - x29820 - x29821 - x29822 + x29823 + x29824 + x29825 - 52*x29828 - x29832 - x29833 - x29834 - x29835 - x29837 - x29838*x5152 - x29838*x5157 + 24*x29846 + x29847 + x29848 + x29849 + x29850 + 52*x29851 + x29854*x5152 - x29854 + x29856*x5572 + x29857 + 72*x29858 + 104*x29860 + 104*x29864 + 144*x29866 + x29876 + x29919) - x123*(x10062*x24532 + x10062*x25413 - x10062*x25414 + x10063*x24532 + x10063*x25413 - x10063*x25414 - x10099*x29980 + x10185*x24923 - x10197*x24910 - x10197*x24916 + x10197*x24919 + x10197*x24933 - x10208*x24951 - x10208*x24961 - x10209*x24951 - x10209*x24961 + x10228*x24503 + x10228*x24505 + x10248*x24953 - x10248*x24958 + x10248*x24967 - x10248*x24973 + x10248*x24979 + x10249*x24953 - x10249*x24958 + x10249*x24967 - x10249*x24973 + x10249*x24979 - x10260*x24529 - x10261*x24532 - x10261*x25413 + x10261*x25414 - x10266*x24532 - x10266*x25413 + x10266*x25414 - x10267*x24512 + x10267*x24516 - x10267*x24527 + x10267*x24531 + x10269*x24909 + x10269*x24913 + x10271*x24909 + x10271*x24913 + x10286*x25411 - x10288*x24917 + x10321*x24503 + x10321*x24505 + x10325*x25185 + x10325*x25193 + x10326*x25185 + x10326*x25193 - x10339*x25411 - x10341*x24923 - x10343*x25395 + x10343*x25396 + x10350*x24917 - x10354*x24911 + x10354*x24912 - x10354*x24918 + x10354*x24921 - x10354*x24932 - x10355*x24918 + x10355*x24921 - x10355*x24932 + x10362*x24910 + x10362*x24916 - x10362*x24919 - x10362*x24933 - x10371*x24909 - x10371*x24913 - x10372*x24909 - x10372*x24913 - x10375*x24495 - x10375*x24498 + x10376*x24495 + x10376*x24498 + x10377*x24495 + x10377*x24498 + x10387*x29716 + x10395*x28484 + x10398*x28484 + x10401*x25221 - x10401*x25237 - x10401*x25246 - x10402*x25246 - x14034*x30015 + x14321*x30015 + x14424*x24918 - x14424*x24921 + x14424*x24932 + x14437*x24911 - x14437*x24912 + x14437*x24918 - x14437*x24921 + x14437*x24932 + x14452*x19 + x14453*x19 + x14454*x19 + x14455*x19 + x14456*x19 + x14457*x19 - x14459*x19 - x14461*x19 - x14462*x19 - x14464*x19 - x14465*x19 - x14466*x19 - x154*x29493 - x154*x29494 + x154*x29495 + x154*x29496 + x18572*x2415*x29865 - x18572*x29942 - x20427*x29831 - x20427*x30014 + x20454 + x20573*x30014 + x20596 + x20654 + x20657 + x20659 + x20660 + x20662 + x20663 + x20664 - x20665 - x20667 - x20668 - x20669 - x20670 - x20671 + x20678 - x2254*x24523 + x22989 + x23112*x24519 + x23116 + x23155 + x23157 + x23158 + x23160 + x23161 + x23162 + x23163 - x23164 - x23165 - x23166 - x23168 - x23169 - x23170 + x23176 + x2396*x25415 - x24495*x29997 - x24495*x29998 - x24495*x29999 + x24495*x30004 + x24495*x30005 + x24495*x30006 + x24495*x30007 - x24498*x29997 - x24498*x29998 - x24498*x29999 + x24498*x30004 + x24498*x30005 + x24498*x30006 + x24498*x30007 - x24503*x9973 - x24503*x9975 - x24505*x9973 - x24505*x9975 - x24507*x30000 + x24507*x30002 + x24507*x30003 + x24510*x30000 - x24510*x30002 - x24510*x30003 + x24512*x9900 - x24516*x9900 + x24517*x30016 - x24519*x4189 - x24519*x9885 + x24527*x9900 - x24528*x30016 + x24529*x9991 - x24531*x9900 + x24535*x29504 - x24535*x29861 - x24550*x29993 - x24550*x29994 - x24562*x29993 - x24562*x29994 - x24569*x29842 - x24569*x29845 - x24573*x29841 + x24923*x4272 - x24930*x29916 + x24930*x29955 - x24931*x29806 + x24931*x29954 + x25109*x29988 - x25409*x30011 + x25426*x29852 + x25427*x29504 - x25427*x29861 + x28025*x4282 + x286*x29796 - x286*x29798 + x29571 + x29717*x30017 + x29718*x29965 - x29721*x30012 + x29726 + x29865*x30013 + 3*x29926 - 3*x29927 - x29937*x6741 - x29938*x6741 + 48*x29941 - 14*x29945 + x29967 - 48*x29978 + x29995*x5152 - x29995*x5157 + x29995 + x29996*x5152 - x29996 - x30001*x5152 + x30001*x5157 - x30001 + x30008*x5572 + x30009*x5152 - x30009 + x30010*x5152 - x30010 + x30012*x30020 - x30013*x9971 + 6*x30018*x9889 - x30019*x5152 + x30019 + 14*x30021 - x30022*x5152 + x30022 - x30023*x5152 + x30023 - x30024*x5152 - x30024*x5157 + x30025) + x168*(-p5_b*x24649*x542 + p5_b_dot_dt*x29867 + p5_b_dot_dt*x29868 + x10189*x29570 - x10208*x24896 - x10208*x24899 - x10209*x24896 - x10209*x24899 + x10228*x24621 + x10228*x24626 + x10248*x24897 - x10248*x24898 + x10248*x24902 - x10248*x24905 + x10248*x24907 + x10249*x24897 - x10249*x24898 + x10249*x24902 - x10249*x24905 + x10249*x24907 - x10260*x24667 - x10261*x24672 - x10261*x24856 + x10261*x24863 - x10266*x24672 - x10266*x24856 + x10266*x24863 - x10267*x24641 + x10267*x24645 - x10267*x24662 + x10267*x24670 + x10321*x24621 + x10321*x24626 + x10325*x24581 + x10325*x24586 - x10339*x25285 - x10341*x24649 + x10343*x25271 - x10343*x25272 + x10345*x25271 - x10345*x25272 + x10350*x24667 - x10360*x25271 + x10360*x25272 + x10362*x24641 - x10362*x24645 + x10362*x24662 - x10362*x24670 - x10371*x24621 - x10371*x24626 - x10372*x24621 - x10372*x24626 - x10389*x24495 - x10389*x24498 - x10390*x24495 - x10390*x24498 + x10395*x24890 + x10398*x24890 + x10401*x24781 - x10401*x24787 - x10401*x25197 - x10432*x24882 + x10432*x24883 - x10433*x24882 + x10433*x24883 - x14034*x29904 - x14153*x29980 + x14321*x29600 + x14424*x24672 + x14424*x24856 - x14424*x24863 + x14437*x24672 + x14437*x24856 - x14437*x24863 + x14485*x19 + x14486*x19 + x14487*x19 + x14488*x19 - x14489*x19 - x14490*x19 - x14491*x19 - x14492*x19 + x20621 + x20679 + x20680 + x20682 + x20684 - x20685 - x20686 - x20687 - x20688 + x20699 + x20837 + x23112*x24649 + x23130 + x23177 + x23178 + x23179 + x23180 - x23181 - x23182 - x23183 - x23184 + x23193 + x23313 + x2370*x29569 + x2396*x25285 - x24507*x29972 + x24510*x29972 + x24517*x29981 - x24528*x29981 - x24533*x29981 - x24677*x29862 + x24677*x29955 - x24678*x29861 + x24678*x29954 + x24888*x29982 - x24904*x29841 - x24904*x29843 - x24906*x29842 - x24906*x29845 + x24943*x4282 + x24946*x29988 + x29592*x29865 - x29596*x599 + x29616 + x29689 + x29874*x9889 + x29877 + x29878 - x29879 - x29880 + x29881 + x29882 + x29884 + x29885 + x29887 + x29888 + x29889 + x29890 - x29891 - x29892 - x29893 + x29894 + x29895 - x29896*x9971 + x29897 + x29898 + x29899 + x29901 + x29902 + x29903 + x29905 + x29906 - x29907 - x29908 - x29909 - x29910 + x29911 - x29912 - x29913 - x29914 - x29915 - x29917 + x29918 + 16*x29933 - x29937*x5643 - x29938*x5643 + 32*x29941 + x29968*x5152 - x29968*x5157 + x29968 + x29969*x5152 - x29969 - x29970*x5152 - x29970*x5157 - x29971*x5152 - x29971*x5157 - x29973*x5152 + x29973*x5157 - x29973 + x29974*x5152 + x29974*x5157 + x29975*x5152 + x29975*x5157 + x29976*x5152 + x29976*x5157 + x29977*x5152 + x29977*x5157 - 32*x29978 + x29979*x5152 - x29979 + x29983*x569 - x29984*x5152 + x29984 - x29985*x5152 + x29985 + 32*x29986 - x29987*x5152 - x29987*x5157 + x29992) + x63*(-p5_b_dot*x29764 + p6_b_dot*x29765 + p6_i_dot*x10189*x25061 + x10062*x24725 + x10062*x25502 - x10062*x25504 + x10170*x24714*x512 + x10185*x25066 + x10197*x25077 - x10208*x25079 - x10208*x25088 - x10209*x25079 - x10209*x25088 + x10228*x24682 + x10228*x24690 + x10229*x24683 + x10229*x24691 + x10248*x25080 - x10248*x25087 + x10248*x25091 - x10248*x25100 + x10248*x25102 + x10249*x25080 - x10249*x25087 + x10249*x25091 - x10249*x25100 + x10249*x25102 - x10266*x24725 - x10266*x25502 + x10266*x25504 - x10267*x24707 + x10267*x24712 - x10267*x24720 - x10267*x24721 + x10267*x24722 + x10269*x25029 + x10269*x25049 + x10271*x25029 + x10271*x25049 + x10286*x25498 - x10288*x25052 + x10300*x24951 + x10300*x24961 - x10302*x25034 + x10302*x25048 - x10302*x25054 + x10303*x25060 - x10305*x24967 + x10305*x24973 - x10305*x24979 + x10325*x24682 + x10325*x24690 + x10326*x24682 + x10326*x24690 - x10339*x25498 - x10341*x25066 - x10343*x25482 + x10343*x25483 - x10343*x25516 - x10345*x25482 + x10345*x25483 + x10350*x25052 - x10354*x25032 + x10354*x25045 - x10354*x25053 + x10354*x25064 - x10354*x25075 - x10355*x25053 + x10355*x25064 - x10355*x25075 - x10356*x24956 - x10356*x25153 - x10362*x25077 - x10371*x25029 - x10371*x25049 - x10372*x25029 - x10372*x25049 + x10395*x28574 + x10401*x24699 - x10401*x24700 - x10401*x24725 - x10402*x24725 - x10406*x24495 - x10406*x24498 - x10407*x24495 - x10407*x24498 - x10409*x24495 - x10409*x24498 - x10410*x24495 - x10410*x24498 + x10421*x24495 + x10421*x24498 + x10422*x24495 + x10422*x24498 - x11433*x29602 - x129*x29493 - x129*x29494 + x129*x29495 + x129*x29496 - x14034*x30059 - x14075*x24708 + x14075*x24726 + x14230*x29965 + x14321*x30059 + x14424*x25053 - x14424*x25064 + x14424*x25075 + x14437*x25032 - x14437*x25045 + x14437*x25053 - x14437*x25064 + x14437*x25075 + x14475*x24708 - x14475*x24726 + x14515*x19 + x14516*x19 + x14517*x19 + x14518*x19 + x14519*x19 + x14520*x19 - x14521*x19 - x14522*x19 - x14523*x19 - x14524*x19 - x14525*x19 - x14526*x19 - x14527*x19 + x14528*x29719 + x20574*x29644 + x20701 + x20702 + x20703 + x20705 + x20706 + x20707 - x20709 - x20710 - x20711 - x20712 - x20714 - x20715 - x20716 + x20723 + x23081 + x23194 + x23195 + x23196 + x23197 + x23198 + x23199 - x23200 - x23201 - x23202 - x23203 - x23204 - x23205 - x23206 + x23217 + x23340 + x2370*x29766 + x2396*x25506 - x2415*x29768 + x2415*x30065 - x24495*x30037 - x24495*x30038 + x24495*x30048 + x24495*x30049 + x24495*x30050 + x24495*x30051 - x24498*x30037 - x24498*x30038 + x24498*x30048 + x24498*x30049 + x24498*x30050 + x24498*x30051 + x24507*x30016 - x24507*x30036 + x24507*x30040 - x24510*x30016 + x24510*x30036 - x24510*x30040 - x24517*x30057 + x24517*x30058 + x24517*x30060 + x24517*x30061 + x24528*x30057 - x24528*x30058 - x24528*x30060 - x24528*x30061 + x24550*x30052 + x24562*x30052 - x24683*x9879 - x24683*x9880 - x24691*x9879 - x24691*x9880 + x24707*x9900 + x24708*x30064 - x24712*x9900 - x24715*x4189 - x24715*x9885 + x24720*x9900 + x24721*x9900 - x24722*x9900 - x24726*x30064 + x24727*x29613 - x24727*x29862 + x24728*x29504 - x24728*x29861 - x25054*x29872 - x25054*x29953 - x25055*x29872 - x25055*x29953 + x25059*x29873 + x25062*x29966 + x25062*x29988 + x25066*x4272 - x25072*x29806 + x25072*x29954 - x25074*x29806 + x25074*x29954 - x25099*x29841 - x25099*x29843 - x25101*x29842 - x25101*x29845 - x25497*x30011 + x25516*x9895 + x28574*x4282 + x28872*x29982 + x29572 - x29721*x30055 + x29728 + x29729 + x29730 - x29731 - x29732 - x29733 + x29742 + x29743 + x29745 - x29746 - x29747 - x29748 - x29762 - x29767 - x29770 + x29774 + x29796*x327 - x29798*x327 + x29865*x30056 - x29937*x7357 - x29938*x7357 + 72*x29941 - 32*x29945 - x29960*x5307 - 72*x29978 + 72*x29986 + x30008*x5440 + x30020*x30055 + 32*x30021 + x30026*x5157 - x30026 - x30027 - x30028 - x30029 + x30030 + x30031 + x30032 + x30033*x5152 - x30033*x5157 + x30033 + x30034*x5152 - x30034 - x30035*x5152 + x30035*x5157 - x30035 + x30039*x5157 - x30039 - x30041 - x30042 - x30044 + x30045 + x30046 + x30047 + x30053*x5152 - x30053*x5157 + x30053 + x30054*x5152 - x30054 - x30056*x9971 + x30062 + x30063 - x30066*x5152 + x30066 + x30067 + x30071) + x70*(p6_b*x24826 + p6_b*x24836 - p6_b_dot*x25115 - p6_i_dot*x29807 + x10179*x24797 + x10179*x24811 + x10179*x24818 + x10180*x24797 + x10180*x24811 + x10180*x24818 + x10185*x24820 + x10190*x24498 - x10192*x24817 + x10192*x24819 - x10193*x24817 + x10193*x24819 - x10193*x24835 + x10197*x24784 - x10197*x24816 + x10199*x24474 - x10199*x24476 + x10264*x24495 - x10264*x24498 - x10637*x26856 - x14269*x19 - x14270*x19 + x14321*x24486 + x18621*x5275 - x20582*x5152 + x20582*x5157 - x20583 - x20584 + x20586 - x23094 - x23095 - x23096 + x23098 + x23101 - x2346*x24807 + x2353*x24821 + x2355*x24821 + x2415*x25109 + x24468*x29804 - x24469*x29804 - x24481*x29801 + x24484*x29801 + x24707 + x24712 - x24720 - x24721 + x24722 - x24727 + x24728 + x24732*x29799 - x24738*x29799 + x24820*x4272 - x24828*x29806 - x24831*x29806 - x25111*x599 - x25114*x600 - 12*x28105*x542 + x29776 + x29777 + x29778 - x29782 - x29783 - x29784 + x29795 + x29796 - x29797 - x29798 - x29800*x5152 + x29800*x5157 - x29800 + x29802*x5152 + x29802*x5157 + x29803*x5152 + x29803*x5157 - x29805*x5152 + x29805)) + x69*(L*(p7_b*x30086 + x10441*x24581 + x10441*x24586 - x10444*x26222 + x10444*x26239 + x10450*x24784 - x10457*x24764 + x10457*x24768 + x10457*x24781 - x10457*x24787 - x14553*x19 - x14715*x24528 + x20728 - x20729 + x23219 - x23220 + x23222 + x24599*x30087 - x24695*x30082 + x24705*x30082 - x24776*x30084 + x27176 - x30072*x5152 + x30072*x5157 - x30072 - x30073*x7622 - x30074*x7622 - x30075*x7622 - 2*x30076 + x30077*x5152 + x30077*x5157 - x30078*x5152 + x30078 + x30079*x7622 + x30080*x7622 + x30081*x7622 - 28*x30083 - 4*x30085 + x30088*x5547 + 28*x30089 - 56*x30090 - 28*x30092 - 56*x30094) - x106*(p6_b*x30086 - p6_b_dot*x30235 - p7_b_dot*x25065*x563 - x0*x14534*x30244 - x10183*x28765*x572 - x10242*x30107 - x10441*x24621 - x10441*x24626 - x10453*x18583 + x10457*x24672 - x10457*x24863 + x10464*x24985 + x10464*x24990 + x10465*x24985 + x10465*x24990 + x10468*x24832*x600 - x10478*x24996 + x10478*x25000 - x10478*x25008 - x10479*x24996 + x10479*x25000 - x10479*x25008 - x10484*x24989 - x10484*x24994 - x10484*x24995 + x10484*x24997 + x10484*x25009 + x10494*x24581 + x10494*x24586 + x10495*x24581 + x10495*x24586 - x10533*x24764 + x10533*x24768 + x10533*x24781 - x10533*x24787 - x10533*x25197 - x10534*x24764 + x10534*x24768 + x10534*x24781 - x10534*x24787 - x10534*x25197 - x10536*x14616 - x10537*x24820 - x10548*x24507 + x10548*x24510 + x10548*x24817 - x10548*x24819 - x10553*x24507 + x10553*x24510 + x10553*x24817 - x10553*x24819 + x10554*x24795 + x10554*x24803 + x10554*x24804 - x10554*x24809 - x10554*x24822 + x10571*x14616 - x10597*x26222 + x10597*x26239 + x10598*x26222 - x10598*x26239 - x10600*x29776 - x10600*x29777 - x10600*x29778 + x10600*x29782 + x10600*x29783 + x10600*x29784 + x10600*x30073 + x10600*x30074 + x10600*x30075 - x10600*x30079 - x10600*x30080 - x10600*x30081 - x10601*x25186 - x10601*x25194 - x10602*x25185 - x10602*x25193 - x10604*x24495 - x10604*x24498 - x10608*x24797 - x10608*x24811 - x10608*x24818 - x10609*x24797 - x10609*x24811 - x10609*x24818 - x10610*x25202 - x10610*x25203 - x10611*x25202 - x10611*x25203 + x10614*x24797 + x10614*x24811 + x10614*x24818 + x10615*x24797 + x10615*x24811 + x10615*x24818 + x10616*x25202 + x10616*x25203 + x10617*x25202 + x10617*x25203 + x10636*x25243 - x10644*x24585 + x10644*x24598 + x10644*x24790 - x10644*x24791 - x10646*x24764 + x10646*x24768 + x10654*x25212 - x10654*x25217 + x10654*x25235 + x10654*x25238 - x10654*x25240 - x10679*x25222 + x10692*x24820 + x10693*x24821 + x10694*x24821 + x10695*x24820 + x10699*x24507 - x10699*x24510 - x10700*x24817 + x10700*x24819 - x10700*x24835 - x10731*x25228 + x10731*x25232 + x11613*x30205 - x129*x20573*x30246 + x14534*x30169 - x14534*x30245 + x14672*x19 - x14673*x19 - x14674*x19 + x14676*x19 + x14678*x19 + x14679*x19 + x14680*x19 - x14682*x19 - x14683*x19 - x14688*x19 - x14689*x19 - x14715*x24507 + x14715*x24510 + x14717*x25246 - x14728*x25200 + x14728*x25246 + x14799*x24528 + x158*x30093*x30244 + x20778 - x20779 - x20780 - x20781 - x20782 + x20783 + x20784 + x20785 + x20787 - x20788 - x20789 + x20802 + x20824 + x20848*x30246 + x23262 + x23263 - x23264 - x23265 - x23266 - x23267 - x23268 + x23269 + x23270 + x23272 + x23273 - x23274 - x23275 + x23286 + x23302 - x24495*x30232 + x24495*x30237 + x24495*x30238 - x24498*x30232 + x24498*x30237 + x24498*x30238 - x24507*x30234 + x24510*x30234 - x24517*x30247 + x24528*x30247 - x24594*x30253 - x24595*x30253 + x24599*x30142 + x24599*x30146 + x24603*x30143 - x24695*x30228 + x24695*x30229 + x24705*x30228 - x24705*x30229 - x24788*x30216 + x24802*x30164 - x24820*x4364 + x24823*x30163 + x24993*x30084 + x25003*x4355 - x25007*x30106 - x25215*x30153 + x25247*x30255 + x25248*x30254 - 34*x29786 + 34*x29792 - 68*x29793 - 34*x29858 - 68*x29866 + x29959 + 4*x30076 + 34*x30083 + 8*x30085 - x30088*x5332 - 34*x30089 + 68*x30090 + 34*x30092 + 68*x30094 + x30096*x321 - x30098*x321 - x30135*x5336 + x30158*x30250 + x30159*x5336 + x30220*x5152 - x30220*x5157 + x30220 - x30221*x5152 - x30221*x5157 + x30222*x5152 - x30222 - x30223*x5152 + x30223*x5157 - x30223 + x30224*x5152 + x30224*x5157 + x30225*x5152 + x30225*x5157 + x30226 - x30227 - x30230*x5336 - 8*x30231 - 4*x30233 + 3*x30236 + x30239*x5547 + x30240*x5547 - x30241*x5152 + x30241 + x30242*x5152 - x30242 - 8*x30243 - 6*x30248 + x30249*x5152 - x30249 - x30251*x5152 + x30251 - x30252*x5152 + x30252 + x30261 + x30271) + x123*(-x10284*x14616 + x10494*x24682 + x10494*x24690 + x10495*x24682 + x10495*x24690 + x10497*x24495 + x10497*x24498 + x10499*x24495 + x10499*x24498 - x10501*x26222 + x10501*x26239 + x10502*x26222 - x10502*x26239 + x10504*x26222 - x10504*x26239 + x10508*x26222 - x10508*x26239 - x10513*x24985 - x10513*x24990 - x10514*x24985 - x10514*x24990 - x10527*x24474 + x10527*x24476 - x10528*x25011 + x10528*x25012 - x10529*x24956 - x10532*x25011 + x10532*x25012 + x10533*x24699 - x10533*x24700 - x10533*x24725 + x10534*x24699 - x10534*x24700 - x10534*x24725 + x10553*x24764 - x10553*x24768 + x10554*x24989 + x10554*x24994 + x10554*x24995 - x10554*x24997 - x10554*x25009 - x10619*x25003 + x10636*x24996 - x10636*x25000 + x10636*x25008 + x10638*x25008 - x10677*x25004 + x14321*x30145 - x14598*x19 - x14599*x19 + x14606*x19 + x14607*x19 + x14616*x29844 + x14761*x24517 - x14761*x24528 + x14762*x24517 - x14762*x24528 + x20739*x5152 - x20739*x5157 + x20741*x5152 - x20741*x5157 - x20742 - x20743 + x20744 + x20745 + x20747 + x20753 + x20774 - x20848*x29950 + x20996 + x23230 - x23232 - x23234 - x23235 - x23237 - x23238 + x23239 + x23241 + x23243 + x23248 + x23261 + x23451 - x2370*x28930 - x24474*x30117 + x24476*x30117 - x24495*x30137 - x24495*x30138 - x24498*x30137 - x24498*x30138 - x24507*x30139 + x24510*x30139 - x24517*x30157 + x24528*x30157 - x24550*x30154 - x24562*x30147 - x24562*x30154 - x24695*x30125 + x24695*x30126 + x24705*x30125 - x24705*x30126 + x24714*x30142 + x24714*x30146 + x24788*x30164 + x24792 - x24888*x30156 + x25007*x30163 - x25014*x30128 - x25014*x30129 + x25015*x30128 + x25015*x30129 + x28962*x30128 + x28962*x30129 - x29776*x7656 - x29777*x7656 - x29778*x7656 + x29782*x7656 + x29783*x7656 + x29784*x7656 - 84*x29786 + 84*x29792 - 168*x29793 + 28*x29851 - 84*x29858 + 56*x29860 + 56*x29864 - 168*x29866 - x29949*x30158 + x30073*x7656 + x30074*x7656 + x30075*x7656 - x30079*x7656 - x30080*x7656 - x30081*x7656 + 84*x30083 - 84*x30089 + 168*x30090 + 84*x30092 + 168*x30094 - x30108 + x30110 + x30111 - x30112 - x30114 - x30115 - x30116 - x30118*x5307 + x30119*x5157 - x30119 - x30120 - x30121 + x30122 + x30123 + x30124 - 60*x30127 - x30131 - x30132 - x30133 - x30134 - x30136 + x30141*x5322 + x30144*x5322 + 24*x30147 + x30148 + x30149 + x30150 + x30151 + 60*x30152 + x30155*x5152 - x30155 + x30159*x5572 + x30160 + 120*x30162 + 120*x30166 + x30175 + x30219) - x123*(-x10185*x24519 + x10197*x24512 - x10197*x24516 + x10197*x24527 - x10197*x24531 - x10269*x24503 - x10269*x24505 - x10271*x24503 - x10271*x24505 - x10286*x25415 + x10288*x24529 + x10354*x24532 + x10354*x25413 - x10354*x25414 + x10355*x24532 + x10355*x25413 - x10355*x25414 + x10387*x30320 + x10470*x24923 - x10484*x24910 - x10484*x24916 + x10484*x24919 + x10484*x24933 - x10494*x24951 - x10494*x24961 - x10495*x24951 - x10495*x24961 + x10533*x24953 - x10533*x24958 + x10533*x24967 - x10533*x24973 + x10533*x24979 + x10534*x24953 - x10534*x24958 + x10534*x24967 - x10534*x24973 + x10534*x24979 - x10547*x24529 - x10548*x24532 - x10548*x25413 + x10548*x25414 - x10553*x24532 - x10553*x25413 + x10553*x25414 - x10554*x24512 + x10554*x24516 - x10554*x24527 + x10554*x24531 + x10556*x24909 + x10556*x24913 + x10558*x24909 + x10558*x24913 - x10574*x24917 - x10602*x24909 - x10602*x24913 + x10608*x24503 + x10608*x24505 + x10609*x24503 + x10609*x24505 + x10614*x25185 + x10614*x25193 + x10615*x25185 + x10615*x25193 + x10621*x25415 - x10636*x25395 + x10636*x25396 - x10638*x25395 + x10638*x25396 + x10643*x24917 - x10646*x24918 + x10646*x24921 - x10646*x24932 - x10647*x24918 + x10647*x24921 - x10647*x24932 - x10648*x29114 + x10654*x24910 + x10654*x24916 - x10654*x24919 - x10654*x24933 - x10669*x24909 - x10669*x24913 + x10672*x24495 + x10672*x24498 + x10673*x24495 + x10673*x24498 + x10674*x24495 + x10674*x24498 - x10679*x25411 + x10692*x28484 + x10695*x28484 - x10699*x25246 + x10700*x25221 - x10700*x25237 - x10700*x25246 + x1261*x29946 - x14321*x30319 - x14470*x30169 + x14470*x30245 + x14616*x30319 + x14717*x24918 - x14717*x24921 + x14717*x24932 + x14728*x24918 - x14728*x24921 + x14728*x24932 + x14739*x19 + x14740*x19 + x14741*x19 + x14742*x19 + x14743*x19 + x14744*x19 - x14746*x19 - x14748*x19 - x14749*x19 - x14751*x19 - x14752*x19 - x14753*x19 - x14771*x24507 + x14771*x24510 - x14773*x24507 + x14773*x24510 + x14774*x24507 - x14774*x24510 - x154*x29795 - x154*x29796 + x154*x29797 + x154*x29798 - x20573*x30130 + x20599 - x20724*x29831 + x20748 + x20801 + x20804 + x20806 + x20807 + x20808 + x20809 + x20810 - x20812 - x20813 - x20815 - x20817 - x20818 - x20819 + x20825 + x23119 + x23240*x24519 + x23244 + x23283 + x23287 + x23288 + x23289 + x23290 + x23291 + x23292 - x23293 - x23294 - x23295 - x23297 - x23298 - x23299 + x23304 - x24495*x30302 - x24495*x30303 - x24495*x30304 - x24495*x30305 + x24495*x30308 + x24495*x30309 + x24495*x30310 - x24498*x30302 - x24498*x30303 - x24498*x30304 - x24498*x30305 + x24498*x30308 + x24498*x30309 + x24498*x30310 + x24507*x30307 - x24510*x30307 - x24519*x4272 - x24524*x29900 + x24535*x29806 - x24535*x30163 - x24550*x30298 - x24550*x30299 - x24562*x30298 - x24562*x30299 - x24569*x30142 - x24569*x30146 + x2458*x24926 + x24923*x4355 - x24930*x30216 + x24930*x30255 - x24931*x30106 + x24931*x30254 + x25109*x30293 + x25426*x30153 + x25427*x29806 - x25427*x30163 + x286*x30096 - x286*x30098 - x29865*x30314 - x29865*x30318 + x29875 + x29965*x30321 + x30017*x30161 + x30018*x30322 - x30020*x30316 + x30025 + x30093*x30314 + x30093*x30318 - x30104*x30315 + x30140*x30316 + 3*x30226 - 3*x30227 - x30239*x6741 - x30240*x6741 + 48*x30243 - 14*x30248 + x30271 - 48*x30283 + x30287*x5248 + x30300*x5152 - x30300*x5157 + x30300 + x30301*x5152 - x30301 - x30306*x5152 + x30306*x5157 - x30306 + x30311*x5572 + x30312*x5152 - x30312 + x30313*x5152 - x30313 - x30317*x6723 - x30323*x5152 + x30323 + 14*x30324 - x30325*x5152 + x30325 - x30326*x5152 + x30326 - x30327*x5152 - x30327*x5157 + x30328) + x168*(-p6_b*x24649*x572 + x10189*x30173 - x10306*x30169 + x10306*x30245 + x10306*x30272 + x10306*x30278 - x10306*x30292 + x10474*x29874 - x10494*x24896 - x10494*x24899 - x10495*x24896 - x10495*x24899 + x10533*x24897 - x10533*x24898 + x10533*x24902 - x10533*x24905 + x10533*x24907 + x10534*x24897 - x10534*x24898 + x10534*x24902 - x10534*x24905 + x10534*x24907 - x10547*x24667 - x10548*x24672 - x10548*x24856 + x10548*x24863 - x10553*x24672 - x10553*x24856 + x10553*x24863 - x10554*x24641 + x10554*x24645 - x10554*x24662 + x10554*x24670 - x10602*x24621 - x10602*x24626 + x10608*x24621 + x10608*x24626 + x10609*x24621 + x10609*x24626 + x10615*x24581 + x10615*x24586 + x10619*x24649 + x10621*x25285 + x10636*x25271 - x10636*x25272 + x10643*x24667 - x10652*x25271 + x10652*x25272 + x10654*x24641 - x10654*x24645 + x10654*x24662 - x10654*x24670 - x10669*x24621 - x10669*x24626 - x10679*x25285 - x10685*x24495 - x10685*x24498 - x10686*x24495 - x10686*x24498 + x10692*x24890 + x10695*x24890 - x10696*x24943 + x10700*x24781 - x10700*x24787 - x10700*x25197 - x10731*x24882 + x10731*x24883 - x10732*x24882 + x10732*x24883 - x14321*x30203 + x14510*x30264 - x14510*x30265 + x14616*x29904 + x14717*x24672 + x14717*x24856 - x14717*x24863 + x14728*x24672 + x14728*x24856 - x14728*x24863 - x14737*x29980 + x14776*x19 + x14777*x19 + x14778*x19 + x14779*x19 - x14780*x19 - x14781*x19 - x14782*x19 - x14783*x19 + x20769 + x20826 + x20827 + x20829 + x20831 - x20832 - x20833 - x20834 - x20836 + x20847 + x20987 + x23240*x24649 + x23258 + x23305 + x23306 + x23307 + x23308 - x23309 - x23310 - x23311 - x23312 + x23321 + x23444 + x24507*x30157 - x24510*x30157 - x24677*x30164 + x24677*x30255 - x24678*x30163 + x24678*x30254 - x24906*x30142 - x24906*x30146 + x24946*x30293 - x29865*x30195 + x29896*x30093 + x29919 - x29983*x629 + x29992 - x30141*x5928 - x30144*x5928 + x30172*x30285 + x30176 + x30177 - x30178 - x30179 + x30180 + x30181 + x30183 + x30184 + x30186 + x30187 + x30188 + x30189 - x30190 - x30191 - x30192 + x30193 + x30194 + x30196 + x30197 + x30198 + x30200 + x30201 + x30202 + x30204 + x30206 - x30207 - x30208 - x30209 - x30210 + x30211 - x30212 - x30213 - x30214 - x30215 - x30217 + x30218 + 16*x30233 - x30239*x5643 - x30240*x5643 + 32*x30243 + x30273*x5152 - x30273*x5157 + x30273 + x30274*x5152 - x30274 - x30275*x5152 - x30275*x5157 - x30276*x5152 - x30276*x5157 - x30277*x5152 + x30277*x5157 - x30277 + x30279*x5152 + x30279*x5157 + x30280*x5152 + x30280*x5157 + x30281*x5152 + x30281*x5157 + x30282*x5152 + x30282*x5157 - 32*x30283 + x30284*x5152 - x30284 + x30286*x5680 + x30287*x5336 - x30288*x5152 + x30288 - x30289*x5152 + x30289 + 32*x30290 - x30291*x5152 - x30291*x5157 + x30297) + x63*(p6_b_dot*x30367 - x10179*x24683 - x10179*x24691 - x10185*x24715 + x10193*x25516 + x10197*x24707 - x10197*x24712 + x10197*x24720 + x10197*x24721 - x10197*x24722 - x10271*x24682 - x10271*x24690 - x10286*x25506 + x10354*x24725 + x10354*x25502 - x10354*x25504 + x10387*x30365 - x10420*x30169 + x10420*x30245 + x10470*x25066 + x10484*x25077 - x10494*x25079 - x10494*x25088 - x10495*x25079 - x10495*x25088 + x10513*x24683 + x10513*x24691 + x10514*x24683 + x10514*x24691 + x10533*x25080 - x10533*x25087 + x10533*x25091 - x10533*x25100 + x10533*x25102 + x10534*x25080 - x10534*x25087 + x10534*x25091 - x10534*x25100 + x10534*x25102 - x10553*x24725 - x10553*x25502 + x10553*x25504 - x10554*x24707 + x10554*x24712 - x10554*x24720 - x10554*x24721 + x10554*x24722 + x10556*x25029 + x10556*x25049 + x10558*x25029 + x10558*x25049 - x10574*x25052 + x10586*x24951 + x10586*x24961 - x10588*x25034 + x10588*x25048 - x10588*x25054 + x10589*x25060 - x10591*x24967 + x10591*x24973 - x10591*x24979 - x10602*x25029 - x10602*x25049 + x10614*x24682 + x10614*x24690 + x10615*x24682 + x10615*x24690 + x10619*x24715 - x10636*x25482 + x10636*x25483 - x10636*x25516 + x10643*x25052 - x10646*x25032 + x10646*x25045 - x10646*x25053 + x10646*x25064 - x10646*x25075 - x10647*x25053 + x10647*x25064 - x10647*x25075 - x10648*x24956 - x10648*x25153 - x10654*x25077 - x10669*x25029 - x10669*x25049 - x10679*x25498 + x10695*x28574 - x10699*x24725 + x10700*x24699 - x10700*x24700 - x10700*x24725 - x10705*x24495 - x10705*x24498 - x10706*x24495 - x10706*x24498 - x10708*x24495 - x10708*x24498 - x10709*x24495 - x10709*x24498 + x10719*x24495 + x10719*x24498 + x10720*x24495 + x10720*x24498 - x129*x29795 - x129*x29796 + x129*x29797 + x129*x29798 - x14321*x30362 - x14363*x24708 + x14363*x24726 - x14470*x30264 + x14470*x30265 + x14528*x30368 + x14616*x30362 + x14717*x25053 - x14717*x25064 + x14717*x25075 - x14728*x25045 + x14728*x25053 - x14728*x25064 + x14728*x25075 + x14763*x24708 - x14763*x24726 + x14765*x24708 - x14765*x24726 + x14801*x19 + x14802*x19 + x14803*x19 + x14804*x19 + x14805*x19 + x14806*x19 - x14807*x19 - x14808*x19 - x14809*x19 - x14810*x19 - x14811*x19 - x14812*x19 - x14813*x19 + x14814*x29965 + x18583*x30145 - x20574*x29950 + x20849 + x20850 + x20851 + x20853 + x20854 + x20855 - x20856 - x20858 - x20859 - x20860 - x20862 - x20863 - x20864 + x20871 + x23210 + x23240*x24715 + x23322 + x23323 + x23324 + x23325 + x23326 + x23327 - x23328 - x23329 - x23330 - x23331 - x23333 - x23334 - x23335 + x23346 + x23470 - x24495*x30340 - x24495*x30341 + x24495*x30352 + x24495*x30353 + x24495*x30354 + x24495*x30355 - x24498*x30340 - x24498*x30341 + x24498*x30352 + x24498*x30353 + x24498*x30354 + x24498*x30355 - x24507*x30339 + x24507*x30343 + x24507*x30348 + x24510*x30339 - x24510*x30343 - x24510*x30348 - x24517*x30360 + x24517*x30361 + x24517*x30363 + x24528*x30360 - x24528*x30361 - x24528*x30363 + x24550*x30356 + x24562*x30356 - x24715*x4272 + x24727*x29916 - x24727*x30164 + x24728*x29806 - x24728*x30163 + x2475*x30171*x5572 - x25054*x30170 - x25054*x30253 - x25055*x30170 - x25055*x30253 + x25061*x30269 + x25062*x30270 + x25062*x30293 + x25066*x4355 + x25068*x30205 - x25072*x30106 + x25072*x30254 - x25074*x30106 + x25074*x30254 - x25101*x30142 - x25101*x30146 - x2592*x30065 + x2592*x30370 - x28563*x30317 - x28872*x29948 + x28872*x30156 + x29876 - x30020*x30359 + x30027 + x30028 + x30029 - x30030 - x30031 - x30032 + x30041 + x30042 + x30044 - x30045 - x30046 - x30047 - x30062 - x30063 - x30067 + x30071 + x30096*x327 - x30098*x327 + x30140*x30359 - x30141*x5440 - x30144*x5440 + 16*x30236 - x30239*x7357 - x30240*x7357 + 72*x30243 - 32*x30248 - x30262*x5307 - 72*x30283 + x30285*x30366 + x30286*x5322 + 72*x30290 + x30311*x5440 - 32*x30315*x572 + 32*x30324 + x30329*x5157 - x30329 - x30330 - x30331 - x30332 + x30333 + x30334 + x30335 + x30336*x5152 - x30336*x5157 + x30336 + x30337*x5152 - x30337 - x30338*x5152 + x30338*x5157 - x30338 + x30342*x5157 - x30342 - x30344 - x30345 - x30347 + x30349 + x30350 + x30351 + x30357*x5152 - x30357*x5157 + x30357 + x30358*x5152 - x30358 + x30364 + x30369 - x30371*x5152 + x30371 + x30372 + x30376) + x70*(p7_b*x24826 + p7_b*x24836 - p7_b_dot*x26606 + x10464*x24797 + x10464*x24811 + x10464*x24818 + x10465*x24797 + x10465*x24811 + x10465*x24818 - x10468*x30107 + x10470*x24820 - x10477*x24495 + x10477*x24498 - x10478*x24817 + x10478*x24819 - x10479*x24817 + x10479*x24819 - x10479*x24835 + x10484*x24784 - x10484*x24816 + x10486*x24732 - x10486*x24738 + x10551*x24495 - x10551*x24498 - x10939*x27186 - x14567*x19 - x14568*x19 + x14616*x24486 + x14772*x24474 - x14772*x24476 + x18698*x5275 - x20733*x5152 + x20733*x5157 - x20734 - x20735 + x20738 - x23218 - x23223 - x23224 + x23226 + x23229 + x24468*x30103 - x24469*x30103 - x24481*x30100 + x24484*x30100 - x2449*x24807 + x2456*x24821 + x2458*x24821 + x24820*x4355 - x24828*x30106 - x24831*x30106 + x24910 - x24916 + x24919 - x24930 + x24931 + x24933 + x2592*x29654 - x27181 - x27185*x630 - x28105*x30104 + x30073 + x30074 + x30075 - x30079 - x30080 - x30081 + x30095 + x30096 - x30097 - x30098 - x30099*x5152 + x30099*x5157 - x30099 + x30101*x5152 + x30101*x5157 + x30102*x5152 + x30102*x5157 - x30105*x5152 + x30105)) + x69*(L*(-p8_i*x27508 + x10739*x24581 + x10739*x24586 - x10743*x24495 + x10743*x24498 + x10749*x24784 - x10756*x24764 + x10756*x24768 + x10756*x24781 - x10756*x24787 - x10857*x27509 - x14842*x19 - x15008*x24528 + x20875 - x20876 + x23348 - x23349 + x23351 + x24468*x30387 - x24469*x30387 - x24776*x30389 + x27512 - x30377*x5152 + x30377*x5157 - x30377 - x30378*x327 - x30379*x327 - x30380*x327 - 2*x30381 + x30382*x5152 + x30382*x5157 - x30383*x5152 + x30383 + x30384*x327 + x30385*x327 + x30386*x327 - 32*x30388 - 4*x30390 + x30392*x5680 + 4*x30394 + x30395*x5547 + 32*x30396 - 64*x30397) - x106*(-p8_b_dot*x30235 - x10468*x28765*x602 - x10511*x18733 - x10739*x24621 - x10739*x24626 + x10756*x24672 - x10756*x24863 + x10762*x24985 + x10762*x24990 - x10777*x24996 + x10777*x25000 - x10777*x25008 - x10778*x24996 + x10778*x25000 - x10778*x25008 - x10783*x24989 - x10783*x24994 - x10783*x24995 + x10783*x24997 + x10783*x25009 + x10794*x24581 + x10794*x24586 + x10795*x24581 + x10795*x24586 - x10814*x24797 - x10814*x24811 - x10814*x24818 - x10816*x25202 - x10816*x25203 - x10830*x30107 - x10837*x24764 + x10837*x24768 + x10837*x24781 - x10837*x24787 - x10837*x25197 - x10838*x24764 + x10838*x24768 + x10838*x24781 - x10838*x24787 - x10838*x25197 - x10840*x14905 - x10841*x24820 - x10850*x24507 + x10850*x24510 + x10850*x24817 - x10850*x24819 - x10854*x24507 + x10854*x24510 + x10854*x24817 - x10854*x24819 + x10855*x24795 + x10855*x24803 + x10855*x24804 - x10855*x24809 - x10855*x24822 + x10861*x24581 + x10861*x24586 + x10874*x14905 - x10903*x26222 + x10903*x26239 + x10904*x26222 - x10904*x26239 - x10905*x30073 - x10905*x30074 - x10905*x30075 + x10905*x30079 + x10905*x30080 + x10905*x30081 + x10905*x30378 + x10905*x30379 + x10905*x30380 - x10905*x30384 - x10905*x30385 - x10905*x30386 - x10907*x25186 - x10907*x25194 - x10908*x25186 - x10908*x25194 - x10910*x24495 - x10910*x24498 - x10914*x24797 - x10914*x24811 - x10914*x24818 - x10915*x25202 - x10915*x25203 + x10918*x24797 + x10918*x24811 + x10918*x24818 + x10919*x24797 + x10919*x24811 + x10919*x24818 + x10920*x25202 + x10920*x25203 + x10921*x25202 + x10921*x25203 + x10933*x25573 + x10938*x25243 - x10947*x24585 + x10947*x24598 + x10947*x24790 - x10947*x24791 - x10949*x24764 + x10949*x24768 + x10958*x25212 - x10958*x25217 + x10958*x25235 + x10958*x25238 - x10958*x25240 + x10990*x24820 + x10991*x24821 + x10992*x24821 + x10993*x24820 - x10997*x24817 + x10997*x24819 - x10997*x24835 + x10998*x24507 - x10998*x24510 - x11031*x25228 + x11031*x25232 - x11092*x129*x30140 + x11092*x20998*x4 + x14821*x30478 - x14821*x30481 - x14821*x30482 + x14960*x19 - x14961*x19 - x14962*x19 + x14964*x19 + x14966*x19 + x14967*x19 + x14968*x19 - x14970*x19 - x14971*x19 - x14976*x19 - x14977*x19 - x15008*x24507 + x15008*x24510 + x15010*x25246 - x15022*x25200 + x15022*x25246 + x15095*x24528 + x20926 - x20927 - x20928 - x20929 - x20930 + x20931 + x20932 + x20934 + x20936 - x20937 - x20938 + x20953 + x20975 + x23392 + x23393 - x23394 - x23395 - x23396 - x23397 - x23398 + x23399 + x23400 + x23402 + x23403 - x23404 - x23405 + x23417 + x23433 - x24495*x30542 + x24495*x30546 - x24498*x30542 + x24498*x30546 - x24507*x30544 + x24510*x30544 - x24517*x30554 + x24528*x30554 - x24594*x30562 - x24595*x30562 + x24599*x30448 + x24603*x30450 - x24695*x30540 + x24695*x30541 + x24705*x30540 - x24705*x30541 - x24788*x30528 + x24802*x30470 - x24820*x4446 - x24821*x2601 + x24823*x30469 + x24993*x30389 + x25003*x4436 - x25007*x30409 - x25215*x30460 + x25247*x30564 + x25248*x30563 - 38*x30083 + 38*x30089 - 76*x30090 - x30091*x30551 - 76*x30094 + x30261 + 4*x30381 + 38*x30388 + 8*x30390 - x30392*x5336 + x30393*x30559 - 8*x30394 - x30395*x5332 - 38*x30396 + 76*x30397 + x30399*x321 - x30401*x321 + x30410*x630 - x30442*x5336 + x30447*x5680 + 4*x30453 + x30463*x30558 + x30464*x5336 + x30467*x30551 + 76*x30473 + x30532*x5152 - x30532*x5157 + x30532 - x30533*x5152 - x30533*x5157 + x30534*x5152 - x30534 - x30535*x5152 + x30535*x5157 - x30535 + x30536*x5152 + x30536*x5157 + x30537*x5152 + x30537*x5157 + x30538 - x30539 - 4*x30543 + 3*x30545 + x30547*x5152 + x30547*x5157 + x30548*x5547 + x30549*x5547 - x30550*x5152 + x30550 + x30552*x5152 - x30552 - 8*x30553 - 6*x30555 - x30556*x593 + x30557*x5152 - x30557 - x30560*x5152 + x30560 - x30561*x5152 + x30561 + x30567 + x30577) + x123*(-x10571*x14905 + x10794*x24682 + x10794*x24690 + x10795*x24682 + x10795*x24690 + x10797*x24495 + x10797*x24498 + x10799*x24495 + x10799*x24498 - x10802*x26222 + x10802*x26239 + x10803*x26222 - x10803*x26239 + x10805*x26222 - x10805*x26239 + x10809*x24495 - x10809*x24498 - x10814*x24581 - x10814*x24586 - x10815*x24985 - x10815*x24990 - x10832*x25011 + x10832*x25012 - x10833*x24956 + x10837*x24699 - x10837*x24700 - x10837*x24725 + x10838*x24699 - x10838*x24700 - x10838*x24725 + x10854*x24764 - x10854*x24768 + x10855*x24989 + x10855*x24994 + x10855*x24995 - x10855*x24997 - x10855*x25009 + x10938*x24996 - x10938*x25000 + x10938*x25008 + x10940*x24996 - x10940*x25000 + x10940*x25008 + x11328*x11583*x30259 + x14616*x30452 - x14887*x19 - x14888*x19 + x14895*x19 + x14896*x19 + x14905*x30145 + x15055*x24517 - x15055*x24528 + x15056*x24517 - x15056*x24528 + x20884*x5152 - x20884*x5157 + x20885*x5152 - x20885*x5157 - x20886 - x20887 + x20888 + x20889 + x20891 + x20897 + x20922 - x20998*x30246 + x21104 + x23360 - x23362 - x23364 - x23365 - x23367 - x23368 + x23369 + x23371 + x23373 + x23378 + x23391 + x23549 - x24468*x30434 + x24469*x30434 - x24474*x30415 - x24474*x30421 + x24476*x30415 + x24476*x30421 - x24495*x30445 - x24498*x30445 - x24507*x30446 + x24510*x30446 - x24550*x30461 - x24562*x30454 - x24562*x30461 - x24695*x30430 + x24695*x30431 + x24705*x30430 - x24705*x30431 + x24788*x30470 + x24792 - x24890*x4446 + x25007*x30469 - x25011*x30422 + x25012*x30422 - x25014*x30435 + x25015*x30435 + x25069*x30260 - x25573*x2601 - x27557*x30091 + x27557*x30467 + x27881*x30466 - x30073*x6709 - x30074*x6709 - x30075*x6709 + x30079*x6709 + x30080*x6709 + x30081*x6709 - 96*x30083 + 96*x30089 - 192*x30090 - 192*x30094 - 32*x30127 + 32*x30152 + 64*x30162 - x30244*x30463 - x30250*x30393 + x30378*x6709 + x30379*x6709 + x30380*x6709 - x30384*x6709 - x30385*x6709 - x30386*x6709 + 96*x30388 - 96*x30396 + 192*x30397 - x30411 + x30413 + x30414 - x30416 - x30418 - x30419 - x30420 - x30423*x5307 + x30424*x5157 - x30424 - x30425 - x30426 + x30427 + x30428 + x30429 - 68*x30432 - x30437 - x30438 - x30440 - x30441 - x30443 - x30444*x5152 - x30444*x5157 + x30447*x5322 + 12*x30449 + x30451*x5322 + 12*x30453 + 24*x30454 + x30455 + x30456 + x30457 + x30458 + 68*x30459 + x30462*x5152 - x30462 + x30464*x5572 + x30465 + 136*x30468 + 136*x30472 + 192*x30473 + x30486 + x30531) - x123*(-x10470*x24519 + x10484*x24512 - x10484*x24516 + x10484*x24527 - x10484*x24531 + x10503*x17429*x30480 - x10556*x24503 - x10556*x24505 - x10558*x24503 - x10558*x24505 + x10574*x24529 + x10646*x24532 + x10646*x25413 - x10646*x25414 + x10647*x24532 + x10647*x25413 - x10647*x25414 + x10768*x24923 - x10783*x24910 - x10783*x24916 + x10783*x24919 + x10783*x24933 - x10794*x24951 - x10794*x24961 - x10795*x24951 - x10795*x24961 + x10814*x24503 + x10814*x24505 + x10837*x24953 - x10837*x24958 + x10837*x24967 - x10837*x24973 + x10837*x24979 + x10838*x24953 - x10838*x24958 + x10838*x24967 - x10838*x24973 + x10838*x24979 - x10849*x24529 - x10850*x24532 - x10850*x25413 + x10850*x25414 - x10854*x24532 - x10854*x25413 + x10854*x25414 - x10855*x24512 + x10855*x24516 - x10855*x24527 + x10855*x24531 + x10857*x30625 + x10857*x30627 + x10859*x24909 + x10859*x24913 + x10861*x24909 + x10861*x24913 - x10879*x24917 + x10914*x24503 + x10914*x24505 + x10918*x25185 + x10918*x25193 + x10919*x25185 + x10919*x25193 + x10933*x25411 - x10935*x25411 - x10938*x25395 + x10938*x25396 - x10940*x25395 + x10940*x25396 + x10946*x24917 + x10949*x24912 - x10949*x24918 + x10949*x24921 - x10949*x24932 - x10950*x24918 + x10950*x24921 - x10950*x24932 - x10952*x29114 + x10958*x24910 + x10958*x24916 - x10958*x24919 - x10958*x24933 - x10968*x24909 - x10968*x24913 - x10969*x24909 - x10969*x24913 - x10972*x24495 - x10972*x24498 + x10973*x24495 + x10973*x24498 + x10974*x24495 + x10974*x24498 + x10990*x28484 + x10993*x28484 + x10997*x25221 - x10997*x25237 - x10997*x25246 - x10998*x25246 + x11092*x30320 - x14616*x30629 + x14905*x30629 + x15010*x24918 - x15010*x24921 + x15010*x24932 - x15022*x24912 + x15022*x24918 - x15022*x24921 + x15022*x24932 + x15033*x19 + x15034*x19 + x15035*x19 + x15036*x19 + x15037*x19 + x15038*x19 - x15040*x19 - x15042*x19 - x15043*x19 - x15045*x19 - x15046*x19 - x15047*x19 - x15051*x30169 + x15051*x30245 - x154*x30095 - x154*x30096 + x154*x30097 + x154*x30098 - x20724*x30436 + x20751 - x20872*x30130 + x20892 + x20952 + x20955 + x20957 + x20958 + x20960 + x20961 + x20962 - x20963 - x20965 - x20967 - x20968 - x20969 - x20970 + x20976 + x23247 + x23370*x24519 + x23374 + x23414 + x23418 + x23419 + x23420 + x23421 + x23422 + x23423 - x23424 - x23425 - x23426 - x23428 - x23429 - x23430 + x23435 - x23450*x24923 - x24495*x30611 - x24495*x30612 - x24495*x30613 + x24495*x30618 + x24495*x30619 + x24495*x30620 + x24495*x30621 - x24498*x30611 - x24498*x30612 - x24498*x30613 + x24498*x30618 + x24498*x30619 + x24498*x30620 + x24498*x30621 - x24507*x30614 + x24507*x30617 + x24510*x30614 - x24510*x30617 - x24519*x4355 - x24523*x2458 + x24535*x30106 - x24535*x30469 - x24550*x30607 - x24550*x30608 - x24562*x30607 - x24562*x30608 - x24569*x30448 + x24923*x4436 - x24930*x30528 + x24930*x30564 - x24931*x30409 + x24931*x30563 + x25109*x30601 + x25415*x2601 + x25426*x30460 + x25427*x30106 - x25427*x30469 + x28025*x4446 + x286*x30399 - x286*x30401 - x30093*x30625 - x30093*x30627 - x30140*x30628 + x30174 + x30321*x30631 + x30322*x30630 + x30328 + x30391*x30628 - x30439*x578 + x30510*x5527 + 3*x30538 - 3*x30539 + 7*x30545 - x30548*x6741 - x30549*x6741 + 48*x30553 - 14*x30555 + x30577 - 48*x30590 - x30592*x5527 + x30609*x5152 - x30609*x5157 + x30609 + x30610*x5152 - x30610 - 7*x30615 - x30616*x5152 + x30616*x5157 - x30616 + x30622*x5572 + x30623*x5152 - x30623 + x30624*x5152 - x30624 - 14*x30626 - x30632*x5152 + x30632 + 14*x30633 - x30634*x5152 + x30634 - x30635*x5152 + x30635 - x30636*x5152 - x30636*x5157 + x30637) + x168*(p7_b*x30519 + p7_i*x30521 + x10474*x21103*x5540 + x10772*x30173 - x10794*x24896 - x10794*x24899 - x10795*x24896 - x10795*x24899 + x10814*x24621 + x10814*x24626 + x10837*x24897 - x10837*x24898 + x10837*x24902 - x10837*x24905 + x10837*x24907 + x10838*x24897 - x10838*x24898 + x10838*x24902 - x10838*x24905 + x10838*x24907 - x10849*x24667 - x10850*x24672 - x10850*x24856 + x10850*x24863 - x10854*x24672 - x10854*x24856 + x10854*x24863 - x10855*x24641 + x10855*x24645 - x10855*x24662 + x10855*x24670 + x10857*x30195 - x10897*x30169 + x10897*x30245 + x10897*x30272 + x10897*x30278 - x10897*x30292 + x10914*x24621 + x10914*x24626 + x10918*x24581 + x10918*x24586 - x10935*x25285 + x10938*x25271 - x10938*x25272 + x10940*x25271 - x10940*x25272 + x10946*x24667 - x10956*x25271 + x10956*x25272 + x10958*x24641 - x10958*x24645 + x10958*x24662 - x10958*x24670 - x10968*x24621 - x10969*x24621 - x10969*x24626 - x10979*x24649 - x10985*x24495 - x10985*x24498 - x10986*x24495 - x10986*x24498 + x10990*x24890 + x10993*x24890 - x10996*x24504 + x10997*x24781 - x10997*x24787 - x10997*x25197 - x11030*x24882 + x11030*x24883 - x11031*x24882 + x11031*x24883 - x14616*x30514 - x14737*x30593 + x14905*x30203 + x15010*x24672 - x15010*x24863 + x15022*x24672 - x15022*x24863 + x15069*x19 + x15070*x19 + x15071*x19 + x15072*x19 - x15073*x19 - x15074*x19 - x15075*x19 - x15076*x19 + x20917 + x20977 + x20978 + x20980 + x20982 - x20983 - x20984 - x20985 - x20986 + x20997 + x21099 + x23370*x24649 + x23388 + x23436 + x23437 + x23438 + x23439 - x23440 - x23441 - x23442 - x23443 - x23450*x24649 + x23452 + x23548 - x24507*x30584 + x24510*x30584 - x24677*x30470 + x24677*x30564 - x24678*x30469 + x24678*x30563 + x24943*x4446 + x24946*x30601 + x25285*x2601 - x30093*x30506 - x30140*x30580 + x30172*x30595 + x30199*x30391 + x30219 + x30297 - x30447*x5928 - 16*x30449 + x30487 + x30488 - x30489 - x30490 + x30491 + x30492 + x30494 + x30495 + x30497 + x30498 + x30499 + x30500 - x30501 - x30502 - x30503 + x30504 + x30505 + x30507 + x30508 + x30509 + x30511 + x30512 + x30513 + x30515 + x30516 - x30517 - x30518 - x30520 - x30522 + x30523 - x30524 - x30525 - x30526 - x30527 - x30529 + x30530 + 16*x30543 - x30548*x5643 - x30549*x5643 + 32*x30553 + x30578*x5152 - x30578*x5157 + x30578 + x30579*x5152 - x30579 - x30581*x578 - x30582*x5152 - x30582*x5157 - x30583*x5152 - x30583*x5157 - x30585*x5152 + x30585*x5157 - x30585 + x30586*x5152 + x30586*x5157 + x30587*x5152 + x30587*x5157 + x30588*x5152 + x30588*x5157 + x30589*x5152 + x30589*x5157 - 32*x30590 + x30591*x5152 - x30591 - x30592*x5336 + x30594*x5680 - x30597*x5152 + x30597 - x30598*x5152 + x30598 + 32*x30599 - x30600*x5152 - x30600*x5157 + x30606) + x63*(p8_b_dot*x30367 - x10464*x24683 - x10464*x24691 - x10465*x24683 - x10465*x24691 - x10470*x24715 + x10479*x25516 + x10484*x24707 - x10484*x24712 + x10484*x24720 + x10484*x24721 - x10484*x24722 + x10646*x24725 + x10646*x25502 - x10646*x25504 + x10754*x24714*x572 + x10768*x25066 + x10783*x25077 - x10794*x25079 - x10794*x25088 - x10795*x25079 - x10795*x25088 + x10804*x30558*x5572 + x10814*x24682 + x10814*x24690 + x10815*x24683 + x10815*x24691 + x10837*x25080 - x10837*x25087 + x10837*x25091 - x10837*x25100 + x10837*x25102 + x10838*x25080 - x10838*x25087 + x10838*x25091 - x10838*x25100 + x10838*x25102 - x10854*x24725 - x10854*x25502 + x10854*x25504 - x10855*x24707 + x10855*x24712 - x10855*x24720 - x10855*x24721 + x10855*x24722 + x10857*x30667 + x10859*x25029 + x10859*x25049 + x10861*x25029 + x10861*x25049 - x10879*x25052 + x10891*x24951 + x10891*x24961 - x10893*x25034 + x10893*x25048 - x10893*x25054 + x10894*x25060 - x10896*x24967 + x10896*x24973 - x10896*x24979 + x10918*x24682 + x10918*x24690 + x10919*x24682 + x10919*x24690 + x10933*x25498 - x10935*x25498 - x10938*x25482 + x10938*x25483 - x10938*x25516 + x10946*x25052 + x10949*x25045 - x10949*x25053 + x10949*x25064 - x10949*x25075 - x10950*x25053 + x10950*x25064 - x10950*x25075 - x10952*x24956 - x10952*x25153 - x10958*x25077 - x10968*x25029 - x10968*x25049 - x10969*x25029 - x10969*x25049 + x10990*x28574 - x10997*x24725 - x10998*x24725 - x11002*x24495 - x11002*x24498 - x11003*x24495 - x11003*x24498 - x11005*x24495 - x11005*x24498 - x11006*x24495 - x11006*x24498 - x11012*x30264 + x11012*x30265 - x11016*x30169 + x11016*x30245 - x11016*x30570 + x11016*x30571 + x11017*x24495 + x11017*x24498 + x11018*x24495 + x11018*x24498 + x11033*x17063*x2669 - x11433*x30205 - x129*x30095 - x129*x30096 + x129*x30097 + x129*x30098 - x14616*x30670 - x14658*x24708 + x14658*x24726 + x14814*x30631 + x14905*x30670 + x15010*x25053 - x15010*x25064 + x15010*x25075 - x15022*x25045 + x15022*x25053 - x15022*x25064 + x15022*x25075 - x15051*x30264 + x15051*x30265 + x15057*x24708 - x15057*x24726 + x15097*x19 + x15098*x19 + x15099*x19 + x15100*x19 + x15101*x19 + x15102*x19 - x15103*x19 - x15104*x19 - x15105*x19 - x15106*x19 - x15107*x19 - x15108*x19 - x15109*x19 + x15110*x30368 + x20999 + x21000 + x21001 + x21003 + x21004 + x21005 - x21007 - x21008 - x21009 - x21010 - x21012 - x21013 - x21015 + x21022 + x23339 - x23450*x25066 + x23453 + x23454 + x23455 + x23456 + x23457 + x23458 - x23459 - x23460 - x23461 - x23462 - x23463 - x23464 - x23465 + x23476 + x23566 - x24495*x30650 - x24495*x30651 + x24495*x30660 + x24495*x30661 + x24495*x30662 + x24495*x30663 - x24498*x30650 - x24498*x30651 + x24498*x30660 + x24498*x30661 + x24498*x30662 + x24498*x30663 - x24507*x30649 + x24510*x30649 - x24517*x30668 + x24517*x30669 + x24517*x30671 + x24528*x30668 - x24528*x30669 - x24528*x30671 + x24550*x30664 + x24562*x30664 + x24708*x30596 - x24715*x4355 - x24726*x30596 + x24727*x30216 - x24727*x30470 + x24728*x30106 - x24728*x30469 - x25054*x30479 - x25054*x30562 - x25055*x30479 - x25055*x30562 + x25061*x30575 + x25062*x30576 + x25062*x30601 + x25066*x4436 - x25072*x30409 + x25072*x30563 - x25074*x30409 + x25074*x30563 + x25506*x2601 - x2669*x30370 + x28574*x4446 - x30093*x30667 - x30161*x30365 + x30161*x30673 + x30175 + x30330 + x30331 + x30332 - x30333 - x30334 - x30335 + x30344 + x30345 + x30347 - x30349 - x30350 - x30351 - x30364 + x30366*x30595 - x30369 - x30372 + x30376 + x30399*x327 - x30401*x327 - x30447*x5440 - 36*x30449 - x30451*x5440 + 6*x30538 - 6*x30539 + 16*x30545 - x30548*x7357 - x30549*x7357 + 72*x30553 - 32*x30555 - x30568*x5307 - 72*x30590 - x30592*x5652 + x30594*x5322 + 72*x30599 - 16*x30615 + x30622*x5440 - 32*x30626 + 32*x30633 + x30638*x5157 - x30638 - x30639 - x30640 - x30641 + x30642 + x30643 + x30644 + x30645*x5152 - x30645*x5157 + x30645 + x30646*x5152 - x30646 - x30647*x578 - x30648*x5152 + x30648*x5157 - x30648 + x30652*x5157 - x30652 - x30653 - x30654 - x30656 + x30657 + x30658 + x30659 + x30665*x5152 - x30665*x5157 + x30665 + x30666*x5152 - x30666 + x30672 + x30674 + x30675*x633 - x30676*x5152 + x30676 + x30677 + x30682) + x70*(p8_b*x24826 + p8_b*x24836 - p8_b_dot*x26197 - p8_i_dot*x30410 + x10762*x24797 + x10762*x24811 + x10762*x24818 + x10763*x24797 + x10763*x24811 + x10763*x24818 + x10768*x24820 - x10773*x24495 + x10773*x24498 - x10777*x24817 + x10777*x24819 - x10778*x24817 + x10778*x24819 - x10778*x24835 + x10783*x24784 - x10783*x24816 + x10785*x24732 - x10785*x24738 + x10852*x24495 - x10852*x24498 - x11135*x19*x25067 - x14860*x19 - x14861*x19 + x14905*x24486 + x18769*x5275 - x20879*x5152 + x20879*x5157 - x20880 - x20881 + x20883 - x23352 - x23353 - x23354 + x23356 + x23359 + x24468*x30407 - x24469*x30407 + x24474*x30402 - x24476*x30402 - x24481*x30404 + x24484*x30404 - x24807*x2551 + x24820*x4436 + x24821*x2558 + x24821*x2560 - x24828*x30409 - x24831*x30409 + x2555*x29193 - x26247*x634 + x27513 + x27514 - x27519 - x27520 - x27521 + x27522 + x27523 - 16*x28105*x602 + x30378 + x30379 + x30380 - x30384 - x30385 - x30386 + x30398 + x30399 - x30400 - x30401 - x30403*x5152 + x30403*x5157 - x30403 + x30405*x5152 + x30405*x5157 + x30406*x5152 + x30406*x5157 - x30408*x5152 + x30408)) + x69*(L*(q1_b*x24786 + q1_b*x24789 + x11391*x5547 + x11613*x24471 - x11648*x19 - x11784*x24528 - x158*x25125 + x17057*x24775 + x17064*x25129 + x19486 - x19487 - x22134 - x22135 + x22136 - x24459*x321 + x24461*x321 - x24468*x25126 + x24469*x25126 - x24475*x321 + x24477*x321 + x24495*x25124 - x24498*x25124 + 4*x24552 + x24556*x24769 - x24560*x24776 - x24576*x5547 + 4*x24609 - x24610*x25121 + x24611*x25121 + 4*x24612 + 4*x24613 + 4*x24618 + x24784*x5302 + x24792 - x25119*x5152 + x25119*x5157 - x25119 - x25120*x5171 + x25120*x5174 - 2*x25122 - x25123*x5152 + x25123 - 4*x25127) - x106*(-L*x24459 + L*x24461 - L*x24475 + L*x24477 + q1_b*x24584*x25229 + q1_b*x25233 + q1_b*x25244 + q1_b_dot*x25018*x5680 - q1_b_dot*x25206 - q1_b_dt*x24810*x323*x879 + q1_i_dot*x25230 - q2_b_dot*x24582*x24584 + x11390*x25211 + x11390*x5353 + x11390*x5467 - x11390*x5791 - x11391*x5332 - x11406*x24517 + x11406*x24528 + x11613*x24656 - x11651*x6*x662 + x11724*x19 - x11725*x19 - x11726*x19 + x11728*x19 + x11730*x19 + x11731*x19 + x11732*x19 - x11733*x19 - x11734*x19 - x11741*x19 - x11742*x19 + x11780*x24821 + x11786*x25246 - x11802*x25200 + x11802*x25208 - x11802*x25221 + x11802*x25237 + x11802*x25246 + x11931*x5547 - x129*x25223*x51 - x138*x24732 + x138*x24738 + x17057*x5723 + x17067*x25129 + x17071*x6354 + x17115*x5152 - x17115*x5157 + x17116*x25224 - x174*x24474 + x174*x24476 - x18210*x5722 + x183*x25003 + x19490*x25129 - x19492*x25224 + x19508*x5152 - x19508*x5157 + x19510 - x19511 - x19512 - x19513 - x19514 + x19515 + x19516 + x19518 + x19520 - x19521 - x19522 + x19539 + x19607 + x22164 + x22165 + x22166 - x22167 - x22168 - x22169 - x22170 + x22171 + x22173 + x22175 + x22177 - x22178 - x22179 + x22191 + x22253 + x22325 - x24481*x25204 - x24481*x25207 + x24481*x5879 + x24484*x25204 + x24484*x25207 - x24492*x5265 - x24495*x25195 + x24495*x25201 + x24495*x25205 + x24495*x25209 + x24495*x5803 - x24495*x5810 - x24498*x25195 - x24498*x25201 - x24498*x25205 + x24498*x25209 + x24498*x5803 - x24498*x5810 - 6*x24500*x25225 + x24504*x5879 - x24507*x25199 - x24507*x5801 + x24509*x321 + x24510*x25199 + x24510*x5801 - x24511*x321 - x24528*x24636 - x24536*x25007 - x24537*x24788 - 8*x24552 + x24560*x24993 - x24565*x5336 + x24576*x5332 + x24581*x5745 + x24581*x5746 + x24586*x5745 + x24586*x5746 - x24594*x25241 - x24595*x25241 + x24598*x5865 + x24599*x25167 + x24603*x25168 - 8*x24609 + x24610*x5737 + x24610*x662 - x24611*x5737 - x24611*x662 - 8*x24612 - 8*x24613 - 8*x24618 - x24619*x5336 + x24754*x25245 - x24764*x5782 - x24764*x5784 - x24764*x5868 + x24768*x5782 + x24768*x5784 + x24768*x5868 + x24781*x5782 + x24781*x5784 + x24781*x5868 - x24787*x5782 - x24787*x5784 - x24787*x5868 + x24790*x5865 - x24791*x5865 + x24795*x5802 - x24797*x5758 - x24797*x5816 + x24797*x5822 + x24797*x5823 + x24802*x25182 + x24803*x5802 - x24809*x5802 - x24811*x5758 - x24811*x5816 + x24811*x5822 + x24811*x5823 + x24817*x5800 + x24817*x5801 - x24817*x5925 - x24818*x5758 + x24818*x5822 + x24818*x5823 - x24819*x5800 - x24819*x5801 + x24819*x5925 - x24820*x5790 + x24820*x5839 + x24821*x2749 - x24822*x5802 + x24823*x25181 + x24832*x5190*x663 + x24985*x5221 - x24989*x5261 + x24990*x5221 - x24994*x5261 - x24995*x5261 - x24996*x5252 + x24997*x5261 + x25000*x5252 - x25008*x5252 + x25009*x5261 + 4*x25122 + 8*x25127 - x25136*x6125 + x25166*x3776 + x25166*x5920 - x25170*x25215 + x25179*x5336 + x25183*x5152 - x25183*x5157 + x25183 + x25184*x5152 - x25184 - x25185*x5807 - x25186*x5809 - x25187*x5152 + x25187*x5157 - x25187 + x25188*x5152 + x25188*x5157 + x25189 + x25190 - x25191 - x25192 - x25193*x5807 - x25194*x5809 - x25196*x5737 - x25197*x5784 - 4*x25198 - x25202*x5817 - x25202*x5818 + x25202*x5824 + x25202*x5825 - x25203*x5817 - x25203*x5818 + x25203*x5824 + x25203*x5825 + x25210*x5152 + x25210*x5157 + x25212*x5883 - x25213*x5152 + x25213 + x25214*x5152 - x25214 - 8*x25216 - x25217*x5883 - x25218*x5873 - x25219*x656 - 6*x25220 - x25222*x5919 + x25226*x5152 - x25226 - x25227*x3687 - x25228*x6064 + x25231*x3695 + x25232*x6064 - x25234*x5152 + x25234 + x25235*x5883 + x25236*x5873 + x25238*x5883 - x25239*x5152 + x25239 - x25240*x5883 - x25242*x5832 + x25243*x5849 + x25247*x25250 + x25248*x25249 + x25253 + x25262) + x123*(-q1_b*x25115 - q1_b*x25116 + q2_b*x25115 + q2_b*x25116 + q2_b*x25165 + q2_i*x25113 + x11390*x2788*x5186 - x11390*x5915 - x11669*x19 - x11670*x19 + x11674*x19 + x11675*x19 + x11931*x5312 + x11933*x24517 - x11933*x24528 + x129*x24459 - x129*x24461 + x129*x24475 - x129*x24477 - x129*x25139 - x129*x25140 + x129*x25147 + x129*x25148 - x151*x25172 - x17057*x25112 + x17096 + x17107 + x17110 - x17116*x25177 + x17227 + x17229 + x17243 + x18216*x25112 - x19489*x5152 + x19489*x5157 + x19490*x24717 + x19492*x5152 - x19492*x5157 - x19495 - x19497 + x19498 + x19499 + x19507 - x19548*x24522 + x22139 - x22140 - x22143 - x22145 + x22147 + x22148 + x22152 + x22153 + x22156 + x22162 - x24468*x25152 + x24469*x25152 - x24495*x25154 - x24495*x25155 + x24495*x5747 + x24495*x5749 - x24498*x25154 - x24498*x25155 + x24498*x5747 + x24498*x5749 - x24507*x25161 + x24510*x25161 - x24517*x25175 + x24517*x6003 + x24528*x25175 - x24528*x6003 + x24533*x25175 - x24533*x6003 + x24538 + x24540 - x24541 + x24542 + x24543 + x24545 - x24546 - x24547 - x24548 - x24550*x25171 - x24551 - x24553 - x24555 + x24558 + x24559 + x24561 - x24562*x25169 - x24562*x25171 + x24563 - x24566 - x24568 - x24571 - x24572 - x24575 + x24577 - x24581*x5758 - x24586*x5758 + x24605 + x24681 + x24682*x5745 + x24682*x5746 + x24690*x5745 + x24690*x5746 - x24695*x25149 + x24699*x5782 + x24699*x5784 - x24700*x5782 - x24700*x5784 + x24705*x25149 + x24714*x25167 + x24718*x25168 - x24725*x5782 + x24730 + x24731 + x24734 - x24735 - x24737 - x24739 + x24742 + x24744 + x24746 - x24747 - x24748 - x24749 - x24751 - x24753 - x24757 + x24764*x5801 - x24768*x5801 + x24788*x25182 + x24792 - x24956*x5778 - x24985*x5759 + x24989*x5802 - x24990*x5759 + x24994*x5802 + x24995*x5802 + x24996*x5849 - x24997*x5802 - x25000*x5849 - x25003*x3687 + x25007*x25181 + x25008*x5849 - x25009*x5802 + x25107*x5750 - x25107*x5751 - x25111*x5726 + x25125*x3943 + x25138*x5157 - x25138 - x25141 - x25142 - x25143 + x25144 + x25145 + x25146 - x25151*x2743 - x25153*x5778 - x25156 - x25158 - x25160 + x25162 + x25163 + x25164 + x25166*x3706 - x25166*x5913 + 24*x25169 + x25173*x5152 - x25173 - x25174 - x25176*x5758 - x25178 + x25179*x5572 - x25180) - x123*(-q2_b_dot*x25417 + x11390*x11925 - x11390*x25386 - x11683*x11925 + x11786*x24918 - x11786*x24921 + x11786*x24932 + x11802*x24911 - x11802*x24912 + x11802*x24918 - x11802*x24921 + x11802*x24932 + x11909*x19 + x11910*x19 + x11911*x19 + x11912*x19 + x11915*x19 + x11916*x19 - x11918*x19 - x11920*x19 - x11921*x19 - x11922*x19 - x11923*x19 - x11924*x19 - x11931*x6741 + x11989*x24602 + x11990*x24517 - x11990*x24528 + x131*x24926 + x138*x25421 - x154*x25311 - x154*x25313 + x154*x25315 + x154*x25317 + x183*x24923 + 6*x19508*x25177 + x19538 + x19582 + x19583 + x19585 + x19587 + x19589 + x19590 - x19591 - x19592 - x19594 - x19595 - x19596 - x19597 + x19609 + x19645*x25224 + x19656 + x22146*x24519 + x22188 + x22230 + x22231 + x22232 + x22233 + x22234 + x22236 - x22237 - x22238 - x22240 - x22241 - x22242 - x22243 + x22255 + x22303 - x24468*x25408 + x24469*x25408 + x24481*x6010 - x24495*x25387 - x24495*x25388 - x24495*x25389 - x24495*x25390 + x24495*x25397 + x24495*x25398 + x24495*x25399 + x24495*x25400 + x24495*x25401 + x24495*x25402 - x24498*x25387 - x24498*x25388 - x24498*x25389 - x24498*x25390 + x24498*x25397 + x24498*x25398 + x24498*x25399 + x24498*x25400 + x24498*x25401 + x24498*x25402 + x24503*x5758 + x24503*x5816 - x24503*x5932 - x24503*x5934 + x24504*x6010 + x24505*x5758 + x24505*x5816 - x24505*x5932 - x24505*x5934 - x24507*x25391 + x24507*x25394 - x24507*x6003 + x24509*x286 + x24510*x25391 - x24510*x25394 + x24510*x6003 - x24511*x286 - x24512*x5802 + x24512*x5966 + x24516*x5802 - x24516*x5966 + x24517*x25418 + x24519*x3687 - x24519*x3720 - x24519*x5946 + 14*x24521 + x24524*x25293 + x24525*x24924 + x24526*x24924 - x24527*x5802 + x24527*x5966 - x24528*x25418 - x24529*x5886 + x24529*x5954 + x24531*x5802 - x24531*x5966 - x24532*x5800 - x24532*x5801 + x24532*x6198 + x24532*x6199 - x24535*x25181 + x24535*x25340 - x24536*x24931 - x24537*x24930 - x24550*x25381 - x24550*x25382 - x24562*x25381 - x24562*x25382 - x24569*x25167 - x24573*x25168 - x24573*x25269 + x24578 + x24909*x5220 + x24909*x5222 - x24909*x5807 - x24909*x5904 - x24910*x5261 + x24910*x5883 - x24911*x5868 + x24912*x5868 + x24913*x5220 + x24913*x5222 - x24913*x5807 - x24913*x5904 - x24916*x5261 + x24916*x5883 - x24917*x5243 + x24917*x5861 - x24918*x5868 + x24919*x5261 - x24919*x5883 + x24921*x5868 + x24923*x5235 - x24924*x25225 - x24924*x25286 + x24930*x25250 + x24931*x25249 - x24932*x5868 + x24933*x5261 - x24933*x5883 - x24951*x5745 - x24951*x5746 + x24953*x5782 - x24958*x5782 - x24961*x5745 - x24961*x5746 + x24967*x5782 + x24967*x5784 - x24973*x5782 - x24973*x5784 + x24979*x5782 + x24979*x5784 + x25109*x25299 - x25134*x6012 + x25170*x25426 - x25181*x25427 + x25185*x5823 + 3*x25189 + 3*x25190 - 3*x25191 - 3*x25192 + x25193*x5823 + 48*x25216 - 14*x25220 - x25246*x5925 - x25246*x5926 + x25262 - 48*x25282 + x25290*x25419 + x25340*x25427 + x25371 + x25383*x5152 - x25383*x5157 + x25383 + x25384*x5152 - x25384 - x25385*x5190 - x25393*x5152 + x25393*x5157 - x25393 - x25395*x5849 + x25396*x5849 + x25403*x5572 + x25405*x5152 - x25405 + x25407*x5152 - x25407 - x25409*x25410 - x25409*x25412 - x25411*x5919 - x25413*x5800 - x25413*x5801 + x25413*x6199 + x25414*x5800 + x25414*x5801 - x25414*x6198 - x25414*x6199 + x25415*x5828 - x25415*x5952 + x25416*x5758 - x25416*x5932 + x25419*x25420 + 10*x25422 - x25423*x5152 + x25423 - x25424*x5152 + x25424 - x25425*x5152 + x25425 - x25428*x5252 - x25430*x5152 - x25430*x5157 + x25455) + x168*(x11390*x11838 - x11390*x25267 + x11786*x24672 + x11786*x24856 - x11786*x24863 + x11802*x24672 - x11802*x24863 + x11826*x19 + x11827*x19 + x11828*x19 + x11829*x19 - x11833*x19 - x11834*x19 - x11836*x19 - x11837*x19 - x11850*x24507 + x11850*x24510 + x11859*x24528*x49 - x11931*x5643 + x17091 + x17215 + x17218 + x19502 + x19541 + x19542 + x19543 + x19544 - x19545 - x19547 - x19549 - x19550 + x19580 + x22146*x24649 + x22150 + x22193 + x22194 + x22195 + x22197 - x22198 - x22200 - x22202 - x22203 + x22227 - x24495*x5902 - x24495*x5903 - x24495*x5905 - x24498*x5902 - x24498*x5903 - x24498*x5905 + x24507*x25175 - x24507*x25273 + x24507*x25276 + x24507*x25277 - x24510*x25175 + x24510*x25273 - x24510*x25276 - x24510*x25277 + x24517*x25287 + x24517*x5335*x663 - x24528*x25287 - x24533*x25287 + x24581*x5822 + x24581*x5823 + x24586*x5822 + x24586*x5823 + x24587*x25278 + x24589*x25278 + x24599*x25288 + x24599*x25290 + x24600*x3695 + x24601*x25289 + x24603*x25291 + x24607 + x24620 + x24621*x5758 - x24621*x5807 + x24621*x5816 - x24621*x5904 + x24622 + x24623 - x24624 - x24625 + x24626*x5758 - x24626*x5807 + x24626*x5816 - x24626*x5904 + x24627 + x24628 + x24631 + x24632 + x24634 + x24635 + x24637 + x24638 - x24639 - x24640 - x24641*x5802 + x24641*x5883 - x24642 + x24644 + x24645*x5802 - x24645*x5883 + x24646 + x24648 + x24649*x3687 - x24649*x5846 + x24650 + x24653 + x24654 + x24655 + x24658 - x24659*x25225 - x24659*x25286 + x24659*x25293 + x24660 + x24661 - x24662*x5802 + x24662*x5883 - x24663 - x24664 - x24666 + x24667*x5861 - x24667*x5886 - x24668 + x24670*x5802 - x24670*x5883 + x24671 - x24672*x5800 - x24672*x5801 - x24673 - x24675 - x24676 - x24677*x25182 + x24677*x25250 - x24678*x25181 + x24678*x25249 - x24679 - x24680 + x24781*x5925 - x24787*x5925 - x24856*x5800 + x24863*x5800 - x24896*x5745 - x24896*x5746 + x24897*x5784 - x24898*x5784 - x24899*x5745 - x24899*x5746 + x24902*x5782 + x24902*x5784 - x24904*x25168 - x24904*x25269 - x24905*x5782 - x24905*x5784 - x24906*x25266 + x24907*x5782 + x24907*x5784 + x24946*x25299 - x25134*x5929 + x25176*x5822 - x25197*x5925 + 16*x25198 + 32*x25216 - x25219*x3733 - 8*x25220 + x25264*x5152 - x25264*x5157 + x25264 + x25265*x5152 - x25265 - x25268*x37 - x25270*x5152 - x25270*x5157 + x25271*x5849 - x25271*x5873 - x25272*x5849 + x25272*x5873 - x25275*x5152 + x25275*x5157 - x25275 + x25279*x5152 + x25279*x5157 + x25280*x5152 + x25280*x5157 + x25281*x5152 + x25281*x5157 - 32*x25282 + x25283*x5152 - x25283 - x25284*x5335 + x25285*x5828 - x25285*x5919 + x25292*x5758 - x25294*x5152 + x25294 - x25295*x5152 + x25295 + 32*x25297 - x25298*x5152 - x25298*x5157 + x25372 + x25380) + x63*(q1_b*x25500 - q1_b*x25514 + q1_b_dot*x24504*x2931 - q2_b*x25500 + q2_b*x25514 + x11390*x11974 - x11390*x25465 - x11683*x11974 + x11786*x25053 - x11786*x25064 + x11786*x25075 + x11802*x25032 - x11802*x25045 + x11802*x25053 - x11802*x25064 + x11802*x25075 - x11931*x7357 + x11957*x19 + x11958*x19 + x11959*x19 + x11960*x19 + x11964*x19 + x11965*x19 - x11966*x19 - x11967*x19 - x11968*x19 - x11969*x19 - x11970*x19 - x11971*x19 - x11972*x19 - x11979*x24507 + x11979*x24510 - x129*x25311 - x129*x25313 + x129*x25315 + x129*x25317 + x17115*x25499 + x17128 + x17237 + x17238 + x17248 + x183*x25066 - x19491*x25499 + x19611 + x19612 + x19614 + x19616 + x19617 + x19618 - x19620 - x19621 - x19622 - x19623 - x19624 - x19625 - x19626 + x19634 - x19644*x25177 + x22257 + x22259 + x22261 + x22262 + x22263 + x22265 - x22266 - x22267 - x22268 - x22269 - x22270 - x22271 - x22272 + x22283 + x22400 - x24468*x25496 + x24469*x25496 - x24495*x25468 - x24495*x25469 - x24495*x25471 + x24495*x25488 + x24495*x25489 + x24495*x25490 + x24495*x25493 + x24495*x25494 - x24495*x6028 - x24495*x6029 - x24495*x6034 + x24495*x6042 - x24498*x25468 - x24498*x25469 - x24498*x25471 + x24498*x25488 + x24498*x25489 + x24498*x25490 + x24498*x25493 + x24498*x25494 - x24498*x6028 - x24498*x6029 - x24498*x6034 + x24498*x6042 - x24507*x25470 + x24507*x25474 + x24507*x25481 + x24509*x327 + x24510*x25470 - x24510*x25474 - x24510*x25481 - x24511*x327 + x24517*x25503 - x24517*x25505 + x24517*x25508 + 32*x24521 + x24525*x25067 - x24528*x25503 + x24528*x25505 - x24528*x25508 - x24533*x25503 - x24536*x25072 - x24537*x25512 + x24550*x25491 + x24562*x25491 + x24569*x25260 + x24569*x25261 + x24573*x24604 - x24592*x25054 - x24592*x25055 + x24656*x25068 + x24682*x5758 + x24682*x5822 + x24682*x5823 - x24682*x5932 - x24682*x5934 + x24683*x5759 + x24684 + x24685 + x24686 - x24687 - x24688 - x24689 + x24690*x5758 + x24690*x5823 - x24690*x5932 - x24690*x5934 + x24691*x5759 + x24694 + x24697 + x24698 + x24699*x5925 + x24699*x5926 - x24700*x5925 - x24700*x5926 - x24701 - x24704 - x24706 - x24707*x5802 + x24707*x5966 + x24708*x25510 + x24711 + x24712*x5802 - x24712*x5966 + x24714*x25288 + x24714*x25290 + x24714*x25420 + x24715*x3687 - x24715*x3720 - x24715*x5946 + x24718*x25291 + x24718*x25293 + x24719 - x24720*x5802 + x24720*x5966 - x24721*x5802 + x24721*x5966 + x24722*x5802 - x24722*x5966 + x24724 - x24725*x5801 - x24725*x5925 - x24725*x5926 + x24725*x6199 - x24726*x25510 - x24727*x25182 + x24727*x25342 - x24728*x25181 + x24728*x25340 + x24758 + x24951*x5266 - x24956*x5871 + x24961*x5266 - x24967*x5284 + x24973*x5284 - x24979*x5284 + x25029*x5220 + x25029*x5222 - x25029*x5807 - x25029*x5904 - x25032*x5868 - x25034*x5270 + x25045*x5868 + x25048*x5270 + x25049*x5220 + x25049*x5222 - x25049*x5807 - x25049*x5904 - x25052*x5243 + x25052*x5861 - x25053*x5868 - x25054*x25241 - x25054*x5270 - x25055*x25241 + x25062*x25259 + x25062*x25299 + x25064*x5868 + x25065*x5213*x646 + x25066*x5235 - x25067*x25225 + x25072*x25249 + x25074*x25249 - x25075*x5868 + x25077*x5261 - x25077*x5883 - x25079*x5745 - x25079*x5746 + x25080*x5784 - x25087*x5784 - x25088*x5745 - x25088*x5746 + x25091*x5782 + x25091*x5784 - x25099*x25168 - x25099*x25269 - x25100*x5782 - x25100*x5784 - x25101*x25266 + x25102*x5782 + x25102*x5784 - x25153*x5871 + 72*x25216 - 32*x25220 - x25254*x5307 - 72*x25282 + x25289*x6044 + 72*x25297 + x25344 + x25345 + x25346 + x25347 + x25349 + x25350 + x25351 + x25352 + x25353 + x25355 + x25356 + x25357 + x25358 + x25359 + x25361 + x25362 + x25363 + x25364 + x25366 + x25368 + x25369 + x25370 + x25403*x5440 - x25410*x25497 - x25412*x25497 + x25456*x5157 - x25456 - x25457 - x25458 - x25459 + x25460 + x25461 + x25462 + x25463*x5152 - x25463*x5157 + x25463 + x25464*x5152 - x25464 - x25466*x37 - x25467*x5152 + x25467*x5157 - x25467 + x25473*x5157 - x25473 - x25477 - x25479 - x25480 - x25482*x5849 + x25483*x5849 + x25484 + x25486 + x25487 + x25492*x5152 - x25492*x5157 + x25492 + x25495*x5152 - x25495 - x25498*x5919 - x25501 - x25502*x5801 - x25502*x5925 + x25502*x6199 + x25504*x5801 + x25504*x5925 - x25504*x6199 + x25506*x5828 - x25506*x5952 + x25507*x5758 + x25507*x5822 - x25507*x5932 - x25509 - x25511*x5152 + x25511 - x25513*x5252 - x25515 + x25516*x5960 + x25517 + x25520) + x70*(-q1_b_dt*x24492 + x11390*x24486 - x11664*x19 - x11665*x19 + x127*x24821 + x131*x24821 + x17057*x5275 + x17064*x5152 - x17064*x5157 - x17098 - x17100 - x17196 - x17200 + x17201 - x17219 + x183*x24820 + x19488 - x22137 + x22138 - x24459 + x24461 - x24462 - x24463 + x24464 + x24465 + x24470 + x24472*x25128 - x24475 + x24477 - x24478 - x24481*x25131 - x24483 + x24484*x25131 + x24485 + x24487 + x24489 + x24490 - x24493 + x24494*x25128 + x24495*x5727 + x24497 - x24498*x5727 - x24499 + x24502 + x24507*x5250 + x24509 - x24510*x5250 - x24511 - x24536*x24828 - x24536*x24831 + x24784*x5261 - x24795 + x24797*x5221 + x24797*x5733 + x24802 + x24803 + x24804 - x24809 + x24811*x5221 + x24811*x5733 - x24817*x5250 - x24817*x5252 + x24818*x5221 + x24818*x5733 + x24819*x5250 + x24819*x5252 + x24820*x5235 - x24822 - x24823 - x24835*x5252 - x25121*x25134 - x25130*x5152 + x25130*x5157 - x25130 + x25132*x5152 + x25132*x5157 + x25133*x5152 + x25133*x5157 - x25135*x5152 + x25135 - x25136*x5190)) + x69*(L*(q3_b*x25115 + q3_b*x25116 + q3_b*x25165 + q3_i*x25113 - x12312*x19 - x129*x25537 - x129*x25538 + x129*x25540 + x129*x25541 + x18903*x25112 + x21126*x5152 - x21126*x5157 + x21128 - x21129 - x23570 - x23571 + x23572 - x24468*x25849 + x24469*x25849 + x24495*x6357 + x24498*x6357 + x24517*x6481 - x24528*x6481 - x24533*x6481 + x24581*x6290 + x24586*x6290 + x24603*x25734 - x24764*x6296 + x24768*x6296 - x24776*x25730 + x24784*x6293 - x25107*x6358 + x25557*x4581 - 4*x25732 + x25733*x5547 - x25845*x5152 + x25845*x5157 - x25845 - 2*x25846 - x25847*x5152 + x25847 - x25848*x3943 + x25853) - x106*(-q3_b*x25861 - q3_b*x25941 - q3_b_dot*x25926 - q3_i*x25934 + q4_b*x25861 + q4_b*x25941 + q4_i*x25934 + x12040*x25930 + x12040*x6228 - x12040*x6421 + x12377*x19 - x12378*x19 - x12379*x19 + x12381*x19 + x12383*x19 + x12384*x19 + x12385*x19 - x12386*x19 - x12387*x19 - x12394*x19 - x12395*x19 + x12428*x25246 - x12446*x24507 + x12446*x24510 + x12447*x25246 - x129*x21137*x25575 + x129*x25848 - x129*x25882*x675 + x1858*x25537 + x1858*x25538 - x1858*x25540 - x1858*x25541 - x1858*x25862 - x1858*x25863 - x1858*x25864 + x1858*x25869 + x1858*x25870 + x1858*x25871 - x18872*x5184 + x18944*x5184 - x18966*x6161 + x19758*x25575 - x21150*x5152 + x21150*x5157 + x21152 - x21153 - x21154 - x21155 - x21156 + x21157 + x21158 + x21159 + x21161 - x21162 - x21163 + x21177 + x23593 + x23594 - x23596 - x23597 - x23598 - x23599 - x23600 + x23601 + x23602 + x23603 + x23604 - x23605 - x23606 + x23619 + x24468*x25920 - x24468*x25922 - x24469*x25920 + x24469*x25922 - x24480*x3043 - x24495*x25918 + x24495*x25919 - x24495*x25921 + x24495*x25928 + x24495*x25929 - x24495*x6438 + x24495*x6439 + x24495*x6440 - x24495*x6449 + x24498*x25918 - x24498*x25919 - x24498*x25921 + x24498*x25928 + x24498*x25929 - x24498*x6438 + x24498*x6439 + x24498*x6440 - x24498*x6449 - x24507*x6432 - x24507*x6433 - x24507*x6481 + x24510*x6432 + x24510*x6433 + x24510*x6481 + x24517*x25923 - x24517*x25935 - x24517*x25937 - x24528*x25923 + x24528*x25935 + x24528*x25937 - x24533*x25923 + x24581*x6241 + x24581*x6381 + x24581*x6382 - x24585*x6493 + x24586*x6241 + x24586*x6381 + x24586*x6382 - x24594*x25942 - x24595*x25942 + x24598*x6493 + x24603*x25883 + x24603*x25884 - x24621*x6290 - x24626*x6290 - x24659*x25734 + x24672*x6296 - x24764*x6415 - x24764*x6416 - x24764*x6496 + x24768*x6415 + x24768*x6416 + x24768*x6496 + x24781*x6415 - x24787*x6415 - x24788*x25697 + x24790*x6493 - x24791*x6493 + x24795*x6434 - x24797*x6398 - x24797*x6454 + x24797*x6459 + x24797*x6460 + x24803*x6434 + x24804*x6434 - x24809*x6434 - x24811*x6398 - x24811*x6454 + x24811*x6459 + x24811*x6460 + x24817*x6432 + x24817*x6433 - x24818*x6398 - x24818*x6454 + x24818*x6459 + x24818*x6460 - x24819*x6432 - x24819*x6433 - x24820*x6420 + x24820*x6540 + x24820*x6543 + x24821*x6541 + x24821*x6542 - x24822*x6434 + x24832*x6341*x721 + x24856*x6296 - x24863*x6296 + x24985*x6243 - x24989*x6276 + x24990*x6243 + x24993*x25730 - x24994*x6276 - x24995*x6276 - x24996*x6268 - x24996*x6270 + x24997*x6276 + x25000*x6268 + x25000*x6270 + x25003*x3805 + x25004*x2883 - x25007*x25695 - x25008*x6268 - x25008*x6270 + x25009*x6276 + x25071*x25944 + x25073*x25944 + x25176*x6241 - x25185*x6445 - x25185*x6446 - x25193*x6445 - x25193*x6446 - x25197*x6415 - x25202*x6455 - x25202*x6456 + x25202*x6461 + x25202*x6462 - x25203*x6455 - x25203*x6456 + x25203*x6461 + x25203*x6462 + x25212*x6503 - x25215*x25895 - x25217*x6503 - x25222*x6544 - x25227*x4572 - x25228*x6666 - x25228*x6667 + x25232*x6666 + x25232*x6667 + x25235*x6503 + x25238*x6503 - x25240*x6503 + x25243*x6483 + x25247*x25946 + x25248*x25945 - x25557*x3818 + x25557*x4671 + x25557*x6545 - x25605*x6446 - x25610*x6418 + x25619 - x25647*x714 + x25668*x321 - x25672*x321 + 8*x25732 - x25733*x5332 - x25786*x5336 + 4*x25846 + x25881*x5547 + x25882*x4581 + x25903*x5336 + x25911*x5152 - x25911*x5157 + x25911 + x25912*x5152 - x25912 - x25913*x5152 + x25913*x5157 - x25913 + x25914 + x25915 - x25916 - x25917 - 4*x25924 - x25925*x6372 + x25927*x6372 - x25931*x5152 + x25931 + x25932*x5152 - x25932 - 8*x25933 - 6*x25936 + x25938*x5152 - x25938 - x25939*x5152 + x25939 - x25940*x5152 + x25940 - x25943*x6127 + x25963 + x25971) + x123*(-q3_b*x25868 - q3_b*x25877 - q3_b*x25890 - q3_b*x25900 + q3_b*x25902 + 36*q3_b_dt*x25888 - q3_i*x25893 - q3_i_dot*x25875 + q4_i*x25893 - x12040*x6539 - x12330*x19 - x12331*x19 + x12337*x19 + x12338*x19 + x19754 - x19758*x25901 - x21134*x5152 + x21134*x5157 - x21135*x5152 + x21135*x5157 - x21136*x5152 + x21136*x5157 - x21138 - x21139 + x21141 + x21142 + x21148 - x21186*x24522 - x21330*x25114 + x22381 + x23576 + x23577 + x23578 - x23580 - x23582 - x23584 + x23586 + x23587 + x23592 + x24468*x25872 - x24468*x25874 - x24469*x25872 + x24469*x25874 + x24474*x6945 - x24476*x6945 - x24495*x25878 - x24495*x25879 + x24495*x6383 + x24495*x6384 - x24495*x6388 - x24498*x25878 - x24498*x25879 + x24498*x6383 + x24498*x6384 + x24498*x6388 + x24498*x6391 - x24507*x25880 + x24510*x25880 - x24517*x25899 + x24528*x25899 + x24533*x25899 - x24550*x25896 - x24562*x25886 - x24562*x25896 + x24682*x6381 + x24682*x6382 + x24690*x6381 + x24690*x6382 + x24699*x6415 + x24699*x6416 - x24700*x6415 - x24700*x6416 + x24718*x25883 + x24718*x25884 - x24725*x6415 - x24725*x6416 + x24764*x6433 - x24768*x6433 + x24788*x25908 + x24792 - x24956*x6409 - x24985*x6399 + x24989*x6434 - x24990*x6399 + x24994*x6434 + x24996*x6483 - x24997*x6434 - x25000*x6483 - x25003*x4572 + x25007*x25907 + x25008*x6483 - x25009*x6434 + x25011*x25867 - x25012*x25867 + x25014*x6976 - x25015*x6976 + x25107*x6337 - x25107*x6386 - x25111*x4616 - x25117*x6484 + x25151*x2958 - x25153*x6409 - x25502*x6415 - x25502*x6416 + x25504*x6415 + x25504*x6416 + x25537*x4023 + x25538*x4023 - x25540*x4023 - x25541*x4023 - x25542*x6337 + x25542*x6386 - 20*x25550 + 20*x25554 + x25555*x2978 + x25557*x4597 - x25557*x6538 - 36*x25561 - x25569*x25891 - x25581*x25905*x5211 + 10*x25613 + 10*x25614 - 10*x25615 - 10*x25616 - x25618*x25906 + x25726 + x25769 + x25770 - x25771 + x25772 + x25773 + x25774 - x25775 - x25776 - x25777 - x25779 - x25780 - x25781 + x25782 + x25783 + x25784 + x25785 - x25787 - x25788 - x25789 - x25790 - x25791 + x25792 + x25840 - x25862*x4023 - x25863*x4023 - x25864*x4023 + x25866*x5157 - x25866 + x25869*x4023 + x25870*x4023 + x25871*x4023 - x25873*x2964 - 12*x25876 + x25881*x5312 + x25882*x3792 + x25885*x2856 + 24*x25886 + 36*x25889 - x25894*x5572 - x25897*x6167 + x25898*x5152 - x25898 + x25903*x5572 + 72*x25904 + x25905*x25910) - x123*(x12040*x12549 - x12252*x25985 - x12351*x12549 + x12357*x25415 + x12428*x24918 - x12428*x24921 + x12428*x24932 + x12447*x24911 - x12447*x24912 + x12447*x24918 - x12447*x24921 + x12447*x24932 + x12531*x19 + x12532*x19 + x12533*x19 + x12534*x19 + x12536*x19 + x12537*x19 - x12539*x19 - x12541*x19 - x12542*x19 - x12543*x19 - x12545*x19 - x12546*x19 - x154*x26011 - x154*x26013 + x154*x26015 + x154*x26017 + x21136*x25575 - x21137*x24524*x720 + x21143 + x21216 + x21218 + x21219 + x21221 + x21222 + x21224 - x21225 - x21226 - x21228 - x21229 - x21230 - x21231 + x21242 + x21285 + x23585*x24519 + x23588 + x23652 + x23653 + x23655 + x23656 + x23657 + x23658 - x23659 - x23660 - x23662 - x23663 - x23664 - x23665 + x23672 + x23717 - x24495*x26086 - x24495*x26087 - x24495*x26088 - x24495*x26089 + x24495*x26093 + x24495*x26094 + x24495*x26095 + x24495*x26096 + x24495*x26097 + x24495*x26098 - x24498*x26086 - x24498*x26087 - x24498*x26088 - x24498*x26089 + x24498*x26093 + x24498*x26094 + x24498*x26095 + x24498*x26096 + x24498*x26097 + x24498*x26098 + x24503*x6398 + x24503*x6454 - x24503*x6555 - x24503*x6557 + x24505*x6398 + x24505*x6454 - x24505*x6555 - x24505*x6557 - x24507*x26090 + x24507*x26092 + x24510*x26090 - x24510*x26092 - x24512*x6434 + x24512*x6589 + x24516*x6434 - x24516*x6589 + x24519*x4572 - x24519*x4610 - x24519*x6569 + x24524*x25991 - x24527*x6434 + x24527*x6589 - x24529*x6429 + x24529*x6577 + x24531*x6434 - x24531*x6589 - x24532*x6432 - x24532*x6433 + x24532*x6819 + x24532*x6820 - x24535*x25907 + x24535*x26040 - x24550*x26081 - x24550*x26082 - x24562*x26081 - x24562*x26082 - x24573*x25883 - x24573*x25884 + x24909*x6241 + x24909*x6244 - x24909*x6445 - x24909*x6446 - x24910*x6276 + x24910*x6503 - x24911*x6496 + x24912*x6496 + x24913*x6241 + x24913*x6244 - x24913*x6445 - x24913*x6446 - x24916*x6276 + x24916*x6503 - x24917*x6264 + x24917*x6548 - x24918*x6495 - x24918*x6496 + x24919*x6276 - x24919*x6503 + x24921*x6495 + x24921*x6496 + x24923*x3805 - x24923*x4590 + x24923*x6256 + x24924*x25762 + x24926*x2883 - x24930*x25697 + x24930*x25946 - x24931*x25695 + x24931*x25945 - x24932*x6495 - x24932*x6496 + x24933*x6276 - x24933*x6503 - x24951*x6381 - x24951*x6382 + x24953*x6415 + x24953*x6416 - x24958*x6415 - x24958*x6416 - x24961*x6381 - x24961*x6382 + x24967*x6415 + x24967*x6416 - x24973*x6415 - x24973*x6416 + x24979*x6415 + x24979*x6416 + x25109*x25999 + x25185*x6459 + x25185*x6460 + x25193*x6459 + x25193*x6460 + x25221*x6551 + x25221*x6552 - x25237*x6551 - x25237*x6552 - x25246*x6551 - x25246*x6552 - x25395*x6483 + x25396*x6483 - x25409*x26104 - x25411*x6544 - x25413*x6432 - x25413*x6433 + x25413*x6819 + x25413*x6820 + x25414*x6432 + x25414*x6433 - x25414*x6819 - x25414*x6820 - x25415*x6575 + x25416*x6398 - x25416*x6555 + x25419*x25986 + x25419*x25989 + x25426*x25895 - x25427*x25907 + x25427*x26040 + x25668*x286 - x25672*x286 - x25741*x6655 + x25761*x6241 - x25761*x6446 + x25763*x25901 + x25793 + x25867*x26107 - x25881*x6741 + 3*x25914 + 3*x25915 - 3*x25916 - 3*x25917 + 48*x25933 - 14*x25936 + x25971 - x25974*x6741 - 48*x25981 + x26070 + x26083*x5152 - x26083*x5157 + x26083 + x26084*x5152 - x26084 - x26085*x6341 - x26091*x5152 + x26091*x5157 - x26091 + x26099*x5572 + x26101*x5152 - x26101 + x26103*x5152 - x26103 - x26106*x5527 + x26108*x6167 - x26109*x5152 + x26109 + 14*x26110 - x26111*x5152 + x26111 - x26112*x5152 + x26112 - x26113*x5152 - x26113*x5157 + x26138) + x168*(-q4_b*x24649*x675 + x12040*x12473 - x12161*x12351 + x12357*x25285 + x12428*x24856 - x12428*x24863 + x12447*x24672 - x12447*x24863 + x12463*x19 + x12464*x19 + x12465*x19 + x12466*x19 - x12468*x19 - x12469*x19 - x12471*x19 - x12472*x19 + x12489*x25687 + x19647*x25901 + x19712 + x19726 - x21137*x24659*x691 + x21178 + x21179 + x21180 + x21182 - x21183 - x21185 - x21187 - x21189 + x21214 + x22346 + x22360 + x23585*x24649 + x23620 + x23621 + x23622 + x23623 - x23624 - x23626 - x23628 - x23629 + x23650 + x24495*x25978 - x24495*x6527 - x24495*x6529 - x24495*x6530 + x24495*x6533 + x24498*x25978 - x24498*x6527 - x24498*x6529 - x24498*x6530 + x24498*x6533 + x24507*x25899 - x24510*x25899 + x24517*x25983 + x24517*x25984 - x24528*x25983 - x24528*x25984 - x24533*x25983 - x24533*x25984 + x24581*x6459 + x24581*x6460 + x24586*x6459 + x24586*x6460 + x24587*x25979 + x24589*x25979 + x24599*x25986 + x24599*x25989 + x24621*x6398 - x24621*x6445 - x24621*x6446 + x24621*x6454 + x24626*x6398 - x24626*x6445 - x24626*x6446 + x24626*x6454 - x24641*x6434 + x24641*x6503 + x24645*x6434 - x24645*x6503 + x24659*x25991 - x24662*x6434 + x24662*x6503 - x24667*x6429 + x24667*x6548 + x24670*x6434 - x24670*x6503 - x24672*x6432 - x24672*x6433 - x24677*x25908 + x24677*x25946 - x24678*x25907 + x24678*x25945 - x24856*x6432 - x24856*x6433 + x24863*x6432 + x24863*x6433 - x24882*x6666 - x24882*x6667 + x24883*x6666 + x24883*x6667 - x24896*x6381 - x24896*x6382 + x24897*x6415 + x24897*x6416 - x24898*x6415 - x24898*x6416 - x24899*x6381 - x24899*x6382 + x24902*x6415 + x24902*x6416 - x24904*x25883 - x24904*x25884 - x24905*x6415 - x24905*x6416 + x24907*x6415 + x24907*x6416 + x24946*x25999 + x25176*x6459 + x25271*x6483 - x25271*x6499 - x25272*x6483 + x25272*x6499 - x25285*x6544 + x25292*x6398 - x25292*x6446 - x25629*x695 + x25644*x6466 - x25647*x4623 + x25655 + x25656 - x25657 - x25658 + x25659 + x25660 + x25662 + x25663 + x25664 + x25665 + x25667 + x25669 - x25671 - x25673 - x25674 + x25675 + x25676 + x25677 + x25678 + x25679 + x25680 + x25681 + x25683 + x25684 + x25685 - x25686 - x25688 - x25689 - x25690 + x25691 - x25692 - x25693 - x25694 - x25696 - x25698 + x25725 + x25735 - x25881*x5643 + 16*x25924 - x25925*x6222 + x25927*x6222 + 32*x25933 + x25972*x5152 - x25972*x5157 + x25972 + x25973*x5152 - x25973 - x25974*x5643 - x25975*x666 - x25976*x5152 - x25976*x5157 - x25977*x5152 + x25977*x5157 - x25977 + x25980*x5152 + x25980*x5157 - 32*x25981 + x25982*x5152 - x25982 - x25985*x6520 + x25988*x6171 + x25990*x3818 - x25993*x5152 + x25993 - x25995*x5152 + x25995 + 32*x25996 - x25997*x5152 - x25997*x5157 + x25998*x691 + x26071 + x26080) + x63*(q3_b*x26175 - q3_b*x26184 + q3_b_dot*x19646*x24573 + q3_b_dot*x24504*x3153 - q4_b*x26175 + q4_b*x26184 + q4_b_dot*x25835 + x12040*x12590 - x12351*x12590 + x12357*x25506 + x12428*x25053 - x12428*x25064 + x12428*x25075 + x12447*x25032 - x12447*x25045 + x12447*x25053 - x12447*x25064 + x12447*x25075 + x12575*x19 + x12576*x19 + x12577*x19 + x12578*x19 + x12580*x19 + x12581*x19 - x12582*x19 - x12583*x19 - x12584*x19 - x12585*x19 - x12586*x19 - x12587*x19 - x12588*x19 - x129*x26011 - x129*x26013 + x129*x26015 + x129*x26017 + x19650*x25901 + x21244 + x21245 + x21246 + x21247 + x21248 + x21249 - x21251 - x21252 - x21253 - x21254 - x21255 - x21256 - x21257 + x21264 + x22405 + x23673 + x23674 + x23675 + x23676 + x23677 + x23679 - x23680 - x23681 - x23682 - x23683 - x23684 - x23685 - x23686 + x23697 + x23813 - x24495*x26150 - x24495*x26151 - x24495*x26153 + x24495*x26166 + x24495*x26167 + x24495*x26168 + x24495*x26171 + x24495*x26172 - x24495*x6640 - x24495*x6641 - x24495*x6644 + x24495*x6652 - x24498*x26150 - x24498*x26151 - x24498*x26153 + x24498*x26166 + x24498*x26167 + x24498*x26168 + x24498*x26171 + x24498*x26172 - x24498*x6640 - x24498*x6641 - x24498*x6644 + x24498*x6652 - x24507*x26152 + x24507*x26156 + x24507*x26162 + x24510*x26152 - x24510*x26156 - x24510*x26162 + x24517*x26177 - x24517*x26178 + x24517*x26180 + x24517*x26181 - x24528*x26177 + x24528*x26178 - x24528*x26180 - x24528*x26181 + x24550*x26169 + x24562*x26169 + x24569*x25720 + x24569*x25970 + x24682*x6398 + x24682*x6459 + x24682*x6460 - x24682*x6555 - x24682*x6557 + x24683*x6399 + x24690*x6398 + x24690*x6460 - x24690*x6555 - x24690*x6557 + x24691*x6399 + x24699*x6551 + x24699*x6552 - x24700*x6551 - x24700*x6552 - x24707*x6434 + x24707*x6589 + x24708*x25992 + x24712*x6434 - x24712*x6589 + x24714*x25986 + x24714*x25989 + x24714*x6121*x704 - x24715*x4610 - x24715*x6569 - x24720*x6434 + x24720*x6589 - x24721*x6434 + x24721*x6589 + x24722*x6434 - x24722*x6589 - x24725*x6433 - x24725*x6551 - x24725*x6552 + x24725*x6820 - x24726*x25992 - x24727*x25908 + x24727*x26042 - x24728*x25907 + x24728*x26040 + x24951*x6279 - x24956*x6550 + x24961*x6279 - x24967*x6285 + x24973*x6285 - x24979*x6285 + x25029*x6241 + x25029*x6244 - x25029*x6445 - x25029*x6446 - x25032*x6496 - x25034*x6282 + x25045*x6496 + x25048*x6282 + x25049*x6241 + x25049*x6244 - x25049*x6445 - x25049*x6446 - x25052*x6264 + x25052*x6548 - x25053*x6495 - x25053*x6496 - x25054*x25715 - x25054*x25942 - x25054*x6282 - x25055*x25715 - x25055*x25942 + x25062*x25969 + x25062*x25999 + x25064*x6495 + x25064*x6496 + x25066*x3805 - x25066*x4590 + x25066*x6256 + x25067*x25762 + x25068*x25682 - x25072*x25695 + x25072*x25945 - x25074*x25695 + x25074*x25945 - x25075*x6495 - x25075*x6496 + x25077*x6276 - x25077*x6503 - x25079*x6381 - x25079*x6382 + x25080*x6415 + x25080*x6416 - x25087*x6415 - x25087*x6416 - x25088*x6381 - x25088*x6382 + x25091*x6415 + x25091*x6416 - x25099*x25883 - x25099*x25884 - x25100*x6415 - x25100*x6416 + x25102*x6415 + x25102*x6416 - x25153*x6550 - x25482*x6483 + x25483*x6483 - x25497*x26104 - x25498*x6544 - x25502*x6433 + x25502*x6820 + x25504*x6433 - x25504*x6820 - x25506*x6575 + x25507*x6398 + x25507*x6459 - x25507*x6555 - x25516*x6483 + x25516*x6583 + x25668*x327 - x25672*x327 + x25795 + x25796 + x25797 - x25798 - x25799 - x25800 - x25803*x695 + x25811 + x25813 + x25814 - x25815 - x25816 - x25817 + x25827*x6241 - x25827*x6446 + x25829 + x25833 + x25834*x6466 + x25839 + x25844 - x25881*x7357 - x25901*x26179 + 72*x25933 - 32*x25936 - x25964*x5307 - x25974*x7357 - 72*x25981 + x25990*x3792 + 72*x25996 + x26044 + x26045 + x26046 + x26047 + x26048 + x26049 + x26050 + x26051 + x26052 + x26054 + x26055 + x26056 + x26058 + x26059 + x26061 + x26062 + x26063 + x26064 + x26066 + x26067 + x26068 + x26069 + x26099*x5440 - x26106*x5652 + x26107*x6976 + 32*x26110 + x26139*x5157 - x26139 - x26140 - x26141 - x26142 + x26143 + x26144 + x26145 + x26146*x5152 - x26146*x5157 + x26146 + x26147*x5152 - x26147 - x26148*x666 - x26149*x5152 + x26149*x5157 - x26149 + x26155*x5157 - x26155 - x26158 - x26160 - x26161 + x26163 + x26164 + x26165 + x26170*x5152 - x26170*x5157 + x26170 + x26174*x5152 - x26174 - x26176 - x26182 - x26183*x5152 + x26183 - x26185 + x26186 + x26189) + x70*(q3_b*x24826 + q3_b*x24836 + q3_b_dot*x25861 - q3_b_dt*x24492 + x12040*x24486 + x12289*x24501 - x12294*x24480 - x12323*x19 - x12324*x19 - x12445*x24474 + x12445*x24476 + x129*x19658*x20 + x18903*x5275 + x19648*x5152 - x19648*x5157 - x19728 + x21131*x5152 - x21131*x5157 - x21132 + x21133 - x22297 - x22343 - x23573 - x23574 + x23575 - x24468*x25858 + x24469*x25858 - x24481*x25855 + x24484*x25855 + x24495*x6367 + x24495*x6374 - x24498*x6367 - x24498*x6374 - x24732*x6372 + x24738*x6372 + x24784*x6276 + x24797*x6243 + x24797*x6362 + x24811*x6243 + x24811*x6362 - x24816*x6276 - x24817*x6268 - x24817*x6270 + x24818*x6243 + x24818*x6362 + x24819*x6268 + x24819*x6270 + x24820*x3805 + x24820*x6256 + x24821*x2883 + x24821*x2935 - x24830*x25860 - x24835*x6270 + x25016*x692 - x25212 - x25217 + x25235 + x25238 - x25240 + x25247 - x25248 - x25296*x25860 - x25537 - x25538 + x25540 + x25541 - x25610*x6341 + x25666 + x25668 - x25670 - x25672 - x25854*x5152 + x25854*x5157 - x25854 + x25856*x5152 + x25856*x5157 + x25857*x5152 + x25857*x5157 - x25859*x5152 + x25859)) + x69*(L*(q4_b*x26197 + x12351*x25930 - x15303*x19 - x15419*x24528 + x18978*x26195 + x21267 - x21268 - x23698 - x23699 + x23700 - x24468*x26194 + x24469*x26194 - x24480*x3042 + x24495*x26193 + x24495*x6670 - x24498*x26193 + x24498*x6670 + x24581*x6603 + x24586*x6603 + x24603*x26079 - x24764*x6609 + x24768*x6609 - x24776*x26075 + x24781*x6609 + x24784*x6606 - x24787*x6609 - x25862*x6674 - x25863*x6674 - x25864*x6674 + x25869*x6674 + x25870*x6674 + x25871*x6674 + x25882*x4671 + x25910*x5652 - 4*x26077 - x26190*x5152 + x26190*x5157 - x26190 - 2*x26191 - x26192*x5152 + x26192 + x26196*x327 + x26200) - x106*(-q4_b*x25006 - q4_b*x25010 + q4_b*x25868 + q4_b*x25877 + q4_b*x25900 - q4_b*x25902 + q5_b*x25006 + q5_b*x25010 - q5_b_dot*x25926 - q5_b_dt*x25150*x5675 + x12351*x6539 - x12351*x6757 - x129*x21277*x25901 - x129*x26234*x704 + x15364*x19 - x15365*x19 - x15366*x19 + x15368*x19 + x15370*x19 + x15371*x19 + x15372*x19 - x15373*x19 - x15374*x19 - x15380*x19 - x15381*x19 + x154*x25862 + x154*x25863 + x154*x25864 - x154*x25869 - x154*x25870 - x154*x25871 - x154*x26211 - x154*x26212 - x154*x26213 + x154*x26219 + x154*x26220 + x154*x26221 - x15419*x24507 + x15419*x24510 + x15420*x25246 + x15436*x25246 - x18966*x6727 - x18978*x6998 + x19053*x6998 + x21243*x25901 + x21294 - x21295 - x21296 - x21297 - x21298 + x21299 + x21300 + x21302 + x21304 - x21305 - x21306 + x21321 + x23721 + x23722 - x23724 - x23725 - x23726 - x23727 - x23728 + x23729 + x23730 + x23732 + x23733 - x23734 - x23735 + x23746 + x24468*x26266 - x24468*x26267 - x24469*x26266 + x24469*x26267 - x24495*x26264 + x24495*x26265 - x24495*x26268 + x24495*x26273 + x24495*x26274 - x24495*x6768 + x24495*x6769 + x24495*x6770 - x24495*x6777 + x24498*x26264 - x24498*x26265 - x24498*x26268 + x24498*x26273 + x24498*x26274 - x24498*x6768 + x24498*x6769 + x24498*x6770 - x24498*x6777 - x24507*x26271 - x24507*x26272 - x24507*x6764 - x24507*x6765 + x24507*x6864 + x24507*x6865 + x24510*x26271 + x24510*x26272 + x24510*x6764 + x24510*x6765 - x24510*x6864 - x24510*x6865 + x24517*x26269 - x24517*x26279 - x24517*x26281 - x24528*x26269 + x24528*x26279 + x24528*x26281 - x24533*x26269 + x24581*x6557 + x24581*x6702 + x24581*x6703 - x24585*x6817 + x24586*x6557 + x24586*x6702 + x24586*x6703 - x24594*x26285 - x24595*x26285 + x24598*x6817 + x24603*x26235 + x24603*x26236 - x24621*x6603 - x24626*x6603 - x24659*x26079 + x24672*x6609 - x24764*x6752 - x24764*x6753 - x24764*x6820 + x24768*x6752 + x24768*x6753 + x24768*x6820 + x24781*x6753 - x24787*x6753 - x24788*x26042 + x24790*x6817 - x24791*x6817 + x24795*x6766 - x24797*x6729 - x24797*x6730 + x24797*x6785 + x24797*x6786 + x24802*x26258 + x24803*x6766 + x24804*x6766 - x24809*x6766 - x24811*x6729 - x24811*x6730 + x24811*x6785 + x24811*x6786 + x24817*x6764 + x24817*x6765 - x24818*x6729 - x24818*x6730 + x24818*x6785 + x24818*x6786 - x24819*x6764 - x24819*x6765 - x24820*x6755 + x24820*x6857 + x24820*x6860 - x24821*x6756 + x24821*x6858 + x24821*x6859 - x24822*x6766 + x24823*x26257 + x24832*x6655*x750 + x24856*x6609 - x24863*x6609 - x24989*x6589 + x24993*x26075 - x24994*x6589 - x24996*x6581 - x24996*x6583 + x24997*x6589 + x25000*x6581 + x25000*x6583 + x25003*x4610 - x25007*x26040 - x25008*x6581 - x25008*x6583 + x25009*x6589 - x25185*x6776 - x25186*x6775 - x25193*x6776 - x25194*x6775 - x25197*x6753 - x25202*x6781 - x25202*x6782 + x25202*x6788 + x25202*x6789 - x25203*x6781 - x25203*x6782 + x25203*x6788 + x25203*x6789 + x25212*x6827 - x25215*x26245 - x25217*x6827 - x25227*x4663 - x25228*x6989 - x25228*x6990 + x25232*x6989 + x25232*x6990 + x25235*x6827 + x25238*x6827 - x25240*x6827 + x25243*x6810 + x25247*x26288 + x25248*x26287 + x25573*x6575 - x25605*x6776 - x25882*x4623 + x25882*x4759 + x25882*x6538 - x25943*x6749 + x25963 - x25990*x743 + x26013*x321 - x26017*x321 + 8*x26077 - x26078*x5332 - x26131*x5336 + 4*x26191 - x26196*x5224 + x26232*x3070 + x26233*x5547 + x26234*x4671 + x26251*x5336 + x26252*x5224 + x26261*x5152 - x26261*x5157 + x26261 + x26262*x5152 - x26262 - x26263*x5152 + x26263*x5157 - x26263 - 4*x26270 - x26275*x5152 + x26275 + x26276*x2964 + x26277*x5152 - x26277 - 8*x26278 - 6*x26280 + x26282*x5152 - x26282 - x26283*x5152 + x26283 - x26284*x5152 + x26284 - x26286*x6418 + x26290 + x26298) + x123*(-q4_i*x26243 - q5_b_dt*x24480*x6709 - x12351*x6856 - x15321*x19 - x15322*x19 + x15328*x19 + x15329*x19 + x21237 - x21243*x26250 - x21275*x5152 + x21275*x5157 - x21276*x5152 + x21276*x5157 - x21279 - x21280 + x21282 + x21283 + x21290 - 28*x21330*x24750 - x21336*x26247 + x23669 + x23703 + x23705 + x23706 - x23708 - x23710 - x23712 + x23714 + x23715 + x23720 + x24468*x26224 - x24468*x26225 - x24469*x26224 + x24469*x26225 + x24474*x26214 + x24474*x26217 - x24476*x26214 - x24476*x26217 + 48*x24480*x2964 + x24495*x26223 - x24495*x26229 - x24495*x26230 + x24495*x6704 + x24495*x6705 - x24495*x6718 - x24498*x26223 - x24498*x26229 - x24498*x26230 + x24498*x6704 + x24498*x6705 + x24498*x6718 - x24507*x26231 + x24510*x26231 - x24517*x26249 + x24528*x26249 + x24533*x26249 - x24550*x26246 - x24562*x26238 - x24562*x26246 - x24581*x6729 - x24581*x6730 - x24586*x6729 - x24586*x6730 + x24682*x6702 + x24682*x6703 + x24690*x6702 + x24690*x6703 + x24699*x6752 + x24699*x6753 - x24700*x6752 - x24700*x6753 + x24718*x26235 + x24718*x26236 - x24725*x6752 - x24725*x6753 - 56*x24756*x25994 + x24764*x6765 - x24768*x6765 + x24788*x26258 + x24792 - x24956*x6746 + x24989*x6766 + x24994*x6766 + x24995*x6766 + x24996*x6810 - x24997*x6766 - x25000*x6810 - x25003*x4663 + x25007*x26257 + x25008*x6810 - x25009*x6766 + x25011*x26218 + x25011*x6759 - x25012*x26218 - x25012*x6759 + x25014*x26226 + x25014*x26227 - x25015*x26226 - x25015*x26227 - x25176*x6729 - x25502*x6752 - x25502*x6753 + x25504*x6752 + x25504*x6753 - x25573*x6756 + x25862*x6716 + x25863*x6716 + x25864*x6716 - x25869*x6716 - x25870*x6716 - x25871*x6716 - 28*x25876 + x25882*x4688 - x25882*x7171 - 48*x25889 - x25894*x26242 - 96*x25904 - x25910*x26254 + x26071 + x26114 + x26115 - x26116 + x26117 + x26118 + x26119 - x26120 - x26121 - x26122 - x26124 - x26125 - x26126 + x26127 + x26128 + x26129 + x26130 - x26132 - x26133 - x26134 - x26135 - x26136 + x26137 + x26186 - x26211*x6716 - x26212*x6716 - x26213*x6716 - x26215*x5307 + x26216*x5157 - x26216 + x26219*x6716 + x26220*x6716 + x26221*x6716 - x26222*x6710 - x26222*x6713 - 16*x26228 + x26232*x2978 + x26233*x5312 + x26234*x4597 + x26237*x6724 + 24*x26238 + x26239*x6710 + x26239*x6713 + x26240*x2958 + 48*x26241 - x26244*x5652 + x26248*x5152 - x26248 + x26251*x5572 + x26252*x6709 + 96*x26253 + x26254*x26260 - 32*x26256) - x123*(q4_b*x26424 - q5_b*x26424 - x11515*x26316 + x12351*x15548 - x15342*x15548 - x154*x26344 - x154*x26346 + x154*x26348 + x154*x26350 + x15420*x24918 - x15420*x24921 + x15420*x24932 + x15436*x24918 - x15436*x24921 + x15436*x24932 + x15530*x19 + x15531*x19 + x15532*x19 + x15533*x19 + x15535*x19 + x15536*x19 - x15538*x19 - x15540*x19 - x15541*x19 - x15542*x19 - x15544*x19 - x15545*x19 + x21136*x26250 + x21137*x26441 - x21277*x26441 + x21284 + x21336*x26108 + x21365 + x21367 + x21369 + x21371 + x21372 + x21373 - x21374 - x21375 - x21377 - x21378 - x21380 - x21381 + x21390 + x21433 + x23713*x24519 + x23716 + x23779 + x23780 + x23781 + x23782 + x23783 + x23784 - x23785 - x23786 - x23788 - x23789 - x23790 - x23791 + x23798 + x23844 - x24495*x26419 - x24495*x26420 - x24495*x26421 - x24495*x26422 + x24495*x26428 + x24495*x26429 + x24495*x26430 + x24495*x26431 + x24495*x6930 + x24495*x6931 - x24498*x26419 - x24498*x26420 - x24498*x26421 - x24498*x26422 + x24498*x26428 + x24498*x26429 + x24498*x26430 + x24498*x26431 + x24498*x6930 + x24498*x6931 + x24503*x6729 + x24503*x6730 - x24503*x6868 - x24503*x6871 + x24505*x6729 + x24505*x6730 - x24505*x6868 - x24505*x6871 - x24507*x26423 + x24507*x26426 + x24507*x26427 + x24510*x26423 - x24510*x26426 - x24510*x26427 - x24512*x6766 + x24512*x6903 + x24516*x6766 - x24516*x6903 - x24517*x26440 + x24519*x4663 - x24519*x4701 - x24519*x6883 - x24523*x3102 - x24527*x6766 + x24527*x6903 + x24528*x26440 - x24529*x6763 + x24529*x6891 + x24531*x6766 - x24531*x6903 - x24532*x6764 - x24532*x6765 + x24532*x7137 + x24532*x7138 - x24535*x26257 + x24535*x26373 - x24550*x26414 - x24550*x26415 - x24562*x26414 - x24562*x26415 - x24573*x26235 - x24573*x26236 + x24909*x6555 + x24909*x6557 - x24909*x6776 - x24909*x6846 - x24910*x6589 + x24910*x6827 + x24913*x6555 + x24913*x6557 - x24913*x6776 - x24913*x6846 - x24916*x6589 + x24916*x6827 - x24917*x6577 + x24917*x6816 - x24918*x6819 - x24918*x6820 + x24919*x6589 - x24919*x6827 + x24921*x6819 + x24921*x6820 + x24923*x4610 - x24923*x4681 + x24923*x6569 - x24930*x26042 + x24930*x26288 - x24931*x26040 + x24931*x26287 - x24932*x6819 - x24932*x6820 + x24933*x6589 - x24933*x6827 - x24951*x6702 - x24951*x6703 + x24953*x6752 + x24953*x6753 - x24958*x6752 - x24958*x6753 - x24961*x6702 - x24961*x6703 + x24967*x6752 + x24967*x6753 - x24973*x6752 - x24973*x6753 + x24979*x6752 + x24979*x6753 + x25109*x26332 + x25185*x6785 + x25185*x6786 + x25193*x6785 + x25193*x6786 + x25221*x6864 + x25221*x6865 - x25237*x6864 - x25237*x6865 - x25246*x6864 - x25246*x6865 - x25395*x6810 + x25396*x6810 - x25409*x26437 + x25411*x6575 - x25413*x6764 - x25413*x6765 + x25413*x7138 + x25414*x6764 + x25414*x6765 - x25414*x7138 + x25415*x6756 + x25416*x6729 - x25416*x6868 + x25419*x26321 + x25419*x26323 + x25426*x26245 - x25427*x26257 + x25427*x26373 + x25605*x6785 + x25761*x6555 - x25761*x6776 + x25867*x26442 + x25925*x7015 - x25927*x3106 - x25927*x7015 + x26013*x286 - x26017*x286 - x26085*x6801 + x26105*x26439 + x26138 - x26233*x6741 + 48*x26278 - 14*x26280 + x26298 - x26303*x6741 + x26309*x3106 - 48*x26314 - x26319*x6945 + x26403 + x26416*x5152 - x26416*x5157 + x26416 + x26417*x5152 - x26417 - x26418*x6655 - x26425*x5152 + x26425*x5157 - x26425 + x26432*x5572 + x26434*x5152 - x26434 + x26436*x5152 - x26436 - x26438*x26439 - x26443*x5152 + x26443 + 14*x26444 - x26445*x5152 + x26445 - x26446*x5152 + x26446 - x26447*x5152 - x26447*x5157 + x26472) + x168*(q4_b*x26308 - q5_b*x24649*x704 + x12351*x15467 - x12473*x15342 + x15420*x24672 + x15420*x24856 - x15420*x24863 + x15436*x24672 - x15436*x24863 + x15457*x19 + x15458*x19 + x15459*x19 + x15460*x19 - x15462*x19 - x15463*x19 - x15465*x19 - x15466*x19 + x15484*x26032 - x15485*x24507 + x15485*x24510 + x21137*x26326 + x21197 + x21210 - x21277*x26029 + x21322 + x21323 + x21325 + x21327 - x21328 - x21331 - x21332 - x21333 + x21363 + x23635 + x23649 + x23713*x24649 + x23747 + x23748 + x23749 + x23750 - x23751 - x23753 - x23755 - x23756 + x23777 - x24495*x6843 - x24495*x6845 - x24495*x6847 + x24495*x6851 - x24498*x6843 - x24498*x6845 - x24498*x6847 + x24498*x6851 + x24517*x26318 - x24528*x26318 - x24533*x26318 + x24581*x6786 + x24586*x6786 + x24587*x26311 + x24587*x26312 + x24589*x26311 + x24589*x26312 + x24599*x26321 + x24599*x26323 + x24621*x6729 + x24621*x6730 - x24621*x6776 - x24621*x6846 + x24626*x6729 + x24626*x6730 - x24626*x6776 - x24626*x6846 - x24641*x6766 + x24641*x6827 + x24645*x6766 - x24645*x6827 - x24662*x6766 + x24662*x6827 - x24667*x6763 + x24667*x6816 + x24670*x6766 - x24670*x6827 - x24672*x6764 - x24672*x6765 - x24677*x26258 + x24677*x26288 - x24678*x26257 + x24678*x26287 - x24856*x6764 - x24856*x6765 + x24863*x6764 + x24863*x6765 - x24882*x6989 - x24882*x6990 + x24883*x6989 + x24883*x6990 - x24896*x6702 - x24896*x6703 + x24897*x6752 + x24897*x6753 - x24898*x6752 - x24898*x6753 - x24899*x6702 - x24899*x6703 + x24902*x6752 + x24902*x6753 - x24904*x26235 - x24904*x26236 - x24905*x6752 - x24905*x6753 + x24907*x6752 + x24907*x6753 + x24946*x26332 + x25176*x6786 + x25271*x6810 - x25272*x6810 + x25285*x6756 + x25292*x6729 - x25292*x6776 - x25927*x6850 - x25975*x724 + x25988*x6791 - x25990*x4714 + x26000 + x26001 - x26002 - x26003 + x26004 + x26005 + x26007 + x26008 + x26009 + x26010 + x26012 + x26014 - x26016 - x26018 - x26019 + x26020 + x26021 + x26022 + x26023 + x26024 + x26025 + x26026 + x26027 + x26028 + x26030 - x26031 - x26033 - x26034 - x26035 + x26036 - x26037 - x26038 - x26039 - x26041 - x26043 + x26070 + x26080 - x26233*x5643 + 16*x26270 + 32*x26278 + x26299*x6836 + x26301*x5152 - x26301*x5157 + x26301 + x26302*x5152 - x26302 - x26303*x5643 - x26304*x695 - x26305*x5152 - x26305*x5157 - x26306*x3012 - x26307*x5152 + x26307*x5157 - x26307 + x26309*x3012 + x26310*x6836 + x26313*x5152 + x26313*x5157 - 32*x26314 + x26315*x5152 - x26315 - x26316*x5332 - x26317*x6836 - x26319*x6836 + x26320*x6836 + x26322*x6466 + x26324*x6836 + x26325*x4623 - x26327*x5152 + x26327 - x26328*x5152 + x26328 + 32*x26329 - x26330*x5152 - x26330*x5157 - x26331*x6836 + x26404 + x26413) + x63*(q4_b*x26504 - q4_b*x26514 - q5_b*x26504 + q5_b*x26514 - x11433*x26360 - x11583*x26316 + x12351*x15586 - x129*x26344 - x129*x26346 + x129*x26348 + x129*x26350 - x15342*x15586 + x15420*x25053 - x15420*x25064 + x15420*x25075 + x15436*x25053 - x15436*x25064 + x15436*x25075 + x15571*x19 + x15572*x19 + x15573*x19 + x15574*x19 + x15576*x19 + x15577*x19 - x15578*x19 - x15579*x19 - x15580*x19 - x15581*x19 - x15582*x19 - x15583*x19 - x15584*x19 + x17368*x3262*x6466 + x21392 + x21393 + x21395 + x21397 + x21398 + x21399 - x21400 - x21401 - x21403 - x21404 - x21405 - x21406 - x21407 + x21414 + x23690 + x23799 + x23800 + x23801 + x23802 + x23803 + x23805 - x23806 - x23807 - x23808 - x23809 - x23810 - x23811 - x23812 + x23825 + x23947 - x24495*x26485 + x24495*x26496 + x24495*x26497 + x24495*x26498 - x24495*x6961 - x24495*x6962 - x24495*x6964 - x24495*x6965 - x24495*x6967 + x24495*x6975 + x24495*x6977 + x24495*x6978 - x24498*x26485 + x24498*x26496 + x24498*x26497 + x24498*x26498 - x24498*x6961 - x24498*x6962 - x24498*x6964 - x24498*x6965 - x24498*x6967 + x24498*x6975 + x24498*x6977 + x24498*x6978 - x24507*x26484 + x24507*x26487 + x24510*x26484 - x24510*x26487 + x24517*x26506 - x24517*x26507 + x24517*x26509 + x24517*x26510 - x24528*x26506 + x24528*x26507 - x24528*x26509 - x24528*x26510 + x24550*x26499 + x24562*x26499 + x24569*x26065 + x24569*x26297 + x24682*x6729 + x24682*x6730 + x24682*x6785 + x24682*x6786 - x24682*x6868 - x24683*x6870 + x24690*x6729 + x24690*x6730 + x24690*x6785 + x24690*x6786 - x24690*x6868 - x24691*x6870 + x24699*x6864 + x24699*x6865 - x24700*x6864 - x24700*x6865 - x24707*x6766 + x24707*x6903 + x24708*x26512 + x24712*x6766 - x24712*x6903 + x24714*x26321 + x24714*x26323 + x24714*x6678*x733 - x24715*x4701 - x24715*x6883 - x24720*x6766 + x24720*x6903 - x24721*x6766 + x24721*x6903 + x24722*x6766 - x24722*x6903 - x24725*x6765 - x24725*x6864 - x24725*x6865 + x24725*x7138 - x24726*x26512 - x24727*x26258 + x24727*x26375 - x24728*x26257 + x24728*x26373 + x24951*x6592 - x24956*x6821 + x24961*x6592 - x24967*x6598 + x24973*x6598 - x24979*x6598 + x25029*x6555 + x25029*x6557 - x25029*x6776 - x25029*x6846 - x25034*x6595 + x25048*x6595 + x25049*x6555 + x25049*x6557 - x25049*x6776 - x25049*x6846 - x25052*x6577 + x25052*x6816 - x25053*x6819 - x25053*x6820 - x25054*x26060 - x25054*x26285 - x25054*x6595 - x25055*x26060 - x25055*x26285 + x25062*x26296 + x25062*x26332 + x25064*x6819 + x25064*x6820 + x25066*x4610 - x25066*x4681 + x25066*x6569 - x25072*x26040 + x25072*x26287 - x25074*x26040 + x25074*x26287 - x25075*x6819 - x25075*x6820 + x25077*x6589 - x25077*x6827 - x25079*x6702 - x25079*x6703 + x25080*x6752 + x25080*x6753 - x25087*x6752 - x25087*x6753 - x25088*x6702 - x25088*x6703 + x25091*x6752 + x25091*x6753 - x25099*x26235 - x25099*x26236 - x25100*x6752 - x25100*x6753 + x25102*x6752 + x25102*x6753 - x25153*x6821 - x25482*x6809 - x25482*x6810 + x25483*x6809 + x25483*x6810 - x25497*x26437 + x25498*x6575 - x25502*x6765 + x25502*x7138 + x25504*x6765 - x25504*x7138 + x25506*x6756 + x25507*x6729 + x25507*x6785 + x25507*x6786 - x25507*x6868 - x25516*x6810 + x25516*x6897 + x25827*x6555 - x25827*x6776 + x25836*x6592 + x25925*x3151 - x25927*x3151 + x26013*x327 - x26017*x327 + x26105*x26503 + x26140 + x26141 + x26142 - x26143 - x26144 - x26145 - x26148*x724 + x26158 + x26160 + x26161 - x26163 - x26164 - x26165 + x26176 + x26179*x26250 + x26182 + x26185 + x26189 - x26233*x7357 - x26250*x26508 + 72*x26278 - 32*x26280 - x26291*x5307 - x26303*x7357 - x26306*x3151 + x26309*x3151 - 72*x26314 + x26325*x4597 + 72*x26329 + x26377 + x26378 + x26379 + x26380 + x26381 + x26382 + x26383 + x26384 + x26385 + x26387 + x26388 + x26389 + x26391 + x26392 + x26394 + x26395 + x26396 + x26397 + x26399 + x26400 + x26401 + x26402 + x26432*x5440 - x26438*x26503 + x26442*x6976 + 32*x26444 + x26473*x5157 - x26473 - x26474 - x26475 - x26476 + x26477 + x26478 + x26479 + x26480*x5152 - x26480*x5157 + x26480 + x26481*x5152 - x26481 - x26482*x695 - x26483*x5152 + x26483*x5157 - x26483 + x26486*x5157 - x26486 - x26489 - x26491 - x26492 + x26493 + x26494 + x26495 + x26500*x5152 - x26500*x5157 + x26500 + x26502*x5152 - x26502 - x26505 - x26511 - x26513*x5152 + x26513 - x26515 + x26516 + x26520) + x70*(q4_b*x24826 + q4_b*x24836 + q4_b_dot*x24710 - q4_b_dt*x24492 + x10776*x21169 + x12351*x24486 - x15310*x19 - x15311*x19 + x18978*x5275 + x21271*x5152 - x21271*x5157 - x21272 - x21273 + x21274 - x23583 - x23632 - x23696 - x23701 + x23702 - x24468*x26207 + x24469*x26207 - x24474*x6436 + x24476*x6436 - x24481*x26202 + x24484*x26202 + x24495*x6476 + x24495*x6689 - x24498*x6476 - x24498*x6689 - x24641 - x24645 + x24662 - x24670 + x24677 - x24678 - x24732*x3012 + x24738*x3012 + x24784*x6589 + x24797*x6684 + x24797*x6685 + x24811*x6684 + x24811*x6685 - x24816*x6589 - x24817*x6581 - x24817*x6583 + x24818*x6684 + x24818*x6685 + x24819*x6581 + x24819*x6583 + x24820*x4610 + x24820*x6569 + x24821*x3049 + x24821*x3050 - x24830*x26209 - x24835*x6583 - x25296*x26209 - x25485*x2943 + x25571*x721 - x25862 - x25863 - x25864 + x25869 + x25870 + x25871 - x25943*x6655 + x26011 + x26013 - x26015 - x26017 - x26201*x5152 + x26201*x5157 - x26201 + x26203*x5152 + x26203*x5157 + x26204*x5152 + x26204*x5157 + x26206 - x26208*x5152 + x26208 + x26210*x6484)) + x69*(L*(q5_b*x26527 - x15611*x19 + x21416 - x21417 - x23826 - x23827 + x23828 - x24468*x26526 + x24469*x26526 + x24495*x26524 + x24495*x6994 - x24498*x26524 + x24498*x6994 + x24517*x7123 - x24528*x7123 - x24533*x7123 + x24581*x6917 + x24586*x6917 + x24603*x26412 - x24764*x6923 + x24768*x6923 - x24776*x26408 + x24784*x6920 + x25891*x26260 - x26211*x5224 - x26212*x5224 - x26213*x5224 + x26219*x5224 + x26220*x5224 + x26221*x5224 + x26234*x4759 + 20*x26241 + x26252*x8518 - 4*x26410 + x26411*x5547 - x26521*x5152 + x26521*x5157 - x26521 - 2*x26522 - x26523*x5152 + x26523 - 20*x26525 + x26531) - x106*(-q5_b*x26606 - q5_b_dot*x26601 + q6_b*x26606 + q6_i*x26614 - x129*x21425*x26250 - x129*x26566*x733 + x15342*x26604 + x15342*x6856 - x15342*x7070 + x15669*x19 - x15670*x19 - x15671*x19 + x15673*x19 + x15675*x19 + x15676*x19 + x15677*x19 - x15678*x19 - x15679*x19 - x15685*x19 - x15686*x19 + x15719*x25246 + x15729*x26317 - x15729*x26320 - x15734*x25200 + x15734*x25208 + x15734*x25246 - x19053*x24922 - x19116*x6784 + x19128*x24922 + x21391*x26250 + x21441 - x21442 - x21443 - x21444 - x21445 + x21446 + x21447 + x21449 + x21451 - x21452 - x21453 + x21468 + x23848 + x23849 - x23851 - x23852 - x23853 - x23854 - x23855 + x23856 + x23857 + x23859 + x23860 - x23861 - x23862 + x23874 + x24468*x26594 - x24468*x26596 - x24469*x26594 + x24469*x26596 - x24495*x26592 + x24495*x26593 - x24495*x26597 + x24495*x26602 + x24495*x26603 - x24495*x7081 + x24495*x7082 + x24495*x7083 - x24495*x7090 + x24498*x26592 - x24498*x26593 - x24498*x26597 + x24498*x26602 + x24498*x26603 - x24498*x7081 + x24498*x7082 + x24498*x7083 - x24498*x7090 - x24507*x26600 - x24507*x7077 - x24507*x7078 - x24507*x7123 + x24507*x7175 + x24507*x7176 + x24510*x26600 + x24510*x7077 + x24510*x7078 + x24510*x7123 - x24510*x7175 - x24510*x7176 + x24517*x26598 - x24517*x26609 - x24528*x26598 + x24528*x26609 - x24533*x26598 + x24581*x6868 + x24581*x7023 + x24581*x7024 - x24585*x7135 + x24586*x6868 + x24586*x7023 + x24586*x7024 - x24594*x26615 - x24595*x26615 + x24598*x7135 + x24603*x26567 + x24603*x26568 - x24621*x6917 - x24626*x6917 - x24659*x26412 + x24672*x6923 - x24764*x7066 - x24764*x7067 - x24764*x7138 + x24768*x7066 + x24768*x7067 + x24768*x7138 + x24781*x7066 - x24787*x7066 - x24788*x26375 + x24790*x7135 - x24791*x7135 + x24795*x7079 - x24797*x7045 - x24797*x7095 + x24797*x7100 + x24797*x7101 + x24803*x7079 + x24804*x7079 - x24809*x7079 - x24811*x7045 - x24811*x7095 + x24811*x7100 + x24811*x7101 + x24817*x7077 + x24817*x7078 - x24818*x7045 - x24818*x7095 + x24818*x7100 + x24818*x7101 - x24819*x7077 - x24819*x7078 - x24820*x7069 + x24820*x7167 + x24820*x7170 + x24821*x7168 + x24821*x7169 - x24822*x7079 + x24832*x6801*x779 + x24856*x6923 - x24863*x6923 + x24985*x6870 - x24989*x6903 + x24990*x6870 + x24993*x26408 - x24994*x6903 - x24995*x6903 - x24996*x6895 - x24996*x6897 + x24997*x6903 + x25000*x6895 + x25000*x6897 + x25003*x4701 + x25004*x3102 - x25007*x26373 - x25008*x6895 - x25008*x6897 + x25009*x6903 + x25071*x26617 + x25073*x26617 + x25176*x6868 - x25185*x7088 - x25185*x7089 - x25193*x7088 - x25193*x7089 - x25197*x7066 - x25202*x7096 - x25202*x7097 + x25202*x7103 + x25202*x7104 - x25203*x7096 - x25203*x7097 + x25203*x7103 + x25203*x7104 + x25212*x7145 - x25215*x26575 - x25217*x7145 - x25222*x7120 - x25227*x4751 - x25228*x7295 - x25228*x7296 + x25232*x7295 + x25232*x7296 + x25235*x7145 + x25238*x7145 - x25240*x7145 + x25243*x7125 + x25247*x26619 + x25248*x26618 - x25605*x7089 + x26211*x286 + x26212*x286 + x26213*x286 - x26219*x286 - x26220*x286 - x26221*x286 - x26234*x4714 + x26234*x4847 + x26234*x7171 - x26252*x7622 - x26260*x6714 - x26286*x7064 + x26290 - x26325*x772 + x26346*x321 - x26350*x321 + 8*x26410 - x26411*x5332 - x26465*x5336 + 4*x26522 + 14*x26525 - x26544*x286 - x26545*x286 - x26546*x286 + x26552*x286 + x26553*x286 + x26554*x286 + x26565*x5547 + x26566*x4759 + x26580*x5336 + x26588*x6714 + x26589*x5152 - x26589*x5157 + x26589 + x26590*x5152 - x26590 - x26591*x5152 + x26591*x5157 - x26591 - x26595*x3186 - 4*x26599 - x26605*x5152 + x26605 + x26607*x5152 - x26607 - 8*x26608 - 6*x26610 + x26611*x5152 - x26611 - x26612*x5152 + x26612 - x26613*x5152 + x26613 - x26616*x6749 + x26620 + x26627) + x123*(-q5_i*x26572 + q6_i*x26572 - q6_i_dot*x25875 - x15342*x7166 - x15626*x19 - x15627*x19 + x15633*x19 + x15634*x19 - x21336*x25892 + x21387 - x21391*x26579 - x21422*x5152 + x21422*x5157 - x21424*x5152 + x21424*x5157 - x21427 - x21428 + x21430 + x21431 + x21437 - x21475*x25897 - x21479*x24522 + x23795 + x23831 + x23832 + x23833 - x23835 - x23837 - x23839 + x23841 + x23842 + x23847 + x24468*x26557 - x24468*x26559 - x24469*x26557 + x24469*x26559 + x24474*x26547 + x24474*x26551 - x24476*x26547 - x24476*x26551 - x24495*x26555 + x24495*x26556 - x24495*x26562 - x24495*x26563 + x24495*x7025 + x24495*x7026 - x24495*x7033 - x24495*x7036 + x24498*x26555 - x24498*x26556 - x24498*x26562 - x24498*x26563 + x24498*x7025 + x24498*x7026 + x24498*x7033 + x24498*x7036 - x24507*x26564 + x24510*x26564 - x24517*x26578 + x24528*x26578 + x24533*x26578 - x24550*x26576 - x24562*x26570 - x24562*x26576 - x24581*x7045 - x24586*x7045 + x24682*x7023 + x24682*x7024 + x24690*x7023 + x24690*x7024 + x24699*x7066 + x24699*x7067 - x24700*x7066 - x24700*x7067 + x24718*x26567 + x24718*x26568 - x24725*x7066 - x24725*x7067 + x24764*x7078 - x24768*x7078 + x24788*x26586 + x24792 - x24956*x7060 - x24985*x7046 + x24989*x7079 - x24990*x7046 + x24994*x7079 + x24995*x7079 + x24996*x7125 - x24997*x7079 - x25000*x7125 - x25003*x4751 + x25007*x26585 + x25008*x7125 - x25009*x7079 + x25011*x26548 + x25011*x7071 - x25012*x26548 - x25012*x7071 + x25014*x26560 - x25015*x26560 - x25176*x7045 - x25502*x7066 - x25502*x7067 + x25504*x7066 + x25504*x7067 + x25873*x6724 + x25885*x3180 - x25905*x26244 + x26211*x7034 + x26212*x7034 + x26213*x7034 - x26219*x7034 - x26220*x7034 - x26221*x7034 - 36*x26228 + x26232*x3201 + x26234*x4776 - x26234*x7165 - 60*x26241 - 120*x26253 - 72*x26256 - x26260*x26582 + x26404 + x26448 + x26449 - x26450 + x26451 + x26452 + x26453 - x26454 - x26455 - x26456 - x26458 - x26459 - x26460 + x26461 + x26462 + x26463 + x26464 - x26466 - x26467 - x26468 - x26469 - x26470 + x26471 + x26516 + 60*x26525 - x26544*x7034 - x26545*x7034 - x26546*x7034 - x26549*x5307 + x26550*x5157 - x26550 + x26552*x7034 + x26553*x7034 + x26554*x7034 - x26558*x3186 - 20*x26561 + x26565*x5312 + x26566*x4688 + 20*x26569 + 24*x26570 + 60*x26571 - 40*x26574 + x26577*x5152 - x26577 + x26580*x5572 + 120*x26581 + x26582*x26588 - 40*x26584) - x123*(x15342*x15843 - x154*x26666 - x154*x26668 + x154*x26670 + x154*x26672 - x15554*x26642 - x15646*x15843 + x15652*x25415 + x15719*x24918 - x15719*x24921 + x15719*x24932 + x15734*x24911 - x15734*x24912 + x15734*x24918 - x15734*x24921 + x15734*x24932 + x15825*x19 + x15826*x19 + x15827*x19 + x15828*x19 + x15830*x19 + x15831*x19 - x15833*x19 - x15835*x19 - x15836*x19 - x15837*x19 - x15839*x19 - x15840*x19 + x21277*x26762 + x21336*x26764 - x21425*x26762 + x21432 + x21510 + x21512 + x21514 + x21516 + x21517 + x21518 - x21520 - x21521 - x21523 - x21524 - x21526 - x21527 + x21537 + x21583 + x23840*x24519 + x23843 + x23907 + x23908 + x23909 + x23910 + x23911 + x23913 - x23914 - x23915 - x23917 - x23918 - x23919 - x23920 + x23927 + x23973 - x24495*x26741 - x24495*x26742 - x24495*x26743 - x24495*x26744 + x24495*x26750 + x24495*x26751 + x24495*x26752 + x24495*x26753 + x24495*x7238 + x24495*x7239 - x24498*x26741 - x24498*x26742 - x24498*x26743 - x24498*x26744 + x24498*x26750 + x24498*x26751 + x24498*x26752 + x24498*x26753 + x24498*x7238 + x24498*x7239 + x24503*x7045 + x24503*x7095 - x24503*x7179 - x24503*x7181 + x24505*x7045 + x24505*x7095 - x24505*x7179 - x24505*x7181 - x24507*x26745 + x24507*x26747 + x24507*x26748 + x24507*x26749 + x24510*x26745 - x24510*x26747 - x24510*x26748 - x24510*x26749 - x24512*x7079 + x24512*x7213 + x24516*x7079 - x24516*x7213 + x24519*x4751 - x24519*x4789 - x24519*x7193 - x24527*x7079 + x24527*x7213 - x24529*x7076 + x24529*x7201 + x24531*x7079 - x24531*x7213 - x24532*x7077 - x24532*x7078 + x24532*x7446 + x24532*x7447 - x24535*x26585 + x24535*x26694 - x24550*x26735 - x24550*x26736 - x24562*x26735 - x24562*x26736 - x24573*x26567 - x24573*x26568 + x24909*x6868 + x24909*x6871 - x24909*x7088 - x24909*x7089 - x24910*x6903 + x24910*x7145 - x24911*x7138 + x24912*x7138 + x24913*x6868 + x24913*x6871 - x24913*x7088 - x24913*x7089 - x24916*x6903 + x24916*x7145 - x24917*x6891 + x24917*x7134 - x24918*x7137 - x24918*x7138 + x24919*x6903 - x24919*x7145 + x24921*x7137 + x24921*x7138 + x24923*x4701 - x24923*x4769 + x24923*x6883 + x24926*x3102 - x24930*x26375 + x24930*x26619 - x24931*x26373 + x24931*x26618 - x24932*x7137 - x24932*x7138 + x24933*x6903 - x24933*x7145 - x24951*x7023 - x24951*x7024 + x24953*x7066 + x24953*x7067 - x24958*x7066 - x24958*x7067 - x24961*x7023 - x24961*x7024 + x24967*x7066 + x24967*x7067 - x24973*x7066 - x24973*x7067 + x24979*x7066 + x24979*x7067 + x25109*x26654 + x25185*x7100 + x25185*x7101 + x25193*x7100 + x25193*x7101 + x25221*x7175 + x25221*x7176 - x25237*x7175 - x25237*x7176 - x25246*x7175 - x25246*x7176 - x25395*x7125 + x25396*x7125 - x25409*x26759 - x25411*x7120 - x25413*x7077 - x25413*x7078 + x25413*x7446 + x25413*x7447 + x25414*x7077 + x25414*x7078 - x25414*x7446 - x25414*x7447 - x25415*x7199 + x25416*x7045 - x25416*x7179 + x25419*x26643 + x25419*x26646 + x25419*x26763 + x25426*x26575 - x25427*x26585 + x25427*x26694 + x25605*x7100 + x25605*x7101 + x25761*x6868 - x25761*x7089 + x26346*x286 - x26350*x286 - x26418*x7284 + x26438*x26761 + x26472 - x26565*x6741 + 48*x26608 - 14*x26610 + x26627 - x26630*x6741 - 48*x26639 + x26724 + x26738*x5152 - x26738*x5157 + x26738 + x26739*x5152 - x26739 - x26740*x6801 - x26746*x5152 + x26746*x5157 - x26746 + x26754*x5572 + x26756*x5152 - x26756 + x26758*x5152 - x26758 - x26760*x26761 - x26765*x5152 + x26765 + 14*x26766 - x26767*x5152 + x26767 - x26768*x5152 + x26768 - x26769*x5152 - x26769*x5157 + x26794) + x168*(q5_b_dot*x26635 + q5_i_dot*x26645 - q6_b*x24649*x733 - q6_b*x26308 + x15342*x15766 - x15467*x15646 + x15652*x25285 + x15719*x24672 + x15719*x24856 - x15719*x24863 + x15734*x24672 - x15734*x24863 + x15756*x19 + x15757*x19 + x15758*x19 + x15759*x19 - x15761*x19 - x15762*x19 - x15764*x19 - x15765*x19 + x15782*x26365 + x21277*x26648 + x21343 + x21358 - x21425*x26326 + x21438*x26250 + x21469 + x21470 + x21472 + x21474 - x21476 - x21478 - x21480 - x21482 + x21508 + x23762 + x23776 + x23840*x24649 + x23875 + x23876 + x23877 + x23878 - x23879 - x23881 - x23883 - x23884 + x23905 + x24495*x26636 + x24495*x26637 - x24495*x7155 - x24495*x7157 - x24495*x7158 + x24495*x7161 + x24498*x26636 + x24498*x26637 - x24498*x7155 - x24498*x7157 - x24498*x7158 + x24498*x7161 + x24507*x26578 - x24510*x26578 + x24517*x26641 - x24528*x26641 - x24533*x26641 + x24581*x7100 + x24599*x26643 + x24599*x26646 + x24621*x7045 - x24621*x7088 - x24621*x7089 + x24621*x7095 + x24626*x7045 - x24626*x7088 - x24626*x7089 + x24626*x7095 - x24641*x7079 + x24641*x7145 + x24645*x7079 - x24645*x7145 - x24662*x7079 + x24662*x7145 - x24667*x7076 + x24667*x7134 + x24670*x7079 - x24670*x7145 - x24672*x7077 - x24672*x7078 - x24677*x26586 + x24677*x26619 - x24678*x26585 + x24678*x26618 - x24856*x7077 - x24856*x7078 + x24863*x7077 + x24863*x7078 - x24882*x7295 - x24882*x7296 + x24883*x7295 + x24883*x7296 - x24896*x7023 - x24896*x7024 + x24897*x7066 + x24897*x7067 - x24898*x7066 - x24898*x7067 - x24899*x7023 - x24899*x7024 + x24902*x7066 + x24902*x7067 - x24904*x26567 - x24904*x26568 - x24905*x7066 - x24905*x7067 + x24907*x7066 + x24907*x7067 + x24946*x26654 + x25271*x7125 - x25271*x7141 - x25272*x7125 + x25272*x7141 - x25285*x7120 + x25292*x7045 - x25292*x7089 + x26299*x7178 - x26304*x753 + x26310*x7178 - x26317*x7178 + x26320*x7178 + x26324*x7178 - x26325*x4802 - x26331*x7178 + x26333 + x26334 - x26335 - x26336 + x26337 + x26338 + x26340 + x26341 + x26342 + x26343 + x26345 + x26347 - x26349 - x26351 - x26352 + x26353 + x26354 + x26355 + x26356 + x26357 + x26358 + x26359 + x26361 + x26362 + x26363 - x26364 - x26366 - x26367 - x26368 + x26369 - x26370 - x26371 - x26372 - x26374 - x26376 + x26403 + x26413 - x26565*x5643 + 16*x26599 + 32*x26608 + x26628*x5152 - x26628*x5157 + x26628 + x26629*x5152 - x26629 - x26630*x5643 - x26631*x724 - x26632*x5152 - x26632*x5157 - x26633*x5152 + x26633*x5157 - x26633 + x26634*x6850 + x26638*x5152 + x26638*x5157 - 32*x26639 + x26640*x5152 - x26640 - x26642*x6912 + x26644*x6791 + x26647*x4714 - x26650*x5152 + x26650 - x26651*x5152 + x26651 + 32*x26652 - x26653*x5152 - x26653*x5157 + x26725 + x26734) + x63*(q5_b*x26827 - q5_b*x26837 + q5_b_dot*x24504*x3368 + q5_b_dot*x26835 - q6_b*x26827 + q6_b*x26837 - x129*x26666 - x129*x26668 + x129*x26670 + x129*x26672 + x15342*x15884 - x15646*x15884 + x15652*x25506 + x15719*x25053 - x15719*x25064 + x15719*x25075 + x15734*x25032 - x15734*x25045 + x15734*x25053 - x15734*x25064 + x15734*x25075 + x15869*x19 + x15870*x19 + x15871*x19 + x15872*x19 + x15874*x19 + x15875*x19 - x15876*x19 - x15877*x19 - x15878*x19 - x15879*x19 - x15880*x19 - x15881*x19 - x15882*x19 + x21336*x24569*x6791 + x21539 + x21540 + x21542 + x21543 + x21544 + x21545 - x21547 - x21548 - x21549 - x21550 - x21552 - x21553 - x21554 + x21561 - x21562*x26579 + x23818 + x23928 + x23929 + x23930 + x23931 + x23932 + x23934 - x23935 - x23936 - x23937 - x23938 - x23939 - x23940 - x23941 + x23953 + x24075 - x24495*x26807 + x24495*x26819 + x24495*x26820 + x24495*x26821 - x24495*x7265 - x24495*x7266 - x24495*x7268 - x24495*x7269 - x24495*x7271 + x24495*x7279 + x24495*x7280 + x24495*x7281 - x24498*x26807 + x24498*x26819 + x24498*x26820 + x24498*x26821 - x24498*x7265 - x24498*x7266 - x24498*x7268 - x24498*x7269 - x24498*x7271 + x24498*x7279 + x24498*x7280 + x24498*x7281 - x24507*x26806 + x24507*x26809 + x24507*x26815 + x24510*x26806 - x24510*x26809 - x24510*x26815 + x24517*x26829 - x24517*x26830 + x24517*x26831 + x24517*x26832 - x24528*x26829 + x24528*x26830 - x24528*x26831 - x24528*x26832 + x24550*x26822 + x24562*x26822 + x24569*x26398 + x24682*x7045 + x24682*x7100 + x24682*x7101 - x24682*x7179 - x24682*x7181 + x24683*x7046 + x24690*x7045 + x24690*x7101 - x24690*x7179 - x24690*x7181 + x24691*x7046 + x24699*x7175 + x24699*x7176 - x24700*x7175 - x24700*x7176 - x24707*x7079 + x24707*x7213 + x24708*x26649 + x24712*x7079 - x24712*x7213 + x24714*x26643 + x24714*x26646 + x24714*x26763 + x24714*x6745*x762 - x24715*x4789 - x24715*x7193 - x24720*x7079 + x24720*x7213 - x24721*x7079 + x24721*x7213 + x24722*x7079 - x24722*x7213 - x24725*x7078 - x24725*x7175 - x24725*x7176 + x24725*x7447 - x24726*x26649 - x24727*x26586 + x24727*x26696 - x24728*x26585 + x24728*x26694 + x24951*x6906 - x24956*x7139 + x24961*x6906 - x24967*x6911 + x24973*x6911 - x24979*x6911 + x25029*x6868 + x25029*x6871 - x25029*x7088 - x25029*x7089 - x25032*x7138 - x25034*x6908 + x25045*x7138 + x25048*x6908 + x25049*x6868 + x25049*x6871 - x25049*x7088 - x25049*x7089 - x25052*x6891 + x25052*x7134 - x25053*x7137 - x25053*x7138 - x25054*x26393 - x25054*x26615 - x25054*x6908 - x25055*x26393 - x25055*x26615 + x25062*x26626 + x25062*x26654 + x25064*x7137 + x25064*x7138 + x25066*x4701 - x25066*x4769 + x25066*x6883 + x25068*x26360 - x25072*x26373 + x25072*x26618 - x25074*x26373 + x25074*x26618 - x25075*x7137 - x25075*x7138 + x25077*x6903 - x25077*x7145 - x25079*x7023 - x25079*x7024 + x25080*x7066 + x25080*x7067 - x25087*x7066 - x25087*x7067 - x25088*x7023 - x25088*x7024 + x25091*x7066 + x25091*x7067 - x25099*x26567 - x25099*x26568 - x25100*x7066 - x25100*x7067 + x25102*x7066 + x25102*x7067 - x25153*x7139 - x25482*x7125 + x25483*x7125 - x25497*x26759 - x25498*x7120 - x25502*x7078 + x25502*x7447 + x25504*x7078 - x25504*x7447 - x25506*x7199 + x25507*x7045 + x25507*x7101 - x25507*x7179 - x25516*x7125 + x25516*x7207 + x25827*x6868 - x25827*x7089 + x25836*x6906 + x26346*x327 - x26350*x327 + x26438*x26826 + x26474 + x26475 + x26476 - x26477 - x26478 - x26479 - x26482*x753 + x26489 + x26491 + x26492 - x26493 - x26494 - x26495 + x26505 + x26508*x26579 + x26511 + x26515 + x26520 - x26565*x7357 + 72*x26608 - 32*x26610 - x26621*x5307 - x26630*x7357 - 72*x26639 + x26647*x4688 + 72*x26652 + x26698 + x26699 + x26700 + x26701 + x26702 + x26703 + x26704 + x26705 + x26706 + x26708 + x26709 + x26710 + x26712 + x26713 + x26715 + x26716 + x26717 + x26718 + x26720 + x26721 + x26722 + x26723 + x26754*x5440 - x26760*x26826 + 32*x26766 + x26795*x5157 - x26795 - x26796 - x26797 - x26798 + x26799 + x26800 + x26801 + x26802*x5152 - x26802*x5157 + x26802 + x26803*x5152 - x26803 - x26804*x724 - x26805*x5152 + x26805*x5157 - x26805 + x26808*x5157 - x26808 - x26811 - x26813 - x26814 + x26816 + x26817 + x26818 + x26823*x5152 - x26823*x5157 + x26823 + x26825*x5152 - x26825 - x26828 - x26833 + x26834*x3262 - x26836*x5152 + x26836 - x26838 + x26839 + x26842) + x70*(q5_b*x24826 + q5_b*x24836 + q5_b_dot*x25006 - q5_b_dt*x24492 + x15342*x24486 - x15615*x19 - x15616*x19 + x19053*x5275 + x21287*x6998 - x21360 + x21419*x5152 - x21419*x5157 - x21420 + x21421 - x23711 - x23759 - x23824 - x23829 + x23830 - x24468*x26538 + x24469*x26538 - x24474*x26532 + x24476*x26532 - x24481*x26534 + x24484*x26534 + x24495*x6803 + x24495*x6940 - x24498*x6803 - x24498*x6940 - x24512 - x24516 + x24527 - x24531 + x24534 - x24535 - x24732*x7015 + x24738*x7015 + x24784*x6903 + x24797*x6870 + x24797*x7007 + x24811*x6870 + x24811*x7007 - x24816*x6903 - x24817*x6895 - x24817*x6897 + x24818*x6870 + x24818*x7007 + x24819*x6895 + x24819*x6897 + x24820*x4701 + x24820*x6883 + x24821*x3102 + x24821*x3157 - x24830*x26540 - x24835*x6897 - x25296*x26540 - x26211 - x26212 - x26213 + x26219 + x26220 + x26221 - x26276*x3059 - x26286*x6801 + x26344 + x26346 - x26348 - x26350 - x26533*x5152 + x26533*x5157 - x26533 + x26535*x5152 + x26535*x5157 + x26536*x5152 + x26536*x5157 + x26537 - x26539*x5152 + x26539 + x26541*x750 + x26543*x6812)) + x69*(L*(q6_i*x25566 + x15646*x26604 - x15909*x19 - x16024*x24528 + x21564 - x21565 - x23954 - x23955 + x23956 - x24468*x26846 + x24469*x26846 + x24495*x7300 + x24498*x7300 + x24581*x7226 + x24586*x7226 + x24603*x26733 - x24764*x7232 + x24768*x7232 - x24776*x26729 + x24781*x7232 + x24784*x7229 - x24787*x7232 - x25107*x7241 + x25542*x7241 - x25560*x3186 + x25582*x26587 - x26544*x3943 - x26545*x3943 - x26546*x3943 + x26552*x3943 + x26553*x3943 + x26554*x3943 + x26566*x4847 + 24*x26571 + 48*x26581 - 4*x26731 - x26843*x5152 + x26843*x5157 - x26843 - 2*x26844 - x26845*x5152 + x26845 + x26849) - x106*(-q6_b*x26926 - q6_b*x26938 - q6_i*x26927 + q7_b*x26926 - q7_b_dot*x26601 - q7_b_dt*x24480*x4023 + q7_i*x26927 - x129*x26879*x762 + x15646*x7166 - x15646*x7374 + x15970*x19 - x15971*x19 - x15972*x19 + x15974*x19 + x15976*x19 + x15977*x19 + x15978*x19 - x15979*x19 - x15980*x19 - x15986*x19 - x15987*x19 - x16024*x24507 + x16024*x24510 + x16025*x25246 + x16041*x25246 - x19116*x7343 - x19128*x26913 + x19203*x26913 + x21425*x26923 + x21538*x26579 - x21568*x26933 - x21575*x24500*x7315 + x21592 - x21593 - x21594 - x21595 - x21596 + x21597 + x21598 + x21600 + x21602 - x21603 - x21604 + x21620 + x23977 + x23978 - x23980 - x23981 - x23982 - x23983 - x23984 + x23985 + x23986 + x23988 + x23989 - x23990 - x23991 + x24001 + x24468*x26912 - x24468*x26914 - x24469*x26912 + x24469*x26914 - x24481*x7443 + x24495*x26911 - x24495*x26915 + x24495*x26921 + x24495*x26922 - x24495*x7386 + x24495*x7387 + x24495*x7388 - x24495*x7398 - x24498*x26911 - x24498*x26915 + x24498*x26921 + x24498*x26922 - x24498*x7386 + x24498*x7387 + x24498*x7388 - x24498*x7398 - x24504*x7443 - x24507*x26918 - x24507*x7382 - x24507*x7383 + x24510*x26918 + x24510*x7382 + x24510*x7383 + x24517*x26916 - x24517*x26930 - x24517*x26932 - x24528*x26916 + x24528*x26930 + x24528*x26932 - x24533*x26916 + x24581*x7179 + x24581*x7181 + x24581*x7322 + x24581*x7323 + x24584*x7456 - x24585*x7444 + x24586*x7179 + x24586*x7181 + x24586*x7322 + x24586*x7323 - x24594*x26939 - x24595*x26939 + x24598*x7444 + x24603*x26880 - x24621*x7226 - x24626*x7226 - x24659*x26733 + x24672*x7232 - x24764*x7369 - x24764*x7370 - x24764*x7447 + x24768*x7369 + x24768*x7370 + x24768*x7447 + x24781*x7370 - x24787*x7370 - x24788*x26696 + x24790*x7444 - x24791*x7444 + x24795*x7384 - x24797*x7345 - x24797*x7346 + x24797*x7406 + x24797*x7407 + x24802*x26901 + x24803*x7384 + x24804*x7384 - x24809*x7384 - x24811*x7345 - x24811*x7346 + x24811*x7406 + x24811*x7407 + x24817*x7382 + x24817*x7383 - x24818*x7345 - x24818*x7346 + x24818*x7406 + x24818*x7407 - x24819*x7382 - x24819*x7383 - x24820*x7372 + x24820*x7486 + x24820*x7489 - x24821*x7373 + x24821*x7487 + x24821*x7488 - x24822*x7384 + x24823*x26900 + x24832*x7284*x808 + x24856*x7232 - x24863*x7232 - x24989*x7213 + x24993*x26729 - x24994*x7213 - x24995*x7213 - x24996*x7205 - x24996*x7207 + x24997*x7213 + x25000*x7205 + x25000*x7207 + x25003*x4789 - x25007*x26694 - x25008*x7205 - x25008*x7207 + x25009*x7213 + x25176*x7179 - x25186*x7396 - x25194*x7396 - x25197*x7370 - x25202*x7402 - x25202*x7403 + x25202*x7409 + x25202*x7410 - x25203*x7402 - x25203*x7403 + x25203*x7409 + x25203*x7410 + x25212*x7454 - x25215*x26889 - x25217*x7454 - x25227*x4839 - x25228*x7615 - x25228*x7616 + x25232*x7615 + x25232*x7616 + x25235*x7454 - x25240*x7454 + x25243*x7434 + x25247*x26942 + x25248*x26941 + x25573*x7199 - x26222*x7392 + x26239*x7392 + x26544*x4046 + x26545*x4046 + x26546*x4046 - x26552*x4046 - x26553*x4046 - x26554*x4046 - x26566*x4802 + x26566*x4934 + x26566*x7165 - x26616*x7366 + x26620 - x26647*x801 + x26668*x321 - x26672*x321 + 8*x26731 - x26732*x5332 - x26787*x5336 + 4*x26844 - x26857*x4046 - x26858*x4046 - x26859*x4046 + x26863*x4046 + x26864*x4046 + x26865*x4046 + x26877*x3287 + x26878*x5547 + x26879*x4847 + x26894*x5336 + x26904*x5152 - x26904*x5157 + x26904 + x26905*x5152 - x26905 - x26906*x5152 + x26906*x5157 - x26906 + x26907 + x26908 - x26909 - x26910 - 4*x26917 - x26919*x3299 + x26920*x3299 - x26924*x5152 + x26924 + x26925*x3186*x879 + x26928*x5152 - x26928 - 8*x26929 - 6*x26931 + x26933*x26937 + x26934*x5152 - x26934 - x26935*x5152 + x26935 - x26936*x5152 + x26936 - x26940*x7064 + x26946 + x26954) + x123*(-q6_i*x26885 - q6_i_dot*x26871 - x15646*x7485 - x15925*x19 - x15926*x19 + x15932*x19 + x15933*x19 + x16183*x24474 - x16183*x24476 - 44*x21475*x24750 + x21533 - x21538*x26893 - x21572*x5152 + x21572*x5157 - x21574*x5152 + x21574*x5157 - x21577 - x21578 + x21580 + x21581 + x21588 + x23924 + x23959 + x23960 + x23962 - x23964 - x23966 - x23968 + x23970 + x23971 + x23976 + x24474*x26860 - x24476*x26860 + 44*x24480*x3180 + 72*x24480*x3186 - x24495*x26874 - x24495*x26875 + x24495*x7324 + x24495*x7325 - x24495*x7335 - x24498*x26874 - x24498*x26875 + x24498*x7324 + x24498*x7325 + x24498*x7335 - x24507*x26876 + x24510*x26876 - x24517*x26892 + x24528*x26892 + x24533*x26892 - x24550*x26890 + x24557*x26872 - x24562*x26882 - x24562*x26890 - x24581*x7345 - x24581*x7346 - x24586*x7345 - x24586*x7346 + x24682*x7322 + x24682*x7323 + x24690*x7322 + x24690*x7323 - x24695*x26868 + x24695*x26870 + x24699*x7369 + x24699*x7370 - x24700*x7369 - x24700*x7370 + x24705*x26868 - x24705*x26870 + x24718*x26880 + x24718*x26881 - x24725*x7369 - x24725*x7370 + x24764*x7383 - x24768*x7383 + x24788*x26901 + x24792 - x24956*x7362 + x24989*x7384 + x24994*x7384 + x24995*x7384 + x24996*x7434 - x24997*x7384 - x25000*x7434 - x25003*x4839 + x25007*x26900 + x25008*x7434 - x25009*x7384 + x25011*x3480 + x25011*x7377 - x25012*x3480 - x25012*x7377 + x25107*x26866 - x25107*x26867 - x25176*x7345 - x25502*x7369 - x25502*x7370 + x25504*x7369 + x25504*x7370 - x25542*x26866 + x25542*x26867 - x25545*x26872 - x25573*x7373 - x26222*x7331 + x26239*x7331 + x26544*x7333 + x26545*x7333 + x26546*x7333 - x26552*x7333 - x26553*x7333 - x26554*x7333 - 44*x26561 + x26566*x4864 - x26566*x7798 + 44*x26569 - 72*x26571 - 88*x26574 - 144*x26581 - 88*x26584 - x26588*x26897 + x26725 + x26770 + x26771 - x26772 + x26773 + x26774 + x26775 - x26776 - x26777 - x26778 - x26780 - x26781 - x26782 + x26783 + x26784 + x26785 + x26786 - x26788 - x26789 - x26790 - x26791 - x26792 + x26793 + x26839 - x26857*x7333 - x26858*x7333 - x26859*x7333 - x26861*x5307 + x26862*x5157 - x26862 + x26863*x7333 + x26864*x7333 + x26865*x7333 - 72*x26869 - 24*x26873 + x26877*x3201 + x26878*x5312 + x26879*x4776 + 24*x26882 + x26883*x5572 + 72*x26884 - 48*x26887 - x26888*x6741 + x26891*x5152 - x26891 + x26894*x5572 + 72*x26895 + 144*x26896 + x26897*x26903 - 48*x26899) - x123*(-x11515*x26970 - x154*x26996 - x154*x26998 + x154*x27000 + x154*x27002 + x15646*x16141 - x15851*x26973 - x15946*x16141 + x16025*x24918 - x16025*x24921 + x16025*x24932 + x16041*x24918 - x16041*x24921 + x16041*x24932 + x16123*x19 + x16124*x19 + x16125*x19 + x16126*x19 + x16128*x19 + x16129*x19 - x16131*x19 - x16133*x19 - x16134*x19 - x16135*x19 - x16137*x19 - x16138*x19 + x16151*x24507 - x16151*x24510 + x21582 + x21634*x26764 + x21663 + x21665 + x21667 + x21669 + x21670 + x21671 - x21672 - x21673 - x21674 - x21675 - x21677 - x21678 + x21687 + x21730 + x23969*x24519 + x23972 + x24034 + x24035 + x24036 + x24037 + x24038 + x24040 - x24041 - x24042 - x24044 - x24046 - x24047 - x24048 + x24055 + x24100 - x24495*x27074 - x24495*x27075 - x24495*x27076 - x24495*x27077 + x24495*x27080 + x24495*x27081 + x24495*x27082 + x24495*x27083 + x24495*x7559 + x24495*x7560 - x24498*x27074 - x24498*x27075 - x24498*x27076 - x24498*x27077 + x24498*x27080 + x24498*x27081 + x24498*x27082 + x24498*x27083 + x24498*x7559 + x24498*x7560 + x24503*x7345 + x24503*x7346 - x24503*x7497 - x24503*x7500 + x24505*x7345 + x24505*x7346 - x24505*x7497 - x24505*x7500 - x24507*x27078 + x24510*x27078 - x24512*x7384 + x24512*x7532 + x24516*x7384 - x24516*x7532 + x24519*x4839 - x24519*x4877 - x24519*x7512 - x24523*x3320 + x24524*x26978 - x24524*x27015 - x24527*x7384 + x24527*x7532 - x24529*x7381 + x24529*x7520 + x24531*x7384 - x24531*x7532 - x24532*x7382 - x24532*x7383 + x24532*x7761 + x24532*x7762 - x24535*x26900 + x24535*x27026 - x24550*x27069 - x24550*x27070 - x24562*x27069 - x24562*x27070 - x24573*x26880 - x24573*x26881 + x24909*x7179 + x24909*x7181 - x24909*x7397 - x24909*x7475 - x24910*x7213 + x24910*x7454 + x24913*x7179 + x24913*x7181 - x24913*x7397 - x24913*x7475 - x24916*x7213 + x24916*x7454 - x24917*x7201 + x24917*x7442 - x24918*x7446 - x24918*x7447 + x24919*x7213 - x24919*x7454 + x24921*x7446 + x24921*x7447 + x24923*x4789 - x24923*x4857 + x24923*x7193 - x24930*x26696 + x24930*x26942 - x24931*x26694 + x24931*x26941 - x24932*x7446 - x24932*x7447 + x24933*x7213 - x24933*x7454 - x24951*x7322 - x24951*x7323 + x24953*x7369 + x24953*x7370 - x24958*x7369 - x24958*x7370 - x24961*x7322 - x24961*x7323 + x24967*x7369 + x24967*x7370 - x24973*x7369 - x24973*x7370 + x24979*x7369 + x24979*x7370 + x25109*x26984 + x25185*x7406 + x25185*x7407 + x25193*x7406 + x25193*x7407 + x25221*x7493 + x25221*x7494 - x25237*x7493 - x25237*x7494 - x25246*x7493 - x25246*x7494 - x25395*x7433 - x25395*x7434 + x25396*x7433 + x25396*x7434 - x25409*x27089 + x25411*x7199 - x25413*x7382 - x25413*x7383 + x25413*x7761 + x25413*x7762 + x25414*x7382 + x25414*x7383 - x25414*x7761 - x25414*x7762 + x25415*x7373 + x25416*x7345 - x25416*x7497 + x25419*x26974 + x25419*x26975 + x25419*x27092 + x25426*x26889 - x25427*x26900 + x25427*x27026 + x25605*x7406 + x25605*x7407 + x25761*x7179 - x25761*x7397 + x26668*x286 - x26672*x286 - x26740*x7604 + x26760*x27091 + x26794 - x26878*x6741 + 3*x26907 + 3*x26908 - 3*x26909 - 3*x26910 - x26919*x3324 + x26920*x3324 + 48*x26929 - 14*x26931 + x26954 - x26958*x6741 - 48*x26968 + x27057 + x27071*x5152 - x27071*x5157 + x27071 + x27072*x5152 - x27072 - x27073*x7284 - x27079*x5152 + x27079*x5157 - x27079 + x27084*x5572 + x27086*x5152 - x27086 + x27088*x5152 - x27088 - x27090*x27091 - x27093*x5152 + x27093 + 14*x27094 - x27095*x5152 + x27095 - x27096*x5152 + x27096 - x27097*x5152 - x27097*x5157 + x27122) + x168*(q6_b*x26962 - q7_b*x24649*x762 + q7_i_dot*x26645 + x15646*x16061 - x15766*x15946 + x16025*x24672 + x16025*x24856 - x16025*x24863 + x16041*x24672 - x16041*x24863 + x16051*x19 + x16052*x19 + x16053*x19 + x16054*x19 - x16056*x19 - x16057*x19 - x16059*x19 - x16060*x19 + x16078*x26686 + x21438*x26893 + x21490 + x21504 - x21575*x26648 + x21621 + x21622 + x21624 + x21626 - x21627 - x21629 - x21630 - x21631 + x21661 + x23890 + x23904 + x23969*x24649 + x24002 + x24003 + x24004 + x24005 - x24006 - x24008 - x24010 - x24011 + x24032 + x24495*x26965 + x24495*x26966 - x24495*x7472 - x24495*x7474 - x24495*x7476 + x24495*x7480 + x24498*x26965 + x24498*x26966 - x24498*x7472 - x24498*x7474 - x24498*x7476 + x24498*x7480 + x24517*x26971 + x24517*x26972 - x24528*x26971 - x24528*x26972 - x24533*x26971 - x24533*x26972 + x24581*x7407 + x24599*x26974 + x24599*x26975 + x24621*x7345 + x24621*x7346 - x24621*x7397 - x24621*x7475 + x24626*x7345 + x24626*x7346 - x24626*x7397 - x24626*x7475 - x24641*x7384 + x24641*x7454 + x24645*x7384 - x24645*x7454 + x24659*x26978 - x24662*x7384 + x24662*x7454 - x24667*x7381 + x24667*x7442 + x24670*x7384 - x24670*x7454 - x24672*x7382 - x24672*x7383 - x24677*x26901 + x24677*x26942 - x24678*x26900 + x24678*x26941 - x24856*x7382 - x24856*x7383 + x24863*x7382 + x24863*x7383 - x24882*x7615 - x24882*x7616 + x24883*x7615 + x24883*x7616 - x24896*x7322 - x24896*x7323 + x24897*x7369 + x24897*x7370 - x24898*x7369 - x24898*x7370 - x24899*x7322 - x24899*x7323 + x24902*x7369 + x24902*x7370 - x24904*x26880 - x24904*x26881 - x24905*x7369 - x24905*x7370 - x24906*x26959 + x24907*x7369 + x24907*x7370 + x24946*x26984 + x25271*x7434 - x25271*x7450 - x25272*x7434 + x25272*x7450 + x25285*x7373 + x25292*x7345 - x25292*x7397 - x26631*x782 - x26634*x7479 + x26644*x7414 - x26647*x4890 + x26655 + x26656 - x26657 - x26658 + x26659 + x26660 + x26662 + x26663 + x26664 + x26665 + x26667 + x26669 - x26671 - x26673 - x26674 + x26675 + x26676 + x26677 + x26678 + x26679 + x26680 + x26681 + x26682 + x26683 + x26684 - x26685 - x26687 - x26688 - x26689 + x26690 - x26691 - x26692 - x26693 - x26695 - x26697 + x26724 + x26734 - x26878*x5643 + 16*x26917 - x26919*x3234 + x26920*x3234 + 32*x26929 + x26955*x7178 + x26956*x5152 - x26956*x5157 + x26956 + x26957*x5152 - x26957 - x26958*x5643 - x26960*x5152 - x26960*x5157 - x26961*x5152 + x26961*x5157 - x26961 + x26963*x7178 + x26964*x3302 + x26967*x5152 + x26967*x5157 - 32*x26968 + x26969*x5152 - x26969 - x26970*x5332 - x26973*x7178 + x26976*x7178 + x26977*x4802 - x26980*x5152 + x26980 - x26981*x5152 + x26981 + 32*x26982 - x26983*x5152 - x26983*x5157 + x27058 + x27068) + x63*(q6_b*x27153 - q6_b*x27163 + q6_b_dot*x21423*x24573 - q7_b*x27153 + q7_b*x27163 + q7_b_dot*x26835 - x11433*x27012 - x11583*x26970 - x129*x26996 - x129*x26998 + x129*x27000 + x129*x27002 + x15646*x16178 - x15946*x16178 + x16025*x25053 - x16025*x25064 + x16025*x25075 + x16041*x25053 - x16041*x25064 + x16041*x25075 + x16163*x19 + x16164*x19 + x16165*x19 + x16166*x19 + x16168*x19 + x16169*x19 - x16170*x19 - x16171*x19 - x16172*x19 - x16173*x19 - x16174*x19 - x16175*x19 - x16176*x19 + x16186*x24507 - x16186*x24510 + x21562*x26893 + x21689 + x21690 + x21692 + x21694 + x21695 + x21696 - x21697 - x21698 - x21699 - x21700 - x21702 - x21703 - x21704 + x21711 + x23946 + x24056 + x24057 + x24058 + x24059 + x24060 + x24062 - x24063 - x24064 - x24065 - x24066 - x24067 - x24068 - x24069 + x24081 + x24203 - x24495*x27134 + x24495*x27145 + x24495*x27146 + x24495*x27147 - x24495*x7585 - x24495*x7586 - x24495*x7588 - x24495*x7589 - x24495*x7591 + x24495*x7599 + x24495*x7600 + x24495*x7601 - x24498*x27134 + x24498*x27145 + x24498*x27146 + x24498*x27147 - x24498*x7585 - x24498*x7586 - x24498*x7588 - x24498*x7589 - x24498*x7591 + x24498*x7599 + x24498*x7600 + x24498*x7601 - x24507*x27133 + x24507*x27136 + x24510*x27133 - x24510*x27136 + x24517*x27155 - x24517*x27156 + x24517*x27158 + x24517*x27159 - x24528*x27155 + x24528*x27156 - x24528*x27158 - x24528*x27159 + x24550*x27148 + x24562*x27148 + x24569*x26719 + x24569*x26953 + x24682*x7345 + x24682*x7346 + x24682*x7406 + x24682*x7407 - x24682*x7497 - x24683*x7499 + x24690*x7345 + x24690*x7346 + x24690*x7406 + x24690*x7407 - x24690*x7497 - x24691*x7499 + x24699*x7493 + x24699*x7494 - x24700*x7493 - x24700*x7494 - x24707*x7384 + x24707*x7532 + x24708*x26979 + x24712*x7384 - x24712*x7532 + x24714*x26974 + x24714*x27092 + x24714*x7303*x791 - x24715*x4877 - x24715*x7512 - x24720*x7384 + x24720*x7532 - x24721*x7384 + x24721*x7532 + x24722*x7384 - x24722*x7532 - x24725*x7383 - x24725*x7493 - x24725*x7494 + x24725*x7762 - x24726*x26979 - x24727*x26901 + x24727*x27028 - x24728*x26900 + x24728*x27026 + x24951*x7216 - x24956*x7448 + x24961*x7216 - x24967*x7221 + x24973*x7221 - x24979*x7221 + x25029*x7179 + x25029*x7181 - x25029*x7397 - x25029*x7475 - x25034*x7218 + x25048*x7218 + x25049*x7179 + x25049*x7181 - x25049*x7397 - x25049*x7475 - x25052*x7201 + x25052*x7442 - x25053*x7446 - x25053*x7447 - x25054*x26714 - x25054*x26939 - x25054*x7218 - x25055*x26714 - x25055*x26939 + x25062*x26952 + x25062*x26984 + x25064*x7446 + x25064*x7447 + x25066*x4789 - x25066*x4857 + x25066*x7193 - x25072*x26694 + x25072*x26941 - x25074*x26694 + x25074*x26941 - x25075*x7446 - x25075*x7447 + x25077*x7213 - x25077*x7454 - x25079*x7322 - x25079*x7323 + x25080*x7369 + x25080*x7370 - x25087*x7369 - x25087*x7370 - x25088*x7322 - x25088*x7323 + x25091*x7369 + x25091*x7370 - x25099*x26880 - x25099*x26881 - x25100*x7369 - x25100*x7370 - x25101*x26959 + x25102*x7369 + x25102*x7370 - x25153*x7448 - x25482*x7433 - x25482*x7434 + x25483*x7433 + x25483*x7434 - x25497*x27089 + x25498*x7199 - x25502*x7383 + x25502*x7762 + x25504*x7383 - x25504*x7762 + x25506*x7373 + x25507*x7345 + x25507*x7406 - x25507*x7497 - x25516*x7434 + x25516*x7526 + x25827*x7179 - x25827*x7397 + x26668*x327 - x26672*x327 + x26760*x27152 + x26796 + x26797 + x26798 - x26799 - x26800 - x26801 - x26804*x782 + x26811 + x26813 + x26814 - x26816 - x26817 - x26818 + x26828 + x26833 + x26834*x3480 + x26838 + x26842 - x26878*x7357 - x26893*x27157 - x26919*x3367 + x26920*x3367 + 72*x26929 - 32*x26931 - x26947*x5307 - x26958*x7357 - 72*x26968 + x26977*x4776 + 72*x26982 + x27030 + x27031 + x27032 + x27033 + x27034 + x27035 + x27036 + x27037 + x27038 + x27040 + x27041 + x27042 + x27044 + x27045 + x27047 + x27048 + x27049 + x27050 + x27052 + x27054 + x27055 + x27056 + x27084*x5440 - x27090*x27152 + 32*x27094 + x27123*x5157 - x27123 - x27124 - x27125 - x27126 + x27127 + x27128 + x27129 + x27130*x5152 - x27130*x5157 + x27130 + x27131*x5152 - x27131 - x27132*x5152 + x27132*x5157 - x27132 + x27135*x5157 - x27135 - x27138 - x27140 - x27141 + x27142 + x27143 + x27144 + x27149*x5152 - x27149*x5157 + x27149 + x27151*x5152 - x27151 - x27154 - x27160 + x27161*x762 - x27162*x5152 + x27162 - x27164 + x27165 + x27169) + x70*(q6_b*x24826 + q6_b*x24836 + q6_b_dot*x25115 - q6_b_dt*x24492 + x15646*x24486 - x15914*x19 - x15915*x19 + x19128*x5275 + x21459*x25112 + x21568*x5152 - x21568*x5157 - x21569 - x21570 + x21571 - x23838 - x23887 - x23912 - x23957 + x23958 - x24468*x26854 + x24469*x26854 - x24474*x7315 + x24476*x7315 - x24481*x26851 + x24484*x26851 + x24495*x7117 - x24498*x7117 - x24498*x7311 - x24707 - x24712 + x24720 + x24721 - x24722 + x24727 - x24728 - x24732*x3261 + x24738*x3261 + x24784*x7213 + x24797*x7306 + x24797*x7307 + x24811*x7306 + x24811*x7307 - x24816*x7213 - x24817*x7205 - x24817*x7207 + x24818*x7306 + x24818*x7307 + x24819*x7205 + x24819*x7207 + x24820*x4789 + x24820*x7193 + x24821*x3266 + x24821*x3267 - x24828*x26694 - x24831*x26694 - x24835*x7207 + x25111*x778 + x25114*x779 - x25151*x3165 - x26544 - x26545 - x26546 + x26552 + x26553 + x26554 - x26616*x7284 + x26666 + x26668 - x26670 - x26672 - x26850*x5152 + x26850*x5157 - x26850 + x26852*x5152 + x26852*x5157 + x26853*x5152 + x26853*x5157 - x26855*x5152 + x26855 + x26856*x7127)) + x69*(L*(-x11038*x24495 + x11038*x24498 - x15135*x19 + x15208*x24517 - x15208*x24528 + x21024 - x21025 + x23477 - x23479 + x23480 + x24468*x30687 - x24469*x30687 + x24581*x8869 - x24776*x28436 + x24784*x8874 + x27834 - x28118*x4023 - x28119*x4023 - x28120*x4023 - x28136*x28285 + x28138*x28285 + x28149*x4023 + x28150*x4023 + x28151*x4023 - 36*x28154 + x28191*x28303 + x28195*x933 + 36*x28203 - 72*x28204 - x28205*x7357 - 72*x28249 + 4*x28432 + x28439*x5547 - x28440*x5547 - x30683*x5152 + x30683*x5157 - x30683 - 2*x30684 + x30685*x5152 + x30685*x5157 - x30686*x5152 + x30686 - 4*x30688) - x106*(-p8_b_dot*x28300 - x10830*x28322 - x11012*x28137 - x11012*x28182 - x11012*x28369 + x11012*x30695 + x11053*x24581 + x11053*x24586 + x11054*x24581 + x11054*x24586 - x11067*x24797 - x11067*x24811 - x11067*x24818 + x11082*x24781 - x11082*x24787 - x11083*x24787 - x11084*x12700 - x11085*x24820 + x11089*x24817 - x11089*x24819 - x11090*x24507 + x11090*x24510 + x11090*x24817 - x11090*x24819 + x11091*x24795 + x11091*x24803 + x11091*x24804 - x11091*x24809 - x11091*x24822 - x11094*x24495 - x11094*x24498 + x11095*x24495 + x11095*x24498 - x11098*x26222 + x11098*x26239 + x11099*x26222 - x11099*x26239 - x11102*x25185 - x11102*x25193 - x11104*x24495 - x11104*x24498 - x11108*x24797 - x11108*x24811 - x11108*x24818 - x11109*x25202 - x11109*x25203 - x11110*x25202 - x11110*x25203 + x11112*x24797 + x11112*x24811 + x11112*x24818 + x11113*x24797 + x11113*x24811 + x11113*x24818 + x11114*x25202 + x11114*x25203 + x11115*x25202 + x11115*x25203 + x11116*x24495 + x11116*x24498 + x11117*x24495 + x11117*x24498 + x11134*x25243 - x11141*x24585 + x11141*x24598 + x11141*x24790 - x11141*x24791 + x11150*x25212 - x11150*x25217 + x11150*x25235 - x11150*x25240 - x11151*x129*x30391 + x11151*x30716 + x11176*x24820 + x11177*x24821 + x11178*x24821 + x11179*x24820 + x11181*x24507 - x11181*x24510 - x11182*x24817 + x11182*x24819 - x11182*x24835 + x12700*x8898 - x129*x30393*x403 - x12981*x24517 + x12981*x24528 + x15166*x19 - x15167*x19 - x15168*x19 + x15170*x19 + x15172*x19 + x15173*x19 + x15174*x19 - x15176*x19 - x15177*x19 - x15181*x19 - x15182*x19 + x15207*x28118 + x15207*x28119 + x15207*x28120 - x15207*x28149 - x15207*x28150 - x15207*x28151 - x15207*x30378 - x15207*x30379 - x15207*x30380 + x15207*x30384 + x15207*x30385 + x15207*x30386 + x15210*x25246 + x15219*x25246 + x18793*x5186*x7656 - x1921*x28195 + x21046 - x21047 - x21048 - x21049 - x21050 + x21051 + x21052 + x21053 + x21055 - x21056 - x21057 + x21070 + x21088 + x22479 + x23498 + x23499 - x23500 - x23501 - x23502 - x23503 - x23504 + x23505 + x23506 + x23509 + x23511 - x23512 - x23513 + x23521 + x23538 + x24468*x30729 - x24468*x30730 - x24469*x30729 + x24469*x30730 - x24481*x30748 + x24484*x30748 - x24495*x30731 - x24498*x30731 + x24507*x30724 + x24507*x30725 - x24507*x30737 - x24510*x30724 - x24510*x30725 + x24510*x30737 + x24517*x30734 - x24517*x30743 - x24517*x30745 - x24528*x30734 + x24528*x30743 + x24528*x30745 + x24581*x8814 + x24586*x8814 - x24594*x30752 - x24595*x30752 - x24621*x8869 - x24788*x28427 + x24802*x30720 - x24820*x4517 - x24821*x2677 + x24823*x30719 + x24832*x634*x8972 + x24985*x8952 - x24989*x8855 + x24990*x8952 + x24993*x28436 - x24994*x8855 - x24996*x8850 - x24996*x8852 + x24997*x8855 + x25000*x8850 + x25000*x8852 + x25003*x3901 - x25007*x28425 - x25008*x8850 - x25008*x8852 + x25009*x8855 - x25215*x30713 + x25247*x30754 + x25248*x30753 + x28136*x633 + x28136*x8780 - x28138*x633 - x28138*x8780 + 42*x28154 - x28187*x28285 + x28187*x30736 + x28195*x4539 - 42*x28203 + 84*x28204 + 84*x28249 + x28285*x30735 + x28303*x30391 + x28327 + x28369*x8892 + x28398*x321 - x28402*x321 - x28412*x623 - 8*x28432 - x28438*x5336 - x28439*x5332 + x28440*x5332 - x28513*x5336 - 42*x30388 + x30393*x933 + 42*x30396 - 84*x30397 - x30467*x7656 - 84*x30473 + x30567 + 4*x30684 + 8*x30688 - x30695*x8892 + x30709*x5680 + 4*x30711 + x30718*x5336 + x30721*x5152 - x30721*x5157 + x30721 + x30722*x5152 - x30722 - x30723*x5152 + x30723*x5157 - x30723 + x30726*x5152 + x30726*x5157 + x30727 - x30728 - 4*x30732 - 4*x30733 - x30735*x30736 + x30738*x5547 + x30739*x5547 - x30740*x5152 + x30740 + x30741*x5152 - x30741 - 8*x30742 - x30744*x5394 - 6*x30746 + x30747*x5152 - x30747 + x30749*x5547 - x30750*x5152 + x30750 - x30751*x5152 + x30751 + x30761) + x123*(-x10874*x12700 + x11053*x24682 + x11053*x24690 + x11054*x24682 + x11054*x24690 + x11055*x24495 + x11055*x24498 - x11059*x26222 + x11059*x26239 + x11060*x26222 - x11060*x26239 + x11061*x26222 - x11061*x26239 + x11065*x24495 - x11065*x24498 - x11067*x24581 - x11067*x24586 - x11069*x24495 - x11069*x24498 - x11076*x24474 + x11076*x24476 - x11078*x25011 + x11078*x25012 - x11079*x24956 - x11082*x24725 - x11083*x24725 + x11091*x24989 + x11091*x24994 - x11091*x24997 - x11091*x25009 - x11092*x30716 + x11134*x25008 + x12700*x30452 + x14905*x8824 - x15149*x19 - x15150*x19 + x15153*x19 + x15154*x19 + x15163*x24507 - x15163*x24510 + x15164*x24507 - x15164*x24510 + x15250*x24517 - x15250*x24528 + x15251*x24517 - x15251*x24528 + x1896*x30393 + x19935 + x19940 + x21031*x5152 - x21031*x5157 + x21032*x5152 - x21032*x5157 - x21033 - x21034 + x21035 + x21036 + x21044 + x22537 + x22538 + x23484 - x23486 - x23488 - x23489 - x23490 - x23491 + x23492 + x23493 + x23497 - x24468*x30704 - x24468*x30705 + x24469*x30704 + x24469*x30705 - x24474*x30697 + x24476*x30697 + x24495*x30701 - x24495*x30706 + x24498*x30701 - x24498*x30706 - x24507*x30707 - x24507*x30708 + x24510*x30707 + x24510*x30708 - x24517*x30717 + x24528*x30717 - x24550*x30714 - x24562*x30712 - x24562*x30714 - x24695*x30702 + x24695*x30703 + x24705*x30702 - x24705*x30703 + 76*x24750*x28243 + x24788*x30720 + x24792 + x25007*x30719 - x25011*x30698 + x25012*x30698 - x25573*x2677 + x25892*x30466 - x27878*x30467 + x28118*x8287 + x28119*x8287 + x28120*x8287 - x28149*x8287 - x28150*x8287 - x28151*x8287 + 108*x28154 - 76*x28159 - x28195*x30559 + 76*x28201 - 108*x28203 + 216*x28204 + 108*x28206 + 152*x28244 + 216*x28249 + 152*x28264 + x28429 + x28491 + x28492 + x28493 - x28494 + x28495 + x28496 + x28497 - x28498 - x28499 - x28500 - x28502 - x28503 - x28504 + x28505 + x28506 + x28507 + x28508 - x28509 - x28510 - x28511 - x28512 - x28514 + x28515 - x30378*x8287 - x30379*x8287 - x30380*x8287 + x30384*x8287 + x30385*x8287 + x30386*x8287 - 108*x30388 + 108*x30396 - 216*x30397 - 36*x30432 + 36*x30459 + 72*x30468 + 72*x30472 - 216*x30473 - x30474*x8892 - x30475*x8892 + x30478*x8892 - x30481*x8892 - x30482*x8892 + x30484*x8892 - x30556*x933 + x30593*x8892 - x30699*x5307 + x30700*x5157 - x30700 + x30709*x5322 + x30710*x5322 + 12*x30711 + 24*x30712 + x30715*x5152 - x30715 + x30718*x5572) - x123*(-p8_b*x30790 + p8_b*x30792 + p9_b*x30790 - p9_b*x30792 - x10768*x24519 + x10783*x24512 - x10783*x24516 + x10783*x24527 - x10783*x24531 + x10804*x28483 - x10857*x30803 - x10857*x30807 - x10859*x24503 - x10859*x24505 - x10861*x24503 - x10861*x24505 + x10879*x24529 - x10933*x25415 + x10949*x24532 + x10949*x25413 - x10949*x25414 + x10950*x24532 + x10950*x25413 - x10950*x25414 - x11053*x24951 - x11053*x24961 - x11054*x24951 - x11054*x24961 + x11067*x24503 + x11067*x24505 + x11082*x24967 - x11082*x24973 + x11082*x24979 + x11083*x24967 - x11083*x24973 + x11083*x24979 - x11088*x24529 - x11089*x24532 - x11089*x25413 + x11089*x25414 - x11090*x24532 - x11090*x25413 + x11090*x25414 - x11091*x24512 + x11091*x24516 - x11091*x24527 + x11091*x24531 - x11102*x24909 - x11102*x24913 + x11108*x24503 + x11108*x24505 + x11112*x25185 + x11112*x25193 + x11121*x24519 - x11134*x25395 + x11134*x25396 - x11136*x25395 + x11136*x25396 + x11140*x24917 - x11143*x24918 + x11143*x24921 - x11143*x24932 + x11150*x24910 + x11150*x24916 - x11150*x24919 - x11150*x24933 - x11161*x24909 - x11161*x24913 + x11164*x24495 + x11164*x24498 + x11165*x24495 + x11165*x24498 + x11176*x28484 + x11179*x28484 - x11181*x25246 - x11182*x25246 - x11515*x30744 + x11515*x30749 + x12700*x30809 + x12872*x30630 - x14905*x30809 + x15210*x24918 - x15210*x24921 + x15210*x24932 + x15219*x24918 - x15219*x24921 + x15219*x24932 + x15227*x19 + x15228*x19 + x15229*x19 + x15230*x19 + x15232*x19 + x15233*x19 - x15235*x19 - x15237*x19 - x15238*x19 - x15240*x19 - x15242*x19 - x15243*x19 - x15250*x24507 + x15250*x24510 - x15251*x24507 + x15251*x24510 - x154*x30398 - x154*x30399 + x154*x30400 + x154*x30401 - x19804*x30436 + x19941 - x20872*x28452 + x20895 + x21069 + x21071 + x21073 + x21074 + x21076 + x21077 + x21078 - x21080 - x21081 - x21083 - x21084 - x21085 - x21086 + x21089 + x22539 + x23377 + x23519 + x23522 + x23523 + x23525 + x23526 + x23527 + x23528 - x23529 - x23530 - x23531 - x23532 - x23533 - x23534 + x23539 - x24495*x30786 - x24495*x30787 - x24495*x30788 - x24495*x30789 + x24495*x30795 + x24495*x30796 + x24495*x30797 + x24495*x30798 - x24498*x30786 - x24498*x30787 - x24498*x30788 - x24498*x30789 + x24498*x30795 + x24498*x30796 + x24498*x30797 + x24498*x30798 - x24507*x30791 + x24507*x30794 + x24510*x30791 - x24510*x30794 + x24517*x30810 - x24519*x4436 - x24528*x30810 + x24535*x30409 - x24535*x30719 - x24550*x30782 - x24550*x30783 - x24562*x30782 - x24562*x30783 + x24909*x8813 + x24909*x8814 - x24910*x8855 + x24913*x8813 + x24913*x8814 - x24916*x8855 - x24917*x8848 - x24918*x28421 + x24919*x8855 + x24921*x28421 + x24923*x3901 + x24923*x8833 - x24930*x28427 + x24930*x30754 - x24931*x28425 + x24931*x30753 - x24932*x28421 + x24933*x8855 + x25109*x30781 + x25415*x2677 + x25427*x30409 - x25427*x30719 + x28025*x4517 + x28191*x30805 + x28191*x30808 + x28248*x30803 + x28248*x30807 + x28398*x286 - x28402*x286 - x28453*x608 + x28485*x30480 + x28516 - x30391*x30805 - x30391*x30808 - x30439*x390 + x30474*x8820 + x30475*x8820 - x30478*x8820 + x30482*x8820 + x30485 - x30593*x8820 + x30637 + 3*x30727 - 3*x30728 - x30738*x6741 - x30739*x6741 + 48*x30742 - 14*x30746 + x30761 - 48*x30774 + 48*x30779 + x30784*x5152 - x30784*x5157 + x30784 + x30785*x5152 - x30785 - x30793*x5152 + x30793*x5157 - x30793 + x30799*x5572 + x30801*x5152 - x30801 + x30802*x5152 - x30802 - 14*x30804 - x30806*x6723 + 6*x30811 - x30812*x5152 + x30812 + 14*x30813 - x30814*x5152 + x30814 - x30815*x5152 + x30815 - x30816*x5152 - x30816*x5157) + x168*(-p8_b*x24988*x8743 - p9_i*x30521 - x10857*x28371 + x10897*x28369 - x11053*x24896 - x11053*x24899 - x11054*x24896 - x11054*x24899 + x11067*x24621 + x11067*x24626 - x11082*x24905 + x11082*x24907 - x11083*x24905 + x11083*x24907 - x11088*x24667 - x11089*x24672 + x11089*x24863 - x11090*x24672 - x11091*x24641 + x11091*x24645 - x11091*x24662 + x11091*x24670 - x11102*x24621 - x11102*x24626 + x11108*x24621 + x11108*x24626 + x11112*x24581 + x11112*x24586 + x11121*x24649 + x11140*x24667 + x11150*x24641 - x11150*x24645 + x11150*x24662 - x11150*x24670 - x11161*x24621 - x11161*x24626 - x11167*x25285 - x11171*x24495 - x11171*x24498 + x11172*x24495 + x11172*x24498 + x11176*x24890 + x11179*x24890 - x11182*x24787 - x11195*x24882 + x11195*x24883 - x11196*x24882 + x11196*x24883 + x12700*x30514 - x14905*x28374 - x15193*x24943 + x15210*x24672 + x15210*x24856 - x15210*x24863 + x15219*x24672 + x15219*x24856 - x15219*x24863 + x15259*x19 + x15260*x19 + x15261*x19 + x15262*x19 - x15264*x19 - x15265*x19 - x15266*x19 - x15267*x19 - x15274*x24507 + x15274*x24510 - x15275*x24507 + x15275*x24510 + x1921*x30556 + x19883*x30483 - x19897 - x19899 + x19904 + x19915 + x21090 + x21091 + x21093 + x21094 - x21095 - x21096 - x21097 - x21098 + x21103*x28370 + x21106 - x22503 - x22505 + x22510 + x22518 + x23540 + x23541 + x23542 + x23543 - x23544 - x23545 - x23546 - x23547 + x23551 - x24495*x30762 - x24498*x30762 + x24507*x30717 - x24507*x30767 - x24507*x30768 - x24510*x30717 + x24510*x30767 + x24510*x30768 + x24517*x30776 - x24528*x30776 - x24533*x30776 - x24677*x30720 + x24677*x30754 - x24678*x30719 + x24678*x30753 + x24946*x30781 + x25285*x2677 - x28191*x30580 + x28248*x30506 - x28351*x608 + x28363*x633 + x28364*x634 - x28373*x30391 - x28375*x634 + x28385 + x28386 - x28387 - x28388 + x28389 + x28390 + x28392 + x28393 + x28394 + x28395 + x28397 + x28399 - x28401 - x28403 - x28404 + x28405 + x28406 + x28407 + x28408 + x28409 + x28410 + x28411 + x28413 + x28414 + x28415 - x28416 - x28417 - x28418 - x28419 + x28420 - x28422 - x28423 - x28424 - x28426 - x28428 + x28447 + x30474*x8916 + x30475*x8916 - x30478*x8916 + x30481*x8916 + x30482*x8916 + x30531 - x30570*x8892 + x30571*x8892 - x30581*x390 - x30593*x8916 + x30606 - x30710*x5928 + 16*x30732 + 16*x30733 - x30738*x5643 - x30739*x5643 + 32*x30742 + x30763*x5152 - x30763*x5157 + x30763 + x30764*x5152 - x30764 - x30765*x5152 - x30765*x5157 - x30766*x5152 - x30766*x5157 - x30769*x5152 + x30769*x5157 - x30769 + x30770*x5152 + x30770*x5157 + x30771*x5152 + x30771*x5157 + x30772*x5152 + x30772*x5157 + 16*x30773 - 32*x30774 + x30775*x5152 - x30775 - x30777*x5152 + x30777 - x30778*x5152 + x30778 + 32*x30779 - x30780*x5152 - x30780*x5157) + x63*(-p8_b*x30822 + p8_b*x30824 + p8_b_dot*x28561*x3943 + p9_b*x30822 - p9_b*x30824 - x10762*x24683 - x10762*x24691 - x10768*x24715 + x10778*x25516 + x10779*x28577 - x10779*x28581 + x10783*x24707 - x10783*x24712 + x10783*x24720 + x10783*x24721 - x10783*x24722 - x10857*x30836 - x10857*x30837 - x10861*x24682 - x10861*x24690 - x10933*x25506 + x10949*x24725 + x10949*x25502 - x10949*x25504 + x11016*x28369 - x11053*x25079 - x11053*x25088 - x11054*x25079 - x11054*x25088 + x11067*x24682 + x11067*x24690 + x11068*x24683 + x11068*x24691 - x11082*x25100 + x11082*x25102 - x11083*x25100 + x11083*x25102 - x11090*x24725 - x11091*x24707 + x11091*x24712 - x11091*x24720 - x11091*x24721 + x11091*x24722 - x11092*x30673 - x11102*x25029 - x11102*x25049 + x11112*x24682 + x11112*x24690 + x11113*x24682 + x11113*x24690 + x11121*x24715 - x11134*x25482 + x11134*x25483 - x11134*x25516 + x11140*x25052 - x11143*x25053 + x11143*x25064 - x11143*x25075 - x11144*x24956 - x11144*x25153 - x11150*x25077 - x11161*x25029 - x11161*x25049 + x11176*x28574 + x11179*x28574 - x11181*x24725 - x11182*x24725 - x11183*x24495 - x11183*x24498 - x11184*x24495 - x11184*x24498 - x11185*x24495 - x11185*x24498 - x11186*x24495 - x11186*x24498 + x11187*x24495 + x11187*x24498 + x11188*x24495 + x11188*x24498 + x11189*x24495 + x11189*x24498 - x11583*x30744 + x11583*x30749 + x12700*x30840 - x129*x30398 - x129*x30399 + x129*x30400 + x129*x30401 - x13006*x30478 + x13006*x30482 - x13006*x30827 + x13006*x30828 - x14905*x30840 - x14948*x24708 + x14948*x24726 - x15051*x30827 + x15051*x30828 + x15110*x28576 + x15210*x25053 - x15210*x25064 + x15210*x25075 + x15219*x25053 - x15219*x25064 + x15219*x25075 + x15252*x24708 - x15252*x24726 + x15281*x19 + x15282*x19 + x15283*x19 + x15284*x19 + x15285*x19 + x15286*x19 - x15287*x19 - x15288*x19 - x15289*x19 - x15290*x19 - x15291*x19 - x15292*x19 - x15293*x19 - x15296*x24507 + x15296*x24510 - x15297*x24507 + x15297*x24510 + x1896*x30556 + x19973 + x21107 + x21108 + x21110 + x21112 + x21113 + x21114 - x21116 - x21117 - x21118 - x21119 - x21120 - x21121 - x21122 + x21125 - x22564 + x22565 + x22570 + x23469 + x23552 + x23553 + x23555 + x23556 + x23557 + x23558 - x23559 - x23560 - x23561 - x23562 - x23563 - x23564 - x23565 + x23569 - x24495*x30817 - x24495*x30825 + x24495*x30829 + x24495*x30830 + x24495*x30831 - x24498*x30817 - x24498*x30825 + x24498*x30829 + x24498*x30830 + x24498*x30831 - x24507*x30823 + x24510*x30823 - x24517*x30838 + x24517*x30839 + x24517*x30841 + x24517*x30842 + x24528*x30838 - x24528*x30839 - x24528*x30841 - x24528*x30842 + x24550*x30832 + x24562*x30832 + x24569*x28243*x8745 - x24715*x4436 + x24727*x30528 - x24727*x30720 + x24728*x30409 - x24728*x30719 + x24951*x8858 + x24961*x8858 - x24967*x8863 + x24973*x8863 - x24979*x8863 + x25029*x8813 + x25029*x8814 - x25034*x8860 + x25048*x8860 + x25049*x8813 + x25049*x8814 - x25052*x8848 - x25053*x28421 - x25054*x28445 - x25054*x30752 - x25054*x8860 - x25055*x28445 - x25055*x30752 + x25060*x8861 + x25062*x30760 + x25062*x30781 + x25064*x28421 + x25066*x3901 + x25066*x8833 - x25072*x28425 + x25072*x30753 - x25074*x28425 + x25074*x30753 - x25075*x28421 + x25077*x8855 + x25506*x2677 + x28229*x5572*x8594 + x28248*x30836 + x28248*x30837 + x28398*x327 - x28402*x327 + x28521 + x28522 + x28523 - x28524 - x28525 - x28526 - x28534*x608 + x28541 + x28543 + x28544 - x28547 - x28548 - x28549 + x28562*x420 - x28563*x30806 + x28565 + x28573 + x28575*x30558 + x28583 + x28589 + x30486 - x30570*x8726 - x30570*x8820 + x30571*x8726 + x30571*x8820 + x30639 + x30640 + x30641 - x30642 - x30643 - x30644 - x30647*x390 + x30653 + x30654 + x30656 - x30657 - x30658 - x30659 - x30672 - x30674 - x30675*x420 - x30677 + x30682 - x30709*x5440 - x30710*x5440 + 36*x30733 - x30738*x7357 - x30739*x7357 + 72*x30742 - 32*x30746 - x30755*x5307 + 36*x30773 - 72*x30774 + 72*x30779 + x30799*x5440 - 32*x30804 + 12*x30811 + 32*x30813 + x30818*x5157 - x30818 + x30819*x5152 - x30819*x5157 + x30819 + x30820*x5152 - x30820 - x30821*x5152 + x30821*x5157 - x30821 + x30826*x5157 - x30826 + x30833*x5152 - x30833*x5157 + x30833 + x30835*x5152 - x30835 - x30843*x5152 + x30843) + x70*(-p9_b_dot*x26926 - 18*x10*x8743 + x11042*x24797 + x11042*x24811 + x11042*x24818 - x11045*x26222 + x11045*x26239 + x11048*x24458 + x11050*x24732 - x11050*x24738 + x12700*x24486 - x15141*x19 - x15142*x19 - x1821*x24807 + x1827*x30257 + x1881*x24821 + x18850*x5275 - x19896 - x21028*x5152 + x21028*x5157 - x21029 + x21030 - x22507 - x22525 - x23481 + x23482 + x23483 + x24468*x30694 - x24469*x30694 + x24472*x28303 + x24474*x30689 - x24476*x30689 - x24481*x30691 + x24484*x30691 + x24494*x28303 + x24495*x8762 - x24498*x8762 + x24797*x8952 + x24811*x8952 - x24817*x8850 - x24817*x8852 + x24818*x8952 + x24819*x8850 + x24819*x8852 + x24820*x3901 + x24820*x8833 + x24821*x2657 - x24828*x28425 - x24831*x28425 - x24835*x8852 - x26937 + x27835 + x27836 - x27842 - x27843 + x27844 + x27845 - x27850*x421 - x27851*x8774 + x28118 + x28119 + x28120 - x28149 - x28150 - x28151 - x28285*x30695 - x28322*x8972 + x28396 + x28398 - x28400 - x28402 - x30690*x5152 + x30690*x5157 - x30690 + x30692*x5152 + x30692*x5157 + x30693*x5152 + x30693*x5157 - x30696*x5152 + x30696)) + x69*(L*(-x16203*x19 + x21713 - x21714 - x24082 - x24083 + x24084 + x24495*x7620 + x24498*x7620 + x24517*x7747 - x24528*x7747 - x24533*x7747 + x24581*x7546 + x24586*x7546 + x24603*x27067 + x24695*x27173 - x24705*x27173 - x24764*x7552 + x24768*x7552 - x24776*x27062 + x24784*x7549 - x25107*x7621 + x25542*x7621 + x26242*x26903 - x26857*x7622 - x26858*x7622 - x26859*x7622 + x26863*x7622 + x26864*x7622 + x26865*x7622 - 28*x26869 + x26879*x4934 + 28*x26884 + 28*x26895 + 56*x26896 - 4*x27064 + x27066*x5547 - x27170*x5152 + x27170*x5157 - x27170 - 2*x27171 - x27172*x5152 + x27172 + x27176) - x106*(-q7_b_dot*x129*x27259 - q7_b_dot*x27247 - q7_i*x27253 - x129*x27209*x791 + x15946*x27250 + x15946*x7485 - x15946*x7693 + x16261*x19 - x16262*x19 - x16263*x19 + x16265*x19 + x16267*x19 + x16268*x19 + x16269*x19 - x16270*x19 - x16271*x19 - x16277*x19 - x16278*x19 + x16311*x25246 - x16328*x25200 + x16328*x25208 + x16328*x25246 - x19266*x7405 + x21688*x26893 + x21722*x26923 + x21738 - x21739 - x21740 - x21741 - x21742 + x21743 + x21744 + x21746 + x21748 - x21749 - x21750 + x21765 + x24104 + x24105 - x24107 - x24108 - x24109 - x24110 - x24111 + x24112 + x24113 + x24115 + x24116 - x24117 - x24118 + x24129 - x24495*x27243 + x24495*x27248 + x24495*x27249 - x24495*x7705 + x24495*x7706 + x24495*x7707 - x24495*x7717 - x24498*x27243 + x24498*x27248 + x24498*x27249 - x24498*x7705 + x24498*x7706 + x24498*x7707 - x24498*x7717 - x24507*x27246 - x24507*x7701 - x24507*x7702 - x24507*x7747 + x24510*x27246 + x24510*x7701 + x24510*x7702 + x24510*x7747 + x24517*x27244 - x24517*x27256 - x24517*x27258 - x24528*x27244 + x24528*x27256 + x24528*x27258 - x24533*x27244 + x24581*x7497 + x24581*x7646 + x24581*x7647 - x24585*x7759 + x24586*x7497 + x24586*x7646 + x24586*x7647 - x24594*x27264 - x24595*x27264 + x24598*x7759 + x24603*x27212 - x24621*x7546 - x24626*x7546 - x24659*x27067 + x24672*x7552 - x24695*x27241 + x24695*x27242 + x24705*x27241 - x24705*x27242 - x24764*x7689 - x24764*x7690 - x24764*x7762 + x24768*x7689 + x24768*x7690 + x24768*x7762 + x24781*x7689 - x24787*x7689 - x24788*x27028 + x24790*x7759 - x24791*x7759 + x24795*x7703 - x24797*x7667 - x24797*x7722 + x24797*x7727 + x24797*x7728 + x24803*x7703 + x24804*x7703 - x24809*x7703 - x24811*x7667 - x24811*x7722 + x24811*x7727 + x24811*x7728 + x24817*x7701 + x24817*x7702 - x24818*x7667 - x24818*x7722 + x24818*x7727 + x24818*x7728 - x24819*x7701 - x24819*x7702 - x24820*x7692 + x24820*x7793 + x24820*x7796 + x24821*x7794 + x24821*x7795 - x24822*x7703 + x24832*x7604*x837 + x24856*x7552 - x24863*x7552 + x24985*x7499 - x24989*x7532 + x24990*x7499 + x24993*x27062 - x24994*x7532 - x24995*x7532 - x24996*x7524 - x24996*x7526 + x24997*x7532 + x25000*x7524 + x25000*x7526 + x25003*x4877 + x25004*x3320 - x25007*x27026 - x25008*x7524 - x25008*x7526 + x25009*x7532 + x25071*x27266 + x25073*x27266 - x25107*x27240 + x25107*x7711 + x25176*x7497 - x25185*x7715 - x25185*x7716 - x25193*x7715 - x25193*x7716 - x25197*x7689 - x25202*x7723 - x25202*x7724 + x25202*x7730 + x25202*x7731 - x25203*x7723 - x25203*x7724 + x25203*x7730 + x25203*x7731 + x25212*x7769 - x25215*x27218 - x25217*x7769 - x25222*x7797 - x25227*x4926 - x25228*x7925 - x25228*x7926 + x25232*x7925 + x25232*x7926 + x25235*x7769 + x25238*x7769 - x25240*x7769 + x25243*x7749 + x25247*x27268 + x25248*x27267 + x25542*x27240 - x25542*x7711 - x25605*x7716 + x26857*x7713 + x26858*x7713 + x26859*x7713 - x26863*x7713 - x26864*x7713 - x26865*x7713 + 22*x26869 - x26879*x4890 + x26879*x5022 + x26879*x7798 - 22*x26884 - 44*x26896 - x26903*x27263 - x26940*x7687 + x26946 - x26977*x830 + x26998*x321 - x27002*x321 + 8*x27064 - x27066*x5332 - x27115*x5336 + 4*x27171 - x27187*x7713 - x27188*x7713 - x27189*x7713 + x27195*x7713 + x27196*x7713 + x27197*x7713 - 22*x27200 + x27208*x5547 + x27209*x4934 + 22*x27214 + x27223*x5336 + x27224*x27252 + 44*x27225 + x27232*x27263 + x27233*x5152 - x27233*x5157 + x27233 + x27234*x5152 - x27234 - x27235*x5152 + x27235*x5157 - x27235 + x27236 + x27237 - x27238 - x27239 - 4*x27245 - x27251*x5152 + x27251 + x27254*x5152 - x27254 - 8*x27255 - 6*x27257 + x27260*x5152 - x27260 - x27261*x5152 + x27261 - x27262*x5152 + x27262 - x27265*x7366 + x27271 + x27279) + x123*(-x15946*x7792 - x16218*x19 - x16219*x19 + x16225*x19 + x16226*x19 - 52*x21634*x24750 + x21684 - x21688*x27222 - x21719*x5152 + x21719*x5157 - x21721*x5152 + x21721*x5157 - x21724 - x21725 + x21727 + x21728 + x21734 - x21775*x24522 + x24052 + x24087 + x24088 + x24089 - x24091 - x24093 - x24095 + x24097 + x24098 + x24103 + x24474*x27190 + x24474*x27192 - x24476*x27190 - x24476*x27192 + 52*x24480*x7340 - x24495*x27205 - x24495*x27206 + x24495*x7648 + x24495*x7649 - x24498*x27205 - x24498*x27206 + x24498*x7648 + x24498*x7649 - x24507*x27207 + x24510*x27207 - x24517*x27221 + x24528*x27221 + x24533*x27221 - x24550*x27219 - x24562*x27213 - x24562*x27219 - x24581*x7667 - x24586*x7667 + x24682*x7646 + x24682*x7647 + x24690*x7646 + x24690*x7647 - x24695*x27199 + x24695*x27201 + x24699*x7689 + x24699*x7690 - x24700*x7689 - x24700*x7690 + x24705*x27199 - x24705*x27201 + x24718*x27212 - x24725*x7689 - x24725*x7690 + x24732*x27191 - x24738*x27191 + 84*x24750*x27224 + x24764*x7702 - x24768*x7702 + x24788*x27230 + x24792 - x24956*x7685 - x24985*x7668 + x24989*x7703 - x24990*x7668 + x24994*x7703 + x24995*x7703 + x24996*x7749 - x24997*x7703 - x25000*x7749 - x25003*x4926 + x25007*x27229 + x25008*x7749 - x25009*x7703 + x25011*x7694 - x25012*x7694 + x25014*x27202 + x25014*x27203 - x25015*x27202 - x25015*x27203 - x25107*x27198 + x25107*x7652 - x25176*x7667 - x25502*x7689 - x25502*x7690 + x25504*x7689 + x25504*x7690 + x25542*x27198 - x25542*x7652 - x26222*x7655 - x26222*x7658 + x26239*x7655 + x26239*x7658 + x26240*x3395 + x26857*x7656 + x26858*x7656 + x26859*x7656 - x26863*x7656 - x26864*x7656 - x26865*x7656 + 84*x26869 - 52*x26873 + x26877*x3416 + x26879*x4951 - x26879*x7791 - 84*x26884 - 104*x26887 - 84*x26895 - 168*x26896 - 104*x26899 - x26903*x27226 + x27058 + x27098 + x27099 - x27100 + x27101 + x27102 + x27103 - x27104 - x27105 - x27106 - x27108 - x27109 - x27110 + x27111 + x27112 + x27113 + x27114 - x27116 - x27117 - x27118 - x27119 - x27120 + x27121 + x27165 - x27187*x7656 - x27188*x7656 - x27189*x7656 - x27193*x5307 + x27194*x5157 - x27194 + x27195*x7656 + x27196*x7656 + x27197*x7656 - 84*x27200 - 28*x27204 + x27208*x5312 + x27209*x4864 + x27211*x5322 + 24*x27213 + 84*x27214 - 56*x27216 - 28*x27217 + x27220*x5152 - x27220 + x27223*x5572 + 168*x27225 + x27226*x27232 - 56*x27228) - x123*(-q7_b*x27401 + q7_b*x27406 + q7_b_dot*x27397 + q7_b_dot*x27408 - q8_b*x27406 - x154*x27324 - x154*x27326 + x154*x27328 + x154*x27330 + x15946*x16430 - x16148*x27299 - x16238*x16430 + x16244*x25415 + x16311*x24918 - x16311*x24921 + x16311*x24932 + x16328*x24918 - x16328*x24921 + x16328*x24932 + x16412*x19 + x16413*x19 + x16414*x19 + x16415*x19 + x16417*x19 + x16418*x19 - x16420*x19 - x16422*x19 - x16423*x19 - x16424*x19 - x16426*x19 - x16427*x19 - x16440*x24507 + x16440*x24510 + x21634*x27423 + x21729 + x21735*x26893 + x21806 + x21808 + x21809 + x21810 + x21811 + x21812 - x21813 - x21814 - x21816 - x21817 - x21818 - x21819 + x21829 + x21873 + x24096*x24519 + x24099 + x24162 + x24163 + x24164 + x24165 + x24166 + x24168 - x24169 - x24170 - x24172 - x24174 - x24175 - x24176 + x24183 + x24230 - x24495*x27402 - x24495*x27403 - x24495*x27404 - x24495*x27405 + x24495*x27409 + x24495*x27410 + x24495*x27411 + x24495*x27412 + x24495*x7868 + x24495*x7869 - x24498*x27402 - x24498*x27403 - x24498*x27404 - x24498*x27405 + x24498*x27409 + x24498*x27410 + x24498*x27411 + x24498*x27412 + x24498*x7868 + x24498*x7869 + x24503*x7667 + x24503*x7722 - x24503*x7808 - x24503*x7810 + x24505*x7667 + x24505*x7722 - x24505*x7808 - x24505*x7810 - x24512*x7703 + x24512*x7842 + x24516*x7703 - x24516*x7842 + x24517*x27420 + x24517*x27421 + x24519*x4926 - x24519*x4964 - x24519*x7822 + x24524*x27306 - x24527*x7703 + x24527*x7842 - x24528*x27420 - x24528*x27421 - x24529*x7700 + x24529*x7830 + x24531*x7703 - x24531*x7842 - x24532*x7701 - x24532*x7702 + x24532*x8079 + x24532*x8080 - x24535*x27229 + x24535*x27352 - x24550*x27395 - x24550*x27396 - x24562*x27395 - x24562*x27396 - x24573*x27212 + x24909*x7497 + x24909*x7500 - x24909*x7715 - x24909*x7716 - x24910*x7532 + x24910*x7769 + x24913*x7497 + x24913*x7500 - x24913*x7715 - x24913*x7716 - x24916*x7532 + x24916*x7769 - x24917*x7520 + x24917*x7758 - x24918*x7761 - x24918*x7762 + x24919*x7532 - x24919*x7769 + x24921*x7761 + x24921*x7762 + x24923*x4877 - x24923*x4944 + x24923*x7512 + x24926*x3320 - x24930*x27028 + x24930*x27268 - x24931*x27026 + x24931*x27267 - x24932*x7761 - x24932*x7762 + x24933*x7532 - x24933*x7769 - x24951*x7646 - x24951*x7647 + x24953*x7689 + x24953*x7690 - x24958*x7689 - x24958*x7690 - x24961*x7646 - x24961*x7647 + x24967*x7689 + x24967*x7690 - x24973*x7689 - x24973*x7690 + x24979*x7689 + x24979*x7690 + x25109*x27312 + x25185*x7728 + x25193*x7728 - x25246*x7803 - x25246*x7804 - x25395*x7749 + x25396*x7749 - x25409*x27418 - x25411*x7797 - x25413*x7701 - x25413*x7702 + x25413*x8079 + x25413*x8080 + x25414*x7701 + x25414*x7702 - x25414*x8079 - x25414*x8080 - x25415*x7828 + x25416*x7667 - x25416*x7808 + x25419*x27300 + x25419*x27424 + x25426*x27218 - x25427*x27229 + x25427*x27352 + x25605*x7728 + x25761*x7497 - x25761*x7716 + x26919*x3421 - x26920*x3421 - x26920*x7638 + x26998*x286 - x27002*x286 - x27073*x7911 + x27090*x27419 + x27122 - x27208*x6741 - x27210*x27419 + 3*x27236 + 3*x27237 - 3*x27238 - 3*x27239 + 48*x27255 - 14*x27257 + x27269*x27422 + x27279 - x27283*x6741 + x27287*x7638 - 48*x27292 - x27342*x5248 + x27383 + x27398*x5152 - x27398*x5157 + x27398 + x27399*x5152 - x27399 - x27400*x7604 - x27407*x5152 + x27407*x5157 - x27407 + x27413*x5572 + x27415*x5152 - x27415 + x27417*x5152 - x27417 - x27425*x5152 + x27425 + 14*x27426 - x27427*x5152 + x27427 - x27428*x5152 + x27428 - x27429*x5152 - x27429*x5157 + x27454) + x168*(q7_b*x27290 - q7_b*x27294 + q7_b*x27305 - q7_i*x27296 + q7_i_dot*x27301 - q8_b*x24649*x791 - q8_b*x26962 + q8_i_dot*x27053 + x15946*x16353 - x16061*x16238 + x16244*x25285 + x16311*x24672 + x16311*x24856 - x16311*x24863 + x16328*x24672 - x16328*x24863 + x16343*x19 + x16344*x19 + x16345*x19 + x16346*x19 - x16348*x19 - x16349*x19 - x16351*x19 - x16352*x19 + x16369*x27018 + x21641 + x21656 + x21766 + x21767 + x21769 + x21770 - x21772 - x21774 - x21776 - x21778 + x21804 + x24017 + x24031 + x24096*x24649 + x24130 + x24131 + x24132 + x24133 - x24134 - x24136 - x24138 - x24139 + x24160 - x24495*x7781 - x24495*x7783 - x24495*x7784 + x24495*x7787 - x24498*x7781 - x24498*x7783 - x24498*x7784 + x24498*x7787 + x24517*x27297 + x24517*x27298 - x24528*x27297 - x24528*x27298 - x24533*x27297 - x24533*x27298 + x24581*x7727 + x24586*x7727 + x24587*x27288 + x24587*x27289 + x24589*x27288 + x24589*x27289 + x24599*x27300 + x24603*x27303 + x24621*x7667 - x24621*x7715 - x24621*x7716 + x24621*x7722 - x24626*x7715 - x24626*x7716 + x24626*x7722 - x24641*x7703 + x24641*x7769 + x24645*x7703 - x24645*x7769 + x24659*x27306 - x24662*x7703 + x24662*x7769 - x24667*x7700 + x24667*x7758 + x24670*x7703 - x24670*x7769 - x24672*x7701 - x24672*x7702 - x24677*x27230 + x24677*x27268 - x24678*x27229 + x24678*x27267 + x24863*x7701 + x24863*x7702 - x24882*x7925 - x24882*x7926 + x24883*x7925 + x24883*x7926 - x24896*x7646 - x24896*x7647 + x24897*x7689 + x24897*x7690 - x24898*x7689 - x24898*x7690 - x24899*x7646 - x24899*x7647 + x24902*x7689 + x24902*x7690 - x24904*x27212 - x24905*x7689 - x24905*x7690 + x24907*x7689 + x24907*x7690 + x24946*x27312 + x25271*x7749 - x25271*x7765 - x25272*x7749 + x25272*x7765 - x25285*x7797 - x25292*x7716 - x26879*x27282 + x26919*x3450 - x26920*x3450 + x26955*x7805 + x26963*x7805 + x26976*x7805 - x26977*x4977 + x26985 + x26986 - x26987 - x26988 + x26989 + x26990 + x26992 + x26993 + x26994 + x26995 + x26997 + x26999 - x27001 - x27003 - x27004 + x27005 + x27006 + x27007 + x27008 + x27009 + x27010 + x27011 + x27013 + x27014 + x27016 - x27017 - x27019 - x27020 - x27021 + x27022 - x27023 - x27024 - x27025 - x27027 - x27029 + x27057 + x27068 - x27208*x5643 - x27210*x5336*x807 - x27211*x5928 + 16*x27245 + 32*x27255 + x27280*x5152 - x27280*x5157 + x27280 + x27281*x5152 - x27281 - x27283*x5643 - 16*x27284 - x27285*x5152 - x27285*x5157 - x27286*x5152 + x27286*x5157 - x27286 + x27287*x7479 + x27291*x5152 + x27291*x5157 - 32*x27292 + x27293*x5152 - x27293 - x27299*x7541 + x27302*x791 + x27304*x4890 - x27308*x5152 + x27308 - x27309*x5152 + x27309 + 32*x27310 - x27311*x5152 - x27311*x5157 + x27384 + x27394) + x63*(q7_b*x27487 - q7_b*x27496 - q8_b*x27487 + q8_b*x27496 - q8_b_dot*x27259*x3943 - x129*x27324 - x129*x27326 + x129*x27328 + x129*x27330 + x15946*x16469 - x16238*x16469 + x16244*x25506 + x16311*x25053 - x16311*x25064 + x16311*x25075 + x16328*x25032 - x16328*x25045 + x16328*x25053 - x16328*x25064 + x16328*x25075 + x16454*x19 + x16455*x19 + x16456*x19 + x16457*x19 + x16459*x19 + x16460*x19 - x16461*x19 - x16462*x19 - x16463*x19 - x16464*x19 - x16465*x19 - x16466*x19 - x16467*x19 + x16480*x24507 - x16480*x24510 + x21831 + x21832 + x21834 + x21835 + x21836 + x21837 - x21839 - x21840 - x21841 - x21842 - x21843 - x21845 - x21846 + x21853 + x24074 + x24184 + x24185 + x24186 + x24187 + x24188 + x24190 - x24191 - x24192 - x24193 - x24194 - x24195 - x24196 - x24197 + x24209 + x24333 - x24495*x27467 + x24495*x27478 + x24495*x27479 + x24495*x27480 - x24495*x7892 - x24495*x7893 - x24495*x7895 - x24495*x7896 - x24495*x7898 + x24495*x7906 + x24495*x7907 + x24495*x7908 - x24498*x27467 + x24498*x27478 + x24498*x27479 + x24498*x27480 - x24498*x7892 - x24498*x7893 - x24498*x7895 - x24498*x7896 - x24498*x7898 + x24498*x7906 + x24498*x7907 + x24498*x7908 - x24507*x27466 + x24507*x27469 + x24510*x27466 - x24510*x27469 + x24517*x27489 - x24517*x27490 + x24517*x27491 + x24517*x27492 - x24528*x27489 + x24528*x27490 - x24528*x27491 - x24528*x27492 + x24550*x27481 + x24562*x27481 + x24569*x27051 + x24569*x27278 + x24682*x7667 + x24682*x7727 + x24682*x7728 - x24682*x7808 - x24682*x7810 + x24683*x7668 + x24690*x7667 + x24690*x7728 - x24690*x7808 - x24690*x7810 + x24691*x7668 + x24699*x7803 + x24699*x7804 - x24700*x7803 - x24700*x7804 - x24707*x7703 + x24707*x7842 + x24708*x27307 + x24712*x7703 - x24712*x7842 + x24714*x27424 + x24714*x7361*x820 - x24715*x4964 - x24715*x7822 + x24718*x27303 - x24720*x7703 + x24720*x7842 - x24721*x7703 + x24721*x7842 + x24722*x7703 - x24722*x7842 - x24725*x7702 - x24725*x7803 - x24725*x7804 + x24725*x8080 - x24726*x27307 - x24727*x27230 + x24727*x27354 - x24728*x27229 + x24728*x27352 + x24951*x7535 - x24956*x7763 + x24961*x7535 - x24967*x7540 + x24973*x7540 - x24979*x7540 + x25029*x7497 + x25029*x7500 - x25029*x7715 - x25029*x7716 - x25032*x7762 - x25034*x7537 + x25045*x7762 + x25048*x7537 + x25049*x7497 + x25049*x7500 - x25049*x7715 - x25049*x7716 - x25052*x7520 + x25052*x7758 - x25053*x7761 - x25053*x7762 - x25054*x27046 - x25054*x27264 - x25054*x7537 - x25055*x27046 - x25055*x27264 + x25062*x27277 + x25062*x27312 + x25064*x7761 + x25064*x7762 + x25066*x4877 - x25066*x4944 + x25066*x7512 + x25068*x27012 - x25072*x27026 + x25072*x27267 - x25074*x27026 + x25074*x27267 - x25075*x7761 - x25075*x7762 + x25077*x7532 - x25077*x7769 - x25079*x7646 - x25079*x7647 + x25080*x7689 + x25080*x7690 - x25087*x7689 - x25087*x7690 - x25088*x7646 - x25088*x7647 + x25091*x7689 + x25091*x7690 - x25099*x27212 - x25100*x7689 - x25100*x7690 + x25102*x7689 + x25102*x7690 - x25153*x7763 - x25497*x27418 - x25498*x7797 - x25502*x7702 + x25502*x8080 + x25504*x7702 - x25504*x8080 - x25506*x7828 + x25507*x7667 + x25507*x7728 - x25507*x7808 - x25516*x7749 + x25516*x7836 + x25827*x7497 - x25827*x7716 + x25836*x7535 - x26879*x27464 + x26919*x3479 - x26920*x3479 + x26964*x3584 + x26998*x327 - x27002*x327 + x27090*x27486 + x27124 + x27125 + x27126 - x27127 - x27128 - x27129 + x27138 + x27140 + x27141 - x27142 - x27143 - x27144 + x27154 + x27157*x27222 + x27160 + x27161*x820 + x27164 + x27169 - x27208*x7357 - x27210*x27486 - x27211*x5440 + 72*x27255 - 32*x27257 - x27272*x5307 - x27283*x7357 - 36*x27284 - 72*x27292 + x27304*x4864 + 72*x27310 + x27356 + x27357 + x27358 + x27359 + x27360 + x27361 + x27362 + x27363 + x27364 + x27366 + x27367 + x27368 + x27370 + x27371 + x27373 + x27374 + x27375 + x27376 + x27378 + x27379 + x27381 + x27382 + x27413*x5440 + x27422*x8234 + 32*x27426 + x27455*x5157 - x27455 - x27456 - x27457 - x27458 + x27459 + x27460 + x27461 + x27462*x5152 - x27462*x5157 + x27462 + x27463*x5152 - x27463 - x27465*x5152 + x27465*x5157 - x27465 + x27468*x5157 - x27468 - x27471 - x27473 - x27474 + x27475 + x27476 + x27477 + x27483*x5152 - x27483*x5157 + x27483 + x27485*x5152 - x27485 - x27488 - x27493 + x27494*x3480 - x27495*x5152 + x27495 - x27497 + x27498 + x27501) + x70*(q7_b*x24826 + q7_b*x24836 + q7_b_dot*x26606 - q7_b_dt*x24492 + x15946*x24486 - x16207*x19 - x16208*x19 - x16439*x24474 + x16439*x24476 + x19203*x5275 + x21585*x24922 - x21658 + x21716*x5152 - x21716*x5157 - x21717 + x21718 - x23967 - x24014 - x24039 - x24085 + x24086 - x24468*x27182 + x24469*x27182 - x24481*x27178 + x24484*x27178 + x24495*x7428 + x24495*x7635 - x24498*x7428 - x24498*x7635 - x24732*x7638 + x24738*x7638 + x24784*x7532 + x24797*x7499 + x24797*x7630 + x24811*x7499 + x24811*x7630 - x24816*x7532 - x24817*x7524 - x24817*x7526 + x24818*x7499 + x24818*x7630 + x24819*x7524 + x24819*x7526 + x24820*x4877 + x24820*x7512 + x24821*x3320 + x24821*x3372 - x24830*x27184 - x24835*x7526 - x24910 + x24916 - x24919 + x24930 - x24931 - x24933 - x25296*x27184 - x26595*x3276 - x26857 - x26858 - x26859 + x26863 + x26864 + x26865 - x26940*x7604 + x26996 + x26998 - x27000 - x27002 - x27177*x5152 + x27177*x5157 - x27177 + x27179*x5152 + x27179*x5157 + x27180*x5152 + x27180*x5157 + x27181 - x27183*x5152 + x27183 + x27185*x808 + x27186*x7436)) + x69*(L*(x16535*x27596 - x16787*x19 - x16878*x24528 + x22011 - x22012 - x24339 - x24340 + x24341 - x24468*x27831 + x24469*x27831 + x24495*x27830 + x24495*x8257 - x24498*x27830 + x24498*x8257 + x24507*x27827 - x24510*x27827 + x24581*x8179 + x24586*x8179 - x24776*x27713 + x24781*x8185 + x24784*x8182 - x24787*x8185 + x25892*x27568 + x25905*x27575 - x27527*x4023 - x27528*x4023 - x27529*x4023 + x27535*x4023 + x27536*x4023 + x27537*x4023 - 36*x27540 + x27550*x5106 + x27551*x27597 + 36*x27556 + 72*x27569 - 4*x27715 - x27826*x5152 + x27826*x5157 - x27826 - 2*x27828 - x27829*x5152 + x27829 + x27834) - x106*(q10_i*x27918 - q9_b*x27931*x4648 - q9_b_dot*x27927*x3108 - q9_i*x27918 + x11613*x27683 - x13681*x27890 + x16535*x8118 - x16535*x8322 + x16830*x19 - x16831*x19 - x16832*x19 + x16834*x19 + x16836*x19 + x16837*x19 + x16838*x19 - x16839*x19 - x16840*x19 - x16847*x19 - x16848*x19 - x16876*x24732 + x16876*x24738 + x16877*x24732 - x16877*x24738 - x16878*x24507 + x16878*x24510 + x16880*x25246 - x16884*x20*x27743 + x16886*x25246 - x16887*x24507 + x16887*x24510 - x17429*x27925 + x18162*x27596 - 6*x18162*x8052 - x19344*x8296 - x19410*x8043 + x21980*x27566 + x22037*x5152 - x22037*x5157 - x22038*x5152 + x22038*x5157 + x22040 - x22041 - x22042 - x22043 - x22044 + x22045 + x22046 + x22048 + x22049 - x22050 - x22051 + x22066 + x24254 + x24362 + x24363 - x24364 - x24365 - x24367 - x24368 - x24369 - x24370 + x24371 + x24372 + x24374 + x24376 - x24377 - x24378 + x24387 - x24468*x27907 + x24468*x27908 + x24469*x27907 - x24469*x27908 - x24474*x27896 + x24474*x27898 + x24476*x27896 - x24476*x27898 - x24481*x8345 - x24481*x8346 + x24495*x27905 - x24495*x27906 - x24495*x27910 + x24495*x27914 + x24495*x27915 - x24495*x8333 + x24495*x8334 - x24495*x8341 - x24498*x27905 + x24498*x27906 - x24498*x27910 + x24498*x27914 + x24498*x27915 - x24498*x8333 + x24498*x8334 + x24498*x8341 + x24504*x8335 - x24504*x8345 - x24504*x8346 - x24504*x8348 - x24507*x27912 - x24507*x8329 - x24507*x8330 + x24510*x27912 + x24510*x8329 + x24510*x8330 - x24517*x27922 - x24517*x27923 + x24528*x27922 + x24528*x27923 - x24579*x8384 + x24581*x8131 + x24581*x8278 + x24581*x8279 + x24586*x8131 + x24586*x8278 + x24586*x8279 - x24594*x27932 - x24595*x27932 + x24603*x27873 - x24621*x8179 - x24626*x8179 + x24672*x8185 - x24764*x8318 - x24764*x8319 - x24764*x8387 + x24768*x8318 + x24768*x8319 + x24768*x8387 + x24781*x8318 + x24781*x8319 - x24787*x8318 - x24787*x8319 - x24788*x27699 + x24790*x8384 - x24791*x8384 + x24795*x8331 - x24797*x8299 - x24797*x8351 + x24797*x8355 + x24797*x8356 + x24802*x27893 + x24803*x8331 - x24809*x8331 - x24811*x8299 - x24811*x8301 - x24811*x8351 + x24811*x8355 + x24811*x8356 + x24811*x8358 + x24816*x8328 + x24817*x8329 + x24817*x8330 - x24818*x8299 - x24818*x8351 + x24818*x8355 + x24818*x8356 - x24819*x8329 - x24819*x8330 - x24820*x5111 + x24820*x8426 + x24821*x3663 + x24821*x5109 + x24821*x8427 - x24821*x8491 + x24823*x27892 - x24830*x27921 + x24835*x8329 - x24863*x8185 + x24985*x8133 - x24989*x8166 + x24990*x8133 + x24993*x27713 - x24994*x8166 - x24996*x8158 - x24996*x8160 + x24997*x8166 + x25000*x8158 + x25000*x8160 + x25003*x5052 - x25007*x27697 - x25008*x8158 - x25008*x8160 + x25009*x8166 + x25014*x27909 - x25015*x27909 + x25071*x27936 + x25073*x27936 + x25176*x8131 - x25197*x8318 - x25197*x8319 - x25202*x8352 + x25202*x8357 - x25203*x8352 + x25203*x8357 + x25212*x8392 - x25217*x8392 - x25228*x8336 - x25228*x8379 + x25232*x8336 + x25232*x8379 + x25235*x8392 + x25238*x8392 - x25240*x8392 - x25296*x27921 - x25574*x8346 + x26237*x3605 - x26247*x3664 + x27527*x8342 + x27528*x8342 + x27529*x8342 - x27535*x8342 - x27536*x8342 - x27537*x8342 + 30*x27540 + x27550*x27565 - x27550*x5065 - 30*x27556 - 60*x27569 - x27574*x27930 + x27595*x27869 - x27608*x8019 + x27616 + x27669*x321 - x27673*x321 + 8*x27712 + 8*x27715 - x27716*x5332 - x27717*x5336 - x27769*x5336 + 4*x27828 + x27849*x875 + x27857*x8335 - x27857*x8348 - 30*x27861 - x27866*x5643 + x27871*x3656 + x27872*x5680 + 30*x27877 - 32*x27880 + x27887*x5336 + 60*x27888 + x27894*x27930 + x27895*x5152 - x27895*x5157 + x27895 + x27897*x5152 - x27897 - x27899*x5152 + x27899*x5157 - x27899 + x27900 + x27901 - x27902 - x27903 - 4*x27911 - x27913*x8301 + x27913*x8358 + x27916*x5547 - x27917*x5152 + x27917 + x27919*x5152 - x27919 - x27924*x877 + x27926*x5152 - x27926 - x27928*x5152 + x27928 - x27929*x5152 + x27929 - x27934*x8336 - x27934*x8379 + x27935*x5880 + x27944) + x123*(q10_i*x27879 - q9_b*x27891*x5117 - q9_b_dt*x24522*x3661 - q9_i*x27879 - x14264*x27890 - x16535*x8431 - x16798*x19 - x16799*x19 + x16801*x19 + x16804*x19 - x16820*x24481 - x16820*x24504 + x16822*x24507 - x16822*x24510 - x16826*x24732 + x16826*x24738 + x16827*x24732 - x16827*x24738 + x16828*x24507 - x16828*x24510 - x16937*x24517 + x16937*x24528 + x16937*x24533 - x16938*x24517 + x16938*x24528 + x16938*x24533 + x16968*x24517 - x16968*x24528 + x21941 - x21944*x27881 + x21955 + x21976 - x21980*x27886 + x22018*x5152 - x22018*x5157 - x22020*x5152 + x22020*x5157 - x22021*x5152 + x22021*x5157 - x22023 - x22025 + x22026 + x22027 + x22036 + x22069*x24522 + x24291 + x24309 + x24345 - x24347 - x24349 - x24351 - x24352 - x24353 + x24354 + x24355 + x24360 - x24474*x27852 + x24474*x27853 + x24474*x27854 + x24476*x27852 - x24476*x27853 - x24476*x27854 + x24495*x27859 - x24495*x27860 - x24495*x27867 + x24495*x8280 - x24495*x8289 - x24498*x27859 + x24498*x27860 - x24498*x27867 + x24498*x8280 + x24498*x8289 + x24504*x8281 + x24517*x8468 - x24528*x8468 - x24533*x8468 - x24550*x27883 - x24562*x27875 - x24562*x27883 - x24581*x8299 - x24586*x8299 - x24586*x8301 + x24682*x8278 + x24682*x8279 + x24690*x8278 + x24690*x8279 + x24695*x27862 - x24695*x27863 - x24705*x27862 + x24705*x27863 - x24725*x8318 + x24764*x8329 + x24764*x8330 - x24768*x8329 - x24768*x8330 + x24788*x27893 + x24792 - x24956*x8313 + x24989*x8331 + x24994*x8331 - x24997*x8331 + x25007*x27892 + x25011*x8324 - x25012*x8324 + x25014*x27864 + x25014*x27865 - x25015*x27864 - x25015*x27865 - x25176*x8299 - x25573*x8491 + x25873*x3605 - x25892*x3664 - x26222*x8286 + x26239*x8286 + x27527*x8287 + x27528*x8287 + x27529*x8287 - x27535*x8287 - x27536*x8287 - x27537*x8287 + 108*x27540 - 68*x27544 + x27548*x3669 + 68*x27555 - 108*x27556 - 136*x27559 - 216*x27569 - x27575*x27889 + x27608*x5122 + x27708 + x27752 + x27753 - x27754 + x27755 + x27756 + x27757 - x27758 - x27759 - x27760 - x27762 - x27763 - x27764 + x27765 + x27766 + x27767 + x27768 - x27770 - x27771 - x27772 - x27773 - x27774 + x27775 - 136*x27824 - x27855*x5307 + x27856*x5157 - x27856 + x27857*x8281 - 108*x27861 - x27866*x7357 - x27868*x8301 + x27870*x5039 + x27871*x3667 + x27872*x5322 + x27874*x5322 + 24*x27875 + 108*x27877 - 72*x27880 + x27884*x5152 - x27884 - x27885*x5122*x840 + x27887*x5572 + 216*x27888 + x27889*x27894*x5211) - x123*(-q10_b*x27724 + q10_b*x28007 - q10_b*x28029 - q10_b_dt*x11347*x19410 + q10_i*x28012 - q9_b*x28007 + q9_b*x28029 + q9_b_dot*x11389*x24455*x362*x5117 - q9_i*x28012 - x11347*x18157*x876 - x11515*x28022 - x11515*x28023 + x16535*x16961 + x16535*x16964 - x16731*x27927 + x16816*x25415 + x16880*x24918 - x16880*x24921 + x16880*x24932 + x16886*x24918 - x16886*x24921 + x16886*x24932 + x16904*x24708 - x16904*x24726 + x16944*x19 + x16945*x19 - x16946*x19 + x16947*x19 + x16948*x19 + x16951*x19 + x16952*x19 - x16954*x19 - x16955*x19 - x16956*x19 - x16957*x19 - x16959*x19 - x16960*x19 - x16961*x18162 - x16964*x18162 - x16968*x24507 + x16968*x24510 - x18572*x27925 + x21956 + x22068 + x22070 - x22071 + x22073 + x22074 + x22075 + x22076 - x22077 - x22078 - x22079 - x22080 - x22081 - x22082 + x22097 + x24292 + x24388 + x24390 - x24391 + x24392 + x24394 + x24395 + x24396 - x24397 - x24398 - x24400 - x24401 - x24402 - x24403 + x24411 - x24495*x28008 + x24495*x28014 + x24495*x28015 + x24495*x28016 + x24495*x8460 - x24498*x28008 + x24498*x28014 + x24498*x28015 + x24498*x28016 + x24498*x8460 + x24503*x8299 + x24503*x8351 - x24503*x8406 - x24503*x8408 + x24505*x8299 + x24505*x8301 + x24505*x8351 - x24505*x8406 - x24505*x8408 - x24505*x8410 - x24505*x8458 + x24507*x8463 - x24507*x8468 - x24510*x8463 + x24510*x8468 - x24512*x8331 + x24512*x8448 + x24516*x8331 - x24516*x8448 - x24527*x8331 + x24527*x8448 - x24529*x8328 + x24529*x8437 + x24532*x27973 + x24532*x27975 - x24532*x8329 - x24532*x8330 - x24535*x27892 + x24535*x27993 - x24550*x27954 - x24550*x28003 - x24562*x27954 - x24562*x28003 - x24573*x27873 + x24573*x27968 + x24909*x8131 + x24909*x8134 - x24909*x8407 - x24909*x8409 - x24910*x8166 + x24910*x8392 + x24913*x8131 + x24913*x8134 - x24913*x8407 - x24913*x8409 - x24913*x8456 - x24916*x8166 + x24916*x8392 - x24917*x8154 + x24917*x8383 - x24918*x8386 - x24918*x8387 + x24919*x8166 - x24919*x8392 + x24921*x8386 + x24921*x8387 - x24923*x27974 + x24923*x5052 + x24923*x8146 + x24926*x3538 - x24930*x27699 + x24930*x27996 - x24931*x27697 + x24931*x27995 - x24932*x8386 - x24932*x8387 + x24933*x8166 - x24933*x8392 - x24951*x8278 - x24951*x8279 + x24951*x8402 - x24956*x8404 - x24961*x8278 - x24961*x8279 - x24961*x8400 + x24961*x8402 + x24961*x8403 + x24967*x8318 + x24967*x8319 - x24967*x8422 - x24973*x8318 - x24973*x8319 + x24973*x8422 + x24979*x8318 + x24979*x8319 - x24979*x8422 + x25185*x8355 + x25185*x8356 + x25193*x8355 + x25193*x8356 + x25193*x8358 + x25221*x8441 + x25221*x8442 + x25222*x3663 + x25222*x5109 - x25237*x8441 - x25237*x8442 - x25246*x8441 + x25413*x27973 + x25413*x27975 - x25413*x8329 - x25413*x8330 - x25414*x27973 - x25414*x27975 + x25414*x8329 + x25414*x8330 + x25415*x8491 - x25415*x8493 + x25416*x8299 - x25416*x8406 - x25416*x8408 + x25419*x28024 + x25426*x27882 - x25427*x27892 + x25427*x27993 + x25605*x8355 + x25605*x8356 + x25761*x8131 - x25761*x8409 + x27591*x3671 + x27591*x3673 - x27592*x3671 - x27592*x3673 + x27669*x286 - x27673*x286 + x27686*x5527 - x27723*x27869 + x27744*x8315 + x27776 + 3*x27900 + 3*x27901 - 3*x27902 - 3*x27903 - x27916*x6741 + x27944 - x27952*x6741 - x27959*x3671 - x27959*x3673 - x27960*x5129 - x27960*x8459 + x27963*x3671 + x27963*x3673 + x27964*x8459 + x27965*x5129 + x27967*x6741 - 48*x27970 + x27985*x5248 + 48*x27989 + x28001 - x28002*x5152 + x28002*x5157 - x28002 - x28004*x8400 + x28004*x8403 + x28005*x5152 - x28005*x5157 + x28005 + x28006*x5152 - x28006 - 14*x28009 + x28010*x8301 - x28010*x8410 - x28010*x8458 - x28011*x5152 + x28011*x5157 - x28011 + 6*x28013 + x28017*x5572 + x28018*x5572 + x28020*x5152 - x28020 + x28021*x5152 - x28021 + x28025*x5111 - x28026*x5152 + x28026 - x28027*x5152 + x28027 - x28028*x5152 + x28028 - x28030*x5152 - x28030*x5157 - x28031*x5394) + x168*(q10_b*x27953 - q10_b*x27991 + q10_i_dot*x27644 - q9_b*x27953 + q9_b*x27991 - x16643*x18162 + x16816*x25285 + x16880*x24672 - x16880*x24863 + x16886*x24672 - x16886*x24863 + x16896*x19 + x16897*x19 - x16898*x19 + x16900*x19 + x16901*x19 + x16902*x19 + x16903*x19 - x16907*x19 - x16908*x19 - x16909*x19 - x16910*x19 - 8*x18162*x8360 - x18347*x27925 + x21925 + x21928 + x21952 + x22029 + x22098 + x22099 - x22101 + x22102 + x22103 + x22104 + x22105 - x22106 - x22107 - x22108 - x22109 + x22110 + x22113 + x24282 + x24357 + x24412 + x24414 - x24415 + x24416 + x24417 + x24418 + x24419 - x24420 - x24421 - x24422 - x24423 + x24426 - x24481*x8439 - x24495*x8399 + x24495*x8418 - x24498*x8399 + x24498*x8418 - x24504*x8412 - x24504*x8413 - x24504*x8439 + x24517*x27979 + x24517*x27980 - x24522*x3660*x866 - x24528*x27979 - x24528*x27980 + x24528*x8436*x875 - x24533*x27979 - x24533*x27980 + x24581*x8356 + x24586*x8356 + x24586*x8358 + x24587*x27966 + x24589*x27966 + x24599*x27981 + x24617*x8404 + x24621*x8299 + x24621*x8351 - x24621*x8406 - x24621*x8407 + x24626*x8299 + x24626*x8301 + x24626*x8351 - x24626*x8406 - x24626*x8407 - x24626*x8410 - x24641*x8331 + x24641*x8392 + x24641*x8448 + x24645*x8331 - x24645*x8392 - x24645*x8448 - x24649*x27974 - x24662*x8331 + x24662*x8392 + x24662*x8448 - x24667*x8328 + x24667*x8383 - x24667*x8404 + x24667*x8437 - x24670*x8392 + x24672*x27973 + x24672*x27975 - x24672*x8329 - x24672*x8330 - x24677*x27893 + x24677*x27994 + x24677*x27996 - x24678*x27892 + x24678*x27993 + x24678*x27995 - x24856*x8329 - x24856*x8330 - x24863*x27973 - x24863*x27975 + x24863*x8329 + x24863*x8330 - x24882*x8336 - x24882*x8379 + x24883*x8336 + x24883*x8379 - x24896*x8278 - x24896*x8279 + x24896*x8402 + x24897*x8318 + x24897*x8319 - x24897*x8422 - x24898*x8318 - x24898*x8319 + x24898*x8422 - x24899*x8278 - x24899*x8279 - x24899*x8400 + x24899*x8402 + x24899*x8403 + x24902*x8318 + x24902*x8319 - x24902*x8422 - x24905*x8318 - x24905*x8319 + x24905*x8422 + x24907*x8318 + x24907*x8319 - x24907*x8422 + x25176*x8356 + x25285*x8491 - x25285*x8493 + x25292*x8299 - x25292*x8406 + x25573*x3663 + x25573*x5109 - x25574*x8439 + x27591*x3661 - x27592*x3661 + x27625*x8447 - x27628*x27870 + x27632*x8447 + x27645*x8447 + x27656 + x27657 - x27658 - x27659 + x27660 + x27661 + x27663 + x27664 + x27665 + x27666 + x27668 + x27670 - x27672 - x27674 - x27675 + x27676 + x27677 + x27678 + x27679 + x27680 + x27681 + x27682 + x27684 + x27685 + x27687 - x27688 + x27689*x8436 - x27690 - x27691 - x27692 + x27693 - x27694 - x27695 - x27696 - x27698 - x27700 + x27718 + x27820 - x27857*x8412 - x27857*x8413 + x27868*x8358 - x27872*x5928 - x27874*x5928 + 16*x27911 - x27916*x5643 - x27924*x3655 - x27927*x8175 + x27935*x5442 - x27946*x5152 + x27946*x5157 - x27946 - x27947*x8400 + x27947*x8403 - x27948*x3660 + x27949*x5152 - x27949*x5157 + x27949 - x27950*x5152 + x27950 + x27951*x5152 - x27951 - x27952*x5643 - x27955*x5152 - x27955*x5157 - x27956*x3660 + x27957*x8301 - x27957*x8410 - x27958*x5152 - x27958*x5157 - x27959*x3661 - x27959*x8111 - x27960*x5122 - x27960*x8019 - x27961*x5122 - x27962*x5152 + x27962*x5157 - x27962 + x27963*x3661 + x27963*x8111 + x27964*x5122 + x27964*x8019 + x27965*x5122 + x27967*x5643 + x27969*x5928 - 32*x27970 + x27971*x5152 - x27971 + x27972*x5152 - x27972 - x27976*x3655 - x27977*x3660 - x27978*x3660 + x27982*x865 + x27982*x876 + x27983*x5065 + 8*x27984 + x27985*x5336 - x27986*x5152 + x27986 - x27987*x5152 + x27987 + 32*x27988 + 32*x27989 - x27992*x5152 - x27992*x5157 + x28001) + x63*(-q10_b*x24710 - q10_b*x24723 + q10_b*x28038 - q10_b*x28051 - q10_b*x28056 + q10_b*x28057 - q10_b_dot*x25082 + q10_b_dot*x25085 - q10_i*x25056 - q10_i_dot*x25084 + q10_i_dot*x25086 - q10_i_dot*x25095 + q10_i_dot*x25097 + q10_i_dot*x25960 - q9_b*x28038 + q9_b*x28051 + q9_b*x28056 - q9_b*x28057 + x11359*x16829*x3670 - x11583*x28022 - x11583*x28023 + x16535*x16996 + x16816*x25506 + x16880*x25053 - x16880*x25064 + x16880*x25075 + x16886*x25053 - x16886*x25064 + x16886*x25075 + x16971*x24708 - x16971*x24726 + x16981*x19 + x16982*x19 - x16983*x19 + x16984*x19 + x16985*x19 + x16987*x19 + x16988*x19 - x16989*x19 - x16990*x19 - x16991*x19 - x16992*x19 - x16993*x19 - x16994*x19 - x16995*x19 - x16996*x18162 + x22007 - x22114*x5152 + x22114*x5157 + x22115 + x22116 - x22117 + x22118 + x22119 + x22120 + x22121 - x22122 - x22123 - x22124 - x22125 - x22126 - x22128 - x22129 + x22133 - x24330 + x24331 + x24337 + x24427 + x24429 + x24430 - x24431 - x24432 + x24433 + x24434 + x24436 + x24437 - x24438 - x24439 - x24440 - x24441 - x24442 - x24443 - x24444 + x24448 + x24474*x8429 - x24476*x8429 - x24495*x28044 + x24495*x28046 - x24495*x8477 - x24495*x8478 + x24495*x8483 + x24495*x8484 + x24495*x8485 + x24498*x28044 + x24498*x28046 - x24498*x8477 - x24498*x8478 + x24498*x8483 + x24498*x8484 + x24498*x8485 - x24504*x8479 - x24504*x8480 - x24507*x28041 + x24507*x28043 + x24510*x28041 - x24510*x28043 - x24517*x28052 - x24517*x28053 + x24517*x28054 + x24528*x28052 + x24528*x28053 - x24528*x28054 + x24550*x28047 + x24562*x28047 + x24569*x27705 + x24569*x27943 + x24682*x8299 + x24682*x8355 + x24682*x8356 - x24682*x8406 + x24690*x8299 + x24690*x8301 + x24690*x8355 + x24690*x8356 + x24690*x8358 - x24690*x8406 - x24695*x28045 + x24702*x3647 + x24705*x28045 - x24707*x8331 + x24707*x8448 + x24712*x8331 - x24712*x8448 + x24714*x27981 + x24714*x28024 - x24720*x8331 + x24720*x8448 + x24725*x27973 - x24725*x8329 - x24725*x8330 - x24725*x8441 - x24727*x27893 + x24727*x27994 - x24728*x27892 + x24728*x27993 + x24732*x8492 + x24736*x3605 - x24738*x8492 - x24743*x3605 + x24752*x5117 + x24939*x27886 + x24951*x8169 - x24956*x8328 + x24956*x8437 + x24961*x8169 - x24967*x8174 + x24973*x8174 - x24979*x8174 + x25029*x8131 + x25029*x8134 - x25029*x8407 - x25029*x8409 - x25034*x8171 + x25048*x8171 + x25049*x8131 + x25049*x8134 - x25049*x8407 - x25049*x8409 - x25049*x8456 - x25052*x8154 + x25052*x8383 - x25053*x8386 - x25053*x8387 - x25054*x27704 - x25054*x27932 - x25054*x8171 - x25055*x27704 - x25055*x27932 + x25062*x27942 + x25064*x8386 + x25064*x8387 - x25066*x27974 + x25066*x5052 + x25066*x8146 + x25068*x27683 - x25072*x27697 + x25072*x27995 - x25074*x27697 + x25074*x27995 - x25075*x8386 - x25075*x8387 + x25077*x8166 - x25077*x8392 - x25079*x8278 - x25079*x8279 + x25079*x8402 + x25080*x8318 + x25080*x8319 - x25080*x8422 - x25081*x8404 - x25083*x3605 - x25087*x8318 - x25087*x8319 + x25087*x8422 - x25088*x8278 - x25088*x8279 - x25088*x8400 + x25088*x8402 + x25088*x8403 + x25091*x8318 + x25091*x8319 - x25091*x8422 - x25093*x5125 + x25096*x5125 - x25100*x8318 - x25100*x8319 + x25100*x8422 + x25102*x8318 + x25102*x8319 - x25102*x8422 - x25153*x8388 - x25502*x8329 - x25502*x8330 - x25502*x8442 + x25504*x8329 + x25504*x8330 + x25504*x8442 + x25506*x3663 + x25506*x5109 + x25506*x8491 - x25506*x8493 + x25507*x8299 + x25507*x8355 + x25507*x8356 - x25507*x8406 + x25827*x8131 - x25827*x8407 - x25827*x8409 + x25836*x8169 + x27591*x3632 + x27591*x3642 - x27592*x3632 - x27592*x3642 + x27669*x327 - x27673*x327 + x27686*x5652 + x27778 + x27779 + x27780 - x27781 - x27782 - x27783 - x27787*x27870 + x27794 + x27796 + x27797 - x27798 - x27799 - x27800 + x27809 + x27815 + x27819 + x27825 + 12*x27857*x8301 - x27857*x8479 - x27857*x8480 + x27866*x5547 - x27872*x5440 - x27874*x5440 - x27876*x3655 + 6*x27900 + 6*x27901 - 6*x27902 - 6*x27903 - x27916*x7357 - x27927*x8498 + 24*x27935*x362 - x27937*x5307 - x27948*x3669 + x27948*x8211 - x27952*x7357 - x27956*x3669 + x27956*x8211 - x27959*x3632 - x27959*x3642 - x27960*x8482 - x27961*x8482 + x27963*x3632 + x27963*x3642 + x27964*x8482 + x27965*x8482 + x27967*x7357 + x27969*x5440 - 72*x27970 - x27976*x3667 - x27977*x3669 - x27978*x3669 + x27983*x5039 + 12*x27984 + x27985*x5322 + 72*x27988 + 72*x27989 + x28000 - 32*x28009 + 12*x28013 + x28017*x5440 + x28018*x5440 - x28031*x5312 - x28032*x5152 + x28032*x5157 - x28032 - x28033*x8400 + x28033*x8403 + x28034*x5157 - x28034 + x28035*x5152 - x28035*x5157 + x28035 - x28036*x5152 + x28036 + x28037*x5152 - x28037 - x28039*x5152 - x28039*x5157 - x28040*x5152 + x28040*x5157 - x28040 + x28042*x5157 - x28042 + x28048*x5152 - x28048*x5157 + x28048 + x28050*x5152 - x28050 - x28055*x5152 + x28055 - x3670*x6*x8360) + x70*(q9_b_dot*x26926 - q9_i_dot*x27849 + x16535*x24486 - x16792*x19 - x16793*x19 + x19352*x5275 + x21875*x26913 - x21938 + x22014*x5152 - x22014*x5157 - x22015 + x22016 - x24224 - x24277 - x24299 - x24342 + x24343 - x24468*x27846 + x24469*x27846 + x24472*x27597 - x24474*x27837 + x24476*x27837 - x24481*x27839 + x24484*x27839 + x24494*x27597 + x24495*x5098 - x24498*x5098 - x24732*x8270 + x24738*x8270 + x24784*x8166 + x24797*x8133 + x24797*x8261 - x24806*x3591 + x24811*x8133 + x24811*x8261 - x24816*x8166 - x24817*x8158 - x24817*x8160 + x24818*x8133 + x24818*x8261 + x24819*x8158 + x24819*x8160 + x24820*x5052 + x24820*x8146 + x24821*x3538 + x24821*x3588 - x24830*x27848 - x24835*x8160 - x25296*x27848 + x26222*x8265 - x26239*x8265 - x26925*x3612 + x26937 - x27527 - x27528 - x27529 + x27535 + x27536 + x27537 + x27667 + x27669 - x27671 - x27673 - x27835 - x27836 - x27838*x5152 + x27838*x5157 - x27838 + x27840*x5152 + x27840*x5157 + x27841*x5152 + x27841*x5157 + x27842 + x27843 - x27844 - x27845 - x27847*x5152 + x27847 + x27850*x866 + x27851*x8069)) + x69*(L*(q8_b*x0*x27509 + q8_i*x27508 + x16238*x27250 - x16498*x19 - x16609*x24528 + x21855 - x21856 - x24210 - x24211 + x24212 - x24468*x27507 + x24469*x27507 + x24495*x27505 + x24495*x7930 - x24498*x27505 + x24498*x7930 + x24581*x7855 + x24586*x7855 + x24603*x27392 - x24764*x7861 + x24768*x7861 - x24776*x27388 + x24781*x7861 + x24784*x7858 - x24787*x7861 - x27187*x327 - x27188*x327 - x27189*x327 + x27195*x327 + x27196*x327 + x27197*x327 - 32*x27200 + x27209*x5022 + 32*x27214 + 64*x27225 - 4*x27390 - x27502*x5152 + x27502*x5157 - x27502 - 2*x27503 - x27504*x5152 + x27504 + x27512) - x106*(-q9_b_dot*x27247 - q9_i_dot*x24832*x7687 - x129*x27550*x820 + x16238*x27596 + x16238*x7792 - x16238*x8008 + x16555*x19 - x16556*x19 - x16557*x19 + x16559*x19 + x16561*x19 + x16562*x19 + x16563*x19 - x16564*x19 - x16565*x19 - x16571*x19 - x16572*x19 - x16609*x24507 + x16609*x24510 + x16610*x25246 + x16623*x25246 - x19266*x7978 + x21830*x27222 + x21881 - x21882 - x21883 - x21884 - x21885 + x21886 + x21887 + x21889 + x21891 - x21892 - x21893 + x21911 + x24234 + x24235 + x24236 - x24238 - x24239 - x24240 - x24241 - x24242 + x24243 + x24244 + x24246 + x24247 - x24248 - x24249 + x24258 - x24481*x27578 - x24495*x27584 - x24495*x27588 + x24495*x27593 + x24495*x27594 - x24495*x8021 + x24495*x8022 + x24495*x8023 - x24495*x8036 + x24498*x27584 - x24498*x27588 + x24498*x27593 + x24498*x27594 - x24498*x8021 + x24498*x8022 + x24498*x8023 - x24498*x8036 - x24504*x27578 - x24507*x27590 - x24507*x8015 - x24507*x8016 + x24510*x27590 + x24510*x8015 + x24510*x8016 - x24517*x27602 - x24517*x27604 + x24528*x27602 + x24528*x27604 + x24581*x7808 + x24581*x7810 + x24581*x7958 + x24581*x7959 - x24585*x8077 + x24586*x7808 + x24586*x7810 + x24586*x7958 + x24586*x7959 - x24594*x27611 - x24595*x27611 + x24598*x8077 - x24621*x7855 - x24626*x7855 + x24672*x7861 - x24695*x27586 + x24695*x27587 + x24705*x27586 - x24705*x27587 - x24764*x8003 - x24764*x8004 - x24764*x8080 + x24768*x8003 + x24768*x8004 + x24768*x8080 + x24781*x8003 + x24781*x8004 - x24787*x8003 - x24787*x8004 - x24788*x27354 + x24790*x8077 - x24791*x8077 + x24795*x8017 - x24797*x7980 - x24797*x7981 + x24797*x8044 + x24797*x8045 + x24802*x27573 + x24803*x8017 + x24804*x8017 - x24809*x8017 - x24811*x7980 - x24811*x7981 + x24811*x8044 + x24811*x8045 + x24817*x8015 + x24817*x8016 - x24818*x7980 - x24818*x7981 + x24818*x8044 + x24818*x8045 - x24819*x8015 - x24819*x8016 - x24820*x8006 + x24820*x8119 - x24821*x8007 + x24821*x8120 + x24821*x8121 - x24822*x8017 + x24823*x27572 + x24832*x7911*x866 + x24856*x7861 - x24863*x7861 - x24989*x7842 + x24993*x27388 - x24994*x7842 - x24995*x7842 - x24996*x7834 - x24996*x7836 + x24997*x7842 + x25000*x7834 + x25000*x7836 + x25003*x4964 - x25007*x27352 - x25008*x7834 - x25008*x7836 + x25009*x7842 - x25107*x27585 + x25176*x7808 - x25185*x8035 - x25193*x8035 - x25197*x8003 - x25197*x8004 - x25202*x8040 - x25202*x8041 + x25202*x8047 + x25202*x8048 - x25203*x8040 - x25203*x8041 + x25203*x8047 + x25203*x8048 + x25212*x8087 - x25215*x27561 - x25217*x8087 - x25227*x5015 - x25228*x8252 - x25228*x8253 + x25231*x5028 + x25232*x8252 + x25232*x8253 + x25235*x8087 - x25240*x8087 + x25243*x7985 + x25247*x27613 + x25248*x27612 + x25542*x27585 + x25573*x7828 - x25605*x8035 + x27187*x8032 + x27188*x8032 + x27189*x8032 - x27195*x8032 - x27196*x8032 - x27197*x8032 + 26*x27200 - x27209*x4977 + x27209*x7791 + x27210*x27597 - 26*x27214 - x27224*x27599 - 52*x27225 - x27232*x27610 - x27265*x8000 + x27271 - x27304*x859 + x27326*x321 - x27330*x321 + 8*x27390 - x27391*x5332 - x27393*x5336 - x27447*x5336 + 4*x27503 - x27527*x8032 - x27528*x8032 - x27529*x8032 + x27535*x8032 + x27536*x8032 + x27537*x8032 - 26*x27540 + x27548*x3506 + x27550*x5022 + x27552*x5680 + 26*x27556 + x27567*x5336 + x27568*x27599 + 52*x27569 + x27575*x27610 + x27576*x5152 - x27576*x5157 + x27576 + x27577*x5152 - x27577 - x27579*x5152 + x27579*x5157 - x27579 + x27580 + x27581 - x27582 - x27583 - 4*x27589 - x27591*x3518 + x27592*x3518 + x27595*x7911 - x27598*x5152 + x27598 + x27600*x5152 - x27600 - 8*x27601 - 6*x27603 - x27605*x8034 + x27606*x5152 - x27606 - x27607*x5152 + x27607 + x27608*x8034 - x27609*x5152 + x27609 + x27616 + x27624) + x123*(-q8_i*x24750*x27557 - x11583*x27560 - x16238*x8118 - x16516*x19 - x16517*x19 + x16523*x19 + x16524*x19 + x21825 - x21830*x27566 - x21863*x5152 + x21863*x5157 - x21865*x5152 + x21865*x5157 - x21867 - x21868 + x21870 + x21871 + x21878 + x24180 + x24215 + x24217 + x24219 - x24221 - x24223 - x24225 + x24227 + x24228 + x24233 + x24474*x27530 + x24474*x27531 - x24476*x27530 - x24476*x27531 - x24495*x27545 - x24495*x27546 + x24495*x7960 + x24495*x7961 - x24495*x7970 - x24498*x27545 - x24498*x27546 + x24498*x7960 + x24498*x7961 + x24498*x7970 - x24507*x27547 + x24510*x27547 - x24517*x27564 + x24528*x27564 + x24533*x27564 - x24550*x27562 - x24562*x27554 - x24562*x27562 - x24581*x7980 - x24581*x7981 + x24584*x8020 - x24586*x7980 - x24586*x7981 + x24682*x7958 + x24682*x7959 + x24690*x7958 + x24690*x7959 - x24695*x27539 + x24695*x27541 + x24699*x8003 + x24699*x8004 - x24700*x8003 - x24700*x8004 + x24705*x27539 - x24705*x27541 - x24725*x8003 - x24725*x8004 + 96*x24750*x27568 + x24764*x8016 - x24768*x8016 + x24788*x27573 + x24792 - x24956*x7998 + x24989*x8017 + x24994*x8017 + x24996*x7985 - x24997*x8017 - x25000*x7985 - x25003*x5015 + x25007*x27572 + x25008*x7985 - x25009*x8017 + x25011*x27532 + x25011*x8010 - x25012*x27532 - x25012*x8010 + x25014*x27542 + x25014*x27543 - x25015*x27542 - x25015*x27543 - x25069*x27571 - x25107*x27538 + x25107*x7965 - x25176*x7980 - x25502*x8003 - x25502*x8004 + x25504*x8003 + x25504*x8004 + x25542*x27538 - x25542*x7965 - x25573*x8007 - x26222*x7967 + x26239*x7967 + x26558*x3395 + x27187*x6709 + x27188*x6709 + x27189*x6709 - x27195*x6709 - x27196*x6709 - x27197*x6709 + 96*x27200 - 60*x27204 - x27209*x27565 + x27209*x5039 - 96*x27214 - 120*x27216 - 60*x27217 - 192*x27225 - 120*x27228 - x27232*x27570 + x27384 + x27430 + x27431 - x27432 + x27433 + x27434 + x27435 - x27436 - x27437 - x27438 - x27440 - x27441 - x27442 + x27443 + x27444 + x27445 + x27446 - x27448 - x27449 - x27450 - x27451 - x27452 + x27453 + x27498 - x27527*x6709 - x27528*x6709 - x27529*x6709 - x27533*x5307 + x27534*x5157 - x27534 + x27535*x6709 + x27536*x6709 + x27537*x6709 - 96*x27540 - 32*x27544 + x27548*x3416 + x27549*x5312 + x27550*x4951 + x27552*x5322 + x27553*x5322 + 24*x27554 + 32*x27555 + 96*x27556 - 64*x27559 + x27563*x5152 - x27563 + x27567*x5572 + 192*x27569 + x27570*x27575) - x123*(-q8_b*x27724 - q9_b*x27401 + q9_b_dot*x27397 + q9_b_dot*x27408 - x11515*x27638 - x154*x27667 - x154*x27669 + x154*x27671 + x154*x27673 + x16238*x16723 - x16535*x16723 + x16610*x24918 - x16610*x24921 + x16610*x24932 + x16623*x24918 - x16623*x24921 + x16623*x24932 + x16705*x19 + x16706*x19 + x16707*x19 + x16708*x19 + x16710*x19 + x16711*x19 - x16713*x19 - x16715*x19 - x16716*x19 - x16717*x19 - x16719*x19 - x16720*x19 + x16735*x24507 - x16735*x24510 + x21735*x27566 + x21872 + x21944*x27423 + x21958 + x21960 + x21962 + x21963 + x21965 + x21966 - x21967 - x21968 - x21969 - x21970 - x21972 - x21974 + x21979 + x22028 + x22094 + x24226*x24519 + x24229 + x24294 + x24295 + x24296 + x24297 + x24298 + x24300 - x24301 - x24302 - x24304 - x24306 - x24307 - x24308 + x24311 + x24356 + x24409 - x24495*x27725 - x24495*x27726 - x24495*x27727 - x24495*x27728 + x24495*x27731 + x24495*x27732 + x24495*x27733 + x24495*x27734 + x24495*x8193 + x24495*x8194 - x24498*x27725 - x24498*x27726 - x24498*x27727 - x24498*x27728 + x24498*x27731 + x24498*x27732 + x24498*x27733 + x24498*x27734 + x24498*x8193 + x24498*x8194 + x24503*x7980 + x24503*x7981 - x24503*x8131 - x24503*x8134 + x24505*x7980 + x24505*x7981 - x24505*x8131 - x24505*x8134 - x24507*x27729 + x24510*x27729 - x24512*x8017 + x24512*x8166 + x24516*x8017 - x24516*x8166 + x24517*x27741 + x24517*x27742 + x24519*x5015 - x24519*x5052 - x24519*x8146 - x24523*x3538 - x24527*x8017 + x24527*x8166 - x24528*x27741 - x24528*x27742 - x24529*x8014 + x24529*x8154 + x24531*x8017 - x24531*x8166 - x24532*x8015 - x24532*x8016 + x24532*x8386 + x24532*x8387 - x24535*x27572 + x24535*x27697 - x24550*x27719 - x24550*x27720 - x24562*x27719 - x24562*x27720 + x24909*x7808 + x24909*x7810 - x24909*x8035 - x24909*x8106 - x24910*x7842 + x24910*x8087 + x24913*x7808 + x24913*x7810 - x24913*x8035 - x24913*x8106 - x24916*x7842 + x24916*x8087 - x24917*x7830 + x24917*x8074 - x24918*x8079 - x24918*x8080 + x24919*x7842 - x24919*x8087 + x24921*x8079 + x24921*x8080 - x24923*x27639 + x24923*x4964 - x24923*x5032 + x24923*x7822 - x24930*x27354 + x24930*x27613 - x24931*x27352 + x24931*x27612 - x24932*x8079 - x24932*x8080 + x24933*x7842 - x24933*x8087 - x24951*x7958 - x24951*x7959 + x24953*x8003 + x24953*x8004 - x24958*x8003 - x24958*x8004 - x24961*x7958 - x24961*x7959 + x24967*x8003 + x24967*x8004 - x24973*x8003 - x24973*x8004 + x24979*x8003 + x24979*x8004 + x25109*x27655 + x25185*x8044 + x25193*x8044 - x25246*x8127 - x25246*x8128 - x25395*x7985 - x25395*x8067 + x25396*x7985 + x25396*x8067 + x25411*x7828 - x25413*x8015 - x25413*x8016 + x25413*x8386 + x25413*x8387 + x25414*x8015 + x25414*x8016 - x25414*x8386 - x25414*x8387 + x25415*x8007 + x25416*x7980 - x25416*x8131 + x25419*x27746 + x25426*x27561 - x25427*x27572 + x25427*x27697 + x25605*x8044 + x25761*x7808 - x25761*x8035 + x27210*x27740 + x27269*x27745 + x27326*x286 - x27330*x286 - x27400*x8240 + x27454 - x27549*x6741 - x27551*x27740 + 3*x27580 + 3*x27581 - 3*x27582 - 3*x27583 - x27591*x3542 + x27592*x3542 + 48*x27601 - 14*x27603 + x27624 - x27629*x6741 - 48*x27636 - x27643*x8203 + x27648*x5248 - x27686*x5248 + x27706 + x27721*x5152 - x27721*x5157 + x27721 + x27722*x5152 - x27722 - x27723*x7911 - x27730*x5152 + x27730*x5157 - x27730 + x27735*x5572 + x27737*x5152 - x27737 + x27739*x5152 - x27739 + x27744*x7687 - x27747*x5152 + x27747 + 14*x27748 - x27749*x5152 + x27749 - x27750*x5152 + x27750 - x27751*x5152 - x27751*x5157 + x27776) + x168*(q8_i_dot*x27644 - q9_b*x27290 + q9_b*x27294 - q9_b*x27305 + q9_i*x27296 + q9_i_dot*x27301 + x16238*x16643 - x16353*x16535 + x16610*x24672 - x16610*x24863 + x16623*x24672 - x16623*x24863 + x16633*x19 + x16634*x19 + x16635*x19 + x16636*x19 - x16638*x19 - x16639*x19 - x16641*x19 - x16642*x19 + x21786 + x21800 + x21912 + x21913 + x21916 + x21917 - x21918 - x21920 - x21921 - x21922 + x21936 + x21953 + x22035 + x22111 + x24145 + x24159 + x24226*x24649 + x24259 + x24260 + x24263 + x24264 - x24265 - x24266 - x24267 - x24268 + x24276 + x24290 + x24359 + x24425 - x24495*x8103 - x24495*x8105 - x24495*x8107 + x24495*x8112 - x24498*x8103 - x24498*x8105 - x24498*x8107 + x24498*x8112 + x24507*x27564 - x24510*x27564 + x24517*x27641 + x24517*x27642 - x24528*x27641 - x24528*x27642 - x24533*x27641 - x24533*x27642 + x24581*x8045 + x24586*x8045 + x24587*x27633 + x24587*x27634 + x24589*x27633 + x24589*x27634 + x24600*x5028 + x24603*x27646 + x24621*x7980 + x24621*x7981 - x24621*x8035 - x24621*x8106 + x24626*x7980 + x24626*x7981 - x24626*x8106 - x24641*x8017 + x24641*x8087 + x24645*x8017 - x24645*x8087 - x24649*x27639 - x24662*x8017 + x24662*x8087 - x24667*x8014 + x24667*x8074 + x24670*x8017 - x24670*x8087 - x24672*x8015 - x24672*x8016 - x24677*x27573 + x24677*x27613 - x24678*x27572 + x24678*x27612 - x24856*x8015 - x24856*x8016 + x24863*x8015 + x24863*x8016 - x24882*x8252 - x24882*x8253 + x24883*x8252 + x24883*x8253 - x24896*x7958 - x24896*x7959 + x24897*x8003 + x24897*x8004 - x24898*x8003 - x24898*x8004 - x24899*x7958 - x24899*x7959 + x24902*x8003 + x24902*x8004 - x24905*x8003 - x24905*x8004 + x24907*x8003 + x24907*x8004 + x24946*x27655 + x25271*x7985 - x25271*x8083 - x25272*x7985 + x25272*x8083 + x25285*x8007 + x25292*x7980 - x27209*x27628 - x27282*x27550 + x27302*x849 - x27304*x5065 + x27313 + x27314 - x27315 - x27316 + x27317 + x27318 + x27320 + x27321 + x27322 + x27323 + x27325 + x27327 - x27329 - x27331 - x27332 + x27333 + x27334 + x27335 + x27336 + x27337 + x27338 + x27339 + x27340 + x27341 + x27343 - x27344 - x27345 - x27346 - x27347 + x27348 - x27349 - x27350 - x27351 - x27353 - x27355 + x27383 + x27394 - x27549*x5643 - x27552*x5928 - x27553*x5928 + 16*x27589 - x27591*x3450 + x27592*x3450 + 32*x27601 + x27625*x7805 + x27626*x5152 - x27626*x5157 + x27626 + x27627*x5152 - x27627 - x27629*x5643 - x27630*x5152 - x27630*x5157 - x27631*x5152 + x27631*x5157 - x27631 + x27632*x7805 + x27635*x5152 + x27635*x5157 - 32*x27636 + x27637*x5152 - x27637 - x27638*x5332 - x27640*x5336 - x27643*x7805 + x27645*x7805 + x27647*x4977 + x27648*x5336 - x27650*x5152 + x27650 - x27652*x5152 + x27652 + 32*x27653 - x27654*x5152 - x27654*x5157 + x27708 + x27718) + x63*(q8_b*x27808 - q8_b*x27818 - q9_b*x27808 + q9_b*x27818 - x11433*x27683 - x11583*x27638 - x129*x27667 - x129*x27669 + x129*x27671 + x129*x27673 + x16238*x16763 - x16535*x16763 + x16610*x25053 - x16610*x25064 + x16610*x25075 + x16623*x25053 - x16623*x25064 + x16623*x25075 + x16748*x19 + x16749*x19 + x16750*x19 + x16751*x19 + x16753*x19 + x16754*x19 - x16755*x19 - x16756*x19 - x16757*x19 - x16758*x19 - x16759*x19 - x16760*x19 - x16761*x19 + x16770*x24507 - x16770*x24510 + x21982 + x21983 + x21986 + x21987 + x21988 + x21989 - x21990 - x21991 - x21993 - x21994 - x21996 - x21998 - x21999 + x22009 + x22131 + x24202 + x24312 + x24313 + x24316 + x24317 + x24318 + x24319 - x24320 - x24321 - x24322 - x24323 - x24324 - x24325 - x24326 + x24330 - x24331 + x24338 + x24447 - x24495*x27790 + x24495*x27801 + x24495*x27802 + x24495*x27803 - x24495*x8219 - x24495*x8220 - x24495*x8222 - x24495*x8223 - x24495*x8225 + x24495*x8233 + x24495*x8235 + x24495*x8236 - x24498*x27790 + x24498*x27801 + x24498*x27802 + x24498*x27803 - x24498*x8219 - x24498*x8220 - x24498*x8222 - x24498*x8223 - x24498*x8225 + x24498*x8233 + x24498*x8235 + x24498*x8236 - x24507*x27789 + x24507*x27792 + x24510*x27789 - x24510*x27792 + x24517*x27810 - x24517*x27811 + x24517*x27813 + x24517*x27814 - x24528*x27810 + x24528*x27811 - x24528*x27813 - x24528*x27814 + x24550*x27804 + x24562*x27804 + x24569*x27377 + x24569*x27623 + x24573*x27380 + x24682*x7980 + x24682*x7981 + x24682*x8044 + x24682*x8045 - x24682*x8131 - x24683*x8133 + x24690*x7980 + x24690*x7981 + x24690*x8044 + x24690*x8045 - x24690*x8131 - x24691*x8133 + x24699*x8127 + x24699*x8128 - x24700*x8127 - x24700*x8128 - x24707*x8017 + x24707*x8166 + x24708*x27649 + x24712*x8017 - x24712*x8166 + x24714*x27746 - x24715*x5052 - x24715*x8146 + x24718*x27646 - x24720*x8017 + x24720*x8166 - x24721*x8017 + x24721*x8166 + x24722*x8017 - x24722*x8166 - x24725*x8016 - x24725*x8127 - x24725*x8128 + x24725*x8387 - x24726*x27649 - x24727*x27573 + x24727*x27699 - x24728*x27572 + x24728*x27697 + x24951*x7845 - x24956*x8081 + x24961*x7845 - x24967*x7850 + x24973*x7850 - x24979*x7850 + x25029*x7808 + x25029*x7810 - x25029*x8035 - x25029*x8106 - x25034*x7847 + x25048*x7847 + x25049*x7808 + x25049*x7810 - x25049*x8035 - x25049*x8106 - x25052*x7830 + x25052*x8074 - x25053*x8079 - x25053*x8080 - x25054*x27372 - x25054*x27611 - x25054*x7847 - x25055*x27372 - x25055*x27611 + x25062*x27622 + x25062*x27655 + x25064*x8079 + x25064*x8080 - x25066*x27639 + x25066*x4964 - x25066*x5032 + x25066*x7822 - x25072*x27352 + x25072*x27612 - x25074*x27352 + x25074*x27612 - x25075*x8079 - x25075*x8080 + x25077*x7842 - x25077*x8087 - x25079*x7958 - x25079*x7959 + x25080*x8003 + x25080*x8004 - x25087*x8003 - x25087*x8004 - x25088*x7958 - x25088*x7959 + x25091*x8003 + x25091*x8004 - x25100*x8003 - x25100*x8004 + x25102*x8003 + x25102*x8004 - x25153*x8081 - x25482*x7985 - x25482*x8067 + x25483*x7985 + x25483*x8067 + x25498*x7828 - x25502*x8016 + x25502*x8387 + x25504*x8016 - x25504*x8387 + x25506*x8007 + x25507*x7980 + x25507*x8044 - x25507*x8131 - x25516*x7985 + x25516*x8160 + x25827*x7808 - x25827*x8035 - x27209*x27787 + x27259*x27812 + x27326*x327 - x27330*x327 + x27342*x5652 + x27456 + x27457 + x27458 - x27459 - x27460 - x27461 - x27464*x27550 + x27471 + x27473 + x27474 - x27475 - x27476 - x27477 + x27488 + x27493 + x27494*x3629 + x27497 + x27501 - x27549*x7357 - x27552*x5440 - x27553*x5440 - x27591*x3583 + x27592*x3583 + 72*x27601 - 32*x27603 - x27605*x27812 - x27617*x5307 - x27629*x7357 - 72*x27636 - x27640*x5652 + x27647*x4951 + 72*x27653 + x27735*x5440 + x27745*x8234 + 32*x27748 + x27777*x5157 - x27777 - x27778 - x27779 - x27780 + x27781 + x27782 + x27783 + x27785*x5152 - x27785*x5157 + x27785 + x27786*x5152 - x27786 - x27788*x5152 + x27788*x5157 - x27788 + x27791*x5157 - x27791 - x27794 - x27796 - x27797 + x27798 + x27799 + x27800 + x27805*x5152 - x27805*x5157 + x27805 + x27807*x5152 - x27807 - x27809 - x27815 + x27816*x7687 + x27816*x7933 - x27817*x5152 + x27817 - x27819 + x27820 + x27825) + x70*(q8_b*x24826 + q8_b*x24836 + q8_b_dot*x26197 - q8_b_dt*x24492 + x16238*x24486 - x16508*x19 - x16509*x19 + x16764*x24501 + x19278*x5275 + x21756*x26195 + x21859*x5152 - x21859*x5157 - x21860 - x21861 + x21862 - x21985*x24480 - x24094 - x24142 - x24167 - x24213 + x24214 - x24468*x27524 + x24469*x27524 - x24474*x27295 + x24476*x27295 - x24481*x27516 + x24484*x27516 + x24495*x7742 + x24495*x7942 - x24498*x7742 - x24498*x7942 - x24732*x7948 + x24738*x7948 + x24784*x7842 + x24797*x7936 + x24797*x7937 + x24811*x7936 + x24811*x7937 - x24816*x7842 - x24817*x7834 - x24817*x7836 + x24818*x7936 + x24818*x7937 + x24819*x7834 + x24819*x7836 + x24820*x4964 + x24820*x7822 + x24821*x3484 + x24821*x3485 - x24830*x27526 - x24835*x7836 - x25296*x27526 + x26247*x837 - x27187 - x27188 - x27189 + x27195 + x27196 + x27197 - x27265*x7911 + x27324 + x27326 - x27328 - x27330 - x27513 - x27514 - x27515*x5152 + x27515*x5157 - x27515 + x27517*x5152 + x27517*x5157 + x27518*x5152 + x27518*x5157 + x27519 + x27520 + x27521 - x27522 - x27523 - x27525*x5152 + x27525)) + x69*(L*(p10_i*x28067 - x12612*x19 + x19789 - x19790 + x22413 - x22415 + x22417 - x24468*x28077 + x24469*x28077 - x24495*x8516 + x24498*x8516 - x24533*x8769 + x24584*x8532 - 400*x24597 - x24695*x28075 + x24705*x28075 + x24769*x28068 - x24776*x28078 + x24784*x8528 + x28058*x5152 - x28058*x5157 - x28058 - x28059*x5152 + x28059*x5157 - x28059 + 4*x28060 - x28061*x8518 - x28062*x8518 - x28063*x8518 - x28064*x28065 - 2*x28066 + x28069*x5152 + x28069*x5157 - x28070*x5152 + x28070 + x28071*x8518 + x28072*x8518 + x28073*x8518 - x28074*x5157 + x28074 - 40*x28076 - 4*x28079 + x28080*x28081 + x28082*x8742 + x28083*x5547 + 40*x28084 - 80*x28085 - x28086*x28087 - 80*x28089) - x106*(p10_b_dot*x28184 - p10_b_dot*x28300 + p9_i*x28067 + x11613*x28226 - x12617*x420*x6 - x12643*x8649 + x12643*x8653 - x12739*x24820 + x12767*x19 - x12768*x19 - x12769*x19 + x12771*x19 + x12773*x19 + x12776*x19 + x12777*x19 - x12780*x19 - x12781*x19 - x12787*x19 - x12788*x19 + x12825*x25246 + x12840*x25246 - x129*x28191*x8793 - x129*x28195*x379 + x12954*x24528 + x158*x28082*x379 - x158*x28107 + x158*x28133 + x158*x28171 - x18802*x8513 + x19843*x5152 - x19843*x5157 + x19845 - x19846 - x19847 - x19848 - x19850 + x19851 + x19852 + x19854 + x19856 - x19857 - x19858 + x19873 + x19942 + x22460 + x22461 + x22462 + x22463 - x22464 - x22465 - x22466 - x22467 - x22468 + x22469 + x22470 + x22472 + x22474 - x22475 - x22476 + x22487 + x22541 - x24474*x8964 + x24476*x8964 - x24481*x28316 + x24484*x28316 - x24495*x28293 + x24495*x8717 + x24495*x8719 - x24495*x8727 + x24495*x8741 - x24498*x28293 - x24498*x8717 - x24498*x8719 - x24498*x8727 + x24498*x8741 - x24507*x28297 - x24507*x8683 - x24507*x8769 + x24507*x8914 + x24510*x28297 + x24510*x8683 + x24510*x8769 - x24510*x8914 + x24517*x28295 - x24517*x28309 - x24517*x28313 - x24528*x28295 + x24528*x28309 + x24528*x28313 - x24533*x28295 - x24557*x28157 + x24581*x8573 + x24581*x8574 - x24585*x8781 - x24594*x28321 - x24595*x28321 + x24598*x8781 - x24629*x28068 - x24629*x28164 + x24695*x28290 - x24695*x28291 - x24705*x28290 + x24705*x28291 + x24769*x28302 + x24775*x28317 - x24788*x28261 + x24790*x8781 - x24791*x8781 + x24795*x8692 + x24796*x8738 - x24797*x8733 + x24797*x8737 - x24797*x8783 + x24803*x8692 - x24809*x8692 + x24811*x8737 - x24811*x8783 + x24817*x8683 + x24817*x8684 - x24817*x8914 + x24818*x8737 - x24818*x8783 - x24819*x8683 - x24819*x8684 + x24819*x8914 - x24820*x3868 + x24820*x8899 + x24820*x8900 + x24820*x8902 + x24821*x8901 + x24834*x421*x8521 - x24835*x8914 + x24985*x8540 - x24989*x8559 - x24994*x8559 - x24996*x8534 - x24996*x8556 + x24997*x8559 + x25000*x8534 + x25000*x8556 - x25007*x28259 - x25008*x8534 - x25008*x8556 - x25011*x28280 + x25012*x28280 + x25071*x28323 + x25073*x28323 + x25202*x8739 + x25202*x8740 + x25203*x8738 + x25203*x8739 + x25203*x8740 + x25212*x8790 - x25215*x28207 - x25217*x8790 + x25235*x8790 - x25240*x8790 + x25243*x8772 + x25247*x28325 + x25248*x28324 + x25545*x28157 - x26222*x8718 + x26239*x8718 + x27891*x28250 - 8*x28060 + x28061*x8720 + x28062*x8720 + x28063*x8720 - x28064*x28136 - x28065*x28285 + x28065*x420 + 4*x28066 - x28071*x8720 - x28072*x8720 - x28073*x8720 + 46*x28076 + 8*x28079 + x28080*x28191 + x28081*x28303 - x28082*x8891 + x28082*x933 - x28083*x5332 - 46*x28084 + 92*x28085 + 92*x28089 + x28091*x321 + x28092*x321 - x28093*x321 - x28094*x321 - x28101*x420 - x28106*x8780 + x28108*x8738 - x28118*x8720 - x28119*x8720 - x28120*x8720 + x28128*x28285 - x28128*x420 + x28136*x28296 - x28138*x28296 + 4*x28142 + x28143*x8780 + x28149*x8720 + x28150*x8720 + x28151*x8720 - 46*x28154 - 24*x28156 - 8*x28162 - x28169*x5336 + x28194*x5547 + x28195*x8742 + 24*x28202 + 46*x28203 - 92*x28204 - 46*x28206 - x28210*x5547 + x28228*x28275 + x28231*x8793 + x28233*x321 + x28239*x5332 + x28241*x8907 + x28245*x6741 + 46*x28246 + 48*x28247 - 92*x28249 - x28253*x4648 + 48*x28266 - x28268*x8726 - x28270*x8726 - x28276*x8726 + x28279*x5152 - x28279*x5157 + x28279 - x28281*x5152 - x28281*x5157 + x28282*x5152 - x28282 - 6*x28283 - x28284*x5152 + x28284*x5157 - x28284 + x28286*x5152 + x28286*x5157 + x28287*x5152 + x28287*x5157 + x28288 - x28289 - 6*x28292 - 4*x28294 - x28298*x5152 - x28298*x5157 - x28299*x5152 - x28299*x5157 + x28301*x5152 + x28301*x5157 + x28304*x5547 - x28305*x5152 + x28305 + 8*x28306 + x28307*x5152 - x28307 - 8*x28308 - x28311*x414 - 6*x28312 - x28314*x5394 + x28315*x5152 - x28315 - x28318*x5152 + x28318 + x28319*x8726 - x28320*x5152 + x28320 - x28322*x8665 + x28327 + x28337) + x123*(-p10_b_dt*x11613*x19883 - p9_b_dot*x28184 - x11151*x28231 + x12643*x8824 - x12643*x8898 - x12658*x19 - x12659*x19 + x12677*x19 + x12678*x19 - x12746*x28136 + x12746*x28138 - x12748*x28065 + x12748*x28128 + x12881*x24517 - x12881*x24528 + x12882*x24517 - x12882*x24528 + x158*x28233 + x1896*x28082 + x19801*x5152 - x19801*x5157 + x19803*x5152 - x19803*x5157 - x19808 - x19809 + x19810 + x19811 + x19815 + x19817 + x19819 + x19821 + x19826 + x19828 + x19829 + x19842 + x19911 + x22425 + x22426 + x22427 - x22429 - x22431 - x22433 + x22434 + x22435 + x22437 + x22441 + x22443 + x22445 + x22448 + x22450 + x22451 + x22459 + x22513 - x24468*x28158 - x24468*x28161 + x24469*x28158 + x24469*x28161 - x24474*x28121 - x24474*x8642 + x24476*x28121 + x24476*x8642 + x24495*x8581 - x24495*x8616 - x24498*x8581 - x24498*x8616 - x24507*x28186 + x24510*x28186 - x24517*x28230 - x24517*x28232 + x24528*x28230 + x24528*x28232 + x24533*x28230 - x24550*x28208 - x24562*x28197 - x24562*x28208 + x24682*x8573 + x24682*x8574 + x24695*x28152 - x24695*x28153 - x24705*x28152 + x24705*x28153 + x24788*x28257 + x24792 - x24890*x3868 - x24985*x8615 + x24989*x8692 + x24994*x8692 - x24997*x8692 + x25007*x28256 + x25008*x8772 - x25011*x8637 - x25011*x8644 + x25012*x8637 + x25012*x8644 - x26222*x8583 + x26222*x8588 + x26222*x8595 + x26239*x8583 - x26239*x8588 - x26239*x8595 + x28061*x8589 + x28062*x8589 + x28063*x8589 + x28064*x28187 - x28067*x421 - x28071*x8589 - x28072*x8589 - x28073*x8589 + 120*x28076 - x28082*x4539 - 120*x28084 + 240*x28085 + x28086*x28243 + 240*x28089 - x28106*x8670 - x28114 + x28116 + x28117 - x28118*x8589 - x28119*x8589 - x28120*x8589 - x28123 - x28125 - x28126 - x28127 - x28129 - x28130*x5307 + x28131*x5157 - x28131 - x28132 - x28134 - x28135 - x28137*x8612 + x28139 + x28140 + x28141 + 12*x28142 + x28143*x8670 + x28144*x5152 + x28144*x5157 + x28146*x5152 + x28146*x5157 + x28147 + x28148 + x28149*x8589 + x28150*x8589 + x28151*x8589 - 120*x28154 - 84*x28156 - 40*x28159 - x28163 - x28165 - x28167 - x28168 - x28170 - x28172 - x28174 - x28176 - x28177 - x28179 - x28180 - x28181 - x28182*x8612 - x28183 - x28185*x5152 - x28185*x5157 + x28188 + x28189 + x28190 + 12*x28192 + x28193*x5322 + x28194*x5312 + x28195*x8621 + x28196 + 24*x28197 + x28198 + x28199 + x28200 + 40*x28201 + 84*x28202 + 120*x28203 - 240*x28204 - 120*x28206 - x28209 - x28210*x5312 - x28211*x5312 - x28212 - x28215 - x28217 - x28218 + x28219*x5152 - x28219 - x28221 - x28222 - x28223 - x28225 - x28227 - x28228*x28229 + x28234 + x28235 + x28237 + x28238 + x28240 + 24*x28242 + 80*x28244 + 84*x28245*x5186 + 120*x28246 + 168*x28247 - 240*x28249 - x28252 - x28253*x4432 + x28254 + x28255 + x28258 + x28260 + x28262 + 80*x28264 + 168*x28266 + x28278) - x123*(x11143*x24532 - x11515*x28314 + x12643*x12868 - x12700*x12868 + x12740*x25415 + x12825*x24918 - x12825*x24921 + x12825*x24932 - x12840*x24912 + x12840*x24918 - x12840*x24921 + x12840*x24932 + x12851*x19 + x12852*x19 + x12853*x19 + x12854*x19 + x12857*x19 + x12858*x19 - x12860*x19 - x12862*x19 - x12863*x19 - x12864*x19 - x12865*x19 - x12866*x19 + x12872*x19823*x70 - x154*x28396 - x154*x28398 + x154*x28400 + x154*x28402 + x1805*x24926 - x19785*x28452 + x19816 - x19817 + x19872 + x19918 + x19919 + x19921 + x19923 + x19924 + x19925 - x19926 - x19927 - x19929 - x19930 - x19931 - x19932 + x19943 + x21038 + x22438 - x22441 + x22458*x24519 + x22484 + x22520 + x22521 + x22522 + x22523 + x22524 + x22526 - x22527 - x22528 - x22530 - x22532 - x22533 - x22535 + x22543 + x23495 - x24495*x28455 - x24495*x28456 - x24495*x28457 - x24495*x28458 + x24495*x28465 + x24495*x28466 + x24495*x28468 + x24495*x28469 + x24495*x8821 + x24495*x8822 - x24498*x28455 - x24498*x28456 - x24498*x28457 - x24498*x28458 + x24498*x28465 + x24498*x28466 + x24498*x28468 + x24498*x28469 + x24498*x8821 + x24498*x8822 + x24503*x8733 + x24503*x8783 - x24503*x8813 - x24503*x8814 + x24505*x8783 - x24505*x8813 - x24505*x8814 + x24507*x28461 + x24507*x28462 - x24510*x28461 - x24510*x28462 - x24512*x8692 + x24512*x8855 + x24516*x8692 - x24516*x8855 - x24517*x28480 + x24517*x28481 + x24517*x28482 - x24519*x3901 - x24519*x8833 - x24527*x8692 + x24527*x8855 + x24528*x28480 - x24528*x28481 - x24528*x28482 - x24529*x8680 + x24529*x8848 - x24531*x8855 + x24532*x28421 - x24532*x8683 - x24532*x8684 - x24535*x28256 + x24535*x28425 - x24550*x28145 - x24550*x28448 + x24557*x28302 - x24562*x28145 - x24562*x28448 - x24910*x8559 + x24910*x8790 - x24916*x8559 + x24916*x8790 - x24917*x8697 + x24917*x8779 + x24919*x8559 - x24919*x8790 + x24922*x28317 - x24923*x28365 + x24923*x8828 - x24930*x28261 + x24930*x28325 - x24931*x28259 + x24931*x28324 - x24933*x8790 - x24951*x8573 - x24951*x8574 + x24967*x8647 - x24973*x8647 + x24979*x8647 + x25109*x28383 + x25185*x8737 + x25193*x8737 - x25246*x8913 - x25246*x8914 - x25395*x8770 - x25395*x8772 + x25396*x8770 + x25396*x8772 + x25413*x28421 - x25413*x8683 - x25413*x8684 - x25414*x28421 + x25414*x8683 + x25414*x8684 - x25415*x8837 - x25427*x28256 + x25427*x28425 - x25428*x8534 - x25428*x8556 - x25429*x28381 - x25429*x28382 - x25545*x28302 + x28065*x8670 + x28081*x28475 + x28081*x28479 + x28091*x286 + x28092*x286 - x28093*x286 - x28094*x286 + x28114 - x28116 - x28117 + x28123 + x28125 + x28126 + x28127 - x28128*x8670 + x28129 + x28132 + x28133*x7622 + x28136*x28459 + x28136*x8658 - x28138*x28459 - x28138*x8658 - x28141 - 24*x28142 + x28143*x28464 - x28147 - x28148 + x28163 + x28165 - x28166*x390 + x28167 + x28168 + x28170 + x28171*x7622 - x28191*x28475 - x28191*x28479 - 24*x28192 - x28194*x6741 - x28196 - x28198 - x28199 - x28200 + x28210*x6741 + x28213*x28485 + 14*x28224 - x28240 - 48*x28242 - x28248*x28478 + 28*x28251 + x28268*x8820 + x28270*x8820 - 14*x28283 - 14*x28292 - x28304*x6741 + 48*x28308 - 14*x28312 - x28319*x8820 + x28337 - 24*x28339 - 14*x28342 + 24*x28361 + x28376*x9078 + 48*x28380 + 20*x28384 + 14*x28449 + x28450*x5152 - x28450*x5157 + x28450 + x28451*x5152 - x28451 - x28453*x385 - 14*x28454 - x28460*x5152 + x28460*x5157 - x28460 + 7*x28463 + 14*x28467 + x28470*x5152 - x28470 + x28472*x5152 - x28472 - x28474*x8534 - x28474*x8556 - x28476*x6723 + x28477*x8514 - x28477*x8582 + x28478*x8511 + x28483*x8587 + x28484*x8899 + x28484*x8902 + 6*x28486 - x28487*x5152 + x28487 + x28488*x8534 + x28488*x8556 - x28489*x5152 + x28489 - x28490*x5152 + x28490 + x28491 + x28516) + x168*(x12643*x28374 + x12740*x25285 + x12825*x24672 + x12825*x24856 - x12825*x24863 + x12840*x24672 + x12924*x19 + x12925*x19 - x12926*x19 + x12927*x19 + x12928*x19 - x12931*x19 - x12932*x19 - x12934*x19 - x12935*x19 - x1921*x28311 + x19823*x28370 + x19827 - x19828 - x19829 + x19875 + x19876 - x19877 + x19881 + x19882 - x19884 - x19885 - x19887 - x19889 + x19916 + x21105 + x22449 - x22450 - x22451 + x22488 + x22489 - x22490 + x22493 + x22494 - x22495 - x22496 - x22498 - x22499 + x22519 + x23550 - x24468*x28347 + x24469*x28347 - x24495*x8889 - x24498*x8889 + x24507*x28230 + x24507*x28232 - x24510*x28230 - x24510*x28232 - x24517*x28350 + x24517*x28366 + x24517*x28367 + x24528*x28350 - x24528*x28366 - x24528*x28367 - x24533*x28366 + x24581*x8737 + x24586*x8737 + x24617*x8528 - x24621*x8723 + x24621*x8733 + x24621*x8783 - x24626*x8723 + x24626*x8783 - x24641*x8692 + x24641*x8790 + x24645*x8692 - x24645*x8790 - x24649*x28365 - x24662*x8692 + x24662*x8790 - x24667*x8528 - x24667*x8680 + x24667*x8779 - x24670*x8790 - x24672*x8683 - x24672*x8684 - x24677*x28257 + x24677*x28325 - x24678*x28256 + x24678*x28324 - x24787*x8914 - x24856*x8683 - x24856*x8684 + x24863*x8683 + x24863*x8684 - x24882*x8775 - x24882*x8986 + x24883*x8775 + x24883*x8986 + x24890*x8899 + x24890*x8902 - x24896*x8573 - x24896*x8574 - x24939*x28381 - x24939*x28382 + x24946*x28383 + x25987*x8751 + 16*x28060 - x28065*x8896 + x28065*x8907 - 16*x28079 + x28081*x28373 + x28083*x5643 + 16*x28122 + x28128*x8896 - x28128*x8907 + x28134 + x28135 + x28136*x28353 + x28136*x8896 - x28138*x28353 - x28138*x8896 - x28139 - x28140 - 16*x28142 + 16*x28162 + x28172 + x28173*x420 + x28174 + x28176 + x28177 + x28179 + x28180 + x28181 + x28183 - x28188 - x28189 - x28190 - 16*x28192 - x28193*x5928 - x28194*x5643 + x28209 + x28210*x5643 + x28211*x5643 + x28212 - x28214*x8582 + x28215 + x28217 + x28218 + x28221 + x28222 + x28223 + x28225 + x28227 - x28234 - x28235 - x28237 - x28238 - x28239*x5643 - 32*x28242 + x28252 - x28254 - x28255 - x28258 - x28260 - x28262 + x28268*x8916 + x28270*x8916 + x28276*x8916 + x28278 + 16*x28294 - x28304*x5643 - 16*x28306 + 32*x28308 - 8*x28312 - x28314*x5332 - x28319*x8916 - x28331*x8582 - x28338*x5152 + x28338*x5157 - x28338 - 16*x28339 - x28340*x5152 - x28340*x5157 - x28341*x5152 - x28341*x5157 - 8*x28342 + x28343*x5152 - x28343*x5157 + x28343 + x28344*x5152 + x28344*x5157 - x28345*x5152 + x28345 + x28346*x5152 - x28346 - 16*x28348 + x28349*x385 - x28349*x390 - x28351*x385 - x28352*x5152 - x28352*x5157 - x28354*x8892 - x28355*x5152 + x28355*x5157 - x28355 + x28356*x8892 + x28357*x5152 + x28357*x5157 + x28358*x5152 + x28358*x5157 + x28359*x5152 + x28359*x5157 + x28360*x5152 + x28360*x5157 + 16*x28361 + x28362*x5152 - x28362 - x28363*x8551 - x28364*x898 + x28369*x8708 + x28371*x8511 + x28372*x8896 + x28375*x898 + x28376*x7943 - x28378*x5152 + x28378 - x28379*x5152 + x28379 + 32*x28380 + 16*x28384 + x28429 + x28447) + x63*(-p10_b_dot*x25082 + p10_b_dot*x25085 + p10_i*x25056 - p10_i_dot*x25084 + p10_i_dot*x25086 - p10_i_dot*x25095 + p10_i_dot*x25097 - p9_b*x28567*x5322 + x0*x28081*x28550 - x11583*x28314 + x12643*x28570 - x12700*x28570 + x12740*x25506 + x12825*x25053 - x12825*x25064 + x12825*x25075 - x12840*x25045 + x12840*x25053 - x12840*x25064 + x12840*x25075 - x129*x28396 - x129*x28398 + x129*x28400 + x129*x28402 + x12983*x19 + x12984*x19 - x12985*x19 + x12986*x19 + x12987*x19 + x12990*x19 + x12991*x19 - x12996*x19 - x12997*x19 - x12998*x19 - x12999*x19 - x13001*x19 - x13002*x19 - x13003*x19 + x13006*x28268 + x13006*x28270 - x13013*x24507 + x13013*x24510 + x13023*x24507 - x13023*x24510 + x158*x28061 + x158*x28062 + x158*x28063 - x158*x28071 - x158*x28072 - x158*x28073 - x1799*x28545 + x1822*x25098 + x1838*x28546 - x1896*x28412 + x19913 + x19945*x5152 - x19945*x5157 + x19949 + x19950 - x19951 + x19955 + x19956 + x19957 + x19958 - x19960 - x19961 - x19962 - x19963 - x19964 - x19965 - x19966 + x19974*x5186*x5540 + x19975 + x21124 + x22516 + x22544 + x22545 + x22546 + x22547 - x22549 + x22551 + x22552 + x22553 + x22555 - x22556 - x22557 - x22558 - x22559 - x22560 - x22561 - x22562 + x22564 - x22565 + x22571 + x23568 - x24468*x28531 - x24468*x28540 + x24469*x28531 + x24469*x28540 - x24495*x28536 - x24495*x28538 + x24495*x28551 + x24495*x28552 + x24495*x28553 + x24495*x28554 + x24495*x28557 + x24495*x8672 - x24495*x8949 - x24495*x8953 + x24495*x8966 - x24498*x28536 - x24498*x28538 + x24498*x28551 + x24498*x28552 + x24498*x28553 + x24498*x28554 + x24498*x28557 - x24498*x8672 - x24498*x8949 - x24498*x8953 + x24498*x8966 - x24517*x28533 + x24517*x28566 - x24517*x28568 - x24517*x28569 + x24517*x28571 + x24517*x28572 + x24528*x28533 - x24528*x28566 + x24528*x28568 + x24528*x28569 - x24528*x28571 - x24528*x28572 + x24550*x28555 + x24562*x28269*x8587 + x24562*x28555 + x24682*x8737 - x24682*x8814 + x24683*x8615 - x24683*x8952 + x24683*x8963 + x24690*x8737 - x24690*x8814 - x24691*x8952 + x24691*x8963 - x24707*x8692 + x24707*x8855 + x24712*x8692 - x24712*x8855 - x24715*x8833 - x24720*x8692 + x24720*x8855 + x24721*x8855 - x24722*x8855 + x24725*x28421 - x24725*x8683 - x24725*x8913 - x24725*x8914 - x24727*x28257 + x24727*x28427 - x24728*x28256 + x24728*x28425 + x24752*x8793 - x24956*x8784 - x24967*x8707 + x24973*x8707 - x24979*x8707 - x25034*x8704 + x25048*x8704 - x25052*x8697 + x25052*x8779 - x25054*x28274 - x25054*x28321 - x25054*x8704 - x25055*x28274 - x25055*x28321 + x25060*x8705 + x25061*x8802 + x25062*x28336 + x25062*x28383 - x25066*x28365 + x25066*x8828 + x25068*x28226 - x25072*x28259 + x25072*x28324 + x25074*x28324 - x25077*x8790 - x25079*x8573 - x25079*x8574 - x25081*x8528 - x25093*x8587 + x25096*x8587 - x25153*x8784 - x25482*x8770 - x25482*x8772 + x25483*x8770 + x25483*x8772 - x25502*x8683 + x25504*x8683 - x25506*x8837 - x25512*x28261 - x25513*x8534 - x25513*x8556 - x25516*x8772 + x25516*x8852 + x27506*x28133 + x27506*x28171 + 36*x28060 - 36*x28079 + x28083*x7357 - 8*x28084 + 16*x28085 + x28091*x327 + x28092*x327 - x28093*x327 - x28094*x327 - x28106*x28550 + 36*x28122 + x28136*x28537 + x28136*x8968 - x28138*x28537 - x28138*x8968 - 36*x28142 + x28143*x28550 + 36*x28162 + x28169*x5440 - 36*x28192 - x28193*x5440 - x28194*x7357 + x28210*x7357 + x28211*x7357 + x28220*x5652 + 32*x28224 - x28239*x7357 - 72*x28242 + 64*x28251 + 8*x28266 + x28275*x28575 + x28275*x5572*x8587 + 32*x28276*x8514 - x28276*x8984 + x28280*x28576 - 32*x28283 + 6*x28288 - 6*x28289 - 32*x28292 + 36*x28294 - x28304*x7357 - 36*x28306 + 72*x28308 - 32*x28312 + 32*x28317*x5184 - x28328*x5307 + 24*x28330 - 36*x28339 - 32*x28342 - 36*x28348 + x28354*x8820 + x28354*x8964 - x28356*x8820 - x28356*x8964 + 36*x28361 + x28369*x8964 + x28372*x8658 + 72*x28380 + 24*x28384 + x28446 + 32*x28449 - 32*x28454 + 16*x28463 + 32*x28467 - x28476*x28563 + 12*x28486 - x28517*x5152 + x28517*x5157 - x28517 - x28518*x5152 - x28518*x5157 - x28519*x5152 - x28519*x5157 + x28520*x5157 - x28520 - x28521 - x28522 - x28523 + x28524 + x28525 + x28526 + x28527*x5152 - x28527*x5157 + x28527 + x28528*x5152 + x28528*x5157 - x28529*x5152 + x28529 + x28530*x5152 - x28530 + x28532*x385 - x28532*x390 - x28534*x385 - x28535*x5152 + x28535*x5157 - x28535 + x28539*x5157 - x28539 - x28541 - x28543 - x28544 + x28547 + x28548 + x28549 - x28550*x28561 + x28556*x5152 - x28556*x5157 + x28556 + x28558*x5152 - x28558 - x28560*x8534 - x28560*x8556 - x28562*x8551 + x28564*x8514 - x28564*x8582 - x28565 + 12*x28567*x8511 - x28573 + x28574*x3868 + x28574*x8899 + x28574*x8902 + x28577*x8557 + x28578*x8534 + x28578*x8556 - x28579*x5152 + x28579 - x28580*x8514 + x28580*x8582 - x28581*x8557 + x28582*x8511 - x28583 + x28589) + x70*(p10_b_dot*x24564*x28080 - p10_b_dot*x26527 + p10_b_dot*x28101 - x12630*x19 - x12631*x19 + x12643*x24486 + x12643*x8760 - x1795*x24807 + x1799*x28111 + x1805*x24821 + x19479*x5275 - x19794*x5152 + x19794*x5157 - x19795 - x19796 + x19799 - x22418 - x22419 - x22420 + x22421 + x22424 + x24468*x28104 - x24469*x28104 + x24472*x28080 + x24474*x28096 - x24476*x28096 - x24481*x28099 + x24484*x28099 + x24494*x28080 - x24495*x8552 + x24498*x8552 - 40*x24501*x28113 + 40*x24669 + x24732*x8563 - x24738*x8563 + x24796*x8538 + x24797*x8540 + x24810*x28100 - x24817*x8534 - x24817*x8556 + x24818*x8540 + x24819*x8534 + x24819*x8556 + x24820*x3851 + x24820*x8828 - x24830*x28112 - x24835*x8534 - x24835*x8556 - x25296*x28112 - x25897*x898 - 20*x26205 + x28061 + x28062 + x28063 - x28071 - x28072 - x28073 - x28090*x5152 + x28090*x5157 + x28090 + x28091 + x28092 - x28093 - x28094 + x28095*x5157 - x28095 - x28097*x5152 + x28097*x5157 - x28097 + x28098*x5152 - x28098*x5157 + x28102*x5152 + x28102*x5157 + x28103*x5152 + x28103*x5157 - 20*x28105*x379 - 2*x28107 + x28108*x8538 - x28110*x5152 + x28110));
T_others[3] = x69*(x106*(x30850 + x30854) - x123*(x30855 + x30857 - x30859 - x30860 + x30861 - x30863 + x30865 + x30866 - x30867 - x5181) + x30844*x70) + x69*(x106*(x30873 + x30881) - x123*(x30889 + x30899) + x30902) + x69*(x106*(x30854 + x31269 + x31278) - x123*(-x31279 - x31281 + x31283 - x31285 + x31287 + x31288 + x31296 + x31302) + x31304) + x69*(x106*(x31542 + x31568 + x31571) - x123*(x31572 + x31583) + x31586) + x69*(x106*(x31503 + x31530 + x31536 + x31542) - x123*(x31543 - x31544 + x31545 - x31546 + x31547 + x31548 + x31558 + x31566) + x31567) + x69*(x106*(L*x30905 - L*x30906 + x11329*x8551 - x11332*x8551 + x30904 + x30912 + x30923) - x123*(x30924 - x30926 + x30928 - x30930 + x30932 + x30951) + x30953) + x69*(x106*(-x30868 + x30869 - x30870 + x30871 - x30872 + x30881 + x30959 + x30968) - x123*(-x30890 + x30892 - x30894 + x30896 - x30898 + x30969 - x30970 + x30971 - x30972 + x30973 + x30983 + x30991) + x30993) + x69*(x106*(x30922 - x31209 + x31210 - x31211 + x31212 - x31213 + x31223 + x31249) - x123*(-x31224 + x31226 - x31228 + x31230 - x31232 + x31250 + x31258 + x31264) + x31268) + x69*(x106*(-x30954 + x30955 - x30956 + x30957 - x30958 + x30968 + x30999 + x31008) - x123*(-x30974 + x30976 - x30978 + x30980 - x30982 + x31018 + x31026 + x31032) + x31034) + x69*(x106*(-x30994 + x30995 - x30996 + x30997 - x30998 + x31008 + x31040 + x31049) - x123*(-x31009 + x31011 - x31013 + x31015 - x31017 + x31059 + x31067 + x31073) + x31078) + x69*(x106*(-x31035 + x31036 - x31037 + x31038 - x31039 + x31049 + x31084 + x31093) - x123*(-x31050 + x31052 - x31054 + x31056 - x31058 + x31103 + x31111 + x31117) + x31122) + x69*(x106*(-x31079 + x31080 - x31081 + x31082 - x31083 + x31093 + x31128 + x31137) - x123*(-x31094 + x31096 - x31098 + x31100 - x31102 + x31147 + x31155 + x31161) + x31165) + x69*(x106*(-x31123 + x31124 - x31125 + x31126 - x31127 + x31137 + x31171 + x31180) - x123*(-x31138 + x31140 - x31142 + x31144 - x31146 + x31190 + x31198 + x31204) + x31208) + x69*(x106*(-x31166 + x31167 - x31168 + x31169 - x31170 + x31180 + x31214 + x31223) - x123*(-x31181 + x31183 - x31185 + x31187 - x31189 + x31233 + x31241 + x31247) + x31248) + x69*(x106*(x31277 - x31305 - x31306 + x31307 - x31308 + x31309 + x31310 + x31316) - x123*(-x31318 + x31320 - x31322 + x31324 + x31325 + x31332 + x31338 - x6447) + x31340) + x69*(x106*(x31316 - x31341 - x31342 + x31343 - x31344 + x31345 + x31346 + x31352) - x123*(-x31354 + x31356 - x31358 + x31360 + x31361 + x31369 + x31375 - x6463) + x31377) + x69*(x106*(x31352 - x31378 - x31379 + x31380 - x31381 + x31382 + x31383 + x31389) - x123*(-x31390 - x31392 + x31394 - x31396 + x31398 + x31399 + x31407 + x31413) + x31415) + x69*(x106*(x31389 - x31416 - x31417 + x31418 - x31419 + x31420 + x31421 + x31427) - x123*(-x31428 - x31430 + x31432 - x31434 + x31436 + x31437 + x31445 + x31451) + x31453) + x69*(x106*(x31427 - x31454 - x31455 + x31456 - x31457 + x31458 + x31459 + x31465) - x123*(-x31466 - x31468 + x31470 - x31472 + x31474 + x31475 + x31483 + x31489) + x31491) + x69*(x106*(x31465 - x31492 - x31493 + x31494 - x31495 + x31496 + x31497 + x31503) - x123*(-x31504 - x31506 + x31508 - x31510 + x31512 + x31513 + x31521 + x31527) + x31529);
T_others[4] = x69*(x106*(x11649 + x11654 + x11656 - x11666 + x11703 + x2719 - x31587 + x31588 - x5722) - x123*(-L*x137 + q1_b_dot*x11475 - x11375*x49 + x11432 - x11435 - x11474*x49 + x11698 - x11789 - x2*x3701 + x2741*x5278 + x31589 + x31590 + x31591 + x3701*x7 - x5755 - x5786)) + x69*(L*x31593 + x106*(x31593 + x31594) - x123*(-x11608 - x13095 + x13109 - x13115 - x13176 - 4*x13199 + x13316 - x13319 - x13322 - x13323 - x31596 - x31597 + x5586 + x9068 + x9094 + x9254) + x70*(-x11480 - x11487 + x11491 - x11509 - x11527 - x11528 + x5487 + x5498)) + x69*(L*x31598 + x106*(L*x12640 - L*x12819 - x12670 + x12778 - x12803 - x12804 + x12812 + x12828 - x12897 - x12899 - x15145 + x15165 + x1851 + x28113 + x31598 + x31599 + x8652 - x8735) - x123*(-p10_b_dt*x5169 - x11360*x31600 + x11370*x420 - x11375*x421 + x12640*x158 + x12679 - x12684 - x12699 + x12705 - x12710 + x12715 - x12716 + x12770 - x12786 - x12819*x158 - x12836*x158 - x12838*x158 - x12941 + x15211 - x15212 - x15220 - x1833 - x31600*x5161 + x31602 + x31603 + x8608 - x8609 + x8646 - x8648 + x8649 + x8653 + x8915) + x70*(-x12632 + x12640 - x12669 - x12819 - x12836 - x12838 + x8549 + x8557)) + x69*(L*x31605 + x106*(x11461 + x11466 - x11496 + x11628 + x11629 + x276 - x31592 + x31594 + x31605 + x31606 - x5458) - x123*(x11370*x450 - x11375*x249 - x11474*x249 - x11615 + x11623 - x11626 - x13094 + x13095 + x13104 - x13109 - x13114 + x13115 + x13176 - x13187 - x13307 - x13315 + x13318 - x13320 - x13321 - x13501 - x1948 + x31596 + x31597 - x31608 - x31609 - x9068 + x9069 - x9094 + x9096 + x9097 + x9131 + x9257) + x70*(-x13059 - x13063 + x13065 - x13138 - x13235 - x13236 + x9035 + x9038)) + x69*(L*x31611 + x106*(x13041 + x13044 - x13069 + x13240 + x13241 + x1935 - x31604 + x31606 + x31611 + x31612 - x8998) - x123*(x11370*x479 - x11375*x480 - x11474*x480 + x13094 - x13104 + x13114 - x13207 + x13229 - x13231 - x13424 + x13433 - x13444 + x13501 - x13511 - x13612 - x13621 + x13624 - x13626 - x13627 - x13798 - x2055 + x31608 + x31609 - x31614 - x31615 - x9069 - x9096 + x9344 + x9369 + x9370 + x9404 + x9532) + x70*(-x13384 - x13392 + x13394 - x13463 - x13545 - x13547 + x9306 + x9313)) + x69*(L*x31617 + x106*(x13366 + x13369 - x13401 + x13554 + x13555 + x2040 - x31610 + x31612 + x31617 + x31618 - x9287) - x123*(x11370*x509 - x11375*x510 - x11474*x510 + x13424 - x13433 + x13444 - x13525 + x13541 - x13542 - x13729 + x13737 - x13746 + x13798 - x13808 - x13912 - x13920 + x13922 - x13925 - x13926 - x14094 - x2155 + x31614 + x31615 - x31620 - x31621 - x9344 - x9369 + x9639 + x9663 + x9664 + x9698 + x9818) + x70*(-x13688 - x13692 + x13694 - x13762 - x13848 - x13850 + x9602 + x9607)) + x69*(L*x31623 + x106*(x13675 + x13680 - x13698 + x13855 + x13856 + x2142 - x31616 + x31618 + x31623 + x31624 - x9583) - x123*(x10118 + x11370*x539 - x11375*x540 - x11474*x540 + x13729 - x13737 + x13746 - x13825 + x13842 - x13844 - x14025 + x14033 - x14042 + x14094 - x14104 - x14198 - x14207 + x14209 - x14211 - x14212 - x14380 - x2262 + x31620 + x31621 - x31626 - x31627 - x9639 - x9663 + x9927 + x9952 + x9953 + x9988) + x70*(-x13984 - x13989 + x13991 - x14057 - x14138 - x14140 + x9889 + x9896)) + x69*(L*x31629 + x106*(x13973 + x13977 - x13996 + x14145 + x14146 + x2247 - x31622 + x31624 + x31629 + x31630 - x9870) - x123*(x10226 + x10250 + x10251 + x10284 + x10403 + x11370*x569 - x11375*x570 - x11474*x570 + x14025 - x14033 + x14042 - x14118 + x14134 - x14135 - x14312 + x14320 - x14329 + x14380 - x14390 - x14493 - x14502 + x14505 - x14508 - x14509 - x14677 - x2361 + x31626 + x31627 - x31632 - x31633 - x9927 - x9952) + x70*(x10189 + x10194 - x14271 - x14275 + x14277 - x14344 - x14431 - x14433)) + x69*(L*x31635 + x106*(-x10168 + x14259 + x14263 - x14281 + x14438 + x14439 + x2348 - x31628 + x31630 + x31635 + x31636) - x123*(-x10226 - x10250 + x10511 + x10535 + x10536 + x10571 + x10701 + x11370*x599 - x11375*x600 - x11474*x600 + x14312 - x14320 + x14329 - x14407 + x14425 - x14427 - x14608 + x14615 - x14624 + x14677 - x14687 - x14784 - x14793 + x14795 - x14965 - x15091 - x15092 - x2466 + x31632 + x31633 - x31638 - x31639) + x70*(x10474 + x10480 - x14569 - x14574 + x14576 - x14640 - x14722 - x14724)) + x69*(L*x31641 + x106*(-x10453 + x14556 + x14561 - x14581 + x14729 + x14730 + x2451 - x31634 + x31636 + x31641 + x31642) - x123*(-x10511 - x10535 + x10812 + x10839 + x10840 + x10874 + x10999 + x11370*x629 - x11375*x630 - x11474*x630 + x14608 - x14615 + x14624 - x14701 + x14718 - x14719 - x14897 + x14904 - x14913 + x14965 - x14975 - x15077 - x15085 + x15087 - x15089 - x15090 - x15171 - x2566 + x31638 + x31639 - x31644 - x31645) + x70*(x10772 + x10779 - x14862 - x14869 + x14871 - x14929 - x15016 - x15018)) + x69*(L*x31646 + x106*(-x10752 + x14844 + x14847 - x14877 + x15023 + x15024 + x2553 + x31599 - x31640 + x31642 + x31646) - x123*(-x10812 - x10839 + x11084 + x11370*x633 - x11375*x634 - x11474*x634 - x12676 - x12679 + x12699 - x12715 - x12770 + x14897 - x14904 + x14913 - x14992 + x15011 - x15012 + x15171 - x15268 - x15276 + x15278 - x15279 - x15280 - x2663 - x31602 - x31603 + x31644 + x31645 + x8609 + x8648 + x8898 + x8912) + x70*(-x12674 - x12790 + x12815 - x12817 - x12832 - x12834 + x8745 + x8773)) + x69*(L*x31647 + x106*(x11735 - x11762 + x11767 - x12010 + x12138 + x12139 + x2746 + x31588 + x31647 + x31648 - x5820) - x123*(-x11375*x663 - x11432 + x11435 - x11474*x663 + x11677 - x11682 - x11688 + x11697 - x11698 + x11727 - x11740 + x11791 - x11841 - x11852 + x11858 - x11861 - x11862 + x12126 - x12127 - x2728 - x31589 - x31590 - x31591 + x31650 + x31651 + x5353 + x5755 - x5756 + x5786 - x5787 + x5791 + x5927) + x70*(-x11336 - x11341 - x11349 + x11353 - x11796 - x11798 + x5238 + x5255)) + x69*(L*x31652 + x106*(x12080 - x12103 + x12108 - x12325 + x12448 + x12449 + x2848 + x31648 + x31652 + x31653 - x6161) - x123*(-x11375*x692 - x11474*x692 - x11673 - x11677 + x11682 - x11697 - x11727 + x11853 - x11857 - x11864 - x11866 + x12028 - x12039 - x12043 + x12049 + x12071 + x12128 - x12163 + x12431 - x12433 - x2840 - x31650 - x31651 + x31655 + x31656 + x5756 + x5787 + x5915 + x5924 - x6101 - x6126 + x6132) + x70*(-x11671 - x11745 + x11769 - x11774 - x11863 - x11865 + x5829 + x5851)) + x69*(L*x31657 + x106*(x12388 - x12409 + x12414 - x15312 + x15437 + x15438 + x2952 + x31653 + x31657 + x31658 - x6458) - x123*(-x11375*x721 - x11474*x721 - x12025 - x12028 + x12039 - x12049 - x12071 + x12173 - x12177 - x12179 - x12180 + x12339 - x12350 - x12355 + x12362 + x12380 + x12434 - x12476 + x15422 - x15423 - x2944 - x31655 - x31656 + x31660 + x31661 + x6101 + x6126 + x6228 + x6236 - x6395 - x6417 + x6421) + x70*(-x12023 - x12088 + x12111 - x12115 - x12133 - x12135 + x6171 + x6188)) + x69*(L*x31662 + x106*(x15375 - x15399 + x15404 - x15617 + x15735 + x15736 + x3068 + x31658 + x31662 + x31663 - x6784) - x123*(-x11375*x750 - x11474*x750 - x12336 - x12339 + x12350 - x12362 - x12380 + x12485 - x12488 - x12490 - x12491 + x15330 - x15341 - x15345 + x15351 + x15367 + x15424 - x15470 + x15721 - x15723 - x3060 - x31660 - x31661 + x31665 + x31666 + x6395 + x6417 + x6539 + x6549 - x6727 - x6754 + x6757) + x70*(-x12334 - x12397 + x12417 - x12420 - x12439 - x12442 + x6466 + x6484)) + x69*(L*x31667 + x106*(x15680 - x15701 + x15706 - x15916 + x16042 + x16043 + x31663 + x31667 + x31668 + x3174 - x7099) - x123*(-x11375*x779 - x11474*x779 - x15327 - x15330 + x15341 - x15351 - x15367 + x15479 - x15483 - x15486 - x15487 + x15635 - x15645 - x15650 + x15657 + x15672 + x15724 - x15769 + x16027 - x16028 - x3166 - x31665 - x31666 + x31670 + x31671 + x6727 + x6754 + x6856 + x6863 - x7043 - x7068 + x7070) + x70*(-x15325 - x15383 + x15406 - x15410 - x15430 - x15433 + x6791 + x6811)) + x69*(L*x31672 + x106*(x15981 - x16005 + x16010 - x16209 + x16329 + x16330 + x31668 + x31672 + x31673 + x3285 - x7405) - x123*(-x11375*x808 - x11474*x808 - x15632 - x15635 + x15645 - x15657 - x15672 + x15778 - x15781 - x15783 - x15784 + x15934 - x15945 - x15949 + x15955 + x15973 + x16029 - x16064 + x16313 - x16315 - x31670 - x31671 + x31675 + x31676 - x3277 + x7043 + x7068 + x7166 + x7174 - x7343 - x7371 + x7374) + x70*(-x15630 - x15688 + x15708 - x15711 - x15730 - x15732 + x7106 + x7126)) + x69*(L*x31677 + x106*(x16272 - x16292 + x16297 - x16513 + x16624 + x16625 + x31673 + x31677 + x31678 + x3389 - x7726) - x123*(-x11375*x837 - x11474*x837 - x15931 - x15934 + x15945 - x15955 - x15973 + x16073 - x16077 - x16079 - x16080 + x16227 - x16237 - x16242 + x16249 + x16264 + x16316 - x16356 + x16612 - x16613 - x31675 - x31676 + x31680 + x31681 - x3381 + x7343 + x7371 + x7485 + x7492 - x7665 - x7691 + x7693) + x70*(-x15929 - x15989 + x16012 - x16016 - x16035 - x16038 + x7414 + x7435)) + x69*(L*x31682 + x106*(x16566 - x16590 + x16595 - x16796 + x16888 + x16889 + x31678 + x31682 + x31683 + x3503 - x8043) - x123*(x11370*x865 - x11375*x866 - x11474*x866 - x16224 - x16227 + x16237 - x16249 - x16264 + x16365 - x16368 - x16370 - x16371 + x16525 - x16534 - x16538 + x16544 + x16558 - x16646 + x16881 - x16882 - x31680 - x31681 + x31685 + x31686 - x3495 + x7665 + x7691 + x7792 + x7802 - x7978 - x8005 + x8008) + x70*(-x16222 - x16280 + x16299 - x16302 - x16322 - x16325 + x7733 + x7750)) + x69*(L*x31687 + x106*(-q10_b*x11370 + q10_i*x11375 + q10_i*x11474 - x11360*x875 - x16802 + x16845 - x16855 - x16859 + x16864 + x16866 - x16870 + x31683 + x31687 + x3615 - x5161*x875 - x8354 + x8360 + x8376) - x123*(x11360*x31688 + x11370*x876 - x11374*x875 - x11375*x875 - x11474*x875 - x16522 - x16525 + x16534 - x16544 - x16558 + x16655 - x16658 - x16660 - x16661 + x16805 - x16812 - x16818 + x16823 + x16835 - x16916 - x31685 - x31686 + x31688*x5161 - x3597 + x5505*x872 + x7978 + x8005 + x8118 + x8126 - x8296 - x8321 + x8322) + x70*(-x16520 - x16574 + x16597 - x16601 - x16617 - x16620 + x8051 + x8068));
T_others[5] = x69*(x106*(x31706 + x31707) - x123*(-x11644 - x11645 + x31708 - x31709 + x31710 + x31716) + x31718) + x69*(x106*(x31738 + x31969 + x31971) - x123*(x31972 + x31985) + x31986) + x69*(x106*(x31765 + x31771 + x31772) - x123*(-x31773 - x31774 + x31775 - x31776 + x31777 + x31789) + x31790) + x69*(x106*(x31796 + x31798 + x31803) - x123*(-x13371 - x13375 + x31804 - x31805 + x31806 + x31814) + x31815) + x69*(x106*(x31821 + x31823 + x31828) - x123*(-x31829 - x31830 + x31831 - x31832 + x31833 + x31841) + x31842) + x69*(x106*(x31848 + x31850 + x31855) - x123*(-x31856 - x31857 + x31858 - x31859 + x31860 + x31873) + x31874) + x69*(x106*(x31880 + x31882 + x31887) - x123*(-x31888 - x31889 + x31890 - x31891 + x31892 + x31905) + x31906) + x69*(x106*(x31912 + x31914 + x31919) - x123*(-x31920 - x31921 + x31922 - x31923 + x31924 + x31937) + x31938) + x69*(x106*(x31944 + x31946 + x31949) - x123*(-x31950 - x31951 + x31952 - x31953 + x31954 + x31967) + x31968) + x69*(x106*(x31999 + x32015 + x32027) - x123*(-x11715 - x32000 + x32001 + x32002 - x32003 + x32046) + x32047) + x69*(x106*(x32026 + x32048 + x32060) - x123*(-x12316 - x32033 + x32034 + x32035 - x32036 + x32078) + x32079) + x69*(x106*(x32059 + x32080 + x32092) - x123*(-x32066 + x32067 - x32068 + x32069 - x32070 + x32104) + x32105) + x69*(x106*(x32091 + x32106 + x32118) - x123*(-x32098 + x32099 - x32100 + x32101 - x32102 + x32136) + x32137) + x69*(x106*(x32117 + x32138 + x32150) - x123*(-x32124 + x32125 - x32126 + x32127 - x32128 + x32168) + x32169) + x69*(x106*(x32149 + x32170 + x32180) - x123*(-x32156 + x32157 - x32158 + x32159 - x32160 + x32198) + x32199) + x69*(x106*(x32179 + x32200 + x32211) - x123*(-x32186 + x32187 - x32188 + x32189 - x32190 + x32228) + x32229) + x69*(x106*(x11668 + x31987 + x31993 + x31999) - x123*(-x11694 - x31693 + x31694 + x31695 - x31696 + x32011) + x32014) + x69*(x106*(x11657 + x11659 - x11660 + x11668 - x31690 + x31692) - x123*(x31697 + x31702) + x31689) + x69*(x106*(-x12638 + x31719 - x31720 + x31721 - x31722 + x31727 + x31733 + x31738) - x123*(-x31739 - x31740 + x31741 - x31742 + x31743 + x31746 + x31752 + x31758) + x31759) + x69*(x106*(x32210 + x32230 - x32231 - x32232 + x32233 + x32234 - x32235 - x32236 + x32237 + x32238 - x32239 + x32240) - x123*(x32241 - x32242 - x32243 + x32244 - x32245 - x32246 + x32247 + x32248 - x32249 + x32250 + x32251 + x32257) + x32258);
T_others[6] = x69*(-x106*(x11329*x1850 - x11442*x898 - 4*x12619 + 4*x12654 - 4*x12655 + x12992 + x15143 - x31734 + x31735 - x31736 + x31737 + x31969 - x32259 - x32260 + x32261 + x32262 - x8758) + x123*(x31972 + x32275 + x32297 + x32298 - x8634) + x123*(x32276 + x32277 - x32278 - x32279 + x32280 + x32281 - x32282 - x32283 + x32284 + x32285 + x32291 + x32297) - x168*(x32263 - x32264 + x32265 - x32266 + x32267 + x32273 + x32274 + x32275) + x31759 + x63*(x12007 - x32299 - x32300 - x32301 - x32302 + x32303 - x32304 - x32305 - x32306 + x32307 + x32308 + x32309 - x32310 - x32311 + x32312 + x32313 + x32317));
T_others[7] = x69*(-x106*(3*x12638 - x12647*x1858 + x12649*x1858 - 3*x31721 + 3*x31722 + x31727 + x8758) + x123*(x31746 + x8634) + x123*(-x32276 - x32277 + x32278 + x32279 - x32280 - x32281 + x32282 + x32283 - x32284 - x32285 - x32292 + x32293 - x32294 + x32295 - x32296 + x32318) - x168*(x31758 + x31984 - x32263 + x32264 - x32265 + x32266 - x32267 + x32319) + x63*(x32299 + x32300 + x32301 + x32302 - x32303 + x32304 + x32305 + x32306 - x32307 - x32308 - x32309 + x32310 + x32311 - x32312 - x32313 + x32320 + x5365)) + x69*(x106*(x11127 + 4*x12691 + 4*x12728 - 4*x12756 - x12994 + x31971 + x32298 - x32321) - x123*(x31985 + x32291 + x8310) - x123*(x32291 - x32322 - x32323 - x32324 - x32325 + x32326 + x32327 - x32328 - x32329 + x32330 + x32331 + x32337) + x168*(x31966 + x31984 + x32273 + x32359) + x31986 - x63*(x32317 + x32338 + x32339 - x32340 - x32341 + x32342 + x32343 - x32344 - x32345 + x32346 + x32347 + x32353 + x5365));
T_others[8] = x69*(x106*(-x11127 + x12724*x1858 - 3*x15143 - x15146*x1858 + x31733 + 3*x31736 - 3*x31737) - x123*(x31752 + x32360) - x123*(x32318 + x32322 + x32323 + x32324 + x32325 - x32326 - x32327 + x32328 + x32329 - x32330 - x32331 + x32363) + x168*(x32274 + x32319 + x32361 + x32362) - x63*(x12007 + x32320 - x32338 - x32339 + x32340 + x32341 - x32342 - x32343 + x32344 + x32345 - x32346 - x32347 + x32364)) + x69*(x106*(x10931 + 4*x14851 + 4*x14855 - 4*x14857 - 4*x14884 - x15118 + x31946 + x31973 + x31974 - x31975 + x31976 - x31977) - x123*(x31967 + x32363 + x7995) - x123*(x32363 - x32365 - x32366 - x32367 - x32368 + x32369 + x32370 - x32371 - x32372 + x32373 + x32374 + x32380) + x168*(x31936 + x31966 + x32361 + x32402) + x31968 - x63*(x32364 + x32381 + x32382 - x32383 - x32384 + x32385 + x32386 - x32387 - x32388 + x32389 + x32390 + x32396 + x5365));
T_others[9] = x69*(x106*(-x10931 - 3*x14867 + x14875*x1858 - x14878*x1858 + 3*x31947 - 3*x31948 + x31970) - x123*(x31978 + x32403) - x123*(x32337 + x32365 + x32366 + x32367 + x32368 - x32369 - x32370 + x32371 + x32372 - x32373 - x32374 + x32406) + x168*(x32359 + x32362 + x32404 + x32405) - x63*(x12007 + x32353 - x32381 - x32382 + x32383 + x32384 - x32385 - x32386 + x32387 + x32388 - x32389 - x32390 + x32407)) + x69*(x106*(x10630 + 4*x14559 - 4*x14563 - 4*x14565 + 4*x14566 - x14825 + x31914 + x31955 + x31956 - x31957 + x31958 - x31959) - x123*(x31937 + x32406 + x7681) - x123*(-x14589 + x14591 - x14593 + x14594 - x14595 + x32406 - x32408 - x32409 + x32410 - x32411 + x32412 + x32417) + x168*(x31904 + x31936 + x32404 + x32434) + x31938 - x63*(x14299 + x32407 + x32418 - x32419 + x32420 - x32421 + x32422 + x32428 + x5365));
T_others[10] = x69*(x106*(-x10630 - 3*x14588 + x14590*x1858 - x14592*x1858 + 3*x31917 - 3*x31918 + x31945) - x123*(x31960 + x32435) - x123*(x14596 + x32380 + x32408 + x32409 - x32410 + x32411 - x32412 + x32438) + x168*(x32402 + x32405 + x32436 + x32437) - x63*(x12007 - x14290 + x14292 - x14294 + x14296 - x14298 + x32396 - x32418 + x32419 - x32420 + x32421 - x32422 + x32439)) + x69*(x106*(4*x14262 - 4*x14267 + 4*x14268 - 4*x14286 - x14536 + x31882 + x31925 + x31926 - x31927 + x31928 - x31929 + x8370) - x123*(x31905 + x32438 + x7359) - x123*(-x14004 + x14006 - x14008 + x14010 - x14012 + x32438 - x32440 - x32441 + x32442 - x32443 + x32444 + x32450) + x168*(x31872 + x31904 + x32436 + x32472) + x31906 - x63*(x32439 + x32451 + x32452 - x32453 - x32454 + x32455 + x32456 - x32457 - x32458 + x32459 + x32460 + x32466 + x5365));
T_others[11] = x69*(x106*(-3*x14289 + x14291*x1858 - x14293*x1858 + 3*x31885 - 3*x31886 + x31913 + x32474) - x123*(x31930 + x32473) - x123*(x14013 + x32417 + x32440 + x32441 - x32442 + x32443 - x32444 + x32477) + x168*(x32434 + x32437 + x32475 + x32476) - x63*(x12007 + x32428 - x32451 - x32452 + x32453 + x32454 - x32455 - x32456 + x32457 + x32458 - x32459 - x32460 + x32478)) + x69*(x106*(4*x13976 - 4*x13979 - 4*x13980 + 4*x13981 - x14239 + x31850 + x31893 + x31894 - x31895 + x31896 - x31897 + x8061) - x123*(x31873 + x32477 + x7058) - x123*(x32477 - x32479 - x32480 - x32481 - x32482 + x32483 + x32484 - x32485 - x32486 + x32487 + x32488 + x32494) + x168*(x31840 + x31872 + x32475 + x32514) + x31874 - x63*(x32478 + x32495 + x32496 - x32497 - x32498 + x32499 + x32500 - x32501 - x32502 + x32503 + x32504 + x32510 + x5365));
T_others[12] = x69*(x106*(-3*x14003 + x14005*x1858 - x14007*x1858 + 3*x31853 - 3*x31854 + x31881 + x32516) - x123*(x31898 + x32515) - x123*(x32450 + x32479 + x32480 + x32481 + x32482 - x32483 - x32484 + x32485 + x32486 - x32487 - x32488 + x32518) + x168*(x13716 + x32472 + x32476 + x32517) - x63*(x12007 + x32466 - x32495 - x32496 + x32497 + x32498 - x32499 - x32500 + x32501 + x32502 - x32503 - x32504 + x32519)) + x69*(x106*(4*x13678 - 4*x13684 + 4*x13685 - 4*x13703 - x13953 + x31823 + x31861 + x31862 - x31863 + x31864 - x31865 + x7741) - x123*(x31841 + x32518 + x6743) - x123*(x32518 - x32520 - x32521 - x32522 - x32523 + x32524 + x32525 - x32526 - x32527 + x32528 + x32529 + x32535) + x168*(x31813 + x31840 + x32517 + x32556) + x31842 - x63*(x32519 + x32536 + x32537 - x32538 - x32539 + x32540 + x32541 - x32542 - x32543 + x32544 + x32545 + x32550 + x5365));
T_others[13] = x69*(x106*(-3*x13706 + x13708*x1858 - x13710*x1858 + 3*x31826 - 3*x31827 + x31849 + x32558) - x123*(x31866 + x32557) - x123*(x32494 + x32520 + x32521 + x32522 + x32523 - x32524 - x32525 + x32526 + x32527 - x32528 - x32529 + x32561) + x168*(x13716 + x32514 + x32559 + x32560) - x63*(x12007 + x32510 - x32536 - x32537 + x32538 + x32539 - x32540 - x32541 + x32542 + x32543 - x32544 - x32545 + x32562)) + x69*(x106*(4*x13373 + 4*x13377 - 4*x13379 - 4*x13410 - x13655 + x31798 + x31834 + x31835 - x31836 + x31837 - x31838 + x7426) - x123*(x31814 + x32561 + x6412) - x123*(x32561 - x32563 - x32564 - x32565 - x32566 + x32567 + x32568 - x32569 - x32570 + x32571 + x32572 + x32577) + x168*(x31788 + x31813 + x32559 + x32598) + x31815 - x63*(x32562 + x32578 + x32579 - x32580 - x32581 + x32582 + x32583 - x32584 - x32585 + x32586 + x32587 + x32592 + x5365));
T_others[14] = x69*(x106*(-x13391 + x13400 - x13403 + x13408 - x13409 + x31822 + x32599) - x123*(x16791 + x31839) - x123*(x32535 + x32563 + x32564 + x32565 + x32566 - x32567 - x32568 + x32569 + x32570 - x32571 - x32572 + x32602) + x168*(x32556 + x32560 + x32600 + x32601) - x63*(x12007 + x32550 - x32578 - x32579 + x32580 + x32581 - x32582 - x32583 + x32584 + x32585 - x32586 - x32587 + x32603)) + x69*(x106*(-x13046 + 4*x13048 + 4*x13052 - 4*x13054 - 4*x13074 + x13081 + x31772 + x5525) - x123*(x31789 + x32602 + x6120) - x123*(x32602 - x32604 - x32605 - x32606 - x32607 + x32608 + x32609 - x32610 - x32611 + x32612 + x32613 + x32618) + x168*(x31716 + x31788 + x32600 + x32640) + x31790 - x63*(x32603 + x32619 + x32620 - x32621 - x32622 + x32623 + x32624 - x32625 - x32626 + x32627 + x32628 + x32634 + x5365));
T_others[15] = x69*(x106*(-x11329*x1994 + x11332*x1994 - x13102*x1858 + x13116*x1858 - 3*x31766 + x31797 + x32643) - x123*(x15913 + x31807) - x123*(-x13096 + x32577 + x32604 + x32605 + x32606 + x32607 - x32608 - x32609 + x32610 + x32611 - x32612 - x32613 + x32614 - x32615 + x32616 - x32617) + x168*(x32598 + x32601 - x32635 + x32636 - x32637 + x32638 - x32639 + x32642) - x63*(x12007 + x32592 - x32619 - x32620 + x32621 + x32622 - x32623 - x32624 + x32625 + x32626 - x32627 - x32628 + x32629 + x32630 - x32631 + x32632 - x32633)) + x69*(-x106*(-4*x11504 + 4*x11505 - 4*x11506 + 4*x11507 + x11578 + x31782 + x32641) + x123*(x12322 + x32618 + x32642) + x123*(7*x11479 + x11485*x286 - x11489*x286 + 7*x11497 - 7*x11502 + x32618) - x168*(x32640 + x32642) + x31718 + x63*(-16*x11479 - x11485*x327 + x11489*x327 - 16*x11497 + 16*x11502 + x12007 + x32634));
T_others[16] = x69*(-x123*(5*x11320 - x11324*x154 + x11326*x154 + 5*x11334 - 5*x11335 + x32656) + x168*(x32644 + x32650) - 3.0/2.0*x5700 - x63*(-6*x11320 + x11324*x129 - x11326*x129 - 6*x11334 + 6*x11335 + x12007 + x32662)) + x69*(-x106*(-4*x11321 + 4*x11322 + 4*x11330 - 4*x11333 + x31702 + x31994 - x31995 + x31996 - x31997 + x31998 + x32015 + x32663 + x32664) - x123*(x12322 + x32011 + x32656) + x123*(x32651 + x32652 - x32653 + x32654 - x32655 + x32672 + x32673 - x32674 - x32675 + x32676 + x32677 - x32678 - x32679 + x32680 + x32681 + x32687) - x168*(x32644 + x32645 + x32646 - x32647 + x32648 - x32649 + x32665 + x32671) + x32014 + x63*(x12007 - x32657 + x32658 - x32659 + x32660 - x32661 - x32688 - x32689 - x32690 - x32691 + x32692 + x32693 - x32694 - x32695 + x32696 + x32697 + x32703));
T_others[17] = x69*(-x106*(3*x11320 - x11324*x1858 + x11326*x1858 + 3*x11334 - 3*x11335 + x31987 + x5210) - x123*(x31697 + x5403) + x123*(x32656 - x32672 - x32673 + x32674 + x32675 - x32676 - x32677 + x32678 + x32679 - x32680 - x32681 + x32704) - x168*(x32010 + x32045 + x32650 + x32705) + x63*(x32662 + x32688 + x32689 + x32690 + x32691 - x32692 - x32693 + x32694 + x32695 - x32696 - x32697 + x32706 + x5365)) + x69*(x106*(4*x11717 - 4*x11719 + 4*x11721 - 4*x11814 + x12012 + x12013 - x12014 + x12015 - x12016 + x32027 + x32663 - x32707) - x123*(x15913 + x32046 + x32687) + x123*(x32704 + x32715 + x32716 - x32717 - x32718 + x32719 + x32720 - x32721 - x32722 + x32723 + x32724 + x32730) - x168*(x32665 + x32705 + x32708 + x32714) + x32047 + x63*(x12007 + x32706 - x32731 - x32732 - x32733 - x32734 + x32735 + x32736 - x32737 - x32738 + x32739 + x32740 + x32746));
T_others[18] = x69*(x106*(-x11329*x2863 + x11332*x2863 + x12036*x1858 - x12050*x1858 + x31993 - 3*x31994 + x5210) - x123*(x32004 + x6120) + x123*(x32687 - x32715 - x32716 + x32717 + x32718 - x32719 - x32720 + x32721 + x32722 - x32723 - x32724 + x32747) - x168*(x32045 + x32077 + x32671 + x32748) + x63*(x32703 + x32731 + x32732 + x32733 + x32734 - x32735 - x32736 + x32737 + x32738 - x32739 - x32740 + x32749 + x5365)) + x69*(x106*(-x11329*x2910 + x11332*x2910 - 4*x12034 + 4*x12053 + x32028 + x32029 - x32030 + x32031 - x32032 + x32060 + x32750 - x32751) - x123*(x16791 + x32078 + x32730) + x123*(x32747 + x32756 + x32757 - x32758 - x32759 + x32760 + x32761 - x32762 - x32763 + x32764 + x32765 + x32771) - x168*(x32708 + x32748 + x32752 + x32755) + x32079 + x63*(x12007 + x32749 - x32772 - x32773 - x32774 - x32775 + x32776 + x32777 - x32778 - x32779 + x32780 + x32781 + x32786));
T_others[19] = x69*(x106*(x12329 + x32021 + x5877) - x123*(x32037 + x6412) + x123*(x32730 - x32756 - x32757 + x32758 + x32759 - x32760 - x32761 + x32762 + x32763 - x32764 - x32765 + x32787) - x168*(x15320 + x32077 + x32714 + x32788) + x63*(x32746 + x32772 + x32773 + x32774 + x32775 - x32776 - x32777 + x32778 + x32779 - x32780 - x32781 + x32789 + x5365)) + x69*(x106*(-4*x12345 + 4*x12366 - 4*x12367 + 4*x12375 - x12602 + x32061 + x32062 - x32063 + x32064 - x32065 + x32092 + x32641) - x123*(x32104 + x32557 + x32771) + x123*(x15620 + x15621 - x15622 + x15623 - x15624 + x32787 + x32797 - x32798 + x32799 - x32800 + x32801 + x32807) - x168*(x32752 + x32788 + x32790 + x32796) + x32105 + x63*(x12007 + x32789 - x32808 - x32809 - x32810 - x32811 + x32812 + x32813 - x32814 - x32815 + x32816 + x32817 + x32823));
T_others[20] = x69*(x106*(-x11329*x3082 + x11332*x3082 + x12347*x1858 - x12363*x1858 - 3*x15314 + x32054 + x5253) - x123*(x32071 + x6743) + x123*(x15625 + x32771 - x32797 + x32798 - x32799 + x32800 - x32801 + x32824) - x168*(x15320 + x32135 + x32755 + x32825) + x63*(x32786 + x32808 + x32809 + x32810 + x32811 - x32812 - x32813 + x32814 + x32815 - x32816 - x32817 + x32826 + x5365)) + x69*(x106*(-x11329*x3131 + x11332*x3131 - 4*x15336 + 4*x15354 - x15596 + x32093 + x32094 - x32095 + x32096 - x32097 + x32118 + x32643) - x123*(x32136 + x32515 + x32807) + x123*(x32824 + x32834 + x32835 - x32836 - x32837 + x32838 + x32839 - x32840 - x32841 + x32842 + x32843 + x32848) - x168*(x32790 + x32825 + x32827 + x32833) + x32137 + x63*(x12007 + x15924 + x32826 - x32849 - x32850 + x32851 - x32852 + x32853 + x32859));
T_others[21] = x69*(x106*(x15339*x1858 - x15352*x1858 - 3*x15619 + x32086 + 3*x32089 - 3*x32090 + x5525) - x123*(x32103 + x7058) + x123*(x32807 - x32834 - x32835 + x32836 + x32837 - x32838 - x32839 + x32840 + x32841 - x32842 - x32843 + x32860) - x168*(x32135 + x32167 + x32796 + x32861) + x63*(x15919 + x15920 - x15921 + x15922 - x15923 + x32823 + x32849 + x32850 - x32851 + x32852 - x32853 + x32862 + x5365)) + x69*(x106*(-4*x15640 + 4*x15660 - 4*x15662 + 4*x15668 - x15894 + x32119 + x32120 - x32121 + x32122 - x32123 + x32150 + x32599) - x123*(x32168 + x32473 + x32848) + x123*(x32860 + x32870 + x32871 - x32872 - x32873 + x32874 + x32875 - x32876 - x32877 + x32878 + x32879 + x32885) - x168*(x32827 + x32861 + x32863 + x32869) + x32169 + x63*(x12007 + x32862 - x32886 - x32887 - x32888 - x32889 + x32890 + x32891 - x32892 - x32893 + x32894 + x32895 + x32901));
T_others[22] = x69*(x106*(-x11329*x3299 + x11332*x3299 + x15643*x1858 - x15658*x1858 - 3*x15918 + x32112 + x7426) - x123*(x32129 + x7359) + x123*(x32848 - x32870 - x32871 + x32872 + x32873 - x32874 - x32875 + x32876 + x32877 - x32878 - x32879 + x32902) - x168*(x32167 + x32197 + x32833 + x32903) + x63*(x32859 + x32886 + x32887 + x32888 + x32889 - x32890 - x32891 + x32892 + x32893 - x32894 - x32895 + x32904 + x5365)) + x69*(x106*(-x11329*x3347 + x11332*x3347 - 4*x15939 + 4*x15959 - x16188 + x32151 + x32152 - x32153 + x32154 - x32155 + x32180 + x32558) - x123*(x32198 + x32435 + x32885) + x123*(x16212 + x16213 - x16214 + x16215 - x16216 + x32902 + x32912 - x32913 + x32914 - x32915 + x32916 + x32922) - x168*(x32863 + x32903 + x32905 + x32911) + x32199 + x63*(x12007 + x32904 - x32923 - x32924 - x32925 - x32926 + x32927 + x32928 - x32929 - x32930 + x32931 + x32932 + x32938));
T_others[23] = x69*(x106*(x15941*x1858 - x15956*x1858 - 3*x16211 + x32144 + 3*x32147 - 3*x32148 + x7741) - x123*(x32161 + x7681) + x123*(x16217 + x32885 - x32912 + x32913 - x32914 + x32915 - x32916 + x32939) - x168*(x32197 + x32222 + x32869 + x32940) + x63*(x32901 + x32923 + x32924 + x32925 + x32926 - x32927 - x32928 + x32929 + x32930 - x32931 - x32932 + x32941 + x5365)) + x69*(x106*(-4*x16232 + 4*x16252 - 4*x16254 + 4*x16260 - x16483 + x32181 + x32182 - x32183 + x32184 - x32185 + x32211 + x32516) - x123*(x32228 + x32403 + x32922) + x123*(x32939 + x32949 + x32950 - x32951 - x32952 + x32953 + x32954 - x32955 - x32956 + x32957 + x32958 + x32964) - x168*(x32905 + x32940 + x32947 + x32948) + x32229 + x63*(x12007 + x32941 - x32965 - x32966 - x32967 - x32968 + x32969 + x32970 - x32971 - x32972 + x32973 + x32974 + x32979));
T_others[24] = x69*(x106*(-x11329*x3518 + x11332*x3518 + x16234*x1858 - x16250*x1858 - 3*x16510 + x32176 + x8061) - x123*(x32191 + x7995) + x123*(x32922 - x32949 - x32950 + x32951 + x32952 - x32953 - x32954 + x32955 + x32956 - x32957 - x32958 + x32980) - x168*(x32222 + x32257 + x32911 + x32981) + x63*(x32938 + x32965 + x32966 + x32967 + x32968 - x32969 - x32970 + x32971 + x32972 - x32973 - x32974 + x32982 + x5365)) + x69*(-x106*(4*x16530 - 4*x16547 + 4*x16548 - 4*x16554 + x16772 + x32227 - x32230 + x32231 + x32232 - x32233 - x32234 + x32235 + x32236 - x32237 - x32238 + x32239 + x8370) + x123*(-x32241 + x32242 + x32243 - x32244 + x32245 + x32246 - x32247 - x32248 + x32249 - x32250 + x32948 + x32980 + x8310) - x123*(x32964 + x32983 - x32984 - x32985 - x32986 + x32987 - x32988 - x32989 - x32990 + x32991 + x32992 + x32993 - x32994 - x32995 + x32996 + x32997) + x168*(x32257 + x32947 + x33014 - x33015 - x33016 + x33017 - x33018 - x33019 + x33020 + x33021 - x33022 + x33023) + x32258 - x63*(x32979 - x32998 - x32999 + x33000 + x33001 + x33002 - x33004 - x33005 - x33006 + x33007 + x33008 + x33009 - x33010 - x33011 + x33012 + x33013 + x5365));
T_others[25] = x69*(-x106*(x11329*x3619 - x11332*x3619 - x16531*x1858 + x16545*x1858 + 3*x16794 + x32240 + x32474) + x123*(x32251 + x32360) - x123*(x32980 - x32983 + x32984 + x32985 + x32986 - x32987 + x32988 + x32989 + x32990 - x32991 - x32992 - x32993 + x32994 + x32995 - x32996 - x32997) + x168*(x32948 + x32981 - x33014 + x33015 + x33016 - x33017 + x33018 + x33019 - x33020 - x33021 + x33022 - x33023) - x63*(x12007 + x32982 + x32998 + x32999 - x33000 - x33001 - x33002 + x33004 + x33005 + x33006 - x33007 - x33008 - x33009 + x33010 + x33011 - x33012 - x33013));
T_others[26] = x69*(-x106*(-x12663 + 3*x12690 - x12691*x1858 - x12694 + x12725 + 3*x12727 - x12728*x1858 - x12732 + x12753 + x12756*x1858 - x33029 + x33030 - x33033 + x33034 - x33037 - x33039 + x33040 + x33041 - x33042 - x33043 + x33044) + x123*(x13030 + x33024 - x8666) + x123*(7*x12614 - x12619*x286 + 7*x12622 + x12625*x286 - x12626*x7114 + x33028 + x33029 - x33030 - x33031 + x33032 + x33033 - x33034 - x33035 + x33036 + x33037 + x33038) + x33027 + x63*(x11467 - 16*x12614 + x12619*x327 - 16*x12622 - x12625*x327 + 16*x12627 + x12842 - x33045 - x33046 + x33047 - x33048 + x33049 + x33050) + x70*(x12656 + x7001));
T_others[27] = x69*(-x106*(L*x12625 + x12614 - x12620 + x12622 - x12627 - x12660 - x12693 + x12726 - x12730 + x12755 - x8800) + x123*(x33039 - x33040 + x33042 + x33043 - x33044 - x8663) + x123*(5*x12614 - x12619*x154 + 5*x12622 + x12625*x154 - x12655*x154 + 3*x12660 + 3*x12693 - 3*x12726 + 3*x12730 - 3*x12755 + x33025 + x33051) + x33027 + x63*(-L*x31744 - L*x31745 + x11467 + x12619*x129 - x12625*x129 + x12655*x129 - 6*x12660 - 6*x12693 + 6*x12726 - 6*x12730 + 6*x12755 + x13036 + x33052)) + x69*(x106*(-3*x14849 + x14851*x1858 - 3*x14853 + x14855*x1858 - x14857*x1858 + x33053 + x33056 - x33057 + x33060 - x33061 + x33065 - x33066 + x33067 - x33068 + x33069 + x33070 + x8800) - x123*(x11086 + x33026) - x123*(x33038 - x33053 + x33054 - x33055 - x33056 + x33057 + x33058 - x33059 - x33060 + x33061 + x33062 + x33063) + x33064 - x63*(12*x12663 + 12*x12694 - 12*x12725 + 12*x12732 - 12*x12753 - x14850 + x14852 - x14854 + x14856 - x14858 + x33050 + x33071) + x70*(x15148 + x7426));
T_others[28] = x69*(x106*(L*x12728 - L*x12756 + x12663 - x12690 + x12692 + x12694 - x12725 - x12727 + x12732 - x12753 + x6414) - x123*(-x33065 + x33066 - x33067 + x33068 - x33069 + x7063) - x123*(x15130 - x33028 + x33031 - x33032 + x33035 - x33036 + x33051 + x33072 - x33073 + x33074 - x33075 + x33076) + x33064 - x63*(x11371 + x33045 + x33046 - x33047 + x33048 - x33049 + x33052 - x33077 - x33078 + x33079 - x33080 + x33081 + x33082)) + x69*(x106*(-3*x14555 + x14559*x1858 - x14563*x1858 - x14565*x1858 + x14566*x1858 + x33083 + x33086 - x33087 + x33090 - x33091 + x33095 - x33096 + x33097 - x33098 + x33099 + x33100 + x6414) - x123*(x15124 + x33082 + x8312) - x123*(-x33054 + x33055 - x33058 + x33059 - x33062 - x33083 + x33084 - x33085 - x33086 + x33087 + x33088 - x33089 - x33090 + x33091 + x33092 + x33093) + x33094 - x63*(x14859 + 12*x14889 + 12*x14901 - 12*x14916 + 12*x14918 - 12*x14927 - x33101 - x33102 + x33103 - x33104 + x33105 + x33106) + x70*(x14885 + x6679));
T_others[29] = x69*(x106*(L*x14855 - L*x14857 + x10661 - x14849 - x14853 + x14999 + x33070) - x123*(-x33095 + x33096 - x33097 + x33098 - x33099 + x8001) - x123*(x14837 + x33063 - x33072 + x33073 - x33074 + x33075 - x33076 + x33107 - x33108 + x33109 - x33110 + x33111) + x33094 - x63*(x33071 + x33077 + x33078 - x33079 + x33080 - x33081 - x33112 - x33113 + x33114 - x33115 + x33116 + x33117)) + x69*(x106*(x10661 + x14262*x1858 - 3*x14266 - x14267*x1858 + x14268*x1858 - 3*x14303 + x33118 + x33121 - x33122 + x33125 - x33126 + x33130 - x33131 + x33132 - x33133 + x33134 + x33135) - x123*(x14831 + x33117 + x7997) - x123*(-x33084 + x33085 - x33088 + x33089 - x33092 - x33118 + x33119 - x33120 - x33121 + x33122 + x33123 - x33124 - x33125 + x33126 + x33127 + x33128) + x33129 - x63*(12*x14600 + 12*x14612 - 12*x14627 + 12*x14629 - 12*x14638 + x33101 + x33102 - x33103 + x33104 - x33105 - x33136 - x33137 + x33138 - x33139 + x33140 + x33141) + x70*(x14586 + x5525));
T_others[30] = x69*(x106*(-L*x14565 + L*x14566 - x14555 + x14560 - x14564 + x33100 + x6750) - x123*(-x33130 + x33131 - x33132 + x33133 - x33134 + x6748) - x123*(x14548 + x33093 - x33107 + x33108 - x33109 + x33110 - x33111 + x33142 - x33143 + x33144 - x33145 + x33146) + x33129 - x63*(x33106 + x33112 + x33113 - x33114 + x33115 - x33116 - x33147 - x33148 + x33149 - x33150 + x33151 + x33152)) + x69*(x106*(-3*x13972 + x13976*x1858 - x13979*x1858 - x13980*x1858 + x13981*x1858 + x33153 + x33156 - x33157 + x33160 - x33161 + x33165 - x33166 + x33167 - x33168 + x33169 + x33170 + x6750) - x123*(x14542 + x33152 + x7684) - x123*(-x33119 + x33120 - x33123 + x33124 - x33127 - x33153 + x33154 - x33155 - x33156 + x33157 + x33158 - x33159 - x33160 + x33161 + x33162 + x33163) + x33164 - x63*(12*x14304 + 12*x14441 - 12*x14442 + 12*x14443 - 12*x14444 + x33136 + x33137 - x33138 + x33139 - x33140 - x33171 - x33172 + x33173 - x33174 + x33175 + x33176) + x70*(x14287 + x5403));
T_others[31] = x69*(x106*(-L*x14267 + L*x14268 - x14266 - x14303 + x14333 + x33135 + x8093) - x123*(-x33165 + x33166 - x33167 + x33168 - x33169 + x7367) - x123*(x14251 + x33128 - x33142 + x33143 - x33144 + x33145 - x33146 + x33177 - x33178 + x33179 - x33180 + x33181) + x33164 - x63*(x33141 + x33147 + x33148 - x33149 + x33150 - x33151 - x33182 - x33183 + x33184 - x33185 + x33186 + x33187)) + x69*(x106*(x13678*x1858 - 3*x13683 - x13684*x1858 + x13685*x1858 - 3*x13720 + x33188 + x33191 - x33192 + x33195 - x33196 + x33200 - x33201 + x33202 - x33203 + x33204 + x33205 + x8093) - x123*(x14245 + x33187 + x7365) - x123*(-x33154 + x33155 - x33158 + x33159 - x33162 - x33188 + x33189 - x33190 - x33191 + x33192 + x33193 - x33194 - x33195 + x33196 + x33197 + x33198) + x33199 - x63*(x14306 + x14318 - x14330 + x14334 - x14342 + x33171 + x33172 - x33173 + x33174 - x33175 - x33206 - x33207 + x33208 - x33209 + x33210 + x33211) + x70*(x14001 + x5253));
T_others[32] = x69*(x106*(-L*x13980 + L*x13981 - x13972 - x14029 + x14046 + x33170 + x5717) - x123*(-x33200 + x33201 - x33202 + x33203 - x33204 + x6414) - x123*(x13965 + x33163 - x33177 + x33178 - x33179 + x33180 - x33181 + x33212 - x33213 + x33214 - x33215 + x33216) + x33199 - x63*(x33176 + x33182 + x33183 - x33184 + x33185 - x33186 - x33217 - x33218 + x33219 - x33220 + x33221 + x33222)) + x69*(x106*(x13373*x1858 + x13377*x1858 - x13379*x1858 - x13410*x1858 - 3*x13498 + x33223 + x33226 - x33227 + x33230 - x33231 + x33235 - x33236 + x33237 - x33238 + x33239 + x33240 + x5717) - x123*(x13959 + x33222 + x7063) - x123*(-x33189 + x33190 - x33193 + x33194 - x33197 - x33223 + x33224 - x33225 - x33226 + x33227 + x33228 - x33229 - x33230 + x33231 + x33232 + x33233) + x33234 - x63*(12*x13721 + 12*x13734 - 12*x13749 + 12*x13752 - 12*x13760 + x33206 + x33207 - x33208 + x33209 - x33210 - x33241 - x33242 + x33243 - x33244 + x33245 + x33246) + x70*(x13704 + x5365));
T_others[33] = x69*(x106*(-L*x13684 + L*x13685 - x13683 - x13720 + x13751 + x33205 + x7460) - x123*(-x33235 + x33236 - x33237 + x33238 - x33239 + x6750) - x123*(x13667 + x33198 - x33212 + x33213 - x33214 + x33215 - x33216 + x33247 - x33248 + x33249 - x33250 + x33251) + x33234 - x63*(-x13372 + x13374 - x13376 + x13378 - x13380 + x33211 + x33217 + x33218 - x33219 + x33220 - x33221 + x33252)) + x69*(x106*(x13048*x1858 - 3*x13050 + x13052*x1858 - x13054*x1858 - 3*x13242 + x33253 + x33254 - x33255 + x33256 - x33257 + x33260 - x33261 + x33262 - x33263 + x33264 + x33265 + x7460) - x123*(x13661 + x33252 + x6748) - x123*(x13243 + x13244 - x13245 + x13246 - x13247 - x33224 + x33225 - x33228 + x33229 - x33232 - x33253 - x33254 + x33255 - x33256 + x33257 + x33258) + x33259 - x63*(12*x13416 + 12*x13430 - 12*x13448 + 12*x13450 - 12*x13461 + x33241 + x33242 - x33243 + x33244 - x33245 - x33266 - x33267 + x33268 - x33269 + x33270 + x33271) + x70*(x13411 + x5877));
T_others[34] = x69*(x106*(L*x13377 - L*x13379 - x13498 + x13733 - x13750 + x33240 + x6128) - x123*(-x33260 + x33261 - x33262 + x33263 - x33264 + x5717) - x123*(x13360 + x33233 - x33247 + x33248 - x33249 + x33250 - x33251 + x33272 - x33273 + x33274 - x33275 + x33276) + x33259 - x63*(x13381 + x33246 - x33277 - x33278 + x33279 - x33280 + x33281 + x33282)) + x69*(x106*(-x11503*x1858 + x11504*x1858 - x11505*x1858 + x11506*x1858 - x11507*x1858 + x11630 + x11632 - x11633 + x11635 - x11637 + x13249 + x13250 - x13251 + x13252 - x13253 + x33284 - x33285 + x33286 + x33287 - x33288 + x6128) - x123*x13255 - x123*(x13352 + x33282 + x6414) + x33283 - x63*(x11371 + x11639 + x11640 - x11641 + x11642 - x11643 + 12*x13090 + 12*x13103 - 12*x13117 + 12*x13124 - 12*x13130 + x33266 + x33267 - x33268 + x33269 - x33270 + x33289) + x70*(x11475 + x13075));
T_others[35] = x69*(x106*(L*x13048 + L*x13052 - L*x13054 - x13050 - x13242 + x33265 + x5701) - x123*(-x33284 + x33285 - x33286 - x33287 + x33288 + x6128) - x123*(x11601 + x11606 + x11612 - x11620 + x11621 - x11627 + x33258 - x33272 + x33273 - x33274 + x33275 - x33276) + x33283 - x63*(x11646 + x33271 + x33277 + x33278 - x33279 + x33280 - x33281 + x33290)) + x69*(-x106*(-x11460 + x11465 - x11468 - x11471 + x11473 + x13137 + x33291) + x123*(x13354 + x33292) + x123*(x13132 + x13133 - x13134 + x13135 - x13136 + x13248) - x168*(x13353 + x33290) + x63*(x11467 - 12*x11630 - 12*x11632 + 12*x11633 - 12*x11635 + 12*x11637 + x33289) + x70*(x11508 + x5210));
T_others[36] = x69*((1.0/2.0)*x11316 + x11454*x168 - x123*(x11446 + x33293) - x63*(x11371 + x11704 + x33294)) + x69*(-x106*(x11661 + 3*x11713 - x11717*x1858 + x11719*x1858 - x11721*x1858 + x11814*x1858 - x12031 + x12037 - x12051 + x31689 - x33298 + x33300 - x33301 + x33304 - x33305 + x33307 - x33308) - x123*(x11705 + x11991) + x123*(-x11321*x286 + x11322*x286 + x11330*x286 - x11333*x286 + 7*x11447 - x33297 + x33298 - x33299 - x33300 + x33301 + x33302 - x33303 - x33304 + x33305 + x33306 + x33309) + x33296 + x63*(x11321*x327 - x11322*x327 - x11329*x6044 - x11330*x327 + x11332*x6044 + x11333*x327 - 16*x11447 - 12*x11808 + 12*x11809 - 12*x11810 + x33310 - x33311 + x33312 - x33313 + x33314 + x33315) + x70*(x11667 + x32663));
T_others[37] = x69*(-x106*(x11447 - x11744 + x11750 - x11772 + x11777 + x11813) - x11662*x123 + x123*(x11711 + 3*x11808 - 3*x11809 + 3*x11810 - 3*x11811 + 3*x11812 + x33293 - x33316 - x33317 + x33318 - x33319 + x33320) + x33296 + x63*(x11467 + x11714 + x11716 - x11718 + x11720 - x11722 - 6*x11808 + 6*x11809 - 6*x11810 + 6*x11811 - 6*x11812 + x12000 + x33294)) + x69*(x106*(x12144 - x12393 + x12405 - x12415 + x12430 - x12436 + x33321 - x33322 + x33323 - x33324 + x33325 + x33326) - x123*(x33292 + x33295) + x123*(x33297 + x33299 - x33302 + x33303 - x33306 + x33326 - x33330 - x33331 + x33332 - x33333 + x33334 + x33335) + x33329 + x63*(-12*x12031 + 12*x12037 - 12*x12051 + 12*x33307 - 12*x33308 - x33310 + x33311 - x33312 + x33313 - x33314 + x33336 - x33337 + x33338 - x33339 + x33340 + x33341) + x70*(x11663 + x12011));
T_others[38] = x69*(x106*(-x11713 - x11815 + x11816 - x11817 + x11818 + x12031 - x12037 + x12051 + x31689 - x33307 + x33308) - x123*(-x33321 + x33322 - x33323 + x33324 - x33325 + x33342) + x123*(x33309 + x33316 + x33317 - x33318 + x33319 - x33320 + x33327 - x33343 - x33344 + x33345 - x33346 + x33347) + x33329 + x63*(x11723 + x12309 + x12315 + x12317 - x12318 + x12319 - x12320 + x33315)) + x69*(x106*(x12067 + x12457 + x31689 + x33357 - x33358 + x33359 - x33360 + x33361 + x33362) - x123*(x33328 + x33348) + x123*(x12067 + x33330 + x33331 - x33332 + x33333 - x33334 - x33351 - x33352 + x33353 - x33354 + x33355 + x33356) + x33350 + x63*(-12*x12061 - 12*x12140 + 12*x12141 - 12*x12142 + 12*x12143 - x33336 + x33337 - x33338 + x33339 - x33340 + x33363 - x33364 + x33365 - x33366 + x33367 + x33368) + x70*(x12326 + x32750));
T_others[39] = x69*(x106*(x11467 + x12145) - x123*(x33292 - x33357 + x33358 - x33359 + x33360 - x33361) + x123*(x12455 - x15442 + x15443 - x15446 + x15448 - x15449 + x33335 + x33343 + x33344 - x33345 + x33346 - x33347) + x33350 + x63*(x12321 + x12610 + x33341 + x33369 - x33370 + x33371 - x33372 + x33373)) + x69*(x106*(x11467 - 3*x15324 - x15336*x1858 + x15354*x1858 - x15357*x1858 + x15363*x1858 + x33378 + x33379 - x33380 + x33381 - x33382 + x33383 + x33384) - x123*(x33349 + x33374) + x123*(x15440 - x15738 + x15739 - x15742 + x15744 - x15745 + x33351 + x33352 - x33353 + x33354 - x33355 + x33378) + x33377 + x63*(-12*x12341 + 12*x12348 - 12*x12364 + 12*x12369 - 12*x12373 - x33363 + x33364 - x33365 + x33366 - x33367 + x33385 - x33386 + x33387 - x33388 + x33389 + x33390) + x70*(x12007 + x15313));
T_others[40] = x69*(x106*(-L*x12367 + L*x12375 - x12456 + x15335 - x15356 + x33291 + x33362) + x123*(x15451 + x33356 + x33375) - x123*(x12002 - x33379 + x33380 - x33381 + x33382 - x33383) + x33377 + x63*(x15609 + x33368 - x33369 + x33370 - x33371 + x33372 - x33373 + x33391 - x33392 + x33393 - x33394 + x33395)) + x69*(x106*(-3*x15629 - x15640*x1858 + x15660*x1858 - x15662*x1858 + x15668*x1858 + x33291 + x33400 + x33401 - x33402 + x33403 - x33404 + x33405 + x33406) - x123*(x12311 + x33376) + x123*(x15747 + x33399 + x33400) + x33398 + x63*(-12*x15332 + 12*x15340 - 12*x15353 + 12*x15359 - 12*x15362 - x33385 + x33386 - x33387 + x33388 - x33389 + x33407 - x33408 + x33409 - x33410 + x33411 + x33412) + x70*(x15618 + x32641));
T_others[41] = x69*(x106*(-L*x15357 + L*x15363 - x15324 - x15337 + x15355 + x33342 + x33384) - x123*(x33348 - x33401 + x33402 - x33403 + x33404 - x33405) + x123*(x15440 + x15441 + x15444 - x15445 + x15447 - x15450 + x33396 - x33413 - x33414 + x33415 - x33416 + x33417) + x33398 + x63*(x15907 + x33390 - x33391 + x33392 - x33393 + x33394 - x33395 + x33418 - x33419 + x33420 - x33421 + x33422)) + x69*(x106*(x15749 - 3*x15928 - x15939*x1858 + x15959*x1858 - x15961*x1858 + x15969*x1858 + x33342 + x33432 - x33433 + x33434 - x33435 + x33436 + x33437) - x123*(x33397 - x7365) + x123*(x15737 + x15740 - x15741 + x15743 - x15746 + x15749 - x33426 - x33427 + x33428 - x33429 + x33430 + x33431) + x33425 + x63*(-12*x15637 + 12*x15644 - 12*x15659 + 12*x15664 - 12*x15667 - x33407 + x33408 - x33409 + x33410 - x33411 + x33438 - x33439 + x33440 - x33441 + x33442 + x33443) + x70*(x12322 + x15917));
T_others[42] = x69*(x106*(-L*x15662 + L*x15668 - x15629 - x15641 + x15661 + x33406 + x33444) - x123*(x33041 - x33432 + x33433 - x33434 + x33435 - x33436) + x123*(x33399 + x33413 + x33414 - x33415 + x33416 - x33417 + x33423 - x33445 - x33446 + x33447 - x33448 + x33449) + x33425 + x63*(x16201 + x33412 - x33418 + x33419 - x33420 + x33421 - x33422 + x33450 - x33451 + x33452 - x33453 + x33454)) + x69*(x106*(-3*x16221 - x16232*x1858 + x16252*x1858 - x16254*x1858 + x16260*x1858 + x33444 + x33464 + x33465 - x33466 + x33467 - x33468 + x33469 + x33470) - x123*(x33424 - x7684) + x123*(x33426 + x33427 - x33428 + x33429 - x33430 - x33458 - x33459 + x33460 - x33461 + x33462 + x33463 + x33464) + x33457 + x63*(-x15937 + x15943 - x15958 + x15964 - x15968 + x16501 + x16502 - x16503 + x16504 - x16505 - x33438 + x33439 - x33440 + x33441 - x33442 + x33471) + x70*(x16210 + x32643));
T_others[43] = x69*(x106*(-L*x15961 + L*x15969 - x15928 - x15940 + x15960 + x33292 + x33437) - x123*(x33374 - x33465 + x33466 - x33467 + x33468 - x33469) + x123*(x33431 + x33445 + x33446 - x33447 + x33448 - x33449 + x33455 - x33472 - x33473 + x33474 - x33475 + x33476) + x33457 + x63*(x16496 + x33443 - x33450 + x33451 - x33452 + x33453 - x33454 + x33477 - x33478 + x33479 - x33480 + x33481)) + x69*(x106*(-3*x16519 + x16527 - x16530*x1858 - x16532 + x16546 + x16547*x1858 - x16548*x1858 - x16550 + x16553 + x16554*x1858 + x33292 + x33490 + x33491 - x33492 + x33493 - x33494 + x33495) - x123*(x33456 - x7997) + x123*(x33458 + x33459 - x33460 + x33461 - x33462 + x33484 - x33485 + x33486 - x33487 + x33488 + x33489 + x33490) + x33483 + x63*(x11467 - 12*x16229 + 12*x16235 - 12*x16251 + 12*x16256 - 12*x16259 + x16506 - x33496 - x33497 + x33498 - x33499 + x33500 + x33501) + x70*(x15309 + x16515));
T_others[44] = x69*(x106*(-L*x16254 + L*x16260 - x16221 - x16233 + x16253 + x33470 - x8093) - x123*(-x33491 + x33492 - x33493 + x33494 - x33495 - x8001) + x123*(x33463 + x33472 + x33473 - x33474 + x33475 - x33476 + x33482 + x33502) + x33483 + x63*(x16783 + x33471 - x33477 + x33478 - x33479 + x33480 - x33481 + x33503)) + x69*(-x106*(-x11323*x33510 + x11329*x33510 - x11332*x33510 - x16806 + x16809 - x16824 + x24651*x3611 - x33505 + x33506 + x33507 - x33509 - x33511 + x33512 + x33513*x3611 - x33514 + x33515 + x8093) + x123*(x16784 + x8312) - x123*(x11329*x33504 - x11332*x33504 + x16800*x286 - 3*x16806 + x16808*x286 + 3*x16809 - 3*x16824 - x16825*x286 + x33489 - 3*x33505 + 3*x33506 + x33507) + x33508 - x63*(-x11329*x33516 + x11332*x33516 + x11371 + 12*x16527 - 12*x16532 + 12*x16546 - 12*x16550 + 12*x16553 - x16800*x327 + 6*x16806 - x16808*x327 - 6*x16809 + 6*x16824 + x16825*x327 + x33501 + 6*x33505 - 6*x33506) + x70*(x16797 + x32599));
T_others[45] = x69*(-x106*(L*x16530 - L*x16547 + L*x16548 - L*x16554 + x16519 - x16527 + x16532 - x16546 + x16550 - x16553 + x6750) + x123*(x33509 + x33511 - x33512 + x33514 - x33515 + x7063) - x123*(x11329*x33517 - x11332*x33517 - x154*x16825 + x17020 + x1787*x24651 + x1787*x33513 - x33484 + x33485 - x33486 + x33487 - x33488 + x33502) + x33508 - x63*(-L*x32241 - L*x32244 - x11329*x33518 + x11332*x33518 + x11371 + x129*x16825 + x17014 + x17016 - x17017 + x17018 - x17019 + x33496 + x33497 - x33498 + x33499 - x33500 + x33503));
T_others[46] = x69*(x106*(x33520 - x33522 + x33524 - x33525 - x33526 + x33528 + x33529 - x33530 + x33531 - x33533 - 11*x33535 + x33553 + 22*x5210*x_f) - x123*(-x33591 + x33592 + x33593 - x33594 + x33595 + x33596 - x33597 - x33598 + x33599 - x33600 + x33614 + x33616) + x33537 + x63*(x33554 - x33555 - x33557 + x33558 - x33559 - x33561 + x33562 + x33563 - x33564 + x33565 + x33566 + x33577 + x33590) - x68*(-x12613*x267 + x12619*x267 - x12625*x267 - x12654*x267 + x12655*x267 + 5*x33520 - 5*x33522 + 5*x33524 - 5*x33526 + 5*x33528 + x33591 - x33592 - x33593 + x33594 - x33595 - x33596 + x33597 + x33598 - x33599 + x33600 + x33606 + x33610));
T_others[47] = x69*(-x123*(x33566 + x33617) + (1.0/2.0)*x33537 + x63*(x33553 - x33554 + x33555 + x33557 - x33558 + x33559 + x33561 - x33562 - x33563 + x33564 - x33565 + x33613 + x33618) - x68*(x12638*x36 - x19438*x33607 - x19438*x33608 - x23*x33619 + x24*x33619 - x31719*x36 + x31720*x36 - x31721*x36 + x31722*x36 + x33556*x898 + x33613 + x33616)) + x69*(L*(x33622 + x33628) - x106*(x33536 + x33577 + x33628) + x123*(x33617 + x33658 + x33665 - x33668 - x33672 + x33675 + x33677 - x33681 - x33683 + x33685 - x33688 + x33700) - x63*(x33590 + x33613 + x33639 + x33652) + x68*(x33606 + x33654 - x33655 - x33657 - x33658 - x33659 + x33661 - x33662 - x33664 - x33665 - x33666 + x33667 + x33668 + x33669 + x33671 + x33672 + x33673 - x33674 - x33675 - x33676 - x33677 - x33679 + x33680 + x33681 + x33682 + x33683 + x33684 - x33685 - x33686 + x33687 + x33688));
T_others[48] = x69*(-x106*(x33601 + x33602 - x33603 + x33604 - x33605 - x33623 + x33624 - x33625 + x33626 - x33627 + x33701) + x123*x33614 - x63*(x33577 + x33618 + x33699 + x33702) + x68*(x33610 + x33700)) + x69*(L*(x33705 + x33711) - x106*(x33622 + x33699 + x33711) + x123*(x33617 - x33741 + x33744 + x33749 - x33753 - x33755 + x33759 - x33766 + x33767 + x33771 - x33772 + x33784) - x63*(x33639 + x33702 + x33723 + x33736) + x68*(-x33654 + x33655 + x33657 - x33661 + x33662 + x33664 - x33671 - x33673 + x33674 - x33684 - x33737 + x33739 + x33740 + x33741 + x33742 - x33743 - x33744 - x33746 - x33747 - x33748 - x33749 + x33751 + x33752 + x33753 + x33754 + x33755 - x33756 + x33757 - x33758 - x33759 + x33761 - x33763 + x33764 - x33765 + x33766 - x33767 - x33769 + x33770 - x33771 + x33772));
T_others[49] = x69*(-x106*(x33653 - x33656 + x33660 - x33663 + x33670 - x33706 + x33707 - x33708 + x33709 - x33710 + x33785) + x123*(x33612 + x33639) - x63*(x33652 + x33699 + x33783 + x33786) + x68*(x33659 + x33666 - x33667 - x33669 + x33676 + x33679 - x33680 - x33682 + x33686 - x33687 + x33784)) + x69*(L*(x33789 + x33795) - x106*(x33705 + x33783 + x33795) + x123*(x33617 - x33825 + x33828 + x33833 - x33837 - x33839 + x33843 - x33850 + x33851 + x33855 - x33856 + x33868) - x63*(x33723 + x33786 + x33807 + x33820) + x68*(x33737 - x33739 - x33742 + x33746 + x33747 - x33751 + x33756 - x33757 - x33761 + x33763 - x33821 + x33823 + x33824 + x33825 + x33826 - x33827 - x33828 - x33830 - x33831 - x33832 - x33833 + x33835 + x33836 + x33837 + x33838 + x33839 - x33840 + x33841 - x33842 - x33843 + x33845 - x33847 + x33848 - x33849 + x33850 - x33851 - x33853 + x33854 - x33855 + x33856));
T_others[50] = x69*(-x106*(x33738 - x33745 + x33750 + x33760 - x33762 - x33790 + x33791 - x33792 + x33793 - x33794 + x33869) + x123*(x33612 + x33723) - x63*(x33736 + x33783 + x33867 + x33870) + x68*(-x33740 + x33743 + x33748 - x33752 - x33754 + x33758 - x33764 + x33765 + x33769 - x33770 + x33868)) + x69*(L*(x33873 + x33879) - x106*(x33789 + x33867 + x33879) + x123*(x33617 - x33909 + x33912 + x33917 - x33921 - x33923 + x33927 - x33934 + x33935 + x33939 - x33940 + x33952) - x63*(x33807 + x33870 + x33891 + x33904) + x68*(x33821 - x33823 - x33826 + x33830 + x33831 - x33835 + x33840 - x33841 - x33845 + x33847 - x33905 + x33907 + x33908 + x33909 + x33910 - x33911 - x33912 - x33914 - x33915 - x33916 - x33917 + x33919 + x33920 + x33921 + x33922 + x33923 - x33924 + x33925 - x33926 - x33927 + x33929 - x33931 + x33932 - x33933 + x33934 - x33935 - x33937 + x33938 - x33939 + x33940));
T_others[51] = x69*(-x106*(x33822 - x33829 + x33834 + x33844 - x33846 - x33874 + x33875 - x33876 + x33877 - x33878 + x33953) + x123*(x33612 + x33807) - x63*(x33820 + x33867 + x33951 + x33954) + x68*(-x33824 + x33827 + x33832 - x33836 - x33838 + x33842 - x33848 + x33849 + x33853 - x33854 + x33952)) + x69*(L*(x33957 + x33963) - x106*(x33873 + x33951 + x33963) + x123*(x33617 - x33993 + x33996 + x34001 - x34005 - x34007 + x34011 - x34018 + x34019 + x34023 - x34024 + x34036) - x63*(x33891 + x33954 + x33975 + x33988) + x68*(x33905 - x33907 - x33910 + x33914 + x33915 - x33919 + x33924 - x33925 - x33929 + x33931 - x33989 + x33991 + x33992 + x33993 + x33994 - x33995 - x33996 - x33998 - x33999 - x34000 - x34001 + x34003 + x34004 + x34005 + x34006 + x34007 - x34008 + x34009 - x34010 - x34011 + x34013 - x34015 + x34016 - x34017 + x34018 - x34019 - x34021 + x34022 - x34023 + x34024));
T_others[52] = x69*(-x106*(x33906 - x33913 + x33918 + x33928 - x33930 - x33958 + x33959 - x33960 + x33961 - x33962 + x34037) + x123*(x33612 + x33891) - x63*(x33904 + x33951 + x34035 + x34038) + x68*(-x33908 + x33911 + x33916 - x33920 - x33922 + x33926 - x33932 + x33933 + x33937 - x33938 + x34036)) + x69*(L*(x34041 + x34047) - x106*(x33957 + x34035 + x34047) + x123*(x33617 - x34077 + x34080 + x34085 - x34089 - x34091 + x34095 - x34102 + x34103 + x34107 - x34108 + x34120) - x63*(x33975 + x34038 + x34059 + x34072) + x68*(x33989 - x33991 - x33994 + x33998 + x33999 - x34003 + x34008 - x34009 - x34013 + x34015 - x34073 + x34075 + x34076 + x34077 + x34078 - x34079 - x34080 - x34082 - x34083 - x34084 - x34085 + x34087 + x34088 + x34089 + x34090 + x34091 - x34092 + x34093 - x34094 - x34095 + x34097 - x34099 + x34100 - x34101 + x34102 - x34103 - x34105 + x34106 - x34107 + x34108));
T_others[53] = x69*(-x106*(x33990 - x33997 + x34002 + x34012 - x34014 - x34042 + x34043 - x34044 + x34045 - x34046 + x34121) + x123*(x33612 + x33975) - x63*(x33988 + x34035 + x34119 + x34122) + x68*(-x33992 + x33995 + x34000 - x34004 - x34006 + x34010 - x34016 + x34017 + x34021 - x34022 + x34120)) + x69*(L*(x34125 + x34131) - x106*(x34041 + x34119 + x34131) + x123*(x33617 - x34161 + x34164 + x34169 - x34173 - x34175 + x34179 - x34186 + x34187 + x34191 - x34192 + x34204) - x63*(x34059 + x34122 + x34143 + x34156) + x68*(x34073 - x34075 - x34078 + x34082 + x34083 - x34087 + x34092 - x34093 - x34097 + x34099 - x34157 + x34159 + x34160 + x34161 + x34162 - x34163 - x34164 - x34166 - x34167 - x34168 - x34169 + x34171 + x34172 + x34173 + x34174 + x34175 - x34176 + x34177 - x34178 - x34179 + x34181 - x34183 + x34184 - x34185 + x34186 - x34187 - x34189 + x34190 - x34191 + x34192));
T_others[54] = x69*(-x106*(x34074 - x34081 + x34086 + x34096 - x34098 - x34126 + x34127 - x34128 + x34129 - x34130 + x34205) + x123*(x33612 + x34059) - x63*(x34072 + x34119 + x34203 + x34206) + x68*(-x34076 + x34079 + x34084 - x34088 - x34090 + x34094 - x34100 + x34101 + x34105 - x34106 + x34204)) + x69*(L*(x34210 + x34216) - x106*(x34125 + x34203 + x34216) + x123*(x33617 + x34242 + x34243 - x34245 - x34246 + x34247 + x34248 - x34250 - x34251 + x34252 - x34253 + x34262) - x63*(x34143 + x34206 + x34229 + x34241) + x68*(-p1_i_dot_dt*x34244 + x11479*x36 + x11486*x36 - x11490*x36 + x11497*x36 - x11502*x36 - x23*x34249 + x24*x34249 + x249*x33556 - x33607*x34232 + x34157 - x34159 - x34162 + x34166 + x34167 - x34171 + x34176 - x34177 - x34181 + x34183 - x34242 - x34243 + x34245 + x34246 - x34247 - x34248 + x34250 + x34251 - x34252 + x34253 + x34259));
T_others[55] = x69*(-x106*(x34158 - x34165 + x34170 + x34180 - x34182 - x34211 + x34212 - x34213 + x34214 - x34215 + x34278) + x123*(x33612 + x34143) - x63*(x34156 + x34203 - x34218 + x34219 + x34220 - x34221 + x34222 + x34224 - x34225 - x34226 + x34227 - x34228 + x34260) + x68*(-x34160 + x34163 + x34168 - x34172 - x34174 + x34178 - x34184 + x34185 + x34189 - x34190 + x34262)) + x69*(L*(x33617 - x34254 + x34255 - x34256 + x34257 - x34258 + x34263 - x34264 + x34265 - x34266 + x34267) + x106*(x34241 + x34254 - x34255 + x34256 - x34257 + x34258 - x34263 + x34264 - x34265 + x34266 - x34267 + x34278) - x123*(x33612 + x34261 - x34268 + x34269 + x34270 - x34271 + x34272 + x34273 - x34274 - x34275 + x34276 - x34277) + x63*(x34229 + x34260) - x68*(x34259 + x34268 - x34269 - x34270 + x34271 - x34272 - x34273 + x34274 + x34275 - x34276 + x34277));
T_others[56] = x69*(x17027*(x11370*x_f - x33534) - x63*(x34290 + x34309) + x68*(x34290 + x34297)) + x69*(x106*(x34291 + x34293 - x34294 + x34295 - x34296 - x34310 + x34311 - x34312 + x34313 - x34314 + x34316) - x123*(x33612 + x34344 - x34347 - x34353 + x34357 + x34359 - x34363 + x34369 - x34371 - x34373 + x34376 + x34389) + x34315 + x63*(x34290 + x34298 + x34299 - x34300 - x34301 + x34302 + x34304 - x34305 - x34306 + x34307 - x34308 + x34327 + x34340) - x68*(-x11317*x267 + x11321*x267 - x11322*x267 - x11330*x267 + x11333*x267 + 5*x34291 + 5*x34293 - 5*x34294 + 5*x34295 - 5*x34296 + x34341 - x34343 - x34344 - x34345 - x34346 + x34347 + x34349 + x34351 + x34352 + x34353 + x34354 - x34356 - x34357 - x34358 - x34359 - x34360 + x34361 - x34362 + x34363 + x34364 - x34366 + x34368 - x34369 - x34370 + x34371 + x34372 + x34373 + x34375 - x34376 - x34377));
T_others[57] = x69*(-x123*(x33617 + x34290) + (1.0/2.0)*x34315 + x63*(x34309 + x34316 + x34388 + x34390) - x68*(-q1_i_dot_dt*x34244 - q1_i_dot_dt*x34348 + x11320*x36 - x11325*x36 + x11327*x36 + x11334*x36 - x11335*x36 - x23*x34391 + x24*x34391 + x33556*x49 + x34389)) + x69*(L*(x34278 + x34397) - x106*(x33612 + x34327 + x34397) - x123*(x33612 + x34425 - x34428 - x34433 + x34437 + x34439 - x34443 + x34449 - x34451 - x34453 + x34456 + x34469) + x63*(x34327 + x34390 + x34408 + x34421) - x68*(-x34341 + x34343 + x34346 - x34351 - x34352 + x34356 - x34361 + x34362 + x34366 - x34368 + x34422 - x34424 - x34425 - x34426 - x34427 + x34428 + x34429 + x34431 + x34432 + x34433 + x34434 - x34436 - x34437 - x34438 - x34439 - x34440 + x34441 - x34442 + x34443 + x34444 - x34446 + x34448 - x34449 - x34450 + x34451 + x34452 + x34453 + x34455 - x34456 - x34457));
T_others[58] = x69*(-x106*(x34210 + x34342 - x34350 + x34355 + x34365 - x34367 - x34392 + x34393 - x34394 + x34395 - x34396) - x123*(x33617 + x34327) + x63*(x34340 + x34388 + x34468 + x34470) - x68*(x34345 - x34349 - x34354 + x34358 + x34360 - x34364 + x34370 - x34372 - x34375 + x34377 + x34469)) + x69*(L*(x34205 + x34476) - x106*(x34278 + x34408 + x34476) - x123*(x33612 + x34504 - x34507 - x34512 + x34516 + x34518 - x34522 + x34528 - x34530 - x34532 + x34535 + x34548) + x63*(x34408 + x34470 + x34487 + x34500) - x68*(-x34422 + x34424 + x34427 - x34431 - x34432 + x34436 - x34441 + x34442 + x34446 - x34448 + x34501 - x34503 - x34504 - x34505 - x34506 + x34507 + x34508 + x34510 + x34511 + x34512 + x34513 - x34515 - x34516 - x34517 - x34518 - x34519 + x34520 - x34521 + x34522 + x34523 - x34525 + x34527 - x34528 - x34529 + x34530 + x34531 + x34532 + x34534 - x34535 - x34536));
T_others[59] = x69*(-x106*(x34125 + x34423 - x34430 + x34435 + x34445 - x34447 - x34471 + x34472 - x34473 + x34474 - x34475) - x123*(x33617 + x34408) + x63*(x34421 + x34468 + x34547 + x34549) - x68*(x34426 - x34429 - x34434 + x34438 + x34440 - x34444 + x34450 - x34452 - x34455 + x34457 + x34548)) + x69*(L*(x34121 + x34555) - x106*(x34205 + x34487 + x34555) - x123*(x33612 + x34583 - x34586 - x34591 + x34595 + x34597 - x34601 + x34607 - x34609 - x34611 + x34614 + x34627) + x63*(x34487 + x34549 + x34566 + x34579) - x68*(-x34501 + x34503 + x34506 - x34510 - x34511 + x34515 - x34520 + x34521 + x34525 - x34527 + x34580 - x34582 - x34583 - x34584 - x34585 + x34586 + x34587 + x34589 + x34590 + x34591 + x34592 - x34594 - x34595 - x34596 - x34597 - x34598 + x34599 - x34600 + x34601 + x34602 - x34604 + x34606 - x34607 - x34608 + x34609 + x34610 + x34611 + x34613 - x34614 - x34615));
T_others[60] = x69*(-x106*(x34041 + x34502 - x34509 + x34514 + x34524 - x34526 - x34550 + x34551 - x34552 + x34553 - x34554) - x123*(x33617 + x34487) + x63*(x34500 + x34547 + x34626 + x34628) - x68*(x34505 - x34508 - x34513 + x34517 + x34519 - x34523 + x34529 - x34531 - x34534 + x34536 + x34627)) + x69*(L*(x34037 + x34634) - x106*(x34121 + x34566 + x34634) - x123*(x33612 + x34662 - x34665 - x34670 + x34674 + x34676 - x34680 + x34686 - x34688 - x34690 + x34693 + x34706) + x63*(x34566 + x34628 + x34645 + x34658) - x68*(-x34580 + x34582 + x34585 - x34589 - x34590 + x34594 - x34599 + x34600 + x34604 - x34606 + x34659 - x34661 - x34662 - x34663 - x34664 + x34665 + x34666 + x34668 + x34669 + x34670 + x34671 - x34673 - x34674 - x34675 - x34676 - x34677 + x34678 - x34679 + x34680 + x34681 - x34683 + x34685 - x34686 - x34687 + x34688 + x34689 + x34690 + x34692 - x34693 - x34694));
T_others[61] = x69*(-x106*(x33957 + x34581 - x34588 + x34593 + x34603 - x34605 - x34629 + x34630 - x34631 + x34632 - x34633) - x123*(x33617 + x34566) + x63*(x34579 + x34626 + x34705 + x34707) - x68*(x34584 - x34587 - x34592 + x34596 + x34598 - x34602 + x34608 - x34610 - x34613 + x34615 + x34706)) + x69*(L*(x33953 + x34713) - x106*(x34037 + x34645 + x34713) - x123*(x33612 + x34741 - x34744 - x34749 + x34753 + x34755 - x34759 + x34765 - x34767 - x34769 + x34772 + x34785) + x63*(x34645 + x34707 + x34724 + x34737) - x68*(-x34659 + x34661 + x34664 - x34668 - x34669 + x34673 - x34678 + x34679 + x34683 - x34685 + x34738 - x34740 - x34741 - x34742 - x34743 + x34744 + x34745 + x34747 + x34748 + x34749 + x34750 - x34752 - x34753 - x34754 - x34755 - x34756 + x34757 - x34758 + x34759 + x34760 - x34762 + x34764 - x34765 - x34766 + x34767 + x34768 + x34769 + x34771 - x34772 - x34773));
T_others[62] = x69*(-x106*(x33873 + x34660 - x34667 + x34672 + x34682 - x34684 - x34708 + x34709 - x34710 + x34711 - x34712) - x123*(x33617 + x34645) + x63*(x34658 + x34705 + x34784 + x34786) - x68*(x34663 - x34666 - x34671 + x34675 + x34677 - x34681 + x34687 - x34689 - x34692 + x34694 + x34785)) + x69*(L*(x33869 + x34792) - x106*(x33953 + x34724 + x34792) - x123*(x33612 + x34820 - x34823 - x34828 + x34832 + x34834 - x34838 + x34844 - x34846 - x34848 + x34851 + x34864) + x63*(x34724 + x34786 + x34803 + x34816) - x68*(-x34738 + x34740 + x34743 - x34747 - x34748 + x34752 - x34757 + x34758 + x34762 - x34764 + x34817 - x34819 - x34820 - x34821 - x34822 + x34823 + x34824 + x34826 + x34827 + x34828 + x34829 - x34831 - x34832 - x34833 - x34834 - x34835 + x34836 - x34837 + x34838 + x34839 - x34841 + x34843 - x34844 - x34845 + x34846 + x34847 + x34848 + x34850 - x34851 - x34852));
T_others[63] = x69*(-x106*(x33789 + x34739 - x34746 + x34751 + x34761 - x34763 - x34787 + x34788 - x34789 + x34790 - x34791) - x123*(x33617 + x34724) + x63*(x34737 + x34784 + x34863 + x34865) - x68*(x34742 - x34745 - x34750 + x34754 + x34756 - x34760 + x34766 - x34768 - x34771 + x34773 + x34864)) + x69*(L*(x33785 + x34871) - x106*(x33869 + x34803 + x34871) - x123*(-x34896 + x34897 + x34898 - x34899 + x34900 + x34901 - x34902 - x34903 + x34904 - x34905 + x34915 + x34917) + x63*(x34803 + x34865 + x34884 + x34895) - x68*(-x34817 + x34819 + x34822 - x34826 - x34827 + x34831 - x34836 + x34837 + x34841 - x34843 + x34896 - x34897 - x34898 + x34899 - x34900 - x34901 + x34902 + x34903 - x34904 + x34905 + x34911 + x34913));
T_others[64] = x69*(-x106*(x33705 + x34818 - x34825 + x34830 + x34840 - x34842 - x34866 + x34867 - x34868 + x34869 - x34870) - x123*(x33617 + x34803) + x63*(x34816 + x34863 + x34914 + x34918) - x68*(x34821 - x34824 - x34829 + x34833 + x34835 - x34839 + x34845 - x34847 - x34850 + x34852 + x34914 + x34917)) + x69*(x106*(x33705 + x34906 + x34907 - x34908 + x34909 - x34910 + x34914 - x34919 + x34920 - x34921 + x34922 - x34923) + x123*(x33617 + x34947 + x34948 - x34949 - x34950 + x34952 + x34953 - x34955 - x34956 + x34957 - x34958 + x34961) + x34924 - x63*(x34884 + x34914 + x34925 - x34926 - x34927 - x34928 + x34929 + x34930 - x34931 - x34932 - x34934 + x34935 + x34936 + x34937 + x34938 - x34939 - x34941 - x34942 + x34943 + x34944 - x34945 + x34946) + x68*(-x11329*x34951 + x11332*x34951 + x16825*x267 + x1787*x33519 + x1787*x33541 - x1789*x5179 - x1789*x5215 - x23*x34954 + x24*x34954 + x32231*x36 - x32234*x36 + x32235*x36 - x32238*x36 + x32239*x36 - x33521*x8466 + x33527*x8466 - x33545*x8466 + x33556*x875 - x33607*x872 - x33608*x872 + x34911 - x34947 - x34948 + x34949 + x34950 - x34952 - x34953 + x34955 + x34956 - x34957 + x34958));
T_others[65] = x69*(x123*x34915 + (1.0/2.0)*x34924 - x63*(x34895 + x34918 - x34925 + x34927 + x34928 - x34929 + x34932 + x34934 - x34936 - x34937 + x34941 - x34944 + x34960) + x68*(x34913 + x34961));
T_others[66] = x69*(x106*(-L*x11*x1802 + x11440*x8551 - x11442*x8551 + x11444*x8551 - x11806*x1802 + x30923 - 4*x30925 + 4*x30927 - 4*x30929 + 4*x30931 + x34962 - x34963 - x34964 - x34965) - x123*(x30951 + x34987 - x34988 - x34989 - x34990) - x123*(x34966 + x34967 - x34968 - x34969 + x34970 + x34971 - x34972 - x34973 + x34974 + x34975 + x34981 + x34987) + x168*(x30949 + x31258 - x35012 + x35013 - x35014 + x35015 + x35020 + x8961) + x30953 - x63*(x30992 - x34991 - x34992 - x34993 - x34994 + x34995 - x34996 - x34997 - x34998 + x34999 + x35000 + x35001 - x35002 - x35003 + x35004 + x35005 + x35011));
T_others[67] = x69*(x106*(x1858*x30905 - x1858*x30906 - x1858*x30945 + x1858*x30947 + 3*x30904 - x30907 + x30908 - x30909 + x30910 - x30911 + x34963 + x34964 + x34965) - x123*(-x30924 + x30926 - x30928 + x30930 - x30932 + x34988 + x34989 + x34990) - x123*(-x34966 - x34967 + x34968 + x34969 - x34970 - x34971 + x34972 + x34973 - x34974 - x34975 - x34982 + x34983 - x34984 + x34985 - x34986 + x35021) + x168*(-x30942 + x30943 - x30944 + x30946 - x30948 + x35012 - x35013 + x35014 - x35015 + x35022 + x35023 - x8961) - x63*(x31339 + x34991 + x34992 + x34993 + x34994 - x34995 + x34996 + x34997 + x34998 - x34999 - x35000 - x35001 + x35002 + x35003 - x35004 - x35005 + x35024)) + x69*(-x106*(-4*x30934 + 4*x30936 - 4*x30938 + 4*x30940 + x30950 + x31214 - x31216 - x31218 + x31220 - x31221 + x31222 - x35025 + x35026 + x35027 + x35028) + x123*(x31233 - x31259 + x31260 - x31261 + x31262 - x31263 + x34981 + x35022 + x35054) + x123*(x34981 - x35035 - x35036 - x35037 - x35038 + x35039 + x35040 - x35041 - x35042 + x35043 + x35044 + x35050) - x168*(x35020 + x35022 + x35029 + x35034) + x31268 + x63*(x31339 + x35011 + x35055 + x35056 - x35057 - x35058 + x35059 + x35060 - x35061 - x35062 + x35063 + x35064 + x35070));
T_others[68] = x69*(-x106*(-x1858*x30920 + x1858*x30921 + x1858*x31254 - x1858*x31256 - 3*x30919 + x31249 - x35026 - x35027 - x35028) + x123*(x31250 + x35071) + x123*(x35021 + x35035 + x35036 + x35037 + x35038 - x35039 - x35040 + x35041 + x35042 - x35043 - x35044 + x35073) - x168*(x31241 + x31258 + x35023 + x35072) + x63*(x30992 + x35024 - x35055 - x35056 + x35057 + x35058 - x35059 - x35060 + x35061 + x35062 - x35063 - x35064 + x35074)) + x69*(-x106*(x31171 - x31173 - x31175 + x31177 - x31178 + x31179 + 4*x31225 - 4*x31227 + 4*x31229 - 4*x31231 + x31264 - x35075 + x35076 + x35077 + x35078) + x123*(x31190 - x31242 + x31243 - x31244 + x31245 - x31246 + x35029 + x35073 + x35104) + x123*(x35073 - x35085 - x35086 - x35087 - x35088 + x35089 + x35090 - x35091 - x35092 + x35093 + x35094 + x35100) - x168*(x35029 + x35072 + x35079 + x35084) + x31248 + x63*(x31339 + x35074 + x35105 + x35106 - x35107 - x35108 + x35109 + x35110 - x35111 - x35112 + x35113 + x35114 + x35120));
T_others[69] = x69*(-x106*(-x1858*x31217 + x1858*x31219 + x1858*x31237 - x1858*x31239 + x31214 - 3*x31216 - x35076 - x35077 - x35078) + x123*(x31233 + x35121) + x123*(x35050 + x35085 + x35086 + x35087 + x35088 - x35089 - x35090 + x35091 + x35092 - x35093 - x35094 + x35123) - x168*(x31198 + x31241 + x35034 + x35122) + x63*(x30992 + x35070 - x35105 - x35106 + x35107 + x35108 - x35109 - x35110 + x35111 + x35112 - x35113 - x35114 + x35124)) + x69*(-x106*(x31128 - x31130 - x31132 + x31134 - x31135 + x31136 + 4*x31182 - 4*x31184 + 4*x31186 - 4*x31188 + x31247 - x35125 + x35126 + x35127 + x35128) + x123*(x31147 - x31199 + x31200 - x31201 + x31202 - x31203 + x35079 + x35123 + x35154) + x123*(x35123 - x35135 - x35136 - x35137 - x35138 + x35139 + x35140 - x35141 - x35142 + x35143 + x35144 + x35150) - x168*(x35079 + x35122 + x35129 + x35134) + x31208 + x63*(x31339 + x35124 + x35155 + x35156 - x35157 - x35158 + x35159 + x35160 - x35161 - x35162 + x35163 + x35164 + x35170));
T_others[70] = x69*(-x106*(-x1858*x31174 + x1858*x31176 + x1858*x31194 - x1858*x31196 + x31171 - 3*x31173 - x35126 - x35127 - x35128) + x123*(x31190 + x35171) + x123*(x35100 + x35135 + x35136 + x35137 + x35138 - x35139 - x35140 + x35141 + x35142 - x35143 - x35144 + x35173) - x168*(x31155 + x31198 + x35084 + x35172) + x63*(x30992 + x35120 - x35155 - x35156 + x35157 + x35158 - x35159 - x35160 + x35161 + x35162 - x35163 - x35164 + x35174)) + x69*(-x106*(x31084 - x31086 - x31088 + x31090 - x31091 + x31092 + 4*x31139 - 4*x31141 + 4*x31143 - 4*x31145 + x31204 - x35175 + x35179) + x123*(x31103 - x31156 + x31157 - x31158 + x31159 - x31160 + x35129 + x35173 + x35205) + x123*(x35173 - x35186 - x35187 - x35188 - x35189 + x35190 + x35191 - x35192 - x35193 + x35194 + x35195 + x35201) - x168*(x35129 + x35172 + x35180 + x35185) + x31165 + x63*(x31339 + x35174 + x35206 + x35207 - x35208 - x35209 + x35210 + x35211 - x35212 - x35213 + x35214 + x35215 + x35221));
T_others[71] = x69*(-x106*(-x1858*x31131 + x1858*x31133 + x1858*x31151 - x1858*x31153 + x31128 - 3*x31130 + x35223) + x123*(x31147 + x35222) + x123*(x35150 + x35186 + x35187 + x35188 + x35189 - x35190 - x35191 + x35192 + x35193 - x35194 - x35195 + x35225) - x168*(x31111 + x31155 + x35134 + x35224) + x63*(x30992 + x35170 - x35206 - x35207 + x35208 + x35209 - x35210 - x35211 + x35212 + x35213 - x35214 - x35215 + x35226)) + x69*(-x106*(x31040 - x31042 - x31044 + x31046 - x31047 + x31048 + 4*x31095 - 4*x31097 + 4*x31099 - 4*x31101 + x31161 - x35227 + x35231) + x123*(x31059 - x31112 + x31113 - x31114 + x31115 - x31116 + x35180 + x35225 + x35257) + x123*(x35225 - x35238 - x35239 - x35240 - x35241 + x35242 + x35243 - x35244 - x35245 + x35246 + x35247 + x35253) - x168*(x35180 + x35224 + x35232 + x35237) + x31122 + x63*(x31339 + x35226 + x35258 + x35259 - x35260 - x35261 + x35262 + x35263 - x35264 - x35265 + x35266 + x35267 + x35273));
T_others[72] = x69*(-x106*(-x1858*x31087 + x1858*x31089 + x1858*x31107 - x1858*x31109 + x31084 - 3*x31086 + x35275) + x123*(x31103 + x35274) + x123*(x35201 + x35238 + x35239 + x35240 + x35241 - x35242 - x35243 + x35244 + x35245 - x35246 - x35247 + x35277) - x168*(x31067 + x31111 + x35185 + x35276) + x63*(x30992 + x35221 - x35258 - x35259 + x35260 + x35261 - x35262 - x35263 + x35264 + x35265 - x35266 - x35267 + x35278)) + x69*(-x106*(x30999 - x31001 - x31003 + x31005 - x31006 + x31007 + 4*x31051 - 4*x31053 + 4*x31055 - 4*x31057 + x31117 - x35279 + x35283) + x123*(x31018 - x31068 + x31069 - x31070 + x31071 - x31072 + x35232 + x35277 + x35308) + x123*(x35277 - x35290 - x35291 - x35292 - x35293 + x35294 + x35295 - x35296 - x35297 + x35298 + x35299 + x35304) - x168*(x35232 + x35276 + x35284 + x35289) + x31078 + x63*(x31339 + x35278 + x35309 + x35310 - x35311 - x35312 + x35313 + x35314 - x35315 - x35316 + x35317 + x35318 + x35323));
T_others[73] = x69*(-x106*(-x1858*x31043 + x1858*x31045 + x1858*x31063 - x1858*x31065 + x31040 - 3*x31042 + x35325) + x123*(x31059 + x35324) + x123*(x35253 + x35290 + x35291 + x35292 + x35293 - x35294 - x35295 + x35296 + x35297 - x35298 - x35299 + x35327) - x168*(x31026 + x31067 + x35237 + x35326) + x63*(x30992 + x35273 - x35309 - x35310 + x35311 + x35312 - x35313 - x35314 + x35315 + x35316 - x35317 - x35318 + x35328)) + x69*(-x106*(x30959 - x30961 - x30963 + x30965 - x30966 + x30967 + 4*x31010 - 4*x31012 + 4*x31014 - 4*x31016 + x31073 - x35329 + x35333) + x123*(x30983 - x31027 + x31028 - x31029 + x31030 - x31031 + x31584 + x35284 + x35327) + x123*(x35327 - x35340 - x35341 - x35342 - x35343 + x35344 + x35345 - x35346 - x35347 + x35348 + x35349 + x35355) - x168*(x35284 + x35326 + x35334 + x35339) + x31034 + x63*(x31339 + x35328 + x35356 + x35357 - x35358 - x35359 + x35360 + x35361 - x35362 - x35363 + x35364 + x35365 + x35370));
T_others[74] = x69*(-x106*(-x1858*x31002 + x1858*x31004 + x1858*x31022 - x1858*x31024 + x30999 - 3*x31001 + x35371) + x123*(x31018 + x31267) + x123*(x35304 + x35340 + x35341 + x35342 + x35343 - x35344 - x35345 + x35346 + x35347 - x35348 - x35349 + x35373) - x168*(x30991 + x31026 + x35289 + x35372) + x63*(x30992 + x35323 - x35356 - x35357 + x35358 + x35359 - x35360 - x35361 + x35362 + x35363 - x35364 - x35365 + x35374)) + x69*(-x106*(x30873 - x30875 - x30876 + x30878 - x30879 + x30880 + 4*x30975 - 4*x30977 + 4*x30979 - 4*x30981 + x31032 - x35375 + x35376) + x123*(x30899 + x31490 + x35334 + x35373 + x35397) + x123*(x35373 - x35382 - x35383 - x35384 - x35385 + x35386 + x35387 - x35388 - x35389 + x35390 + x35391 + x35396) - x168*(-x30882 + x30883 - x30884 + x30886 - x30888 + x35334 + x35372 + x35381) + x30993 + x63*(x31339 + x35374 + x35398 + x35399 - x35400 - x35401 + x35402 + x35403 - x35404 - x35405 + x35406 + x35407 + x35413));
T_others[75] = x69*(-x106*(-x1858*x30962 + x1858*x30964 + x1858*x30987 - x1858*x30989 + x30959 - 3*x30961 + x35415) + x123*(x30983 + x31164) + x123*(x35355 + x35382 + x35383 + x35384 + x35385 - x35386 - x35387 + x35388 + x35389 - x35390 - x35391 + x35392 - x35393 + x35394 - x35395 - x5711) - x168*(x30889 + x30991 + x35339 + x35377 - x35378 + x35379 - x35380 - x5627) + x63*(x30992 + x35370 - x35398 - x35399 + x35400 + x35401 - x35402 - x35403 + x35404 + x35405 - x35406 - x35407 + x35408 + x35409 - x35410 + x35411 - x35412)) + x69*(x106*(-4*x30891 + 4*x30893 - 4*x30895 + 4*x30897 + x35397 + x35414 + x5452) - x123*(x30889 + x31033 + x35396) - x123*(-x286*x30877 - x286*x30885 + x286*x30887 + 7*x30875 + 7*x30876 + x35396) + x168*(x30889 + x35381) + x30902 - x63*(-16*x30875 - 16*x30876 + x30877*x327 + x30885*x327 - x30887*x327 + x30992 + x35413));
T_others[76] = x69*(x123*(x154*x30852 - x154*x30853 - x154*x31292 + x154*x31294 + 5*x30851 + x35425) - x168*(x31296 + x35420) - x173*(-x11785 - x11801 - x11804) + x63*(-x129*x30852 + x129*x30853 + x129*x31292 - x129*x31294 - 6*x30851 + x30992 + x35431)) + x69*(x106*(-x30855 - 4*x30856 + 4*x30858 + x30860 - x30861 + 4*x30862 - 4*x30864 - x30866 + x30867 + x31278 + x35432 + x5724) + x123*(x31033 - x31297 + x31298 - x31299 + x31300 - x31301 + x31325 + x35425 + x35464) - x123*(x35421 - x35422 + x35423 - x35424 + x35433 + x35434 - x35435 - x35436 + x35437 + x35438 - x35439 - x35440 + x35441 + x35442 + x35447 + x5752) + x168*(x31296 + x31332 + x35416 - x35417 + x35418 - x35419 + x35469 + x5381) + x31304 - x63*(x30992 - x35426 + x35427 - x35428 + x35429 - x35430 - x35448 - x35449 - x35450 - x35451 + x35452 + x35453 - x35454 - x35455 + x35456 + x35457 + x35463));
T_others[77] = x69*(x106*(x1858*x30852 - x1858*x30853 - x1858*x31292 + x1858*x31294 + x30850 + 3*x30851 + x35470) + x123*(x31288 + x31376) - x123*(x35425 - x35433 - x35434 + x35435 + x35436 - x35437 - x35438 + x35439 + x35440 - x35441 - x35442 + x35471) + x168*(x35420 + x35464 + x35472 + x35473) - x63*(x31339 + x35431 + x35448 + x35449 + x35450 + x35451 - x35452 - x35453 + x35454 + x35455 - x35456 - x35457 + x35474)) + x69*(-x106*(-4*x31280 + 4*x31282 - 4*x31284 + 4*x31286 + x31302 - x31311 + x31313 - x31314 + x31315 + x31346 + x35432 - x35475 - x6370) + x123*(x31164 - x31333 + x31334 - x31335 + x31336 - x31337 + x31361 + x35447 + x35473) - x123*(x35471 + x35476 + x35477 - x35478 - x35479 + x35480 + x35481 - x35482 - x35483 + x35484 + x35485 + x35490) + x168*(x31332 + x31369 + x35472 + x35510) + x31340 - x63*(x30992 + x35474 - x35491 - x35492 - x35493 + x35494 + x35495 - x35496 - x35497 + x35498 + x35499 + x35505 - x6371));
T_others[78] = x69*(-x106*(x1858*x31276 + x1858*x31328 - x1858*x31330 - 3*x31275 + x31310 + x35470 - 3*x6079) + x123*(x31325 + x31490) - x123*(x35447 - x35476 - x35477 + x35478 + x35479 - x35480 - x35481 + x35482 + x35483 - x35484 - x35485 + x35511) + x168*(x35469 + x35473 + x35512 + x35513) - x63*(x31339 + x35463 + x35491 + x35492 + x35493 - x35494 - x35495 + x35496 + x35497 - x35498 - x35499 + x35514 + x6371)) + x69*(-x106*(-4*x31317 + 4*x31319 - 4*x31321 + 4*x31323 + x31338 - x31347 + x31349 - x31350 + x31351 + x31383 - x35515 + x35517 - x6692) + x123*(x31267 - x31370 + x31371 - x31372 + x31373 - x31374 + x31399 + x35490 + x35513) - x123*(x35511 + x35518 + x35519 - x35520 - x35521 + x35522 + x35523 - x35524 - x35525 + x35526 + x35527 + x35533) + x168*(x31369 + x31407 + x35512 + x35554) + x31377 - x63*(x30992 + x35514 - x35534 - x35535 - x35536 - x35537 + x35538 + x35539 - x35540 - x35541 + x35542 + x35543 + x35549));
T_others[79] = x69*(-x106*(x1858*x31312 + x1858*x31365 - x1858*x31367 - 3*x31311 + x31346 + x35555 - 3*x6370) + x123*(x31361 + x31584) - x123*(x35490 - x35518 - x35519 + x35520 + x35521 - x35522 - x35523 + x35524 + x35525 - x35526 - x35527 + x35556) + x168*(x35510 + x35513 + x35557 + x35558) - x63*(x31339 + x35505 + x35534 + x35535 + x35536 + x35537 - x35538 - x35539 + x35540 + x35541 - x35542 - x35543 + x35559)) + x69*(-x106*(-4*x31353 + 4*x31355 - 4*x31357 + 4*x31359 + x31375 - x31384 + x31386 - x31387 + x31388 + x31421 + x35414 - x35560 - x7014) + x123*(-x31408 + x31409 - x31410 + x31411 - x31412 + x31437 + x35324 + x35533 + x35558) - x123*(x35556 + x35561 + x35562 - x35563 - x35564 + x35565 + x35566 - x35567 - x35568 + x35569 + x35570 + x35576) + x168*(x31407 + x31445 + x35557 + x35597) + x31415 - x63*(x30992 + x35559 - x35577 - x35578 - x35579 - x35580 + x35581 + x35582 - x35583 - x35584 + x35585 + x35586 + x35592));
T_others[80] = x69*(-x106*(x1858*x31348 + x1858*x31403 - x1858*x31405 - 3*x31347 + x31383 + x35598 - 3*x6692) + x123*(x31399 + x35308) - x123*(x35533 - x35561 - x35562 + x35563 + x35564 - x35565 - x35566 + x35567 + x35568 - x35569 - x35570 + x35599) + x168*(x35554 + x35558 + x35600 + x35601) - x63*(x31339 + x35549 + x35577 + x35578 + x35579 + x35580 - x35581 - x35582 + x35583 + x35584 - x35585 - x35586 + x35602)) + x69*(-x106*(-4*x31391 + 4*x31393 - 4*x31395 + 4*x31397 + x31413 - x31422 + x31424 - x31425 + x31426 + x31459 + x35415 - x35603 - x7313) + x123*(-x31446 + x31447 - x31448 + x31449 - x31450 + x31475 + x35274 + x35576 + x35601) - x123*(x35599 + x35604 + x35605 - x35606 - x35607 + x35608 + x35609 - x35610 - x35611 + x35612 + x35613 + x35619) + x168*(x31445 + x31483 + x35600 + x35639) + x31453 - x63*(x30992 + x35602 - x35620 - x35621 - x35622 - x35623 + x35624 + x35625 - x35626 - x35627 + x35628 + x35629 + x35634));
T_others[81] = x69*(-x106*(x1858*x31385 + x1858*x31441 - x1858*x31443 - 3*x31384 + x31421 + x35376 - 3*x7014) + x123*(x31437 + x35257) - x123*(x35576 - x35604 - x35605 + x35606 + x35607 - x35608 - x35609 + x35610 + x35611 - x35612 - x35613 + x35640) + x168*(x35597 + x35601 + x35641 + x35642) - x63*(x31339 + x35592 + x35620 + x35621 + x35622 + x35623 - x35624 - x35625 + x35626 + x35627 - x35628 - x35629 + x35643)) + x69*(-x106*(-4*x31429 + 4*x31431 - 4*x31433 + 4*x31435 + x31451 - x31460 + x31462 - x31463 + x31464 + x31497 + x35371 - x35644 - x7637) + x123*(-x31484 + x31485 - x31486 + x31487 - x31488 + x31513 + x35222 + x35619 + x35642) - x123*(x35640 + x35645 + x35646 - x35647 - x35648 + x35649 + x35650 - x35651 - x35652 + x35653 + x35654 + x35660) + x168*(x31483 + x31521 + x35641 + x35680) + x31491 - x63*(x30992 + x35643 - x35661 - x35662 - x35663 - x35664 + x35665 + x35666 - x35667 - x35668 + x35669 + x35670 + x35675));
T_others[82] = x69*(-x106*(x1858*x31423 + x1858*x31479 - x1858*x31481 - 3*x31422 + x31459 + x35333 - 3*x7313) + x123*(x31475 + x35205) - x123*(x35619 - x35645 - x35646 + x35647 + x35648 - x35649 - x35650 + x35651 + x35652 - x35653 - x35654 + x35681) + x168*(x35639 + x35642 + x35682 + x35683) - x63*(x31339 + x35634 + x35661 + x35662 + x35663 + x35664 - x35665 - x35666 + x35667 + x35668 - x35669 - x35670 + x35684)) + x69*(-x106*(-4*x31467 + 4*x31469 - 4*x31471 + 4*x31473 + x31489 - x31498 + x31500 - x31501 + x31502 + x31530 + x35325 - x35685 - x7945) + x123*(-x31522 + x31523 - x31524 + x31525 - x31526 + x31548 + x35171 + x35660 + x35683) - x123*(x35681 + x35686 + x35687 - x35688 - x35689 + x35690 + x35691 - x35692 - x35693 + x35694 + x35695 + x35701) + x168*(x31521 + x31566 + x35682 + x35722) + x31529 - x63*(x30992 + x35684 - x35702 - x35703 - x35704 - x35705 + x35706 + x35707 - x35708 - x35709 + x35710 + x35711 + x35717));
T_others[83] = x69*(-x106*(x1858*x31461 + x1858*x31517 - x1858*x31519 - 3*x31460 + x31497 + x35283 - 3*x7637) + x123*(x31513 + x35154) - x123*(x35660 - x35686 - x35687 + x35688 + x35689 - x35690 - x35691 + x35692 + x35693 - x35694 - x35695 + x35723) + x168*(x35680 + x35683 + x35724 + x35725) - x63*(x31339 + x35675 + x35702 + x35703 + x35704 + x35705 - x35706 - x35707 + x35708 + x35709 - x35710 - x35711 + x35726)) + x69*(-x106*(-4*x31505 + 4*x31507 - 4*x31509 + 4*x31511 + x31527 - x31537 + x31539 - x31540 + x31541 + x31568 + x35275 - x35727 - x8268) + x123*(x31572 + x35121 + x35701 + x35725 + x35759) - x123*(x35723 + x35728 + x35729 - x35730 - x35731 + x35732 + x35733 - x35734 - x35735 + x35736 + x35737 + x35743) + x168*(x31566 + x31582 + x35724 + x35764) + x31567 - x63*(x30992 + x35726 - x35744 - x35745 - x35746 + x35747 + x35748 - x35749 - x35750 + x35751 + x35752 + x35758 - x7946));
T_others[84] = x69*(-x106*(x1858*x31499 + x1858*x31562 - x1858*x31564 - 3*x31498 + x31530 + x35231 - 3*x7945) + x123*(x31548 + x35104) - x123*(x35701 - x35728 - x35729 + x35730 + x35731 - x35732 - x35733 + x35734 + x35735 - x35736 - x35737 + x35765) + x168*(x35722 + x35725 + x35766 + x35767) - x63*(x31339 + x35717 + x35744 + x35745 + x35746 - x35747 - x35748 + x35749 + x35750 - x35751 - x35752 + x35768 + x7946)) + x69*(x106*(4*x31550 - 4*x31552 + 4*x31554 - 4*x31556 + x31571 + x35179 + x35759 + x35769) - x123*(x31583 + x35054 + x35765) + x123*(x35743 + x35780 - x35781 - x35782 - x35783 + x35784 - x35785 - x35786 - x35787 + x35788 + x35789 + x35790 - x35791 - x35792 + x35793 + x35794) - x168*(x35764 + x35766 - x35771 - x35772 + x35773 - x35774 - x35775 + x35776 + x35777 - x35778 + x35779 + x8481) + x31586 + x63*(x31339 + x35758 - x35795 - x35796 + x35797 + x35798 + x35799 - x35800 - x35801 - x35802 + x35803 + x35804 + x35805 - x35806 - x35807 + x35808 + x35809));
T_others[85] = x69*(x106*(-x1858*x31538 - x1858*x31578 + x1858*x31580 + x31536 + 3*x31537 + x35223 + 3*x8268) - x123*(x31558 + x35071) + x123*(x35765 - x35780 + x35781 + x35782 + x35783 - x35784 + x35785 + x35786 + x35787 - x35788 - x35789 - x35790 + x35791 + x35792 - x35793 - x35794) - x168*(x31582 + x35767 + x35771 + x35772 - x35773 + x35774 + x35775 - x35776 - x35777 + x35778 - x35779 - x8481) + x63*(x30992 + x35768 + x35795 + x35796 - x35797 - x35798 - x35799 + x35800 + x35801 + x35802 - x35803 - x35804 - x35805 + x35806 + x35807 - x35808 - x35809));
T_others[86] = x69*(x106*(-x1858*x30936 + x1858*x30938 - x1858*x30940 + 3*x35822 - x35826 - x35829 + x35830 + x35831 - x35833 - x35835 + x35836 + x35837 - x35839 - x35841 - x35843 - x35844 + x35845 - x35846 + x35847 + x35851 + 3*x8585) - x123*(-42*x16869 - 42*x16885 - x35810 - x35811 + x35812 - x35813 + x35814 + x35815 - 42*x5647) - x123*(-x286*x30925 + x286*x30927 - x286*x30929 + x286*x30931 + x35827 + x35829 - x35830 - x35832 + x35834 + x35835 - x35836 - x35838 + x35840 + x35841 + x35842 + 7*x8508) + x35825 - x63*(-x11329*x8964 + x11332*x8964 + x30925*x327 - x30927*x327 + x30929*x327 - x30931*x327 - 12*x35828 - x35852 - 12*x35853 - x35854 + x35855 + 12*x35856 - x35857 + x35858 + x35859 + x35860 - 16*x8508) + x70*(-x30925 + x30927 - x30929 + x30931 + x31121 + x8507));
T_others[87] = x69*(x106*(-L*x30925 + L*x30927 + x11329*x8514 - x11332*x8514 - x35828 - x35853 + x35856 - x35861 - x35862 - x35863 + x35864 - x35865 + x8508) - x123*(-20*x16869 - 20*x16885 + x35843 + x35844 - x35845 + x35846 - x35847 - 20*x5647) - x123*(-x154*x30925 + x154*x30927 - x154*x30929 + x154*x30931 + x35821 + 3*x35828 + 3*x35853 - 3*x35856 - 3*x35864 + 3*x35865 + x35866 + 5*x8508) + x35825 - x63*(-L*x30924 + x129*x30925 - x129*x30927 + x129*x30929 - x129*x30931 - 6*x35828 - 6*x35853 + 6*x35856 + x35859 + 6*x35864 - 6*x35865 + x35867 + x35868)) + x69*(-x106*(-3*x10745 + x1858*x31225 + x1858*x31229 - x1858*x31231 + x35861 + x35862 + x35863 + x35869 + x35872 - x35873 - 3*x35874 + x35877 - x35878 + x35898 - x35899 + x35900 - x35901 + x35902 + x35903) + x123*(38*x16869 + 38*x16885 + x35824 + 38*x5647) + x123*(x35842 - x35869 + x35870 - x35871 - x35872 + x35873 + x35875 - x35876 - x35877 + x35878 + x35879 + x35885) + x35897 + x63*(x11329*x13006 - x11332*x13006 + 12*x35826 - 12*x35831 + 12*x35833 + x35860 - x35904 - x35905 + x35906 - x35907 + x35908 + x35910) + x70*(x30934 - x30936 + x30938 - x30940 + x35371 + x8584));
T_others[88] = x69*(-x106*(L*x30936 - x11329*x8582 + x11332*x8582 - x35822 + x35826 - x35831 + x35833 - x35837 + x35839 + x35918 - x8585) + x123*(-x35898 + x35899 - x35900 + x35901 - x35902 + x35914) + x123*(-x35827 + x35832 - x35834 + x35838 - x35840 + x35866 + x35896 + x35919 - x35920 + x35921 - x35922 + x35923) + x35897 + x63*(x35852 + x35854 - x35855 + x35857 - x35858 + x35868 + x35909 - x35924 - x35925 + x35926 - x35927 + x35928 + x35929)) + x69*(-x106*(-3*x10446 + x1858*x31182 - x1858*x31184 + x1858*x31186 - x1858*x31188 + x35918 + x35932 + x35935 - x35936 + x35939 - x35940 + x35960 - x35961 + x35962 - x35963 + x35964 + x35965) + x123*(x35929 + x35930 + x35931) + x123*(-x35870 + x35871 - x35875 + x35876 - x35879 - x35932 + x35933 - x35934 - x35935 + x35936 + x35937 - x35938 - x35939 + x35940 + x35941 + x35947) + x35959 + x63*(x11016*x11329 - x11016*x11332 + 12*x35880 + 12*x35881 - 12*x35882 + x35904 + x35905 - x35906 + x35907 - x35908 - x35966 - x35967 + x35968 - x35969 + x35970 + x35971) + x70*(x10744 + x31077 - x31225 + x31227 - x31229 + x31231));
T_others[89] = x69*(-x106*(L*x31225 - x10742*x11329 + x10742*x11332 - x10745 - x35874 + x35903 + x35975) + x123*(-x35960 + x35961 - x35962 + x35963 - x35964 + x35972 + x35973 + x35974) + x123*(x35885 - x35919 + x35920 - x35921 + x35922 - x35923 + x35958 + x35976 - x35977 + x35978 - x35979 + x35980) + x35959 + x63*(x35910 + x35924 + x35925 - x35926 + x35927 - x35928 - x35981 - x35982 + x35983 - x35984 + x35985 + x35986)) + x69*(-x106*(-3*x10161 + x1858*x31139 + x1858*x31143 - x1858*x31145 + x35975 + x35991 + x35994 - x35995 - 3*x35996 + x35999 - x36000 + x36020 - x36021 + x36022 - x36023 + x36024 + x36025) + x123*(x35986 + x35987 + x35988 + x35989 + x35990) + x123*(-x35933 + x35934 - x35937 + x35938 - x35941 - x35991 + x35992 - x35993 - x35994 + x35995 + x35997 - x35998 - x35999 + x36000 + x36001 + x36007) + x36019 + x63*(12*x35942 + 12*x35943 - 12*x35944 + 12*x35945 - 12*x35946 + x35966 + x35967 - x35968 + x35969 - x35970 - x36026 - x36027 + x36028 - x36029 + x36030 + x36031) + x70*(x10445 - x31182 + x31184 - x31186 + x31188 + x35415));
T_others[90] = x69*(-x106*(L*x31182 - L*x31184 - x10443*x11329 + x10443*x11332 - x10446 + x35965 + x36039) + x123*(-x36020 + x36021 - x36022 + x36023 - x36024 + x36035) + x123*(x35947 - x35976 + x35977 - x35978 + x35979 - x35980 + x36018 + x36040 - x36041 + x36042 - x36043 + x36044) + x36019 + x63*(x35971 + x35981 + x35982 - x35983 + x35984 - x35985 - x36045 - x36046 + x36047 - x36048 + x36049 + x36050)) + x69*(-x106*(x1858*x31095 - x1858*x31097 + x1858*x31099 - x1858*x31101 + x36039 + x36055 + x36058 - x36059 + x36062 - x36063 + x36083 - x36084 + x36085 - x36086 + x36087 + x36088 - 3*x9863) + x123*(x36050 + x36051 + x36052 + x36053 + x36054) + x123*(-x35992 + x35993 - x35997 + x35998 - x36001 - x36055 + x36056 - x36057 - x36058 + x36059 + x36060 - x36061 - x36062 + x36063 + x36064 + x36070) + x36082 + x63*(x10420*x11329 - x10420*x11332 + 12*x36002 + 12*x36003 - 12*x36004 + x36026 + x36027 - x36028 + x36029 - x36030 - x36089 - x36090 + x36091 - x36092 + x36093 + x36094) + x70*(x10160 + x31033 - x31139 + x31141 - x31143 + x31145));
T_others[91] = x69*(-x106*(L*x31139 - x10158*x11329 + x10158*x11332 - x10161 - x35996 + x36025 + x36098) + x123*(x35848 + x35849 + x35850 - x36083 + x36084 - x36085 + x36086 - x36087) + x123*(x36007 - x36040 + x36041 - x36042 + x36043 - x36044 + x36081 + x36099 - x36100 + x36101 - x36102 + x36103) + x36082 + x63*(x36031 + x36045 + x36046 - x36047 + x36048 - x36049 - x36104 - x36105 + x36106 - x36107 + x36108 + x36109)) + x69*(-x106*(x1858*x31051 + x1858*x31055 - x1858*x31057 + x36098 + x36114 + x36117 - x36118 - 3*x36119 + x36122 - x36123 + x36143 - x36144 + x36145 - x36146 + x36147 + x36148 - 3*x9576) + x123*(x36109 + x36110 + x36111 + x36112 + x36113) + x123*(-x36056 + x36057 - x36060 + x36061 - x36064 - x36114 + x36115 - x36116 - x36117 + x36118 + x36120 - x36121 - x36122 + x36123 + x36124 + x36130) + x36142 + x63*(x10247*x11329 - x10247*x11332 + 12*x36065 + 12*x36066 - 12*x36067 + x36089 + x36090 - x36091 + x36092 - x36093 - x36149 + x36150 - x36151 + x36152 + x36153 - x9577) + x70*(-x31095 + x31097 - x31099 + x31101 + x35414 + x9862));
T_others[92] = x69*(-x106*(L*x31095 - L*x31097 - x11329*x9860 + x11332*x9860 + x36088 + x36154 - x9863) + x123*(x35918 - x36143 + x36144 - x36145 + x36146 - x36147) + x123*(x36070 - x36099 + x36100 - x36101 + x36102 - x36103 + x36141 + x36155 - x36156 + x36157 - x36158 + x36159) + x36142 + x63*(x36094 + x36104 + x36105 - x36106 + x36107 - x36108 - x36160 - x36161 + x36162 - x36163 + x36164 + x36165)) + x69*(-x106*(x1858*x31010 - x1858*x31012 + x1858*x31014 - x1858*x31016 + x36154 + x36167 + x36170 - x36171 + x36174 - x36175 + x36195 - x36196 + x36197 - x36198 + x36199 + x36200 - 3*x9359) + x123*(x35914 + x36165 + x36166) + x123*(-x36115 + x36116 - x36120 + x36121 - x36124 - x36167 + x36168 - x36169 - x36170 + x36171 + x36172 - x36173 - x36174 + x36175 + x36176 + x36182) + x36194 + x63*(x11329*x9835 - x11332*x9835 + 12*x36125 + 12*x36126 - 12*x36127 + x36149 - x36150 + x36151 - x36152 - x36201 - x36202 + x36203 - x36204 + x36205 + x36206 + x9577) + x70*(x30992 - x31051 + x31053 - x31055 + x31057 + x9575));
T_others[93] = x69*(-x106*(L*x31051 - x11329*x9573 + x11332*x9573 - x36119 + x36148 + x36210 - x9576) + x123*(x36039 - x36195 + x36196 - x36197 + x36198 - x36199) + x123*(x36130 - x36155 + x36156 - x36157 + x36158 - x36159 + x36193 + x36211 - x36212 + x36213 - x36214 + x36215) + x36194 + x63*(x36153 + x36160 + x36161 - x36162 + x36163 - x36164 - x36216 - x36217 + x36218 - x36219 + x36220 + x36221)) + x69*(-x106*(x1858*x30975 + x1858*x30979 - x1858*x30981 + x36210 + x36223 + x36226 - x36227 - 3*x36228 + x36231 - x36232 + x36252 - x36253 + x36254 - x36255 + x36256 + x36257 - 3*x9084) + x123*(x36035 + x36221 + x36222) + x123*(-x36168 + x36169 - x36172 + x36173 - x36176 - x36223 + x36224 - x36225 - x36226 + x36227 + x36229 - x36230 - x36231 + x36232 + x36233 + x36239) + x36251 + x63*(12*x36177 + 12*x36178 - 12*x36179 + 12*x36180 - 12*x36181 + x36201 + x36202 - x36203 + x36204 - x36205 - x36258 - x36259 + x36260 - x36261 + x36262 + x36263) + x70*(-x31010 + x31012 - x31014 + x31016 + x35517 + x9281));
T_others[94] = x69*(-x106*(L*x31010 - L*x31012 - x11329*x9279 + x11332*x9279 + x36200 + x36266 - x9359) + x123*(x36154 - x36252 + x36253 - x36254 + x36255 - x36256) + x123*(x36182 - x36211 + x36212 - x36213 + x36214 - x36215 + x36250 + x36267 - x36268 + x36269 - x36270 + x36271) + x36251 + x63*(x36206 + x36216 + x36217 - x36218 + x36219 - x36220 - x36272 - x36273 + x36274 - x36275 + x36276 + x36277)) + x69*(-x106*(x1858*x30891 - x1858*x30893 + x1858*x30895 - x1858*x30897 - x1858*x5451 + x36266 + x36279 + x36280 + x36281 + x36282 - x36283 - x36284 + x36285 - x36286 + x36297 - x36298 + x36299 + x36300 - x36301 - x36302 + x36303) + x123*(x35918 + x36277 + x36278) + x123*(-x11329*x13296 + x11332*x13296 - x36224 + x36225 - x36229 + x36230 - x36233 - x36279 - 3*x36280 - x36281 - 3*x36282 + 3*x36283 + x36284 - x36285 + x36286 + x36287) + x36296 + x63*(x11329*x9241 - x11332*x9241 + x35909 + 12*x36234 + 12*x36235 - 12*x36236 + 12*x36237 - 12*x36238 + x36258 + x36259 - x36260 + x36261 - x36262 + 6*x36280 + 6*x36282 - 6*x36283 + x36304) + x70*(x30900 - x30975 + x30977 - x30979 + x30981 + x9006));
T_others[95] = x69*(-x106*(L*x30975 - x11329*x9003 + x11332*x9003 - x36228 + x36257 + x36311 + x36312 + x36313 - x9084) + x123*(x36266 - x36297 + x36298 - x36299 + x36302 - x36303) + x123*(-x154*x30891 + x154*x30893 - x154*x30895 + x154*x30897 + x154*x5451 + x36239 - x36267 + x36268 - x36269 + x36270 - x36271 + x36294) + x36296 + x63*(-L*x30890 + x129*x30891 - x129*x30893 + x129*x30895 - x129*x30897 + x36263 + x36272 + x36273 - x36274 + x36275 - x36276 + x36305)) + x69*(x106*(-L*x30868 + L*x30869 - L*x30870 + p1_b*x11472 - p1_b*x5491*x8675 - x36306 + x36307 - x36308 + x36309 - x36310 + x36314) - x123*(x36295 + x36315) - x123*(x36287 + x36306 - x36307 + x36308 - x36309 + x36310) + x168*(x36288 + x36305) - x63*(x35859 - 12*x36280 - 12*x36282 + 12*x36283 - 12*x36300 + 12*x36301 + x36304) + x70*(-x30891 + x30893 - x30895 + x30897 + x35432 + x5451));
T_others[96] = x69*(x123*(x36321 + x36328) - x168*(x36321 + x36326) - x173*x35470 + x63*(x35909 + x36329 + x36330)) + x69*(x106*(-x1858*x31282 + x1858*x31284 - x1858*x31286 + 3*x36332 + x36347 - x36348 + x36351 - x36352 + x36354 - x36355 + x36356 - x36357 + x36359 + x36360 - x5425 - x5764 + 3*x6094) + x123*(x35859 + x36322 - x36323 + x36324 - x36325 + x36329 - x5725) - x123*(-x286*x30856 + x286*x30858 + x286*x30862 - x286*x30864 + 7*x36327 - x36345 - x36346 - x36347 + x36348 + x36349 - x36350 - x36351 + x36352 + x36353 + x36358 + x5425) + x36344 - x63*(-x11329*x11975 + x11332*x11975 + x30856*x327 - x30858*x327 - x30862*x327 + x30864*x327 - 16*x36327 + x36361 - x36362 - 12*x36363 + 12*x36364 + x36365 - x36366 + x36367 + x36368 - 12*x5424) + x70*(-x30856 + x30858 + x30862 - x30864 + x35470 + x5180));
T_others[97] = x69*(x106*(-L*x30856 + L*x30858 + L*x30862 - L*x30864 + x36327 - x36363 + x36364 + x36369 - x36370 - x5424) + x123*(x35859 + x36359) - x123*(x36328 + x36342 + 3*x36363 - 3*x36364 - 3*x36369 + 3*x36370 - x36371 - x36372 + x36373 - x36374 + x36375 + 3*x5424) + x36344 - x63*(x35859 + x36330 - x36337 + x36338 - x36339 + x36340 - x36341 - 6*x36363 + 6*x36364 + 6*x36369 - 6*x36370 + x36376 - x36377 + x36378 - x36379 + x36380 - 6*x5424)) + x69*(-x106*(-x1858*x31317 + x1858*x31319 - x1858*x31321 + x1858*x31323 + x36381 - x36382 + x36383 - x36384 + x36385 + x36390 + x36391 - 3*x6116) + x123*(x36315 + x36343) - x123*(x36345 + x36346 - x36349 + x36350 - x36353 + x36391 - x36405 - x36406 + x36407 - x36408 + x36409 + x36410) + x36404 - x63*(-x11329*x11983 + x11332*x11983 + 12*x36354 - 12*x36355 - x36361 + x36362 - x36365 + x36366 - x36367 + x36411 - x36412 + x36413 - x36414 + x36415 + x36416 - x6097) + x70*(x31280 - x31282 + x31284 - x31286 + x31303 + x5776));
T_others[98] = x69*(-x106*(L*x31282 - L*x31284 + L*x31286 - x36332 - x36354 + x36355 - x36356 + x36357 + x36360 + x5764 - x6094) + x123*(-x36381 + x36382 - x36383 + x36384 - x36385 + x36417) - x123*(x36358 + x36371 + x36372 - x36373 + x36374 - x36375 + x36402 - x36418 - x36419 + x36420 - x36421 + x36422) + x36404 - x63*(x36368 - x36376 + x36377 - x36378 + x36379 - x36380 - x36397 + x36398 - x36399 + x36400 - x36401 - x36423 + x36424 - x36425 + x36426 + x6448)) + x69*(-x106*(x1858*x31355 - x1858*x31357 + x1858*x31359 + x36360 - 3*x36429 + x36452 + x36453 - x36454 + x36455 - x36456 + x36457 + x36458 - 3*x6407) + x123*(x36403 + x36427) - x123*(x36405 + x36406 - x36407 + x36408 - x36409 - x36442 - x36443 + x36444 - x36445 + x36446 + x36451 + x36452) + x36441 - x63*(-x11329*x12290 + x11332*x12290 - 12*x36386 + 12*x36387 - x36411 + x36412 - x36413 + x36414 - x36415 - x36459 + x36460 - x36461 + x36462 + x36463 - 12*x6100 + x6675) + x70*(x31317 - x31319 + x31321 - x31323 + x35555 + x6115));
T_others[99] = x69*(-x106*(-L*x31317 + L*x31319 - L*x31321 + L*x31323 + x35859 + x36390 - x6116) + x123*(x36315 - x36453 + x36454 - x36455 + x36456 - x36457) - x123*(x36410 + x36418 + x36419 - x36420 + x36421 - x36422 + x36439 - x36464 - x36465 + x36466 - x36467 + x36468) + x36441 - x63*(x36416 + x36423 - x36424 + x36425 - x36426 - x36434 + x36435 - x36436 + x36437 - x36438 - x36469 + x36470 - x36471 + x36472 - x6448 + x6464)) + x69*(-x106*(-x1858*x31391 + x1858*x31393 - x1858*x31395 + x1858*x31397 + x35859 + x36495 + x36496 - x36497 + x36498 - x36499 + x36500 + x36503 - 3*x6739) + x123*(x36440 + x36473) - x123*(x36442 + x36443 - x36444 + x36445 - x36446 - x36487 - x36488 + x36489 - x36490 + x36491 + x36494 + x36495) + x36486 - x63*(-x11329*x12596 + x11332*x12596 + 12*x36447 - 12*x36448 + x36459 - x36460 + x36461 - x36462 + x36504 - x36505 + x36506 - x36507 + x36508 + x36509 - x6394 - x6675) + x70*(x31339 + x31353 - x31355 + x31357 - x31359 + x6406));
T_others[100] = x69*(-x106*(L*x31355 - L*x31357 + L*x31359 + x36314 - x36429 + x36458 - x6407) + x123*(-x36036 - x36037 - x36038 - x36496 + x36497 - x36498 + x36499 - x36500) - x123*(x36451 + x36464 + x36465 - x36466 + x36467 - x36468 + x36484 - x36510 - x36511 + x36512 - x36513 + x36514) + x36486 - x63*(x36463 + x36469 - x36470 + x36471 - x36472 - x36479 + x36480 - x36481 + x36482 - x36483 + x36515 - x36516 + x36517 - x36518 + x36519 - x6464)) + x69*(-x106*(x1858*x31431 - x1858*x31433 + x1858*x31435 + x36314 - 3*x36521 + x36544 + x36545 - x36546 + x36547 - x36548 + x36549 + x36550 - 3*x7054) + x123*(-x35911 - x35912 - x35913 + x36485) - x123*(x36487 + x36488 - x36489 + x36490 - x36491 - x36534 - x36535 + x36536 - x36537 + x36538 + x36543 + x36544) + x36533 - x63*(-x11329*x15591 + x11332*x15591 + 12*x36492 - 12*x36493 - x36504 + x36505 - x36506 + x36507 - x36508 + x36551 - x36552 + x36553 - x36554 + x36555 + x36556 - 12*x6720) + x70*(x31391 - x31393 + x31395 - x31397 + x35598 + x6738));
T_others[101] = x69*(-x106*(-L*x31391 + L*x31393 - L*x31395 + L*x31397 + x36417 + x36503 - x6739) + x123*(x36427 - x36545 + x36546 - x36547 + x36548 - x36549) - x123*(x36494 + x36510 + x36511 - x36512 + x36513 - x36514 + x36531 - x36557 - x36558 + x36559 - x36560 + x36561) + x36533 - x63*(x36509 - x36515 + x36516 - x36517 + x36518 - x36519 - x36526 + x36527 - x36528 + x36529 - x36530 + x36562 - x36563 + x36564 - x36565 + x36566)) + x69*(-x106*(-x1858*x31467 + x1858*x31469 - x1858*x31471 + x1858*x31473 + x36417 + x36590 + x36591 - x36592 + x36593 - x36594 + x36595 + x36596 - 3*x7355) + x123*(-x36110 - x36111 - x36112 + x36532) - x123*(x36534 + x36535 - x36536 + x36537 - x36538 - x36580 - x36581 + x36582 - x36583 + x36584 + x36589 + x36590) + x36579 - x63*(-x11329*x15889 + x11332*x15889 + 12*x36539 - 12*x36540 - x36551 + x36552 - x36553 + x36554 - x36555 + x36597 - x36598 + x36599 - x36600 + x36601 + x36602 - 12*x7038) + x70*(x31376 + x31429 - x31431 + x31433 - x31435 + x7053));
T_others[102] = x69*(-x106*(L*x31431 - L*x31433 + L*x31435 - x36521 + x36550 + x36603 - x7054) + x123*(x35851 - x36591 + x36592 - x36593 + x36594 - x36595) - x123*(x36543 + x36557 + x36558 - x36559 + x36560 - x36561 + x36577 - x36604 - x36605 + x36606 - x36607 + x36608) + x36579 - x63*(x36556 - x36562 + x36563 - x36564 + x36565 - x36566 - x36572 + x36573 - x36574 + x36575 - x36576 + x36609 - x36610 + x36611 - x36612 + x36613)) + x69*(-x106*(x1858*x31507 - x1858*x31509 + x1858*x31511 + x36603 - 3*x36615 + x36638 + x36639 - x36640 + x36641 - x36642 + x36643 + x36644 - 3*x7677) + x123*(-x36051 - x36052 - x36053 + x36578) - x123*(x36580 + x36581 - x36582 + x36583 - x36584 - x36628 - x36629 + x36630 - x36631 + x36632 + x36637 + x36638) + x36627 - x63*(-x11329*x16183 + x11332*x16183 + 12*x36585 - 12*x36586 - x36597 + x36598 - x36599 + x36600 - x36601 + x36645 - x36646 + x36647 - x36648 + x36649 + x36650 - 12*x7337) + x70*(x31467 - x31469 + x31471 - x31473 + x35376 + x7354));
T_others[103] = x69*(-x106*(-L*x31467 + L*x31469 - L*x31471 + L*x31473 + x36315 + x36596 - x7355) + x123*(x36473 - x36639 + x36640 - x36641 + x36642 - x36643) - x123*(x36589 + x36604 + x36605 - x36606 + x36607 - x36608 + x36625 - x36651 - x36652 + x36653 - x36654 + x36655) + x36627 - x63*(x36602 - x36609 + x36610 - x36611 + x36612 - x36613 - x36620 + x36621 - x36622 + x36623 - x36624 + x36656 - x36657 + x36658 - x36659 + x36660)) + x69*(-x106*(-x1858*x31550 + x1858*x31552 - x1858*x31554 + x1858*x31556 + x36315 - x36675 + x36677 - x36679 + x36681 + x36684 + x36685 - x36686 + x36687 - x36688 + x36689 + x7972 - 3*x7991) + x123*(-x35987 - x35988 - x35989 + x36626) - x123*(x36628 + x36629 - x36630 + x36631 - x36632 + x36674 - x36676 + x36678 - x36680 + x36682 + x36683 + x36684) + x36673 - x63*(-x11329*x16474 + x11332*x16474 + x35859 + 12*x36633 - 12*x36634 - x36645 + x36646 - x36647 + x36648 - x36649 - x36690 - x36691 + x36692 - x36693 + x36694 + x36695 - x7772) + x70*(x31414 + x31505 - x31507 + x31509 - x31511 + x7676));
T_others[104] = x69*(-x106*(L*x31507 - L*x31509 + L*x31511 - x36095 - x36096 - x36097 - x36615 + x36644 - x7677) + x123*(-x35972 - x35973 - x35974 - x36685 + x36686 - x36687 + x36688 - x36689) - x123*(x36637 + x36651 + x36652 - x36653 + x36654 - x36655 + x36666 + x36696) + x36673 - x63*(x36650 - x36656 + x36657 - x36658 + x36659 - x36660 + x36697 + x36698)) + x69*(x106*(x11329*x16879 - x11332*x16879 - x1858*x35770 + x1858*x36701 + x1858*x8305 + x36098 - x36699 + x36700 - x36702 + x36703 + x36704 - x36712 - x36713 + x36714 - x36715 + x36716 - x8290) - x123*(x35930 + x36667 + x36668 - x36669 + x36670 - x36671 + x36697) + x123*(x11329*x16970 - x11332*x16970 - x286*x35770 + x286*x36701 + x286*x8305 + x36683 - 3*x36699 + 3*x36700 - 3*x36702 + 3*x36703 + x36704 - 3*x8290) + x36711 + x63*(-x11329*x17001 + x11329*x8498 + x11332*x17001 - x11332*x8498 + x327*x35770 - x327*x36701 - x327*x8305 + x35909 - 12*x36675 + 12*x36677 + x36695 + 6*x36699 - 6*x36700 + 6*x36702 - 6*x36703 + 12*x7972 + 6*x8290) + x70*(x31550 - x31552 + x31554 - x31556 + x35333 + x7990));
T_others[105] = x69*(x106*(L*x31550 - L*x31552 + L*x31554 - L*x31556 + x36039 + x36675 - x36677 + x36679 - x36681 - x7972 + x7991) - x123*(x35914 + x36712 + x36713 - x36714 + x36715 - x36716) + x123*(x11329*x36717 - x11332*x36717 - x154*x35770 + x154*x36701 + x154*x8305 - x36674 + x36676 - x36678 + x36680 - x36682 + x36696 + x36710) + x36711 + x63*(-L*x31573 - L*x31574 - x11329*x16884 + x11332*x16884 + x129*x35770 + x35909 + x36690 + x36691 - x36692 + x36693 - x36694 + x36698 + x36705 + x36706 - x36707 + x36708 - x36709));
}